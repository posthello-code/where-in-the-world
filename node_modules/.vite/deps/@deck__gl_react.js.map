{
  "version": 3,
  "sources": ["browser-external:child_process", "../../../.yarn/__virtual__/@deck.gl-react-virtual-e01d66b29a/4/.yarn/berry/cache/@deck.gl-react-npm-9.1.14-4f5993c079-10c0.zip/node_modules/@deck.gl/react/src/deckgl.ts", "../../../.yarn/__virtual__/@loaders.gl-loader-utils-virtual-64f25e84aa/4/.yarn/berry/cache/@loaders.gl-loader-utils-npm-4.3.4-25e8600919-10c0.zip/node_modules/@loaders.gl/loader-utils/dist/lib/env-utils/assert.js", "../../../.yarn/__virtual__/@loaders.gl-loader-utils-virtual-64f25e84aa/4/.yarn/berry/cache/@loaders.gl-loader-utils-npm-4.3.4-25e8600919-10c0.zip/node_modules/@loaders.gl/loader-utils/dist/lib/env-utils/globals.js", "../../../../../../.yarn/berry/cache/@probe.gl-env-npm-4.1.0-c13e3e98de-10c0.zip/node_modules/@probe.gl/env/src/lib/globals.ts", "../../../../../../.yarn/berry/cache/@probe.gl-env-npm-4.1.0-c13e3e98de-10c0.zip/node_modules/@probe.gl/env/src/lib/is-electron.ts", "../../../../../../.yarn/berry/cache/@probe.gl-env-npm-4.1.0-c13e3e98de-10c0.zip/node_modules/@probe.gl/env/src/lib/is-browser.ts", "../../../../../../.yarn/berry/cache/@probe.gl-env-npm-4.1.0-c13e3e98de-10c0.zip/node_modules/@probe.gl/env/src/lib/get-browser.ts", "../../../../../../.yarn/berry/cache/@probe.gl-env-npm-4.1.0-c13e3e98de-10c0.zip/node_modules/@probe.gl/env/src/index.ts", "../../../../../../.yarn/berry/cache/@probe.gl-log-npm-4.1.0-911d6afde2-10c0.zip/node_modules/@probe.gl/log/src/utils/local-storage.ts", "../../../../../../.yarn/berry/cache/@probe.gl-log-npm-4.1.0-911d6afde2-10c0.zip/node_modules/@probe.gl/log/src/utils/formatters.ts", "../../../../../../.yarn/berry/cache/@probe.gl-log-npm-4.1.0-911d6afde2-10c0.zip/node_modules/@probe.gl/log/src/utils/color.ts", "../../../../../../.yarn/berry/cache/@probe.gl-log-npm-4.1.0-911d6afde2-10c0.zip/node_modules/@probe.gl/log/src/utils/autobind.ts", "../../../../../../.yarn/berry/cache/@probe.gl-log-npm-4.1.0-911d6afde2-10c0.zip/node_modules/@probe.gl/log/src/utils/assert.ts", "../../../../../../.yarn/berry/cache/@probe.gl-log-npm-4.1.0-911d6afde2-10c0.zip/node_modules/@probe.gl/log/src/utils/hi-res-timestamp.ts", "../../../../../../.yarn/berry/cache/@probe.gl-log-npm-4.1.0-911d6afde2-10c0.zip/node_modules/@probe.gl/log/src/log.ts", "../../../../../../.yarn/berry/cache/@probe.gl-log-npm-4.1.0-911d6afde2-10c0.zip/node_modules/@probe.gl/log/src/init.ts", "../../../../../../.yarn/berry/cache/@probe.gl-log-npm-4.1.0-911d6afde2-10c0.zip/node_modules/@probe.gl/log/src/index.ts", "../../../.yarn/__virtual__/@loaders.gl-loader-utils-virtual-64f25e84aa/4/.yarn/berry/cache/@loaders.gl-loader-utils-npm-4.3.4-25e8600919-10c0.zip/node_modules/@loaders.gl/loader-utils/dist/lib/log-utils/log.js", "../../../.yarn/__virtual__/@loaders.gl-loader-utils-virtual-64f25e84aa/4/.yarn/berry/cache/@loaders.gl-loader-utils-npm-4.3.4-25e8600919-10c0.zip/node_modules/@loaders.gl/loader-utils/dist/lib/option-utils/merge-loader-options.js", "../../../.yarn/__virtual__/@loaders.gl-worker-utils-virtual-66baeb0b73/4/.yarn/berry/cache/@loaders.gl-worker-utils-npm-4.3.4-5391e7da36-10c0.zip/node_modules/@loaders.gl/worker-utils/dist/lib/env-utils/version.js", "../../../.yarn/__virtual__/@loaders.gl-worker-utils-virtual-66baeb0b73/4/.yarn/berry/cache/@loaders.gl-worker-utils-npm-4.3.4-5391e7da36-10c0.zip/node_modules/@loaders.gl/worker-utils/dist/lib/env-utils/assert.js", "../../../.yarn/__virtual__/@loaders.gl-worker-utils-virtual-66baeb0b73/4/.yarn/berry/cache/@loaders.gl-worker-utils-npm-4.3.4-5391e7da36-10c0.zip/node_modules/@loaders.gl/worker-utils/dist/lib/env-utils/globals.js", "../../../.yarn/__virtual__/@loaders.gl-worker-utils-virtual-66baeb0b73/4/.yarn/berry/cache/@loaders.gl-worker-utils-npm-4.3.4-5391e7da36-10c0.zip/node_modules/@loaders.gl/worker-utils/dist/lib/worker-farm/worker-job.js", "../../../.yarn/__virtual__/@loaders.gl-worker-utils-virtual-66baeb0b73/4/.yarn/berry/cache/@loaders.gl-worker-utils-npm-4.3.4-5391e7da36-10c0.zip/node_modules/@loaders.gl/worker-utils/dist/lib/node/worker_threads-browser.js", "../../../.yarn/__virtual__/@loaders.gl-worker-utils-virtual-66baeb0b73/4/.yarn/berry/cache/@loaders.gl-worker-utils-npm-4.3.4-5391e7da36-10c0.zip/node_modules/@loaders.gl/worker-utils/dist/lib/worker-utils/get-loadable-worker-url.js", "../../../.yarn/__virtual__/@loaders.gl-worker-utils-virtual-66baeb0b73/4/.yarn/berry/cache/@loaders.gl-worker-utils-npm-4.3.4-5391e7da36-10c0.zip/node_modules/@loaders.gl/worker-utils/dist/lib/worker-utils/get-transfer-list.js", "../../../.yarn/__virtual__/@loaders.gl-worker-utils-virtual-66baeb0b73/4/.yarn/berry/cache/@loaders.gl-worker-utils-npm-4.3.4-5391e7da36-10c0.zip/node_modules/@loaders.gl/worker-utils/dist/lib/worker-farm/worker-thread.js", "../../../.yarn/__virtual__/@loaders.gl-worker-utils-virtual-66baeb0b73/4/.yarn/berry/cache/@loaders.gl-worker-utils-npm-4.3.4-5391e7da36-10c0.zip/node_modules/@loaders.gl/worker-utils/dist/lib/worker-farm/worker-pool.js", "../../../.yarn/__virtual__/@loaders.gl-worker-utils-virtual-66baeb0b73/4/.yarn/berry/cache/@loaders.gl-worker-utils-npm-4.3.4-5391e7da36-10c0.zip/node_modules/@loaders.gl/worker-utils/dist/lib/worker-farm/worker-farm.js", "../../../.yarn/__virtual__/@loaders.gl-worker-utils-virtual-66baeb0b73/4/.yarn/berry/cache/@loaders.gl-worker-utils-npm-4.3.4-5391e7da36-10c0.zip/node_modules/@loaders.gl/worker-utils/dist/lib/worker-api/get-worker-url.js", "../../../.yarn/__virtual__/@loaders.gl-worker-utils-virtual-66baeb0b73/4/.yarn/berry/cache/@loaders.gl-worker-utils-npm-4.3.4-5391e7da36-10c0.zip/node_modules/@loaders.gl/worker-utils/dist/lib/worker-api/validate-worker-version.js", "../../../.yarn/__virtual__/@loaders.gl-worker-utils-virtual-66baeb0b73/4/.yarn/berry/cache/@loaders.gl-worker-utils-npm-4.3.4-5391e7da36-10c0.zip/node_modules/@loaders.gl/worker-utils/dist/lib/process-utils/child-process-proxy.js", "../../../.yarn/__virtual__/@loaders.gl-worker-utils-virtual-66baeb0b73/4/.yarn/berry/cache/@loaders.gl-worker-utils-npm-4.3.4-5391e7da36-10c0.zip/node_modules/@loaders.gl/worker-utils/dist/lib/process-utils/process-utils.js", "../../../.yarn/__virtual__/@loaders.gl-loader-utils-virtual-64f25e84aa/4/.yarn/berry/cache/@loaders.gl-loader-utils-npm-4.3.4-25e8600919-10c0.zip/node_modules/@loaders.gl/loader-utils/dist/lib/worker-loader-utils/parse-with-worker.js", "../../../.yarn/__virtual__/@loaders.gl-loader-utils-virtual-64f25e84aa/4/.yarn/berry/cache/@loaders.gl-loader-utils-npm-4.3.4-25e8600919-10c0.zip/node_modules/@loaders.gl/loader-utils/dist/lib/binary-utils/array-buffer-utils.js", "../../../.yarn/__virtual__/@loaders.gl-loader-utils-virtual-64f25e84aa/4/.yarn/berry/cache/@loaders.gl-loader-utils-npm-4.3.4-25e8600919-10c0.zip/node_modules/@loaders.gl/loader-utils/dist/lib/iterators/async-iteration.js", "../../../../../../.yarn/berry/cache/@probe.gl-stats-npm-4.1.0-c7769294f7-10c0.zip/node_modules/@probe.gl/stats/src/utils/hi-res-timestamp.ts", "../../../../../../.yarn/berry/cache/@probe.gl-stats-npm-4.1.0-c7769294f7-10c0.zip/node_modules/@probe.gl/stats/src/lib/stat.ts", "../../../../../../.yarn/berry/cache/@probe.gl-stats-npm-4.1.0-c7769294f7-10c0.zip/node_modules/@probe.gl/stats/src/lib/stats.ts", "../../../.yarn/__virtual__/@loaders.gl-loader-utils-virtual-64f25e84aa/4/.yarn/berry/cache/@loaders.gl-loader-utils-npm-4.3.4-25e8600919-10c0.zip/node_modules/@loaders.gl/loader-utils/dist/lib/path-utils/file-aliases.js", "../../../.yarn/__virtual__/@loaders.gl-loader-utils-virtual-64f25e84aa/4/.yarn/berry/cache/@loaders.gl-loader-utils-npm-4.3.4-25e8600919-10c0.zip/node_modules/@loaders.gl/loader-utils/dist/lib/node/buffer.browser.js", "../../../.yarn/__virtual__/@loaders.gl-loader-utils-virtual-64f25e84aa/4/.yarn/berry/cache/@loaders.gl-loader-utils-npm-4.3.4-25e8600919-10c0.zip/node_modules/@loaders.gl/loader-utils/dist/lib/binary-utils/memory-conversion-utils.js", "../../../.yarn/__virtual__/@loaders.gl-loader-utils-virtual-64f25e84aa/4/.yarn/berry/cache/@loaders.gl-loader-utils-npm-4.3.4-25e8600919-10c0.zip/node_modules/@loaders.gl/loader-utils/dist/lib/path-utils/path.js", "../../../.yarn/__virtual__/@loaders.gl-loader-utils-virtual-64f25e84aa/4/.yarn/berry/cache/@loaders.gl-loader-utils-npm-4.3.4-25e8600919-10c0.zip/node_modules/@loaders.gl/loader-utils/dist/lib/path-utils/get-cwd.js", "../../../.yarn/__virtual__/@loaders.gl-loader-utils-virtual-64f25e84aa/4/.yarn/berry/cache/@loaders.gl-loader-utils-npm-4.3.4-25e8600919-10c0.zip/node_modules/@loaders.gl/loader-utils/dist/lib/files/node-file-facade.js", "../../../.yarn/__virtual__/@loaders.gl-loader-utils-virtual-64f25e84aa/4/.yarn/berry/cache/@loaders.gl-loader-utils-npm-4.3.4-25e8600919-10c0.zip/node_modules/@loaders.gl/loader-utils/dist/lib/filesystems/node-filesystem-facade.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/javascript-utils/is-type.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/lib/fetch/fetch-error.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/lib/utils/mime-type-utils.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/lib/utils/url-utils.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/lib/utils/resource-utils.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/lib/utils/response-utils.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/lib/fetch/fetch-file.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/lib/loader-utils/loggers.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/lib/loader-utils/option-defaults.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/lib/loader-utils/option-utils.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/lib/loader-utils/normalize-loader.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/lib/api/register-loaders.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/lib/api/select-loader.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/iterators/make-iterator/make-string-iterator.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/iterators/make-iterator/make-array-buffer-iterator.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/iterators/make-iterator/make-blob-iterator.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/iterators/make-iterator/make-stream-iterator.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/iterators/make-iterator/make-iterator.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/lib/loader-utils/get-data.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/lib/loader-utils/get-fetch-function.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/lib/loader-utils/loader-context.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/lib/api/parse.js", "../../../.yarn/__virtual__/@loaders.gl-schema-virtual-0353755605/4/.yarn/berry/cache/@loaders.gl-schema-npm-4.3.4-7477932f21-10c0.zip/node_modules/@loaders.gl/schema/dist/lib/table/arrow-api/enum.js", "../../../../../../.yarn/berry/cache/@loaders.gl-core-npm-4.3.4-aea5a727cf-10c0.zip/node_modules/@loaders.gl/core/dist/lib/api/load.js", "../../../.yarn/__virtual__/@loaders.gl-images-virtual-15c6321e42/4/.yarn/berry/cache/@loaders.gl-images-npm-4.3.4-79978e2d0b-10c0.zip/node_modules/@loaders.gl/images/dist/lib/utils/version.js", "../../../.yarn/__virtual__/@loaders.gl-images-virtual-15c6321e42/4/.yarn/berry/cache/@loaders.gl-images-npm-4.3.4-79978e2d0b-10c0.zip/node_modules/@loaders.gl/images/dist/lib/category-api/image-type.js", "../../../.yarn/__virtual__/@loaders.gl-images-virtual-15c6321e42/4/.yarn/berry/cache/@loaders.gl-images-npm-4.3.4-79978e2d0b-10c0.zip/node_modules/@loaders.gl/images/dist/lib/category-api/parsed-image-api.js", "../../../.yarn/__virtual__/@loaders.gl-images-virtual-15c6321e42/4/.yarn/berry/cache/@loaders.gl-images-npm-4.3.4-79978e2d0b-10c0.zip/node_modules/@loaders.gl/images/dist/lib/parsers/svg-utils.js", "../../../.yarn/__virtual__/@loaders.gl-images-virtual-15c6321e42/4/.yarn/berry/cache/@loaders.gl-images-npm-4.3.4-79978e2d0b-10c0.zip/node_modules/@loaders.gl/images/dist/lib/parsers/parse-to-image.js", "../../../.yarn/__virtual__/@loaders.gl-images-virtual-15c6321e42/4/.yarn/berry/cache/@loaders.gl-images-npm-4.3.4-79978e2d0b-10c0.zip/node_modules/@loaders.gl/images/dist/lib/parsers/parse-to-image-bitmap.js", "../../../.yarn/__virtual__/@loaders.gl-images-virtual-15c6321e42/4/.yarn/berry/cache/@loaders.gl-images-npm-4.3.4-79978e2d0b-10c0.zip/node_modules/@loaders.gl/images/dist/lib/category-api/parse-isobmff-binary.js", "../../../.yarn/__virtual__/@loaders.gl-images-virtual-15c6321e42/4/.yarn/berry/cache/@loaders.gl-images-npm-4.3.4-79978e2d0b-10c0.zip/node_modules/@loaders.gl/images/dist/lib/category-api/binary-image-api.js", "../../../.yarn/__virtual__/@loaders.gl-images-virtual-15c6321e42/4/.yarn/berry/cache/@loaders.gl-images-npm-4.3.4-79978e2d0b-10c0.zip/node_modules/@loaders.gl/images/dist/lib/parsers/parse-to-node-image.js", "../../../.yarn/__virtual__/@loaders.gl-images-virtual-15c6321e42/4/.yarn/berry/cache/@loaders.gl-images-npm-4.3.4-79978e2d0b-10c0.zip/node_modules/@loaders.gl/images/dist/lib/parsers/parse-image.js", "../../../.yarn/__virtual__/@loaders.gl-images-virtual-15c6321e42/4/.yarn/berry/cache/@loaders.gl-images-npm-4.3.4-79978e2d0b-10c0.zip/node_modules/@loaders.gl/images/dist/image-loader.js", "../../../.yarn/__virtual__/@loaders.gl-images-virtual-15c6321e42/4/.yarn/berry/cache/@loaders.gl-images-npm-4.3.4-79978e2d0b-10c0.zip/node_modules/@loaders.gl/images/dist/lib/encoders/encode-image.js", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/utils/log.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/debug/loggers.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/debug/index.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/utils/json-loader.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/init.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/lib/utils/assert.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/lib/filters/prop-types.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/module-injectors.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/lib/shader-assembly/shader-injections.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/lib/shader-module/shader-module.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/lib/shader-module/shader-module-dependencies.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/lib/shader-assembly/platform-defines.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/lib/shader-transpiler/transpile-glsl-shader.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/lib/shader-assembly/shader-hooks.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/lib/glsl-utils/get-shader-info.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/lib/shader-assembly/assemble-shaders.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/lib/preprocessor/preprocessor.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/lib/shader-assembler.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/lib/glsl-utils/shader-utils.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/utils/stats-manager.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/utils/log.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/utils/uid.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/resources/resource.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/resources/buffer.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/gpu-type-utils/decode-data-type.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/gpu-type-utils/texture-format-table.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/gpu-type-utils/decode-texture-format.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/gpu-type-utils/texture-format-capabilities.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/device.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/luma.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/adapter.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/canvas-context.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/resources/texture.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/resources/texture-view.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/resources/external-texture.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter-utils/format-compiler-log.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/resources/shader.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/resources/sampler.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/resources/framebuffer.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/resources/render-pipeline.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/resources/render-pass.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/resources/compute-pipeline.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/resources/compute-pass.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/resources/command-encoder.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/resources/command-buffer.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/gpu-type-utils/decode-attribute-type.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/gpu-type-utils/decode-vertex-format.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter-utils/get-attribute-from-layouts.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/resources/vertex-array.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/resources/transform-feedback.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/resources/query-set.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter/resources/pipeline-layout.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/gpu-type-utils/decode-shader-types.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/utils/array-utils-flat.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/utils/is-array.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/portable/uniform-buffer-layout.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/utils/array-equal.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/portable/uniform-block.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/portable/uniform-store.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/gpu-type-utils/vertex-format-from-attribute.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter-utils/buffer-layout-helper.ts", "../../../../../../.yarn/berry/cache/@luma.gl-core-npm-9.1.9-f747d3c594-10c0.zip/node_modules/@luma.gl/core/src/adapter-utils/buffer-layout-order.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/reflect/info.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/utils/float.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/utils/texture_sample.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/utils/texture_format_info.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/wgsl_ast.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/wgsl_scanner.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/utils/cast.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/reflect/reflect.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/exec/exec_context.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/exec/exec_interface.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/exec/builtin_functions.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/utils/matrix.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/wgsl_exec.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/ast/parse_context.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/wgsl_parser.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/wgsl_reflect.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/exec/command.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/exec/stack_frame.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/exec/exec_stack.ts", "../../../../../../.yarn/berry/cache/wgsl_reflect-npm-1.2.3-58aee34150-10c0.zip/node_modules/wgsl_reflect/src/wgsl_debug.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/lib/wgsl/get-shader-layout-wgsl.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/lib/common.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/classes/base/math-array.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/lib/validators.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/lib/assert.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/classes/base/vector.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/gl-matrix/vec2.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/gl-matrix/common.js", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/lib/gl-matrix-extras.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/gl-matrix/vec3.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/classes/vector3.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/classes/base/matrix.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/gl-matrix/mat3.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/classes/matrix3.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/gl-matrix/mat4.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/gl-matrix/vec4.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/classes/matrix4.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/gl-matrix/quat.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/classes/spherical-coordinates.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/classes/euler.ts", "../../../../../../.yarn/berry/cache/@math.gl-core-npm-4.1.0-f2844e4336-10c0.zip/node_modules/@math.gl/core/src/lib/math-utils.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/modules/math/fp16/fp16-utils.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/modules/math/fp64/fp64-utils.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/modules/math/fp32/fp32.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/modules/math/fp64/fp64-arithmetic-glsl.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/modules/math/fp64/fp64.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/modules/engine/picking/picking.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/modules/lighting/lights/lighting-uniforms-glsl.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/modules/lighting/lights/lighting-uniforms-wgsl.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/modules/lighting/lights/lighting.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/modules/lighting/phong-material/phong-shaders-glsl.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/modules/lighting/phong-material/phong-shaders-wgsl.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/modules/lighting/gouraud-material/gouraud-material.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/modules-webgl1/project/project.ts", "../../../.yarn/__virtual__/@luma.gl-shadertools-virtual-ed2a1ebd80/4/.yarn/berry/cache/@luma.gl-shadertools-npm-9.1.9-81b6398d54-10c0.zip/node_modules/@luma.gl/shadertools/src/modules-webgl1/lighting/dirlight/dirlight.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/shaderlib/misc/layer-uniforms.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/shaderlib/misc/geometry.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/input/input-consts.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/recognizer/recognizer-state.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/touchaction/touchaction-Consts.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/touchaction/clean-touch-actions.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/touchaction/touchaction.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/utils/split-str.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/utils/event-listeners.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/utils/get-window-for-element.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/utils/has-parent.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/input/get-center.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/input/simple-clone-input-data.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/input/get-distance.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/input/get-angle.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/input/get-direction.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/input/get-delta-xy.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/input/get-velocity.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/input/get-scale.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/input/get-rotation.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/input/compute-interval-input-data.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/input/compute-input-data.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/input/input-handler.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/input/input.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/inputs/pointerevent.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/utils/prefixed.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/manager.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/utils/unique-id.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/recognizer/state-str.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/recognizer/recognizer.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/recognizers/attribute.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/recognizers/tap.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/recognizers/pan.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/hammerjs/recognizers/pinch.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/inputs/input.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/utils/globals.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/inputs/wheel-input.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/inputs/move-input.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/inputs/key-input.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/inputs/contextmenu-input.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/utils/event-utils.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/utils/event-registrar.ts", "../../../../../../.yarn/berry/cache/mjolnir.js-npm-3.0.0-56bd5d98bf-10c0.zip/node_modules/mjolnir.js/src/event-manager.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/constants.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/utils/memoize.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/shaderlib/project/viewport-uniforms.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/shaderlib/project/project.wgsl.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/shaderlib/project/project.glsl.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/shaderlib/project/project.ts", "../../../../../../.yarn/berry/cache/@math.gl-web-mercator-npm-4.1.0-b54da0cb54-10c0.zip/node_modules/@math.gl/web-mercator/src/math-utils.ts", "../../../../../../.yarn/berry/cache/@math.gl-web-mercator-npm-4.1.0-b54da0cb54-10c0.zip/node_modules/@math.gl/web-mercator/src/assert.ts", "../../../../../../.yarn/berry/cache/@math.gl-web-mercator-npm-4.1.0-b54da0cb54-10c0.zip/node_modules/@math.gl/web-mercator/src/web-mercator-utils.ts", "../../../../../../.yarn/berry/cache/@math.gl-web-mercator-npm-4.1.0-b54da0cb54-10c0.zip/node_modules/@math.gl/web-mercator/src/fit-bounds.ts", "../../../../../../.yarn/berry/cache/@math.gl-web-mercator-npm-4.1.0-b54da0cb54-10c0.zip/node_modules/@math.gl/web-mercator/src/get-bounds.ts", "../../../../../../.yarn/berry/cache/@math.gl-web-mercator-npm-4.1.0-b54da0cb54-10c0.zip/node_modules/@math.gl/web-mercator/src/normalize-viewport-props.ts", "../../../../../../.yarn/berry/cache/@math.gl-web-mercator-npm-4.1.0-b54da0cb54-10c0.zip/node_modules/@math.gl/web-mercator/src/fly-to-viewport.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/shaderlib/shadow/shadow.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/shaderlib/picking/picking.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/shaderlib/index.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/effects/lighting/ambient-light.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/effects/lighting/directional-light.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/passes/pass.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/passes/layers-pass.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/passes/shadow-pass.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/effects/lighting/lighting-effect.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/utils/typed-array-manager.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/utils/math-utils.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/viewports/viewport.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/viewports/web-mercator-viewport.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/shaderlib/project/project-functions.ts", "../../../../../../.yarn/berry/cache/@math.gl-sun-npm-4.1.0-84ea31ab67-10c0.zip/node_modules/@math.gl/sun/src/suncalc.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/animation/timeline.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/animation-loop/request-animation-frame.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/animation-loop/animation-loop.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/utils/uid.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/geometry/gpu-geometry.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/factories/pipeline-factory.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/factories/shader-factory.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/debug/debug-shader-layout.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/debug/debug-framebuffer.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/utils/deep-equal.ts", "../../../../../../.yarn/berry/cache/@math.gl-types-npm-4.1.0-8b30af41f6-10c0.zip/node_modules/@math.gl/types/src/is-array.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/model/split-uniforms-and-bindings.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/shader-inputs.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/application-utils/load-file.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/async-texture/async-texture.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/model/model.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/compute/buffer-transform.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/geometries/cube-geometry.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/compute/computation.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/modules/picking/picking-uniforms.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/modules/picking/index-picking.ts", "../../../.yarn/__virtual__/@luma.gl-engine-virtual-2f877ad12c/4/.yarn/berry/cache/@luma.gl-engine-npm-9.1.9-a0c8f25348-10c0.zip/node_modules/@luma.gl/engine/src/modules/picking/color-picking.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/passes/pick-layers-pass.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lifecycle/constants.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/utils/flatten.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/resource/resource.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/resource/resource-manager.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/layer-manager.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/utils/deep-equal.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/view-manager.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/utils/positions.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/views/view.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/transitions/transition.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/controllers/transition-manager.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/utils/assert.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/transitions/transition-interpolator.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/transitions/linear-interpolator.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/controllers/controller.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/controllers/view-state.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/controllers/map-controller.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/views/map-view.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/effect-manager.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/passes/draw-layers-pass.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/deck-renderer.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/picking/query-object.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/picking/pick-info.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/deck-picker.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/widget-manager.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/tooltip.ts", "../../../../../../.yarn/berry/cache/@luma.gl-constants-npm-9.1.9-70d21a1940-10c0.zip/node_modules/@luma.gl/constants/src/webgl-constants.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/context/parameters/webgl-parameter-tables.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/context/parameters/unified-parameter-api.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/context/state-tracker/deep-array-equal.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/context/state-tracker/webgl-state-tracker.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/context/helpers/create-browser-context.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/context/helpers/webgl-extensions.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/device-helpers/webgl-device-info.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/converters/vertex-formats.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/converters/webgl-texture-table.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/device-helpers/webgl-device-features.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/device-helpers/webgl-device-limits.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/resources/webgl-framebuffer.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/webgl-canvas-context.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/utils/load-script.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/context/debug/spector.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/context/debug/webgl-developer-tools.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/utils/uid.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/resources/webgl-buffer.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/helpers/parse-shader-compiler-log.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/resources/webgl-shader.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/converters/device-parameters.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/converters/sampler-parameters.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/resources/webgl-sampler.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/resources/webgl-texture-view.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/helpers/typed-array-utils.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/helpers/format-utils.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/context/state-tracker/with-parameters.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/helpers/webgl-texture-utils.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/resources/webgl-texture.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/resources/webgl-render-pass.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/helpers/decode-webgl-types.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/helpers/get-shader-layout.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/helpers/set-uniform.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/utils/split-uniforms-and-bindings.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/helpers/webgl-topology-utils.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/resources/webgl-render-pipeline.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/resources/webgl-command-buffer.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/resources/webgl-command-encoder.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/utils/fill-array.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/resources/webgl-vertex-array.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/resources/webgl-transform-feedback.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/resources/webgl-query-set.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/webgl-device.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/context/polyfills/polyfill-webgl1-extensions.ts", "../../../.yarn/__virtual__/@luma.gl-webgl-virtual-decc58d7ee/4/.yarn/berry/cache/@luma.gl-webgl-npm-9.1.9-e2e597afc9-10c0.zip/node_modules/@luma.gl/webgl/src/adapter/webgl-adapter.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/deck.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/attribute/gl-utils.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/attribute/data-column.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/utils/iterable-utils.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/utils/range.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/attribute/transition-settings.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/attribute/attribute.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/utils/array-utils.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/transitions/gpu-transition-utils.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/transitions/gpu-transition.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/transitions/gpu-interpolation-transition.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/transitions/gpu-spring-transition.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/attribute/attribute-transition-manager.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/attribute/attribute-manager.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/transitions/cpu-interpolation-transition.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/transitions/cpu-spring-transition.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/uniform-transition-manager.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lifecycle/props.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/utils/count.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/utils/shader.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/utils/texture.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lifecycle/prop-types.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lifecycle/create-props.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lifecycle/component.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lifecycle/component-state.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/layer-state.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/layer.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/composite-layer.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/viewports/globe-viewport.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/viewports/orbit-viewport.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/viewports/orthographic-viewport.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/viewports/first-person-viewport.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/controllers/first-person-controller.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/views/first-person-view.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/controllers/orbit-controller.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/views/orbit-view.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/controllers/orthographic-controller.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/views/orthographic-view.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/controllers/globe-controller.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/views/globe-view.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/lib/layer-extension.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/transitions/fly-to-interpolator.ts", "../../../../../../.yarn/berry/cache/@deck.gl-core-npm-9.1.14-900b742fd6-10c0.zip/node_modules/@deck.gl/core/src/utils/apply-styles.ts", "../../../.yarn/__virtual__/@deck.gl-react-virtual-e01d66b29a/4/.yarn/berry/cache/@deck.gl-react-npm-9.1.14-4f5993c079-10c0.zip/node_modules/@deck.gl/react/src/utils/use-isomorphic-layout-effect.ts", "../../../.yarn/__virtual__/@deck.gl-react-virtual-e01d66b29a/4/.yarn/berry/cache/@deck.gl-react-npm-9.1.14-4f5993c079-10c0.zip/node_modules/@deck.gl/react/src/utils/extract-jsx-layers.ts", "../../../.yarn/__virtual__/@deck.gl-react-virtual-e01d66b29a/4/.yarn/berry/cache/@deck.gl-react-npm-9.1.14-4f5993c079-10c0.zip/node_modules/@deck.gl/react/src/utils/inherits-from.ts", "../../../.yarn/__virtual__/@deck.gl-react-virtual-e01d66b29a/4/.yarn/berry/cache/@deck.gl-react-npm-9.1.14-4f5993c079-10c0.zip/node_modules/@deck.gl/react/src/utils/evaluate-children.ts", "../../../.yarn/__virtual__/@deck.gl-react-virtual-e01d66b29a/4/.yarn/berry/cache/@deck.gl-react-npm-9.1.14-4f5993c079-10c0.zip/node_modules/@deck.gl/react/src/utils/position-children-under-views.ts", "../../../.yarn/__virtual__/@deck.gl-react-virtual-e01d66b29a/4/.yarn/berry/cache/@deck.gl-react-npm-9.1.14-4f5993c079-10c0.zip/node_modules/@deck.gl/react/src/utils/deckgl-context.ts", "../../../.yarn/__virtual__/@deck.gl-react-virtual-e01d66b29a/4/.yarn/berry/cache/@deck.gl-react-npm-9.1.14-4f5993c079-10c0.zip/node_modules/@deck.gl/react/src/utils/extract-styles.ts", "../../../../../../.yarn/berry/cache/preact-npm-10.27.1-1ad8af53de-10c0.zip/node_modules/preact/src/constants.js", "../../../../../../.yarn/berry/cache/preact-npm-10.27.1-1ad8af53de-10c0.zip/node_modules/preact/src/util.js", "../../../../../../.yarn/berry/cache/preact-npm-10.27.1-1ad8af53de-10c0.zip/node_modules/preact/src/options.js", "../../../../../../.yarn/berry/cache/preact-npm-10.27.1-1ad8af53de-10c0.zip/node_modules/preact/src/create-element.js", "../../../../../../.yarn/berry/cache/preact-npm-10.27.1-1ad8af53de-10c0.zip/node_modules/preact/src/component.js", "../../../../../../.yarn/berry/cache/preact-npm-10.27.1-1ad8af53de-10c0.zip/node_modules/preact/src/diff/props.js", "../../../../../../.yarn/berry/cache/preact-npm-10.27.1-1ad8af53de-10c0.zip/node_modules/preact/src/create-context.js", "../../../../../../.yarn/berry/cache/preact-npm-10.27.1-1ad8af53de-10c0.zip/node_modules/preact/src/diff/children.js", "../../../../../../.yarn/berry/cache/preact-npm-10.27.1-1ad8af53de-10c0.zip/node_modules/preact/src/diff/index.js", "../../../../../../.yarn/berry/cache/preact-npm-10.27.1-1ad8af53de-10c0.zip/node_modules/preact/src/render.js", "../../../../../../.yarn/berry/cache/preact-npm-10.27.1-1ad8af53de-10c0.zip/node_modules/preact/src/clone-element.js", "../../../../../../.yarn/berry/cache/preact-npm-10.27.1-1ad8af53de-10c0.zip/node_modules/preact/src/diff/catch-error.js", "../../../../../../.yarn/berry/cache/preact-npm-10.27.1-1ad8af53de-10c0.zip/node_modules/preact/jsx-runtime/src/utils.js", "../../../../../../.yarn/berry/cache/preact-npm-10.27.1-1ad8af53de-10c0.zip/node_modules/preact/src/constants.js", "../../../../../../.yarn/berry/cache/preact-npm-10.27.1-1ad8af53de-10c0.zip/node_modules/preact/jsx-runtime/src/index.js", "../../../.yarn/__virtual__/@deck.gl-widgets-virtual-b8a0196a2e/4/.yarn/berry/cache/@deck.gl-widgets-npm-9.1.14-d4c2911b85-10c0.zip/node_modules/@deck.gl/widgets/src/components.tsx", "../../../.yarn/__virtual__/@deck.gl-widgets-virtual-b8a0196a2e/4/.yarn/berry/cache/@deck.gl-widgets-npm-9.1.14-d4c2911b85-10c0.zip/node_modules/@deck.gl/widgets/src/fullscreen-widget.tsx", "../../../.yarn/__virtual__/@deck.gl-widgets-virtual-b8a0196a2e/4/.yarn/berry/cache/@deck.gl-widgets-npm-9.1.14-d4c2911b85-10c0.zip/node_modules/@deck.gl/widgets/src/compass-widget.tsx", "../../../.yarn/__virtual__/@deck.gl-widgets-virtual-b8a0196a2e/4/.yarn/berry/cache/@deck.gl-widgets-npm-9.1.14-d4c2911b85-10c0.zip/node_modules/@deck.gl/widgets/src/zoom-widget.tsx", "../../../.yarn/__virtual__/@deck.gl-widgets-virtual-b8a0196a2e/4/.yarn/berry/cache/@deck.gl-widgets-npm-9.1.14-d4c2911b85-10c0.zip/node_modules/@deck.gl/widgets/src/widget-impl.ts", "../../../.yarn/__virtual__/@deck.gl-widgets-virtual-b8a0196a2e/4/.yarn/berry/cache/@deck.gl-widgets-npm-9.1.14-d4c2911b85-10c0.zip/node_modules/@deck.gl/widgets/src/screenshot-widget.tsx", "../../../.yarn/__virtual__/@deck.gl-widgets-virtual-b8a0196a2e/4/.yarn/berry/cache/@deck.gl-widgets-npm-9.1.14-d4c2911b85-10c0.zip/node_modules/@deck.gl/widgets/src/reset-view-widget.tsx", "../../../.yarn/__virtual__/@deck.gl-react-virtual-e01d66b29a/4/.yarn/berry/cache/@deck.gl-react-npm-9.1.14-4f5993c079-10c0.zip/node_modules/@deck.gl/react/src/utils/use-widget.ts", "../../../.yarn/__virtual__/@deck.gl-react-virtual-e01d66b29a/4/.yarn/berry/cache/@deck.gl-react-npm-9.1.14-4f5993c079-10c0.zip/node_modules/@deck.gl/react/src/widgets/compass-widget.tsx", "../../../.yarn/__virtual__/@deck.gl-react-virtual-e01d66b29a/4/.yarn/berry/cache/@deck.gl-react-npm-9.1.14-4f5993c079-10c0.zip/node_modules/@deck.gl/react/src/widgets/fullscreen-widget.tsx", "../../../.yarn/__virtual__/@deck.gl-react-virtual-e01d66b29a/4/.yarn/berry/cache/@deck.gl-react-npm-9.1.14-4f5993c079-10c0.zip/node_modules/@deck.gl/react/src/widgets/zoom-widget.tsx"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"child_process\" has been externalized for browser compatibility. Cannot access \"child_process.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport * as React from 'react';\nimport {createElement, useRef, useState, useMemo, useEffect, useImperativeHandle} from 'react';\nimport {Deck} from '@deck.gl/core';\nimport useIsomorphicLayoutEffect from './utils/use-isomorphic-layout-effect';\n\nimport extractJSXLayers, {DeckGLRenderCallback} from './utils/extract-jsx-layers';\nimport positionChildrenUnderViews from './utils/position-children-under-views';\nimport extractStyles from './utils/extract-styles';\n\nimport type {DeckGLContextValue} from './utils/deckgl-context';\nimport type {DeckProps, View, Viewport} from '@deck.gl/core';\n\nexport type ViewOrViews = View | View[] | null;\n\n/* eslint-disable max-statements, accessor-pairs */\ntype DeckInstanceRef<ViewsT extends ViewOrViews> = {\n  deck?: Deck<ViewsT>;\n  redrawReason?: string | null;\n  lastRenderedViewports?: Viewport[];\n  viewStateUpdateRequested?: any;\n  interactionStateUpdateRequested?: any;\n  forceUpdate: () => void;\n  version: number;\n  control: React.ReactHTMLElement<HTMLElement> | null;\n};\n\n// Remove prop types in the base Deck class that support externally supplied canvas/WebGLContext\n/** DeckGL React component props */\nexport type DeckGLProps<ViewsT extends ViewOrViews = null> = Omit<\n  DeckProps<ViewsT>,\n  'width' | 'height' | 'gl' | 'parent' | 'canvas' | '_customRender'\n> & {\n  Deck?: typeof Deck;\n  width?: string | number;\n  height?: string | number;\n  children?: React.ReactNode | DeckGLRenderCallback;\n  ref?: React.Ref<DeckGLRef<ViewsT>>;\n  ContextProvider?: React.Context<DeckGLContextValue>['Provider'];\n};\n\nexport type DeckGLRef<ViewsT extends ViewOrViews = null> = {\n  deck?: Deck<ViewsT>;\n  pickObject: Deck['pickObject'];\n  pickObjects: Deck['pickObjects'];\n  pickMultipleObjects: Deck['pickMultipleObjects'];\n};\n\nfunction getRefHandles<ViewsT extends ViewOrViews>(\n  thisRef: DeckInstanceRef<ViewsT>\n): DeckGLRef<ViewsT> {\n  return {\n    get deck() {\n      return thisRef.deck;\n    },\n    // The following method can only be called after ref is available, by which point deck is defined in useEffect\n    pickObject: opts => thisRef.deck!.pickObject(opts),\n    pickMultipleObjects: opts => thisRef.deck!.pickMultipleObjects(opts),\n    pickObjects: opts => thisRef.deck!.pickObjects(opts)\n  };\n}\n\nfunction redrawDeck(thisRef: DeckInstanceRef<any>) {\n  if (thisRef.redrawReason) {\n    // Only redraw if we have received a dirty flag\n    // @ts-expect-error accessing protected method\n    thisRef.deck._drawLayers(thisRef.redrawReason);\n    thisRef.redrawReason = null;\n  }\n}\n\nfunction createDeckInstance<ViewsT extends ViewOrViews>(\n  thisRef: DeckInstanceRef<ViewsT>,\n  DeckClass: typeof Deck,\n  props: DeckProps<ViewsT>\n): Deck<ViewsT> {\n  const deck = new DeckClass({\n    ...props,\n    // The Deck's animation loop is independent from React's render cycle, causing potential\n    // synchronization issues. We provide this custom render function to make sure that React\n    // and Deck update on the same schedule.\n    // TODO(ibgreen) - Hack to enable WebGPU as it needs to render quickly to avoid CanvasContext texture from going stale\n    _customRender:\n      props.deviceProps?.adapters?.[0]?.type === 'webgpu'\n        ? undefined\n        : redrawReason => {\n            // Save the dirty flag for later\n            thisRef.redrawReason = redrawReason;\n\n            // Viewport/view state is passed to child components as props.\n            // If they have changed, we need to trigger a React rerender to update children props.\n            const viewports = deck.getViewports();\n            if (thisRef.lastRenderedViewports !== viewports) {\n              // Viewports have changed, update children props first.\n              // This will delay the Deck canvas redraw till after React update (in useLayoutEffect)\n              // so that the canvas does not get rendered before the child components update.\n              thisRef.forceUpdate();\n            } else {\n              redrawDeck(thisRef);\n            }\n          }\n  });\n  return deck;\n}\n\nfunction DeckGLWithRef<ViewsT extends ViewOrViews = null>(\n  props: DeckGLProps<ViewsT>,\n  ref: React.Ref<DeckGLRef<ViewsT>>\n) {\n  // A mechanism to force redraw\n  const [version, setVersion] = useState(0);\n  // A reference to persistent states\n  const _thisRef = useRef<DeckInstanceRef<ViewsT>>({\n    control: null,\n    version,\n    forceUpdate: () => setVersion(v => v + 1)\n  });\n  const thisRef = _thisRef.current;\n  // DOM refs\n  const containerRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // extract any deck.gl layers masquerading as react elements from props.children\n  const jsxProps = useMemo(\n    () => extractJSXLayers(props),\n    [props.layers, props.views, props.children]\n  );\n\n  // Callbacks\n  let inRender = true;\n\n  const handleViewStateChange: DeckProps<ViewsT>['onViewStateChange'] = params => {\n    if (inRender && props.viewState) {\n      // Callback may invoke a state update. Defer callback to after render() to avoid React error\n      // In React StrictMode, render is executed twice and useEffect/useLayoutEffect is executed once\n      // Store deferred parameters in ref so that we can access it in another render\n      thisRef.viewStateUpdateRequested = params;\n      return null;\n    }\n    thisRef.viewStateUpdateRequested = null;\n    return props.onViewStateChange?.(params);\n  };\n\n  const handleInteractionStateChange: DeckProps<ViewsT>['onInteractionStateChange'] = params => {\n    if (inRender) {\n      // Callback may invoke a state update. Defer callback to after render() to avoid React error\n      // In React StrictMode, render is executed twice and useEffect/useLayoutEffect is executed once\n      // Store deferred parameters in ref so that we can access it in another render\n      thisRef.interactionStateUpdateRequested = params;\n    } else {\n      thisRef.interactionStateUpdateRequested = null;\n      props.onInteractionStateChange?.(params);\n    }\n  };\n\n  // Update Deck's props. If Deck needs redraw, this will trigger a call to `_customRender` in\n  // the next animation frame.\n  // Needs to be called both from initial mount, and when new props are received\n  const deckProps = useMemo(() => {\n    const forwardProps: DeckProps<ViewsT> = {\n      widgets: [],\n      ...props,\n      // Override user styling props. We will set the canvas style in render()\n      style: null,\n      width: '100%',\n      height: '100%',\n      parent: containerRef.current,\n      canvas: canvasRef.current,\n      layers: jsxProps.layers,\n      views: jsxProps.views as ViewsT,\n      onViewStateChange: handleViewStateChange,\n      onInteractionStateChange: handleInteractionStateChange\n    };\n\n    // The defaultValue for _customRender is null, which would overwrite the definition\n    // of _customRender. Remove to avoid frequently redeclaring the method here.\n    delete forwardProps._customRender;\n\n    if (thisRef.deck) {\n      thisRef.deck.setProps(forwardProps);\n    }\n\n    return forwardProps;\n  }, [props]);\n\n  useEffect(() => {\n    const DeckClass = props.Deck || Deck;\n\n    thisRef.deck = createDeckInstance(thisRef, DeckClass, {\n      ...deckProps,\n      parent: containerRef.current,\n      canvas: canvasRef.current\n    });\n\n    return () => thisRef.deck?.finalize();\n  }, []);\n\n  useIsomorphicLayoutEffect(() => {\n    // render has just been called. The children are positioned based on the current view state.\n    // Redraw Deck canvas immediately, if necessary, using the current view state, so that it\n    // matches the child components.\n    redrawDeck(thisRef);\n\n    // Execute deferred callbacks\n    const {viewStateUpdateRequested, interactionStateUpdateRequested} = thisRef;\n    if (viewStateUpdateRequested) {\n      handleViewStateChange(viewStateUpdateRequested);\n    }\n    if (interactionStateUpdateRequested) {\n      handleInteractionStateChange(interactionStateUpdateRequested);\n    }\n  });\n\n  useImperativeHandle(ref, () => getRefHandles(thisRef), []);\n\n  const currentViewports =\n    thisRef.deck && thisRef.deck.isInitialized ? thisRef.deck.getViewports() : undefined;\n\n  const {ContextProvider, width = '100%', height = '100%', id, style} = props;\n\n  const {containerStyle, canvasStyle} = useMemo(\n    () => extractStyles({width, height, style}),\n    [width, height, style]\n  );\n\n  // Props changes may lead to 3 types of updates:\n  // 1. Only the WebGL canvas - updated in Deck's render cycle (next animation frame)\n  // 2. Only the DOM - updated in React's lifecycle (now)\n  // 3. Both the WebGL canvas and the DOM - defer React rerender to next animation frame just\n  //    before Deck redraw to ensure perfect synchronization & avoid excessive redraw\n  //    This is because multiple changes may happen to Deck between two frames e.g. transition\n  if (\n    (!thisRef.viewStateUpdateRequested && thisRef.lastRenderedViewports === currentViewports) || // case 2\n    thisRef.version !== version // case 3 just before deck redraws\n  ) {\n    thisRef.lastRenderedViewports = currentViewports;\n    thisRef.version = version;\n\n    // Render the background elements (typically react-map-gl instances)\n    // using the view descriptors\n    const childrenUnderViews = positionChildrenUnderViews({\n      children: jsxProps.children,\n      deck: thisRef.deck,\n      ContextProvider\n    });\n\n    const canvas = createElement('canvas', {\n      key: 'canvas',\n      id: id || 'deckgl-overlay',\n      ref: canvasRef,\n      style: canvasStyle\n    });\n\n    // Render deck.gl as the last child\n    thisRef.control = createElement(\n      'div',\n      {id: `${id || 'deckgl'}-wrapper`, ref: containerRef, style: containerStyle},\n      [canvas, childrenUnderViews]\n    );\n  }\n\n  inRender = false;\n  return thisRef.control;\n}\n\nconst DeckGL = React.forwardRef(DeckGLWithRef) as <ViewsT extends ViewOrViews>(\n  props: DeckGLProps<ViewsT>\n) => React.ReactElement;\n\nexport default DeckGL;\n", "/**\n * Throws an `Error` with the optional `message` if `condition` is falsy\n * @note Replacement for the external assert method to reduce bundle size\n */\nexport function assert(condition, message) {\n    if (!condition) {\n        throw new Error(message || 'loader assertion failed.');\n    }\n}\n", "// Purpose: include this in your module to avoid\n// dependencies on micro modules like 'global' and 'is-browser';\n/* eslint-disable no-restricted-globals */\nconst globals = {\n    self: typeof self !== 'undefined' && self,\n    window: typeof window !== 'undefined' && window,\n    global: typeof global !== 'undefined' && global,\n    document: typeof document !== 'undefined' && document\n};\nconst self_ = globals.self || globals.window || globals.global || {};\nconst window_ = globals.window || globals.self || globals.global || {};\nconst global_ = globals.global || globals.self || globals.window || {};\nconst document_ = globals.document || {};\nexport { self_ as self, window_ as window, global_ as global, document_ as document };\n/** true if running in a browser */\nexport const isBrowser = \n// @ts-ignore process does not exist on browser\nBoolean(typeof process !== 'object' || String(process) !== '[object process]' || process.browser);\n/** true if running in a worker thread */\nexport const isWorker = typeof importScripts === 'function';\n// Extract node major version\nconst matches = typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\n/** Major Node version (as a number) */\nexport const nodeVersion = (matches && parseFloat(matches[1])) || 0;\n", "// Do not name these variables the same as the global objects - will break bundling\nconst global_ = globalThis;\nconst window_ = globalThis as unknown as Window;\nconst document_ = globalThis.document || ({} as Document);\nconst process_ = globalThis.process || {};\nconst console_ = globalThis.console;\nconst navigator_ = globalThis.navigator || ({} as Navigator);\n\nexport {\n  global_ as global,\n  global_ as self,\n  window_ as window,\n  document_ as document,\n  process_ as process,\n  console_ as console,\n  navigator_ as navigator\n};\n", "// based on https://github.com/cheton/is-electron\n// https://github.com/electron/electron/issues/2288\n/* eslint-disable complexity */\nexport function isElectron(mockUserAgent?: string): boolean {\n  // Renderer process\n  // @ts-expect-error\n  if (typeof window !== 'undefined' && window.process?.type === 'renderer') {\n    return true;\n  }\n  // Main process\n  // eslint-disable-next-line\n  if (typeof process !== 'undefined' && Boolean(process.versions?.['electron'])) {\n    return true;\n  }\n  // Detect the user agent when the `nodeIntegration` option is set to true\n  const realUserAgent = typeof navigator !== 'undefined' && navigator.userAgent;\n  const userAgent = mockUserAgent || realUserAgent;\n  return Boolean(userAgent && userAgent.indexOf('Electron') >= 0);\n}\n", "// This function is needed in initialization stages,\n// make sure it can be imported in isolation\n\nimport {isElectron} from './is-electron';\n\n/** Check if in browser by duck-typing Node context */\nexport function isBrowser(): boolean {\n  const isNode =\n    // @ts-expect-error\n    typeof process === 'object' && String(process) === '[object process]' && !process?.browser;\n  return !isNode || isElectron();\n}\n", "// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// This function is needed in initialization stages,\n// make sure it can be imported in isolation\n\nimport {isBrowser} from './is-browser';\nimport {isElectron} from './is-electron';\nimport {navigator} from './globals';\n\ndeclare global {\n  var chrome: boolean; // eslint-disable-line no-var\n  var safari: boolean; // eslint-disable-line no-var\n  var mozInnerScreenX: number; // eslint-disable-line no-var\n}\n\nexport function isMobile(): boolean {\n  return typeof globalThis.orientation !== 'undefined';\n}\n\n// Simple browser detection\n// `mockUserAgent` parameter allows user agent to be overridden for testing\n/* eslint-disable complexity */\nexport function getBrowser(\n  mockUserAgent?: string\n): 'Node' | 'Electron' | 'Chrome' | 'Firefox' | 'Safari' | 'Edge' | 'Unknown' {\n  if (!mockUserAgent && !isBrowser()) {\n    return 'Node';\n  }\n  if (isElectron(mockUserAgent)) {\n    return 'Electron';\n  }\n\n  const userAgent = mockUserAgent || navigator.userAgent || '';\n\n  // NOTE: Order of tests matter, as many agents list Chrome etc.\n  if (userAgent.indexOf('Edge') > -1) {\n    return 'Edge';\n  }\n  if (globalThis.chrome) {\n    return 'Chrome';\n  }\n  if (globalThis.safari) {\n    return 'Safari';\n  }\n  if (globalThis.mozInnerScreenX) {\n    return 'Firefox';\n  }\n  return 'Unknown';\n}\n", "// Extract injected version from package.json (injected by babel plugin)\n// @ts-expect-error\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'untranspiled source';\n\n// ENVIRONMENT\nexport {self, window, global, document, process, console} from './lib/globals';\nexport {isBrowser} from './lib/is-browser';\nexport {getBrowser, isMobile} from './lib/get-browser';\nexport {isElectron} from './lib/is-electron';\n\n// ENVIRONMENT'S ASSERT IS 5-15KB, SO WE PROVIDE OUR OWN\nexport {assert} from './utils/assert';\n\n// TODO - wish we could just export a constant\n// export const isBrowser = checkIfBrowser();\n", "// probe.gl, MIT license\n\nexport type StorageType = 'sessionStorage' | 'localStorage';\n\nfunction getStorage(type: StorageType): Storage | null {\n  try {\n    const storage: Storage = window[type];\n    const x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return storage;\n  } catch (e) {\n    return null;\n  }\n}\n\n// Store keys in local storage via simple interface\nexport class LocalStorage<Configuration extends {}> {\n  storage: Storage | null;\n  id: string;\n  config: Required<Configuration>;\n\n  constructor(\n    id: string,\n    defaultConfig: Required<Configuration>,\n    type: StorageType = 'sessionStorage'\n  ) {\n    this.storage = getStorage(type);\n    this.id = id;\n    this.config = defaultConfig;\n    this._loadConfiguration();\n  }\n\n  getConfiguration(): Required<Configuration> {\n    return this.config;\n  }\n\n  setConfiguration(configuration: Configuration): void {\n    Object.assign(this.config, configuration);\n    if (this.storage) {\n      const serialized = JSON.stringify(this.config);\n      this.storage.setItem(this.id, serialized);\n    }\n  }\n\n  // Get config from persistent store, if available\n  _loadConfiguration() {\n    let configuration = {};\n    if (this.storage) {\n      const serializedConfiguration = this.storage.getItem(this.id);\n      configuration = serializedConfiguration ? JSON.parse(serializedConfiguration) : {};\n    }\n    Object.assign(this.config, configuration);\n    return this;\n  }\n}\n", "// probe.gl, MIT license\n\nexport type FormatValueOptions = {\n  isInteger?: boolean;\n  maxElts?: number;\n  size?: number;\n};\n\n/**\n * Format time\n */\nexport function formatTime(ms: number): string {\n  let formatted;\n  if (ms < 10) {\n    formatted = `${ms.toFixed(2)}ms`;\n  } else if (ms < 100) {\n    formatted = `${ms.toFixed(1)}ms`;\n  } else if (ms < 1000) {\n    formatted = `${ms.toFixed(0)}ms`;\n  } else {\n    formatted = `${(ms / 1000).toFixed(2)}s`;\n  }\n  return formatted;\n}\n\nexport function leftPad(string: string, length: number = 8): string {\n  const padLength = Math.max(length - string.length, 0);\n  return `${' '.repeat(padLength)}${string}`;\n}\n\nexport function rightPad(string: string, length: number = 8): string {\n  const padLength = Math.max(length - string.length, 0);\n  return `${string}${' '.repeat(padLength)}`;\n}\n\nexport function formatValue(v: unknown, options: FormatValueOptions = {}): string {\n  const EPSILON = 1e-16;\n  const {isInteger = false} = options;\n  if (Array.isArray(v) || ArrayBuffer.isView(v)) {\n    return formatArrayValue(v, options);\n  }\n  if (!Number.isFinite(v)) {\n    return String(v);\n  }\n  // @ts-expect-error\n  if (Math.abs(v) < EPSILON) {\n    return isInteger ? '0' : '0.';\n  }\n  if (isInteger) {\n    // @ts-expect-error\n    return v.toFixed(0);\n  }\n  // @ts-expect-error\n  if (Math.abs(v) > 100 && Math.abs(v) < 10000) {\n    // @ts-expect-error\n    return v.toFixed(0);\n  }\n  // @ts-expect-error\n  const string = v.toPrecision(2);\n  const decimal = string.indexOf('.0');\n  return decimal === string.length - 2 ? string.slice(0, -1) : string;\n}\n\n/** Helper to formatValue */\nfunction formatArrayValue(v: any, options: FormatValueOptions) {\n  const {maxElts = 16, size = 1} = options;\n  let string = '[';\n  for (let i = 0; i < v.length && i < maxElts; ++i) {\n    if (i > 0) {\n      string += `,${i % size === 0 ? ' ' : ''}`;\n    }\n    string += formatValue(v[i], options);\n  }\n  const terminator = v.length > maxElts ? '...' : ']';\n  return `${string}${terminator}`;\n}\n", "import {isBrowser} from '@probe.gl/env';\n\nexport enum COLOR {\n  BLACK = 30,\n  RED = 31,\n  GREEN = 32,\n  YELLOW = 33,\n  BLUE = 34,\n  MAGENTA = 35,\n  CYAN = 36,\n  WHITE = 37,\n\n  BRIGHT_BLACK = 90,\n  BRIGHT_RED = 91,\n  BRIGHT_GREEN = 92,\n  BRIGHT_YELLOW = 93,\n  BRIGHT_BLUE = 94,\n  BRIGHT_MAGENTA = 95,\n  BRIGHT_CYAN = 96,\n  BRIGHT_WHITE = 97\n}\n\nconst BACKGROUND_INCREMENT = 10;\n\nfunction getColor(color: string | COLOR): number {\n  if (typeof color !== 'string') {\n    return color;\n  }\n  color = color.toUpperCase();\n  return COLOR[color] || COLOR.WHITE;\n}\n\nexport function addColor(\n  string: string,\n  color: string | COLOR,\n  background?: string | COLOR\n): string {\n  if (!isBrowser && typeof string === 'string') {\n    if (color) {\n      const colorCode = getColor(color);\n      string = `\\u001b[${colorCode}m${string}\\u001b[39m`;\n    }\n    if (background) {\n      // background colors values are +10\n      const colorCode = getColor(background);\n      string = `\\u001b[${colorCode + BACKGROUND_INCREMENT}m${string}\\u001b[49m`;\n    }\n  }\n  return string;\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * Binds the \"this\" argument of all functions on a class instance to the instance\n * @param obj - class instance (typically a react component)\n */\nexport function autobind(obj: object, predefined = ['constructor']): void {\n  const proto = Object.getPrototypeOf(obj);\n  const propNames = Object.getOwnPropertyNames(proto);\n\n  const object = obj as Record<string, unknown>;\n  for (const key of propNames) {\n    const value = object[key];\n    if (typeof value === 'function') {\n      if (!predefined.find((name) => key === name)) {\n        object[key] = value.bind(obj);\n      }\n    }\n  }\n}\n", "export default function assert(condition: unknown, message?: string): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n", "// probe.gl, MIT license\n\nimport {window, process, isBrowser} from '@probe.gl/env';\n\n/** Get best timer available. */\nexport function getHiResTimestamp() {\n  let timestamp;\n  if (isBrowser() && window.performance) {\n    timestamp = window?.performance?.now?.();\n  } else if ('hrtime' in process) {\n    // @ts-ignore\n    const timeParts = process?.hrtime?.();\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n\n  return timestamp;\n}\n", "// probe.gl, MIT license\n\n/* eslint-disable no-console,prefer-rest-params */\nimport {VERSION, isBrowser} from '@probe.gl/env';\nimport {LocalStorage} from './utils/local-storage';\nimport {formatTime, leftPad} from './utils/formatters';\nimport {addColor} from './utils/color';\nimport {autobind} from './utils/autobind';\nimport assert from './utils/assert';\nimport {getHiResTimestamp} from './utils/hi-res-timestamp';\n\n/** \"Global\" log configuration settings */\ntype LogConfiguration = {\n  enabled?: boolean;\n  level?: number;\n  [key: string]: unknown;\n};\n\n/** Options when logging a message */\ntype LogOptions = {\n  method?: Function;\n  time?: boolean;\n  total?: number;\n  delta?: number;\n  tag?: string;\n  message?: string;\n  once?: boolean;\n  nothrottle?: boolean;\n  args?: any;\n};\n\ntype LogFunction = () => void;\n\ntype Table = Record<string, any>;\n\n// Instrumentation in other packages may override console methods, so preserve them here\nconst originalConsole = {\n  debug: isBrowser() ? console.debug || console.log : console.log,\n  log: console.log,\n  info: console.info,\n  warn: console.warn,\n  error: console.error\n};\n\nconst DEFAULT_LOG_CONFIGURATION: Required<LogConfiguration> = {\n  enabled: true,\n  level: 0\n};\n\nfunction noop() {} // eslint-disable-line @typescript-eslint/no-empty-function\n\nconst cache = {};\nconst ONCE = {once: true};\n\n/** A console wrapper */\n\nexport class Log {\n  static VERSION = VERSION;\n\n  id: string;\n  VERSION: string = VERSION;\n  _startTs: number = getHiResTimestamp();\n  _deltaTs: number = getHiResTimestamp();\n  _storage: LocalStorage<LogConfiguration>;\n  userData = {};\n\n  // TODO - fix support from throttling groups\n  LOG_THROTTLE_TIMEOUT: number = 0; // Time before throttled messages are logged again\n\n  constructor({id} = {id: ''}) {\n    this.id = id;\n    this.userData = {};\n    this._storage = new LocalStorage<LogConfiguration>(\n      `__probe-${this.id}__`,\n      DEFAULT_LOG_CONFIGURATION\n    );\n\n    this.timeStamp(`${this.id} started`);\n\n    autobind(this);\n    Object.seal(this);\n  }\n\n  set level(newLevel: number) {\n    this.setLevel(newLevel);\n  }\n\n  get level(): number {\n    return this.getLevel();\n  }\n\n  isEnabled(): boolean {\n    return this._storage.config.enabled;\n  }\n\n  getLevel(): number {\n    return this._storage.config.level;\n  }\n\n  /** @return milliseconds, with fractions */\n  getTotal(): number {\n    return Number((getHiResTimestamp() - this._startTs).toPrecision(10));\n  }\n\n  /** @return milliseconds, with fractions */\n  getDelta(): number {\n    return Number((getHiResTimestamp() - this._deltaTs).toPrecision(10));\n  }\n\n  /** @deprecated use logLevel */\n  set priority(newPriority: number) {\n    this.level = newPriority;\n  }\n\n  /** @deprecated use logLevel */\n  get priority(): number {\n    return this.level;\n  }\n\n  /** @deprecated use logLevel */\n  getPriority(): number {\n    return this.level;\n  }\n\n  // Configure\n\n  enable(enabled: boolean = true): this {\n    this._storage.setConfiguration({enabled});\n    return this;\n  }\n\n  setLevel(level: number): this {\n    this._storage.setConfiguration({level});\n    return this;\n  }\n\n  /** return the current status of the setting */\n  get(setting: string): any {\n    return this._storage.config[setting];\n  }\n\n  // update the status of the setting\n  set(setting: string, value: any): void {\n    this._storage.setConfiguration({[setting]: value});\n  }\n\n  /** Logs the current settings as a table */\n  settings(): void {\n    if (console.table) {\n      console.table(this._storage.config);\n    } else {\n      console.log(this._storage.config);\n    }\n  }\n\n  // Unconditional logging\n\n  assert(condition: unknown, message?: string): asserts condition {\n    if (!condition) {\n      throw new Error(message || 'Assertion failed');\n    }\n  }\n\n  /** Warn, but only once, no console flooding */\n  warn(message: string, ...args: unknown[]): LogFunction;\n  warn(message: string): LogFunction {\n    return this._getLogFunction(0, message, originalConsole.warn, arguments, ONCE);\n  }\n\n  /** Print an error */\n  error(message: string, ...args: unknown[]): LogFunction;\n  error(message: string): LogFunction {\n    return this._getLogFunction(0, message, originalConsole.error, arguments);\n  }\n\n  /** Print a deprecation warning */\n  deprecated(oldUsage: string, newUsage: string): LogFunction {\n    return this.warn(`\\`${oldUsage}\\` is deprecated and will be removed \\\nin a later version. Use \\`${newUsage}\\` instead`);\n  }\n\n  /** Print a removal warning */\n  removed(oldUsage: string, newUsage: string): LogFunction {\n    return this.error(`\\`${oldUsage}\\` has been removed. Use \\`${newUsage}\\` instead`);\n  }\n\n  // Conditional logging\n\n  /** Log to a group */\n  probe(logLevel, message?, ...args: unknown[]): LogFunction;\n  probe(logLevel, message?): LogFunction {\n    return this._getLogFunction(logLevel, message, originalConsole.log, arguments, {\n      time: true,\n      once: true\n    });\n  }\n\n  /** Log a debug message */\n  log(logLevel, message?, ...args: unknown[]): LogFunction;\n  log(logLevel, message?): LogFunction {\n    return this._getLogFunction(logLevel, message, originalConsole.debug, arguments);\n  }\n\n  /** Log a normal message */\n  info(logLevel, message?, ...args: unknown[]): LogFunction;\n  info(logLevel, message?): LogFunction {\n    return this._getLogFunction(logLevel, message, console.info, arguments);\n  }\n\n  /** Log a normal message, but only once, no console flooding */\n  once(logLevel, message?, ...args: unknown[]): LogFunction;\n  once(logLevel, message?) {\n    return this._getLogFunction(\n      logLevel,\n      message,\n      originalConsole.debug || originalConsole.info,\n      arguments,\n      ONCE\n    );\n  }\n\n  /** Logs an object as a table */\n  table(logLevel, table?, columns?): LogFunction {\n    if (table) {\n      return this._getLogFunction(\n        logLevel,\n        table,\n        console.table || noop,\n        (columns && [columns]) as unknown as IArguments,\n        {\n          tag: getTableHeader(table)\n        }\n      );\n    }\n    return noop;\n  }\n\n  time(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.time ? console.time : console.info);\n  }\n\n  timeEnd(logLevel, message) {\n    return this._getLogFunction(\n      logLevel,\n      message,\n      console.timeEnd ? console.timeEnd : console.info\n    );\n  }\n\n  timeStamp(logLevel, message?) {\n    return this._getLogFunction(logLevel, message, console.timeStamp || noop);\n  }\n\n  group(logLevel, message, opts = {collapsed: false}) {\n    const options = normalizeArguments({logLevel, message, opts});\n    const {collapsed} = opts;\n    // @ts-expect-error\n    options.method = (collapsed ? console.groupCollapsed : console.group) || console.info;\n\n    return this._getLogFunction(options);\n  }\n\n  groupCollapsed(logLevel, message, opts = {}) {\n    return this.group(logLevel, message, Object.assign({}, opts, {collapsed: true}));\n  }\n\n  groupEnd(logLevel) {\n    return this._getLogFunction(logLevel, '', console.groupEnd || noop);\n  }\n\n  // EXPERIMENTAL\n\n  withGroup(logLevel: number, message: string, func: Function): void {\n    this.group(logLevel, message)();\n\n    try {\n      func();\n    } finally {\n      this.groupEnd(logLevel)();\n    }\n  }\n\n  trace(): void {\n    if (console.trace) {\n      console.trace();\n    }\n  }\n\n  // PRIVATE METHODS\n\n  /** Deduces log level from a variety of arguments */\n  _shouldLog(logLevel: unknown): boolean {\n    return this.isEnabled() && this.getLevel() >= normalizeLogLevel(logLevel);\n  }\n\n  _getLogFunction(\n    logLevel: unknown,\n    message?: unknown,\n    method?: Function,\n    args?: IArguments,\n    opts?: LogOptions\n  ): LogFunction {\n    if (this._shouldLog(logLevel)) {\n      // normalized opts + timings\n      opts = normalizeArguments({logLevel, message, args, opts});\n      method = method || opts.method;\n      assert(method);\n\n      opts.total = this.getTotal();\n      opts.delta = this.getDelta();\n      // reset delta timer\n      this._deltaTs = getHiResTimestamp();\n\n      const tag = opts.tag || opts.message;\n\n      if (opts.once && tag) {\n        if (!cache[tag]) {\n          cache[tag] = getHiResTimestamp();\n        } else {\n          return noop;\n        }\n      }\n\n      // TODO - Make throttling work with groups\n      // if (opts.nothrottle || !throttle(tag, this.LOG_THROTTLE_TIMEOUT)) {\n      //   return noop;\n      // }\n\n      message = decorateMessage(this.id, opts.message, opts);\n\n      // Bind console function so that it can be called after being returned\n      return method.bind(console, message, ...opts.args);\n    }\n    return noop;\n  }\n}\n\n/**\n * Get logLevel from first argument:\n * - log(logLevel, message, args) => logLevel\n * - log(message, args) => 0\n * - log({logLevel, ...}, message, args) => logLevel\n * - log({logLevel, message, args}) => logLevel\n */\nfunction normalizeLogLevel(logLevel: unknown): number {\n  if (!logLevel) {\n    return 0;\n  }\n  let resolvedLevel;\n\n  switch (typeof logLevel) {\n    case 'number':\n      resolvedLevel = logLevel;\n      break;\n\n    case 'object':\n      // Backward compatibility\n      // TODO - deprecate `priority`\n      // @ts-expect-error\n      resolvedLevel = logLevel.logLevel || logLevel.priority || 0;\n      break;\n\n    default:\n      return 0;\n  }\n  // 'log level must be a number'\n  assert(Number.isFinite(resolvedLevel) && resolvedLevel >= 0);\n\n  return resolvedLevel;\n}\n\n/**\n * \"Normalizes\" the various argument patterns into an object with known types\n * - log(logLevel, message, args) => {logLevel, message, args}\n * - log(message, args) => {logLevel: 0, message, args}\n * - log({logLevel, ...}, message, args) => {logLevel, message, args}\n * - log({logLevel, message, args}) => {logLevel, message, args}\n */\nexport function normalizeArguments(opts: {\n  logLevel;\n  message;\n  collapsed?: boolean;\n  args?: IArguments | undefined;\n  opts?;\n}): {\n  logLevel: number;\n  message: string;\n  args: any[];\n} {\n  const {logLevel, message} = opts;\n  opts.logLevel = normalizeLogLevel(logLevel);\n\n  // We use `arguments` instead of rest parameters (...args) because IE\n  // does not support the syntax. Rest parameters is transpiled to code with\n  // perf impact. Doing it here instead avoids constructing args when logging is\n  // disabled.\n  // TODO - remove when/if IE support is dropped\n  const args: any[] = opts.args ? Array.from(opts.args) : [];\n  // args should only contain arguments that appear after `message`\n  // eslint-disable-next-line no-empty\n  while (args.length && args.shift() !== message) {}\n\n  switch (typeof logLevel) {\n    case 'string':\n    case 'function':\n      if (message !== undefined) {\n        args.unshift(message);\n      }\n      opts.message = logLevel;\n      break;\n\n    case 'object':\n      Object.assign(opts, logLevel);\n      break;\n\n    default:\n  }\n\n  // Resolve functions into strings by calling them\n  if (typeof opts.message === 'function') {\n    opts.message = opts.message();\n  }\n  const messageType = typeof opts.message;\n  // 'log message must be a string' or object\n  assert(messageType === 'string' || messageType === 'object');\n\n  // original opts + normalized opts + opts arg + fixed up message\n  return Object.assign(opts, {args}, opts.opts);\n}\n\nfunction decorateMessage(id, message, opts) {\n  if (typeof message === 'string') {\n    const time = opts.time ? leftPad(formatTime(opts.total)) : '';\n    message = opts.time ? `${id}: ${time}  ${message}` : `${id}: ${message}`;\n    message = addColor(message, opts.color, opts.background);\n  }\n  return message;\n}\n\nfunction getTableHeader(table: Table): string {\n  for (const key in table) {\n    for (const title in table[key]) {\n      return title || 'untitled';\n    }\n  }\n  return 'empty';\n}\n", "// @ts-nocheck\n/* eslint-disable */\nglobalThis.probe = {};\n", "import {Log} from './log';\n\n// DEFAULT EXPORT IS A LOG INSTANCE\nexport default new Log({id: '@probe.gl/log'});\n\n// LOGGING\nexport {Log} from './log';\nexport {COLOR} from './utils/color';\n\n// UTILITIES\nexport {addColor} from './utils/color';\nexport {leftPad, rightPad} from './utils/formatters';\nexport {autobind} from './utils/autobind';\nexport {LocalStorage} from './utils/local-storage';\nexport {getHiResTimestamp} from './utils/hi-res-timestamp';\n\nimport './init';\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { Log } from '@probe.gl/log';\n// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof \"4.3.3\" !== 'undefined' ? \"4.3.3\" : 'latest';\nconst version = VERSION[0] >= '0' && VERSION[0] <= '9' ? `v${VERSION}` : '';\n// Make sure we set the global variable\nfunction createLog() {\n    const log = new Log({ id: 'loaders.gl' });\n    globalThis.loaders = globalThis.loaders || {};\n    globalThis.loaders.log = log;\n    globalThis.loaders.version = version;\n    globalThis.probe = globalThis.probe || {};\n    globalThis.probe.loaders = log;\n    return log;\n}\nexport const log = createLog();\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n *\n * @param baseOptions Can be undefined, in which case a fresh options object will be minted\n * @param newOptions\n * @returns\n */\nexport function mergeLoaderOptions(baseOptions, newOptions) {\n    return mergeOptionsRecursively(baseOptions || {}, newOptions);\n}\nfunction mergeOptionsRecursively(baseOptions, newOptions, level = 0) {\n    // Sanity check (jest test runner overwrites the console object which can lead to infinite recursion)\n    if (level > 3) {\n        return newOptions;\n    }\n    const options = { ...baseOptions };\n    for (const [key, newValue] of Object.entries(newOptions)) {\n        if (newValue && typeof newValue === 'object' && !Array.isArray(newValue)) {\n            options[key] = mergeOptionsRecursively(options[key] || {}, newOptions[key], level + 1);\n            // Object.assign(options[key] as object, newOptions[key]);\n        }\n        else {\n            options[key] = newOptions[key];\n        }\n    }\n    return options;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n/**\n * TODO - unpkg.com doesn't seem to have a `latest` specifier for alpha releases...\n * 'beta' on beta branch, 'latest' on prod branch\n */\nexport const NPM_TAG = 'latest';\nfunction getVersion() {\n    if (!globalThis._loadersgl_?.version) {\n        globalThis._loadersgl_ = globalThis._loadersgl_ || {};\n        // __VERSION__ is injected by babel-plugin-version-inline\n        if (typeof \"4.3.3\" === 'undefined') {\n            // eslint-disable-next-line\n            console.warn('loaders.gl: The __VERSION__ variable is not injected using babel plugin. Latest unstable workers would be fetched from the CDN.');\n            globalThis._loadersgl_.version = NPM_TAG;\n        }\n        else {\n            globalThis._loadersgl_.version = \"4.3.3\";\n        }\n    }\n    return globalThis._loadersgl_.version;\n}\nexport const VERSION = getVersion();\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\n/** Throws an `Error` with the optional `message` if `condition` is falsy */\nexport function assert(condition, message) {\n    if (!condition) {\n        throw new Error(message || 'loaders.gl assertion failed.');\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global' and 'is-browser';\n/* eslint-disable no-restricted-globals */\nconst globals = {\n    self: typeof self !== 'undefined' && self,\n    window: typeof window !== 'undefined' && window,\n    global: typeof global !== 'undefined' && global,\n    document: typeof document !== 'undefined' && document\n};\nconst self_ = globals.self || globals.window || globals.global || {};\nconst window_ = globals.window || globals.self || globals.global || {};\nconst global_ = globals.global || globals.self || globals.window || {};\nconst document_ = globals.document || {};\nexport { self_ as self, window_ as window, global_ as global, document_ as document };\n/** true if running in the browser, false if running in Node.js */\nexport const isBrowser = \n// @ts-ignore process.browser\ntypeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n/** true if running on a worker thread */\nexport const isWorker = typeof importScripts === 'function';\n/** true if running on a mobile device */\nexport const isMobile = typeof window !== 'undefined' && typeof window.orientation !== 'undefined';\n// Extract node major version\nconst matches = typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\n/** Version of Node.js if running under Node, otherwise 0 */\nexport const nodeVersion = (matches && parseFloat(matches[1])) || 0;\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { assert } from \"../env-utils/assert.js\";\n/**\n * Represents one Job handled by a WorkerPool or WorkerFarm\n */\nexport default class WorkerJob {\n    name;\n    workerThread;\n    isRunning = true;\n    /** Promise that resolves when Job is done */\n    result;\n    _resolve = () => { };\n    _reject = () => { };\n    constructor(jobName, workerThread) {\n        this.name = jobName;\n        this.workerThread = workerThread;\n        this.result = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n    /**\n     * Send a message to the job's worker thread\n     * @param data any data structure, ideally consisting mostly of transferrable objects\n     */\n    postMessage(type, payload) {\n        this.workerThread.postMessage({\n            source: 'loaders.gl', // Lets worker ignore unrelated messages\n            type,\n            payload\n        });\n    }\n    /**\n     * Call to resolve the `result` Promise with the supplied value\n     */\n    done(value) {\n        assert(this.isRunning);\n        this.isRunning = false;\n        this._resolve(value);\n    }\n    /**\n     * Call to reject the `result` Promise with the supplied error\n     */\n    error(error) {\n        assert(this.isRunning);\n        this.isRunning = false;\n        this._reject(error);\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/** Browser polyfill for Node.js built-in `worker_threads` module.\n * These fills are non-functional, and just intended to ensure that\n * `import 'worker_threads` doesn't break browser builds.\n * The replacement is done in package.json browser field\n */\nexport class NodeWorker {\n    terminate() { }\n}\nexport const parentPort = null;\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { assert } from \"../env-utils/assert.js\";\nconst workerURLCache = new Map();\n/**\n * Creates a loadable URL from worker source or URL\n * that can be used to create `Worker` instances.\n * Due to CORS issues it may be necessary to wrap a URL in a small importScripts\n * @param props\n * @param props.source Worker source\n * @param props.url Worker URL\n * @returns loadable url\n */\nexport function getLoadableWorkerURL(props) {\n    assert((props.source && !props.url) || (!props.source && props.url)); // Either source or url must be defined\n    let workerURL = workerURLCache.get(props.source || props.url);\n    if (!workerURL) {\n        // Differentiate worker urls from worker source code\n        if (props.url) {\n            workerURL = getLoadableWorkerURLFromURL(props.url);\n            workerURLCache.set(props.url, workerURL);\n        }\n        if (props.source) {\n            workerURL = getLoadableWorkerURLFromSource(props.source);\n            workerURLCache.set(props.source, workerURL);\n        }\n    }\n    assert(workerURL);\n    return workerURL;\n}\n/**\n * Build a loadable worker URL from worker URL\n * @param url\n * @returns loadable URL\n */\nfunction getLoadableWorkerURLFromURL(url) {\n    // A local script url, we can use it to initialize a Worker directly\n    if (!url.startsWith('http')) {\n        return url;\n    }\n    // A remote script, we need to use `importScripts` to load from different origin\n    const workerSource = buildScriptSource(url);\n    return getLoadableWorkerURLFromSource(workerSource);\n}\n/**\n * Build a loadable worker URL from worker source\n * @param workerSource\n * @returns loadable url\n */\nfunction getLoadableWorkerURLFromSource(workerSource) {\n    const blob = new Blob([workerSource], { type: 'application/javascript' });\n    return URL.createObjectURL(blob);\n}\n/**\n * Per spec, worker cannot be initialized with a script from a different origin\n * However a local worker script can still import scripts from other origins,\n * so we simply build a wrapper script.\n *\n * @param workerUrl\n * @returns source\n */\nfunction buildScriptSource(workerUrl) {\n    return `\\\ntry {\n  importScripts('${workerUrl}');\n} catch (error) {\n  console.error(error);\n  throw error;\n}`;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// NOTE - there is a copy of this function is both in core and loader-utils\n// core does not need all the utils in loader-utils, just this one.\n/**\n * Returns an array of Transferrable objects that can be used with postMessage\n * https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\n * @param object data to be sent via postMessage\n * @param recursive - not for application use\n * @param transfers - not for application use\n * @returns a transfer list that can be passed to postMessage\n */\nexport function getTransferList(object, recursive = true, transfers) {\n    // Make sure that items in the transfer list is unique\n    const transfersSet = transfers || new Set();\n    if (!object) {\n        // ignore\n    }\n    else if (isTransferable(object)) {\n        transfersSet.add(object);\n    }\n    else if (isTransferable(object.buffer)) {\n        // Typed array\n        transfersSet.add(object.buffer);\n    }\n    else if (ArrayBuffer.isView(object)) {\n        // object is a TypeArray viewing into a SharedArrayBuffer (not transferable)\n        // Do not iterate through the content in this case\n    }\n    else if (recursive && typeof object === 'object') {\n        for (const key in object) {\n            // Avoid perf hit - only go one level deep\n            getTransferList(object[key], recursive, transfersSet);\n        }\n    }\n    // If transfers is defined, is internal recursive call\n    // Otherwise it's called by the user\n    return transfers === undefined ? Array.from(transfersSet) : [];\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/Transferable\nfunction isTransferable(object) {\n    if (!object) {\n        return false;\n    }\n    if (object instanceof ArrayBuffer) {\n        return true;\n    }\n    if (typeof MessagePort !== 'undefined' && object instanceof MessagePort) {\n        return true;\n    }\n    if (typeof ImageBitmap !== 'undefined' && object instanceof ImageBitmap) {\n        return true;\n    }\n    // @ts-ignore\n    if (typeof OffscreenCanvas !== 'undefined' && object instanceof OffscreenCanvas) {\n        return true;\n    }\n    return false;\n}\n/**\n * Recursively drop non serializable values like functions and regexps.\n * @param object\n */\nexport function getTransferListForWriter(object) {\n    if (object === null) {\n        return {};\n    }\n    const clone = Object.assign({}, object);\n    Object.keys(clone).forEach((key) => {\n        // Typed Arrays and Arrays are passed with no change\n        if (typeof object[key] === 'object' &&\n            !ArrayBuffer.isView(object[key]) &&\n            !(object[key] instanceof Array)) {\n            clone[key] = getTransferListForWriter(object[key]);\n        }\n        else if (typeof clone[key] === 'function' || clone[key] instanceof RegExp) {\n            clone[key] = {};\n        }\n        else {\n            clone[key] = object[key];\n        }\n    });\n    return clone;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { NodeWorker } from \"../node/worker_threads.js\";\nimport { isBrowser } from \"../env-utils/globals.js\";\nimport { assert } from \"../env-utils/assert.js\";\nimport { getLoadableWorkerURL } from \"../worker-utils/get-loadable-worker-url.js\";\nimport { getTransferList } from \"../worker-utils/get-transfer-list.js\";\nconst NOOP = () => { };\n/**\n * Represents one worker thread\n */\nexport default class WorkerThread {\n    name;\n    source;\n    url;\n    terminated = false;\n    worker;\n    onMessage;\n    onError;\n    _loadableURL = '';\n    /** Checks if workers are supported on this platform */\n    static isSupported() {\n        return ((typeof Worker !== 'undefined' && isBrowser) ||\n            (typeof NodeWorker !== 'undefined' && !isBrowser));\n    }\n    constructor(props) {\n        const { name, source, url } = props;\n        assert(source || url); // Either source or url must be defined\n        this.name = name;\n        this.source = source;\n        this.url = url;\n        this.onMessage = NOOP;\n        this.onError = (error) => console.log(error); // eslint-disable-line\n        this.worker = isBrowser ? this._createBrowserWorker() : this._createNodeWorker();\n    }\n    /**\n     * Terminate this worker thread\n     * @note Can free up significant memory\n     */\n    destroy() {\n        this.onMessage = NOOP;\n        this.onError = NOOP;\n        this.worker.terminate(); // eslint-disable-line @typescript-eslint/no-floating-promises\n        this.terminated = true;\n    }\n    get isRunning() {\n        return Boolean(this.onMessage);\n    }\n    /**\n     * Send a message to this worker thread\n     * @param data any data structure, ideally consisting mostly of transferrable objects\n     * @param transferList If not supplied, calculated automatically by traversing data\n     */\n    postMessage(data, transferList) {\n        transferList = transferList || getTransferList(data);\n        // @ts-ignore\n        this.worker.postMessage(data, transferList);\n    }\n    // PRIVATE\n    /**\n     * Generate a standard Error from an ErrorEvent\n     * @param event\n     */\n    _getErrorFromErrorEvent(event) {\n        // Note Error object does not have the expected fields if loading failed completely\n        // https://developer.mozilla.org/en-US/docs/Web/API/Worker#Event_handlers\n        // https://developer.mozilla.org/en-US/docs/Web/API/ErrorEvent\n        let message = 'Failed to load ';\n        message += `worker ${this.name} from ${this.url}. `;\n        if (event.message) {\n            message += `${event.message} in `;\n        }\n        // const hasFilename = event.filename && !event.filename.startsWith('blob:');\n        // message += hasFilename ? event.filename : this.source.slice(0, 100);\n        if (event.lineno) {\n            message += `:${event.lineno}:${event.colno}`;\n        }\n        return new Error(message);\n    }\n    /**\n     * Creates a worker thread on the browser\n     */\n    _createBrowserWorker() {\n        this._loadableURL = getLoadableWorkerURL({ source: this.source, url: this.url });\n        const worker = new Worker(this._loadableURL, { name: this.name });\n        worker.onmessage = (event) => {\n            if (!event.data) {\n                this.onError(new Error('No data received'));\n            }\n            else {\n                this.onMessage(event.data);\n            }\n        };\n        // This callback represents an uncaught exception in the worker thread\n        worker.onerror = (error) => {\n            this.onError(this._getErrorFromErrorEvent(error));\n            this.terminated = true;\n        };\n        // TODO - not clear when this would be called, for now just log in case it happens\n        worker.onmessageerror = (event) => console.error(event); // eslint-disable-line\n        return worker;\n    }\n    /**\n     * Creates a worker thread in node.js\n     * @todo https://nodejs.org/api/async_hooks.html#async-resource-worker-pool\n     */\n    _createNodeWorker() {\n        let worker;\n        if (this.url) {\n            // Make sure relative URLs start with './'\n            const absolute = this.url.includes(':/') || this.url.startsWith('/');\n            const url = absolute ? this.url : `./${this.url}`;\n            // console.log('Starting work from', url);\n            worker = new NodeWorker(url, { eval: false });\n        }\n        else if (this.source) {\n            worker = new NodeWorker(this.source, { eval: true });\n        }\n        else {\n            throw new Error('no worker');\n        }\n        worker.on('message', (data) => {\n            // console.error('message', data);\n            this.onMessage(data);\n        });\n        worker.on('error', (error) => {\n            // console.error('error', error);\n            this.onError(error);\n        });\n        worker.on('exit', (code) => {\n            // console.error('exit', code);\n        });\n        return worker;\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isMobile, isBrowser } from \"../env-utils/globals.js\";\nimport WorkerThread from \"./worker-thread.js\";\nimport WorkerJob from \"./worker-job.js\";\n/**\n * Process multiple data messages with small pool of identical workers\n */\nexport default class WorkerPool {\n    name = 'unnamed';\n    source; // | Function;\n    url;\n    maxConcurrency = 1;\n    maxMobileConcurrency = 1;\n    onDebug = () => { };\n    reuseWorkers = true;\n    props = {};\n    jobQueue = [];\n    idleQueue = [];\n    count = 0;\n    isDestroyed = false;\n    /** Checks if workers are supported on this platform */\n    static isSupported() {\n        return WorkerThread.isSupported();\n    }\n    /**\n     * @param processor - worker function\n     * @param maxConcurrency - max count of workers\n     */\n    constructor(props) {\n        this.source = props.source;\n        this.url = props.url;\n        this.setProps(props);\n    }\n    /**\n     * Terminates all workers in the pool\n     * @note Can free up significant memory\n     */\n    destroy() {\n        // Destroy idle workers, active Workers will be destroyed on completion\n        this.idleQueue.forEach((worker) => worker.destroy());\n        this.isDestroyed = true;\n    }\n    setProps(props) {\n        this.props = { ...this.props, ...props };\n        if (props.name !== undefined) {\n            this.name = props.name;\n        }\n        if (props.maxConcurrency !== undefined) {\n            this.maxConcurrency = props.maxConcurrency;\n        }\n        if (props.maxMobileConcurrency !== undefined) {\n            this.maxMobileConcurrency = props.maxMobileConcurrency;\n        }\n        if (props.reuseWorkers !== undefined) {\n            this.reuseWorkers = props.reuseWorkers;\n        }\n        if (props.onDebug !== undefined) {\n            this.onDebug = props.onDebug;\n        }\n    }\n    async startJob(name, onMessage = (job, type, data) => job.done(data), onError = (job, error) => job.error(error)) {\n        // Promise resolves when thread starts working on this job\n        const startPromise = new Promise((onStart) => {\n            // Promise resolves when thread completes or fails working on this job\n            this.jobQueue.push({ name, onMessage, onError, onStart });\n            return this;\n        });\n        this._startQueuedJob(); // eslint-disable-line @typescript-eslint/no-floating-promises\n        return await startPromise;\n    }\n    // PRIVATE\n    /**\n     * Starts first queued job if worker is available or can be created\n     * Called when job is started and whenever a worker returns to the idleQueue\n     */\n    async _startQueuedJob() {\n        if (!this.jobQueue.length) {\n            return;\n        }\n        const workerThread = this._getAvailableWorker();\n        if (!workerThread) {\n            return;\n        }\n        // We have a worker, dequeue and start the job\n        const queuedJob = this.jobQueue.shift();\n        if (queuedJob) {\n            // Emit a debug event\n            // @ts-ignore\n            this.onDebug({\n                message: 'Starting job',\n                name: queuedJob.name,\n                workerThread,\n                backlog: this.jobQueue.length\n            });\n            // Create a worker job to let the app access thread and manage job completion\n            const job = new WorkerJob(queuedJob.name, workerThread);\n            // Set the worker thread's message handlers\n            workerThread.onMessage = (data) => queuedJob.onMessage(job, data.type, data.payload);\n            workerThread.onError = (error) => queuedJob.onError(job, error);\n            // Resolve the start promise so that the app can start sending messages to worker\n            queuedJob.onStart(job);\n            // Wait for the app to signal that the job is complete, then return worker to queue\n            try {\n                await job.result;\n            }\n            catch (error) {\n                // eslint-disable-next-line no-console\n                console.error(`Worker exception: ${error}`);\n            }\n            finally {\n                this.returnWorkerToQueue(workerThread);\n            }\n        }\n    }\n    /**\n     * Returns a worker to the idle queue\n     * Destroys the worker if\n     *  - pool is destroyed\n     *  - if this pool doesn't reuse workers\n     *  - if maxConcurrency has been lowered\n     * @param worker\n     */\n    returnWorkerToQueue(worker) {\n        const shouldDestroyWorker = \n        // Workers on Node.js prevent the process from exiting.\n        // Until we figure out how to close them before exit, we always destroy them\n        !isBrowser ||\n            // If the pool is destroyed, there is no reason to keep the worker around\n            this.isDestroyed ||\n            // If the app has disabled worker reuse, any completed workers should be destroyed\n            !this.reuseWorkers ||\n            // If concurrency has been lowered, this worker might be surplus to requirements\n            this.count > this._getMaxConcurrency();\n        if (shouldDestroyWorker) {\n            worker.destroy();\n            this.count--;\n        }\n        else {\n            this.idleQueue.push(worker);\n        }\n        if (!this.isDestroyed) {\n            this._startQueuedJob(); // eslint-disable-line @typescript-eslint/no-floating-promises\n        }\n    }\n    /**\n     * Returns idle worker or creates new worker if maxConcurrency has not been reached\n     */\n    _getAvailableWorker() {\n        // If a worker has completed and returned to the queue, it can be used\n        if (this.idleQueue.length > 0) {\n            return this.idleQueue.shift() || null;\n        }\n        // Create fresh worker if we haven't yet created the max amount of worker threads for this worker source\n        if (this.count < this._getMaxConcurrency()) {\n            this.count++;\n            const name = `${this.name.toLowerCase()} (#${this.count} of ${this.maxConcurrency})`;\n            return new WorkerThread({ name, source: this.source, url: this.url });\n        }\n        // No worker available, have to wait\n        return null;\n    }\n    _getMaxConcurrency() {\n        return isMobile ? this.maxMobileConcurrency : this.maxConcurrency;\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport WorkerPool from \"./worker-pool.js\";\nimport WorkerThread from \"./worker-thread.js\";\nconst DEFAULT_PROPS = {\n    maxConcurrency: 3,\n    maxMobileConcurrency: 1,\n    reuseWorkers: true,\n    onDebug: () => { }\n};\n/**\n * Process multiple jobs with a \"farm\" of different workers in worker pools.\n */\nexport default class WorkerFarm {\n    props;\n    workerPools = new Map();\n    // singleton\n    static _workerFarm;\n    /** Checks if workers are supported on this platform */\n    static isSupported() {\n        return WorkerThread.isSupported();\n    }\n    /** Get the singleton instance of the global worker farm */\n    static getWorkerFarm(props = {}) {\n        WorkerFarm._workerFarm = WorkerFarm._workerFarm || new WorkerFarm({});\n        WorkerFarm._workerFarm.setProps(props);\n        return WorkerFarm._workerFarm;\n    }\n    /** get global instance with WorkerFarm.getWorkerFarm() */\n    constructor(props) {\n        this.props = { ...DEFAULT_PROPS };\n        this.setProps(props);\n        /** @type Map<string, WorkerPool>} */\n        this.workerPools = new Map();\n    }\n    /**\n     * Terminate all workers in the farm\n     * @note Can free up significant memory\n     */\n    destroy() {\n        for (const workerPool of this.workerPools.values()) {\n            workerPool.destroy();\n        }\n        this.workerPools = new Map();\n    }\n    /**\n     * Set props used when initializing worker pools\n     * @param props\n     */\n    setProps(props) {\n        this.props = { ...this.props, ...props };\n        // Update worker pool props\n        for (const workerPool of this.workerPools.values()) {\n            workerPool.setProps(this._getWorkerPoolProps());\n        }\n    }\n    /**\n     * Returns a worker pool for the specified worker\n     * @param options - only used first time for a specific worker name\n     * @param options.name - the name of the worker - used to identify worker pool\n     * @param options.url -\n     * @param options.source -\n     * @example\n     *   const job = WorkerFarm.getWorkerFarm().getWorkerPool({name, url}).startJob(...);\n     */\n    getWorkerPool(options) {\n        const { name, source, url } = options;\n        let workerPool = this.workerPools.get(name);\n        if (!workerPool) {\n            workerPool = new WorkerPool({\n                name,\n                source,\n                url\n            });\n            workerPool.setProps(this._getWorkerPoolProps());\n            this.workerPools.set(name, workerPool);\n        }\n        return workerPool;\n    }\n    _getWorkerPoolProps() {\n        return {\n            maxConcurrency: this.props.maxConcurrency,\n            maxMobileConcurrency: this.props.maxMobileConcurrency,\n            reuseWorkers: this.props.reuseWorkers,\n            onDebug: this.props.onDebug\n        };\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { assert } from \"../env-utils/assert.js\";\nimport { isBrowser } from \"../env-utils/globals.js\";\nimport { VERSION, NPM_TAG } from \"../env-utils/version.js\";\n/**\n * Gets worker object's name (for debugging in Chrome thread inspector window)\n */\nexport function getWorkerName(worker) {\n    const warning = worker.version !== VERSION ? ` (worker-utils@${VERSION})` : '';\n    return `${worker.name}@${worker.version}${warning}`;\n}\n/**\n * Generate a worker URL based on worker object and options\n * @returns A URL to one of the following:\n * - a published worker on unpkg CDN\n * - a local test worker\n * - a URL provided by the user in options\n */\nexport function getWorkerURL(worker, options = {}) {\n    const workerOptions = options[worker.id] || {};\n    const workerFile = isBrowser ? `${worker.id}-worker.js` : `${worker.id}-worker-node.js`;\n    let url = workerOptions.workerUrl;\n    // HACK: Allow for non-nested workerUrl for the CompressionWorker.\n    // For the compression worker, workerOptions is currently not nested correctly. For most loaders,\n    // you'd have options within an object, i.e. `{mvt: {coordinates: ...}}` but the CompressionWorker\n    // puts options at the top level, not within a `compression` key (its `id`). For this reason, the\n    // above `workerOptions` will always be a string (i.e. `'gzip'`) for the CompressionWorker. To not\n    // break backwards compatibility, we allow the CompressionWorker to have options at the top level.\n    if (!url && worker.id === 'compression') {\n        url = options.workerUrl;\n    }\n    // If URL is test, generate local loaders.gl url\n    // @ts-ignore _workerType\n    if (options._workerType === 'test') {\n        if (isBrowser) {\n            url = `modules/${worker.module}/dist/${workerFile}`;\n        }\n        else {\n            // In the test environment the ts-node loader requires TypeScript code\n            url = `modules/${worker.module}/src/workers/${worker.id}-worker-node.ts`;\n        }\n    }\n    // If url override is not provided, generate a URL to published version on npm CDN unpkg.com\n    if (!url) {\n        // GENERATE\n        let version = worker.version;\n        // On master we need to load npm alpha releases published with the `beta` tag\n        if (version === 'latest') {\n            // throw new Error('latest worker version specified');\n            version = NPM_TAG;\n        }\n        const versionTag = version ? `@${version}` : '';\n        url = `https://unpkg.com/@loaders.gl/${worker.module}${versionTag}/dist/${workerFile}`;\n    }\n    assert(url);\n    // Allow user to override location\n    return url;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { assert } from \"../env-utils/assert.js\";\nimport { VERSION } from \"../env-utils/version.js\";\n/**\n * Check if worker is compatible with this library version\n * @param worker\n * @param libVersion\n * @returns `true` if the two versions are compatible\n */\nexport function validateWorkerVersion(worker, coreVersion = VERSION) {\n    assert(worker, 'no worker provided');\n    const workerVersion = worker.version;\n    if (!coreVersion || !workerVersion) {\n        return false;\n    }\n    // TODO enable when fix the __version__ injection\n    // const coreVersions = parseVersion(coreVersion);\n    // const workerVersions = parseVersion(workerVersion);\n    // assert(\n    //   coreVersion.major === workerVersion.major && coreVersion.minor <= workerVersion.minor,\n    //   `worker: ${worker.name} is not compatible. ${coreVersion.major}.${\n    //     coreVersion.minor\n    //   }+ is required.`\n    // );\n    return true;\n}\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction parseVersion(version) {\n    const parts = version.split('.').map(Number);\n    return { major: parts[0], minor: parts[1] };\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* eslint-disable no-console */\n// Avoid using named imports for Node builtins to help with \"empty\" resolution\n// for bundlers targeting browser environments. Access imports & types\n// through the `ChildProcess` object (e.g. `ChildProcess.spawn`, `ChildProcess.ChildProcess`).\nimport * as ChildProcess from 'child_process';\nimport { getAvailablePort } from \"./process-utils.js\";\nconst DEFAULT_PROPS = {\n    command: '',\n    arguments: [],\n    port: 5000,\n    autoPort: true,\n    wait: 2000,\n    onSuccess: (processProxy) => {\n        console.log(`Started ${processProxy.props.command}`);\n    }\n};\n/**\n * Manager for a Node.js child process\n * Prepares arguments, starts, stops and tracks output\n */\nexport default class ChildProcessProxy {\n    id;\n    props = { ...DEFAULT_PROPS };\n    childProcess = null;\n    port = 0;\n    successTimer; // NodeJS.Timeout;\n    // constructor(props?: {id?: string});\n    constructor({ id = 'browser-driver' } = {}) {\n        this.id = id;\n    }\n    /** Starts a child process with the provided props */\n    async start(props) {\n        props = { ...DEFAULT_PROPS, ...props };\n        this.props = props;\n        const args = [...props.arguments];\n        // If portArg is set, we can look up an available port\n        this.port = Number(props.port);\n        if (props.portArg) {\n            if (props.autoPort) {\n                this.port = await getAvailablePort(props.port);\n            }\n            args.push(props.portArg, String(this.port));\n        }\n        return await new Promise((resolve, reject) => {\n            try {\n                this._setTimeout(() => {\n                    if (props.onSuccess) {\n                        props.onSuccess(this);\n                    }\n                    resolve({});\n                });\n                console.log(`Spawning ${props.command} ${props.arguments.join(' ')}`);\n                const childProcess = ChildProcess.spawn(props.command, args, props.spawn);\n                this.childProcess = childProcess;\n                childProcess.stdout.on('data', (data) => {\n                    console.log(data.toString());\n                });\n                childProcess.stderr.on('data', (data) => {\n                    console.log(`Child process wrote to stderr: \"${data}\".`);\n                    if (!props.ignoreStderr) {\n                        this._clearTimeout();\n                        reject(new Error(data));\n                    }\n                });\n                childProcess.on('error', (error) => {\n                    console.log(`Child process errored with ${error}`);\n                    this._clearTimeout();\n                    reject(error);\n                });\n                childProcess.on('close', (code) => {\n                    console.log(`Child process exited with ${code}`);\n                    this.childProcess = null;\n                    this._clearTimeout();\n                    resolve({});\n                });\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n    }\n    /** Stops a running child process */\n    async stop() {\n        if (this.childProcess) {\n            this.childProcess.kill();\n            this.childProcess = null;\n        }\n    }\n    /** Exits this process */\n    async exit(statusCode = 0) {\n        try {\n            await this.stop();\n            // eslint-disable-next-line no-process-exit\n            process.exit(statusCode);\n        }\n        catch (error) {\n            console.error(error.message || error);\n            // eslint-disable-next-line no-process-exit\n            process.exit(1);\n        }\n    }\n    _setTimeout(callback) {\n        if (Number(this.props.wait) > 0) {\n            this.successTimer = setTimeout(callback, this.props.wait);\n        }\n    }\n    _clearTimeout() {\n        if (this.successTimer) {\n            clearTimeout(this.successTimer);\n        }\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport ChildProcess from 'child_process';\n// Get an available port\n// Works on Unix systems\nexport function getAvailablePort(defaultPort = 3000) {\n    return new Promise((resolve) => {\n        // Get a list of all ports in use\n        ChildProcess.exec('lsof -i -P -n | grep LISTEN', (error, stdout) => {\n            if (error) {\n                // likely no permission, e.g. CI\n                resolve(defaultPort);\n                return;\n            }\n            const portsInUse = [];\n            const regex = /:(\\d+) \\(LISTEN\\)/;\n            stdout.split('\\n').forEach((line) => {\n                const match = regex.exec(line);\n                if (match) {\n                    portsInUse.push(Number(match[1]));\n                }\n            });\n            let port = defaultPort;\n            while (portsInUse.includes(port)) {\n                port++;\n            }\n            resolve(port);\n        });\n    });\n}\n", "import { isBrowser, WorkerFarm, getWorkerURL } from '@loaders.gl/worker-utils';\n/**\n * Determines if a loader can parse with worker\n * @param loader\n * @param options\n */\nexport function canParseWithWorker(loader, options) {\n    if (!WorkerFarm.isSupported()) {\n        return false;\n    }\n    // Node workers are still experimental\n    if (!isBrowser && !options?._nodeWorkers) {\n        return false;\n    }\n    return loader.worker && options?.worker;\n}\n/**\n * this function expects that the worker function sends certain messages,\n * this can be automated if the worker is wrapper by a call to createLoaderWorker in @loaders.gl/loader-utils.\n */\nexport async function parseWithWorker(loader, data, options, context, parseOnMainThread) {\n    const name = loader.id; // TODO\n    const url = getWorkerURL(loader, options);\n    const workerFarm = WorkerFarm.getWorkerFarm(options);\n    const workerPool = workerFarm.getWorkerPool({ name, url });\n    // options.log object contains functions which cannot be transferred\n    // context.fetch & context.parse functions cannot be transferred\n    // TODO - decide how to handle logging on workers\n    options = JSON.parse(JSON.stringify(options));\n    context = JSON.parse(JSON.stringify(context || {}));\n    const job = await workerPool.startJob('process-on-worker', \n    // @ts-expect-error\n    onMessage.bind(null, parseOnMainThread) // eslint-disable-line @typescript-eslint/no-misused-promises\n    );\n    job.postMessage('process', {\n        // @ts-ignore\n        input: data,\n        options,\n        context\n    });\n    const result = await job.result;\n    // TODO - what is going on here?\n    return await result.result;\n}\n/**\n * Handle worker's responses to the main thread\n * @param job\n * @param type\n * @param payload\n */\nasync function onMessage(parseOnMainThread, job, type, payload) {\n    switch (type) {\n        case 'done':\n            job.done(payload);\n            break;\n        case 'error':\n            job.error(new Error(payload.error));\n            break;\n        case 'process':\n            // Worker is asking for main thread to parseO\n            const { id, input, options } = payload;\n            try {\n                const result = await parseOnMainThread(input, options);\n                job.postMessage('done', { id, result });\n            }\n            catch (error) {\n                const message = error instanceof Error ? error.message : 'unknown error';\n                job.postMessage('error', { id, error: message });\n            }\n            break;\n        default:\n            // eslint-disable-next-line\n            console.warn(`parse-with-worker unknown message ${type}`);\n    }\n}\n", "/**\n * compare two binary arrays for equality\n * @param a\n * @param b\n * @param byteLength\n */\nexport function compareArrayBuffers(arrayBuffer1, arrayBuffer2, byteLength) {\n    byteLength = byteLength || arrayBuffer1.byteLength;\n    if (arrayBuffer1.byteLength < byteLength || arrayBuffer2.byteLength < byteLength) {\n        return false;\n    }\n    const array1 = new Uint8Array(arrayBuffer1);\n    const array2 = new Uint8Array(arrayBuffer2);\n    for (let i = 0; i < array1.length; ++i) {\n        if (array1[i] !== array2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Concatenate a sequence of ArrayBuffers from arguments\n * @return A concatenated ArrayBuffer\n */\nexport function concatenateArrayBuffers(...sources) {\n    return concatenateArrayBuffersFromArray(sources);\n}\n/**\n * Concatenate a sequence of ArrayBuffers from array\n * @return A concatenated ArrayBuffer\n */\nexport function concatenateArrayBuffersFromArray(sources) {\n    // Make sure all inputs are wrapped in typed arrays\n    const sourceArrays = sources.map((source2) => source2 instanceof ArrayBuffer ? new Uint8Array(source2) : source2);\n    // Get length of all inputs\n    const byteLength = sourceArrays.reduce((length, typedArray) => length + typedArray.byteLength, 0);\n    // Allocate array with space for all inputs\n    const result = new Uint8Array(byteLength);\n    // Copy the subarrays\n    let offset = 0;\n    for (const sourceArray of sourceArrays) {\n        result.set(sourceArray, offset);\n        offset += sourceArray.byteLength;\n    }\n    // We work with ArrayBuffers, discard the typed array wrapper\n    return result.buffer;\n}\n/**\n * Concatenate arbitrary count of typed arrays\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays\n * @param - list of arrays. All arrays should be the same type\n * @return A concatenated TypedArray\n */\nexport function concatenateTypedArrays(...typedArrays) {\n    // @ts-ignore\n    const arrays = typedArrays;\n    // @ts-ignore\n    const TypedArrayConstructor = (arrays && arrays.length > 1 && arrays[0].constructor) || null;\n    if (!TypedArrayConstructor) {\n        throw new Error('\"concatenateTypedArrays\" - incorrect quantity of arguments or arguments have incompatible data types');\n    }\n    const sumLength = arrays.reduce((acc, value) => acc + value.length, 0);\n    // @ts-ignore typescript does not like dynamic constructors\n    const result = new TypedArrayConstructor(sumLength);\n    let offset = 0;\n    for (const array of arrays) {\n        result.set(array, offset);\n        offset += array.length;\n    }\n    return result;\n}\n/**\n * Copy a view of an ArrayBuffer into new ArrayBuffer with byteOffset = 0\n * @param arrayBuffer\n * @param byteOffset\n * @param byteLength\n */\nexport function sliceArrayBuffer(arrayBuffer, byteOffset, byteLength) {\n    const subArray = byteLength !== undefined\n        ? new Uint8Array(arrayBuffer).subarray(byteOffset, byteOffset + byteLength)\n        : new Uint8Array(arrayBuffer).subarray(byteOffset);\n    const arrayCopy = new Uint8Array(subArray);\n    return arrayCopy.buffer;\n}\n", "import { concatenateArrayBuffers } from \"../binary-utils/array-buffer-utils.js\";\n// GENERAL UTILITIES\n/**\n * Iterate over async iterator, without resetting iterator if end is not reached\n * - forEach intentionally does not reset iterator if exiting loop prematurely\n *   so that iteration can continue in a second loop\n * - It is recommended to use a standard for-await as last loop to ensure\n *   iterator gets properly reset\n *\n * TODO - optimize using sync iteration if argument is an Iterable?\n *\n * @param iterator\n * @param visitor\n */\nexport async function forEach(iterator, visitor) {\n    // eslint-disable-next-line\n    while (true) {\n        const { done, value } = await iterator.next();\n        if (done) {\n            iterator.return();\n            return;\n        }\n        const cancel = visitor(value);\n        if (cancel) {\n            return;\n        }\n    }\n}\n// Breaking big data into iterable chunks, concatenating iterable chunks into big data objects\n/**\n * Concatenates all data chunks yielded by an (async) iterator\n * This function can e.g. be used to enable atomic parsers to work on (async) iterator inputs\n */\nexport async function concatenateArrayBuffersAsync(asyncIterator) {\n    const arrayBuffers = [];\n    for await (const chunk of asyncIterator) {\n        arrayBuffers.push(chunk);\n    }\n    return concatenateArrayBuffers(...arrayBuffers);\n}\nexport async function concatenateStringsAsync(asyncIterator) {\n    const strings = [];\n    for await (const chunk of asyncIterator) {\n        strings.push(chunk);\n    }\n    return strings.join('');\n}\n", "// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default function getHiResTimestamp(): number {\n  let timestamp;\n  // Get best timer available.\n  if (typeof window !== 'undefined' && window.performance) {\n    timestamp = window.performance.now();\n  } else if (typeof process !== 'undefined' && process.hrtime) {\n    const timeParts = process.hrtime();\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n\n  return timestamp;\n}\n", "import getHiResTimestamp from '../utils/hi-res-timestamp';\n\nexport default class Stat {\n  readonly name: string;\n  readonly type: string | undefined;\n  sampleSize: number = 1;\n  time: number = 0;\n  count: number = 0;\n  samples: number = 0;\n  lastTiming: number = 0;\n  lastSampleTime: number = 0;\n  lastSampleCount: number = 0;\n\n  _count: number = 0;\n  _time: number = 0;\n  _samples: number = 0;\n  _startTime: number = 0;\n  _timerPending: boolean = false;\n\n  constructor(name: string, type?: string) {\n    this.name = name;\n    this.type = type;\n    this.reset();\n  }\n\n  reset(): this {\n    this.time = 0;\n    this.count = 0;\n    this.samples = 0;\n    this.lastTiming = 0;\n    this.lastSampleTime = 0;\n    this.lastSampleCount = 0;\n    this._count = 0;\n    this._time = 0;\n    this._samples = 0;\n    this._startTime = 0;\n    this._timerPending = false;\n\n    return this;\n  }\n\n  setSampleSize(samples: number): this {\n    this.sampleSize = samples;\n    return this;\n  }\n\n  /** Call to increment count (+1) */\n  incrementCount(): this {\n    this.addCount(1);\n\n    return this;\n  }\n\n  /** Call to decrement count (-1) */\n  decrementCount(): this {\n    this.subtractCount(1);\n\n    return this;\n  }\n\n  /** Increase count */\n  addCount(value: number): this {\n    this._count += value;\n    this._samples++;\n    this._checkSampling();\n\n    return this;\n  }\n\n  /** Decrease count */\n  subtractCount(value: number): this {\n    this._count -= value;\n    this._samples++;\n    this._checkSampling();\n\n    return this;\n  }\n\n  /** Add an arbitrary timing and bump the count */\n  addTime(time: number): this {\n    this._time += time;\n    this.lastTiming = time;\n    this._samples++;\n    this._checkSampling();\n\n    return this;\n  }\n\n  /** Start a timer */\n  timeStart(): this {\n    this._startTime = getHiResTimestamp();\n    this._timerPending = true;\n\n    return this;\n  }\n\n  /** End a timer. Adds to time and bumps the timing count. */\n  timeEnd(): this {\n    if (!this._timerPending) {\n      return this;\n    }\n    this.addTime(getHiResTimestamp() - this._startTime);\n    this._timerPending = false;\n    this._checkSampling();\n\n    return this;\n  }\n\n  getSampleAverageCount(): number {\n    return this.sampleSize > 0 ? this.lastSampleCount / this.sampleSize : 0;\n  }\n\n  /** Calculate average time / count for the previous window */\n  getSampleAverageTime(): number {\n    return this.sampleSize > 0 ? this.lastSampleTime / this.sampleSize : 0;\n  }\n\n  /** Calculate counts per second for the previous window */\n  getSampleHz(): number {\n    return this.lastSampleTime > 0 ? this.sampleSize / (this.lastSampleTime / 1000) : 0;\n  }\n\n  getAverageCount(): number {\n    return this.samples > 0 ? this.count / this.samples : 0;\n  }\n\n  /** Calculate average time / count */\n  getAverageTime(): number {\n    return this.samples > 0 ? this.time / this.samples : 0;\n  }\n\n  /** Calculate counts per second */\n  getHz(): number {\n    return this.time > 0 ? this.samples / (this.time / 1000) : 0;\n  }\n\n  _checkSampling(): void {\n    if (this._samples === this.sampleSize) {\n      this.lastSampleTime = this._time;\n      this.lastSampleCount = this._count;\n      this.count += this._count;\n      this.time += this._time;\n      this.samples += this._samples;\n      this._time = 0;\n      this._count = 0;\n      this._samples = 0;\n    }\n  }\n}\n", "// probe.gl, MIT license\n\nimport Stat from './stat';\n\ntype TableEntry = {\n  time: number;\n  count: number;\n  average: number;\n  hz: number;\n};\n\n/** A \"bag\" of `Stat` objects, can be visualized using `StatsWidget` */\nexport default class Stats {\n  readonly id: string;\n  readonly stats: Record<string, Stat> = {};\n\n  constructor(options: {id: string; stats?: Stats | Stat[] | {name: string; type?: string}[]}) {\n    this.id = options.id;\n    this.stats = {};\n\n    this._initializeStats(options.stats);\n\n    Object.seal(this);\n  }\n\n  /** Acquire a stat. Create if it doesn't exist. */\n  get(name: string, type: string = 'count'): Stat {\n    return this._getOrCreate({name, type});\n  }\n\n  get size(): number {\n    return Object.keys(this.stats).length;\n  }\n\n  /** Reset all stats */\n  reset(): this {\n    for (const stat of Object.values(this.stats)) {\n      stat.reset();\n    }\n\n    return this;\n  }\n\n  forEach(fn: (stat: Stat) => void): void {\n    for (const stat of Object.values(this.stats)) {\n      fn(stat);\n    }\n  }\n\n  getTable(): Record<string, TableEntry> {\n    const table: Record<string, TableEntry> = {};\n    this.forEach(stat => {\n      table[stat.name] = {\n        time: stat.time || 0,\n        count: stat.count || 0,\n        average: stat.getAverageTime() || 0,\n        hz: stat.getHz() || 0\n      };\n    });\n\n    return table;\n  }\n\n  _initializeStats(stats: Stats | Stat[] | {name: string; type?: string}[] = []): void {\n    stats.forEach(stat => this._getOrCreate(stat));\n  }\n\n  _getOrCreate(stat: Stat | {name: string, type?: string}): Stat {\n    const {name, type} = stat;\n    let result = this.stats[name];\n    if (!result) {\n      if (stat instanceof Stat) {\n        result = stat;\n      } else {\n        result = new Stat(name, type);\n      }\n      this.stats[name] = result;\n    }\n    return result;\n  }\n}\n", "// Simple file alias mechanisms for tests.\nlet pathPrefix = '';\nconst fileAliases = {};\n/*\n * Set a relative path prefix\n */\nexport function setPathPrefix(prefix) {\n    pathPrefix = prefix;\n}\n/*\n * Get the relative path prefix\n */\nexport function getPathPrefix() {\n    return pathPrefix;\n}\n/**\n *\n * @param aliases\n *\n * Note: addAliases are an experimental export, they are only for testing of loaders.gl loaders\n * not intended as a generic aliasing mechanism\n */\nexport function addAliases(aliases) {\n    Object.assign(fileAliases, aliases);\n}\n/**\n * Resolves aliases and adds path-prefix to paths\n */\nexport function resolvePath(filename) {\n    for (const alias in fileAliases) {\n        if (filename.startsWith(alias)) {\n            const replacement = fileAliases[alias];\n            filename = filename.replace(alias, replacement);\n        }\n    }\n    if (!filename.startsWith('http://') && !filename.startsWith('https://')) {\n        filename = `${pathPrefix}${filename}`;\n    }\n    return filename;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Isolates Buffer references to ensure they are only bundled under Node.js (avoids big webpack polyfill)\n// this file is selected by the package.json \"browser\" field).\n/**\n * Convert Buffer to ArrayBuffer\n * Converts Node.js `Buffer` to `ArrayBuffer` (without triggering bundler to include Buffer polyfill on browser)\n * @todo better data type\n */\nexport function toArrayBuffer(buffer) {\n    return buffer;\n}\n/**\n * Convert (copy) ArrayBuffer to Buffer\n */\nexport function toBuffer(binaryData) {\n    throw new Error('Buffer not supported in browser');\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport * as node from \"../node/buffer.js\";\n/**\n * Check for Node.js `Buffer` (without triggering bundler to include Buffer polyfill on browser)\n */\nexport function isBuffer(value) {\n    return value && typeof value === 'object' && value.isBuffer;\n}\n/**\n * Converts to Node.js `Buffer` (without triggering bundler to include Buffer polyfill on browser)\n * @todo better data type\n */\nexport function toBuffer(data) {\n    return node.toBuffer ? node.toBuffer(data) : data;\n}\n/**\n * Convert an object to an array buffer\n */\nexport function toArrayBuffer(data) {\n    // Note: Should be called first, Buffers can trigger other detections below\n    if (isBuffer(data)) {\n        return node.toArrayBuffer(data);\n    }\n    if (data instanceof ArrayBuffer) {\n        return data;\n    }\n    // Careful - Node Buffers look like Uint8Arrays (keep after isBuffer)\n    if (ArrayBuffer.isView(data)) {\n        if (data.byteOffset === 0 && data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        return data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n    }\n    if (typeof data === 'string') {\n        const text = data;\n        const uint8Array = new TextEncoder().encode(text);\n        return uint8Array.buffer;\n    }\n    // HACK to support Blob polyfill\n    if (data && typeof data === 'object' && data._toArrayBuffer) {\n        return data._toArrayBuffer();\n    }\n    throw new Error('toArrayBuffer');\n}\n", "// Beginning of a minimal implementation of the Node.js path API, that doesn't pull in big polyfills.\nimport { getCWD } from \"./get-cwd.js\";\n/**\n * Replacement for Node.js path.filename\n * @param url\n */\nexport function filename(url) {\n    const slashIndex = url ? url.lastIndexOf('/') : -1;\n    return slashIndex >= 0 ? url.substr(slashIndex + 1) : '';\n}\n/**\n * Replacement for Node.js path.dirname\n * @param url\n */\nexport function dirname(url) {\n    const slashIndex = url ? url.lastIndexOf('/') : -1;\n    return slashIndex >= 0 ? url.substr(0, slashIndex) : '';\n}\n/**\n * Replacement for Node.js path.join\n * @param parts\n */\nexport function join(...parts) {\n    const separator = '/';\n    parts = parts.map((part, index) => {\n        if (index) {\n            part = part.replace(new RegExp(`^${separator}`), '');\n        }\n        if (index !== parts.length - 1) {\n            part = part.replace(new RegExp(`${separator}$`), '');\n        }\n        return part;\n    });\n    return parts.join(separator);\n}\n/* eslint-disable no-continue */\n/**\n * https://nodejs.org/api/path.html#path_path_resolve_paths\n * @param paths A sequence of paths or path segments.\n * @return resolved path\n * Forked from BTOdell/path-resolve under MIT license\n * @see https://github.com/BTOdell/path-resolve/blob/master/LICENSE\n */\nexport function resolve(...components) {\n    const paths = [];\n    for (let _i = 0; _i < components.length; _i++) {\n        paths[_i] = components[_i];\n    }\n    let resolvedPath = '';\n    let resolvedAbsolute = false;\n    let cwd;\n    for (let i = paths.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n        let path;\n        if (i >= 0) {\n            path = paths[i];\n        }\n        else {\n            if (cwd === undefined) {\n                cwd = getCWD();\n            }\n            path = cwd;\n        }\n        // Skip empty entries\n        if (path.length === 0) {\n            continue;\n        }\n        resolvedPath = `${path}/${resolvedPath}`;\n        resolvedAbsolute = path.charCodeAt(0) === SLASH;\n    }\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n    // Normalize the path (removes leading slash)\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n    if (resolvedAbsolute) {\n        return `/${resolvedPath}`;\n    }\n    else if (resolvedPath.length > 0) {\n        return resolvedPath;\n    }\n    return '.';\n}\nconst SLASH = 47;\nconst DOT = 46;\n/**\n * Resolves . and .. elements in a path with directory names\n * Forked from BTOdell/path-resolve under MIT license\n * @see https://github.com/BTOdell/path-resolve/blob/master/LICENSE\n */\n/* eslint-disable max-depth */\n// eslint-disable-next-line complexity, max-statements\nfunction normalizeStringPosix(path, allowAboveRoot) {\n    let res = '';\n    let lastSlash = -1;\n    let dots = 0;\n    let code;\n    let isAboveRoot = false;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (code === SLASH) {\n            break;\n        }\n        else {\n            code = SLASH;\n        }\n        if (code === SLASH) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (lastSlash !== i - 1 && dots === 2) {\n                if (res.length < 2 ||\n                    !isAboveRoot ||\n                    res.charCodeAt(res.length - 1) !== DOT ||\n                    res.charCodeAt(res.length - 2) !== DOT) {\n                    if (res.length > 2) {\n                        const start = res.length - 1;\n                        let j = start;\n                        for (; j >= 0; --j) {\n                            if (res.charCodeAt(j) === SLASH) {\n                                break;\n                            }\n                        }\n                        if (j !== start) {\n                            res = j === -1 ? '' : res.slice(0, j);\n                            lastSlash = i;\n                            dots = 0;\n                            isAboveRoot = false;\n                            continue;\n                        }\n                    }\n                    else if (res.length === 2 || res.length === 1) {\n                        res = '';\n                        lastSlash = i;\n                        dots = 0;\n                        isAboveRoot = false;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    if (res.length > 0) {\n                        res += '/..';\n                    }\n                    else {\n                        res = '..';\n                    }\n                    isAboveRoot = true;\n                }\n            }\n            else {\n                const slice = path.slice(lastSlash + 1, i);\n                if (res.length > 0) {\n                    res += `/${slice}`;\n                }\n                else {\n                    res = slice;\n                }\n                isAboveRoot = false;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\n", "// loaders.gl MIT license\nexport function getCWD() {\n    if (typeof process !== 'undefined' && typeof process.cwd !== 'undefined') {\n        return process.cwd();\n    }\n    const pathname = window.location?.pathname;\n    return pathname?.slice(0, pathname.lastIndexOf('/') + 1) || '';\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isBrowser } from \"../env-utils/globals.js\";\nconst NOT_IMPLEMENTED = new Error('Not implemented');\n/** This class is a facade that gets replaced with an actual NodeFile instance  */\nexport class NodeFileFacade {\n    handle;\n    size = 0;\n    bigsize = 0n;\n    url = '';\n    constructor(url, flags, mode) {\n        // Return the actual implementation instance\n        if (globalThis.loaders?.NodeFile) {\n            return new globalThis.loaders.NodeFile(url, flags, mode);\n        }\n        if (isBrowser) {\n            throw new Error('Can\\'t instantiate NodeFile in browser.');\n        }\n        throw new Error('Can\\'t instantiate NodeFile. Make sure to import @loaders.gl/polyfills first.');\n    }\n    /** Read data */\n    async read(start, length) {\n        throw NOT_IMPLEMENTED;\n    }\n    /** Write to file. The number of bytes written will be returned */\n    async write(arrayBuffer, offset, length) {\n        throw NOT_IMPLEMENTED;\n    }\n    /** Get information about file */\n    async stat() {\n        throw NOT_IMPLEMENTED;\n    }\n    /** Truncates the file descriptor. Only available on NodeFile. */\n    async truncate(length) {\n        throw NOT_IMPLEMENTED;\n    }\n    /** Append data to a file. Only available on NodeFile. */\n    async append(data) {\n        throw NOT_IMPLEMENTED;\n    }\n    /** Close the file */\n    async close() { }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isBrowser } from \"../env-utils/globals.js\";\nconst NOT_IMPLEMENTED = new Error('Not implemented');\n/**\n * FileSystem pass-through for Node.js\n * Compatible with BrowserFileSystem.\n * @note Dummy implementation, not used (constructor returns a real NodeFileSystem instance)\n * @param options\n */\nexport class NodeFileSystemFacade {\n    // implements FileSystem\n    constructor(options) {\n        if (globalThis.loaders?.NodeFileSystem) {\n            return new globalThis.loaders.NodeFileSystem(options);\n        }\n        if (isBrowser) {\n            throw new Error('Can\\'t instantiate NodeFileSystem in browser.');\n        }\n        throw new Error('Can\\'t instantiate NodeFileSystem. Make sure to import @loaders.gl/polyfills first.');\n    }\n    // DUMMY IMPLEMENTATION, not used (constructor returns a real NodeFileSystem instance)\n    // implements RandomAccessReadFileSystem\n    readable = true;\n    writable = true;\n    async openReadableFile(path, flags) {\n        throw NOT_IMPLEMENTED;\n    }\n    // implements RandomAccessWriteFileSystem\n    async openWritableFile(path, flags, mode) {\n        throw NOT_IMPLEMENTED;\n    }\n    // Implements file system\n    async readdir(dirname = '.', options) {\n        throw NOT_IMPLEMENTED;\n    }\n    async stat(path, options) {\n        throw NOT_IMPLEMENTED;\n    }\n    async unlink(path) {\n        throw NOT_IMPLEMENTED;\n    }\n    async fetch(path, options) {\n        throw NOT_IMPLEMENTED;\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst isBoolean = (x) => typeof x === 'boolean';\nconst isFunction = (x) => typeof x === 'function';\nexport const isObject = (x) => x !== null && typeof x === 'object';\nexport const isPureObject = (x) => isObject(x) && x.constructor === {}.constructor;\nexport const isPromise = (x) => isObject(x) && isFunction(x.then);\nexport const isIterable = (x) => Boolean(x) && typeof x[Symbol.iterator] === 'function';\nexport const isAsyncIterable = (x) => x && typeof x[Symbol.asyncIterator] === 'function';\nexport const isIterator = (x) => x && isFunction(x.next);\nexport const isResponse = (x) => (typeof Response !== 'undefined' && x instanceof Response) ||\n    (x && x.arrayBuffer && x.text && x.json);\nexport const isFile = (x) => typeof File !== 'undefined' && x instanceof File;\nexport const isBlob = (x) => typeof Blob !== 'undefined' && x instanceof Blob;\n/** Check for Node.js `Buffer` without triggering bundler to include buffer polyfill */\nexport const isBuffer = (x) => x && typeof x === 'object' && x.isBuffer;\nexport const isWritableDOMStream = (x) => isObject(x) && isFunction(x.abort) && isFunction(x.getWriter);\nexport const isReadableDOMStream = (x) => (typeof ReadableStream !== 'undefined' && x instanceof ReadableStream) ||\n    (isObject(x) && isFunction(x.tee) && isFunction(x.cancel) && isFunction(x.getReader));\n// Not implemented in Firefox: && isFunction(x.pipeTo)\nexport const isWritableNodeStream = (x) => isObject(x) && isFunction(x.end) && isFunction(x.write) && isBoolean(x.writable);\nexport const isReadableNodeStream = (x) => isObject(x) && isFunction(x.read) && isFunction(x.pipe) && isBoolean(x.readable);\nexport const isReadableStream = (x) => isReadableDOMStream(x) || isReadableNodeStream(x);\nexport const isWritableStream = (x) => isWritableDOMStream(x) || isWritableNodeStream(x);\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nexport class FetchError extends Error {\n    constructor(message, info) {\n        super(message);\n        this.reason = info.reason;\n        this.url = info.url;\n        this.response = info.response;\n    }\n    /** A best effort reason for why the fetch failed */\n    reason;\n    /** The URL that failed to load. Empty string if not available. */\n    url;\n    /** The Response object, if any. */\n    response;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// TODO - build/integrate proper MIME type parsing\n// https://mimesniff.spec.whatwg.org/\nconst DATA_URL_PATTERN = /^data:([-\\w.]+\\/[-\\w.+]+)(;|,)/;\nconst MIME_TYPE_PATTERN = /^([-\\w.]+\\/[-\\w.+]+)/;\n/**\n * Compare two MIME types, case insensitively etc.\n * @param mimeType1\n * @param mimeType2\n * @returns true if the MIME types are equivalent\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#structure_of_a_mime_type\n */\nexport function compareMIMETypes(mimeType1, mimeType2) {\n    if (mimeType1.toLowerCase() === mimeType2.toLowerCase()) {\n        return true;\n    }\n    return false;\n}\n/**\n * Remove extra data like `charset` from MIME types\n * @param mimeString\n * @returns A clean MIME type, or an empty string\n *\n * @todo - handle more advanced MIMETYpes, multiple types\n * @todo - extract charset etc\n */\nexport function parseMIMEType(mimeString) {\n    // If resource is a data url, extract any embedded mime type\n    const matches = MIME_TYPE_PATTERN.exec(mimeString);\n    if (matches) {\n        return matches[1];\n    }\n    return mimeString;\n}\n/**\n * Extract MIME type from data URL\n *\n * @param mimeString\n * @returns A clean MIME type, or an empty string\n *\n * @todo - handle more advanced MIMETYpes, multiple types\n * @todo - extract charset etc\n */\nexport function parseMIMETypeFromURL(url) {\n    // If resource is a data URL, extract any embedded mime type\n    const matches = DATA_URL_PATTERN.exec(url);\n    if (matches) {\n        return matches[1];\n    }\n    return '';\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst QUERY_STRING_PATTERN = /\\?.*/;\nexport function extractQueryString(url) {\n    const matches = url.match(QUERY_STRING_PATTERN);\n    return matches && matches[0];\n}\nexport function stripQueryString(url) {\n    return url.replace(QUERY_STRING_PATTERN, '');\n}\nexport function shortenUrlForDisplay(url) {\n    if (url.length < 50) {\n        return url;\n    }\n    const urlEnd = url.slice(url.length - 15);\n    const urlStart = url.substr(0, 32);\n    return `${urlStart}...${urlEnd}`;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isResponse, isBlob } from \"../../javascript-utils/is-type.js\";\nimport { parseMIMEType, parseMIMETypeFromURL } from \"./mime-type-utils.js\";\nimport { stripQueryString } from \"./url-utils.js\";\n/**\n * Returns the URL associated with this resource.\n * The returned value may include a query string and need further processing.\n * If it cannot determine url, the corresponding value will be an empty string\n *\n * @todo string parameters are assumed to be URLs\n */\nexport function getResourceUrl(resource) {\n    // If resource is a `Response`, it contains the information directly as a field\n    if (isResponse(resource)) {\n        const response = resource;\n        return response.url;\n    }\n    // If the resource is a Blob or a File (subclass of Blob)\n    if (isBlob(resource)) {\n        const blob = resource;\n        // File objects have a \"name\" property. Blob objects don't have any\n        // url (name) information\n        return blob.name || '';\n    }\n    if (typeof resource === 'string') {\n        return resource;\n    }\n    // Unknown\n    return '';\n}\n/**\n * Returns the URL associated with this resource.\n * The returned value may include a query string and need further processing.\n * If it cannot determine url, the corresponding value will be an empty string\n *\n * @todo string parameters are assumed to be URLs\n */\nexport function getResourceMIMEType(resource) {\n    // If resource is a response, it contains the information directly\n    if (isResponse(resource)) {\n        const response = resource;\n        const contentTypeHeader = response.headers.get('content-type') || '';\n        const noQueryUrl = stripQueryString(response.url);\n        return parseMIMEType(contentTypeHeader) || parseMIMETypeFromURL(noQueryUrl);\n    }\n    // If the resource is a Blob or a File (subclass of Blob)\n    if (isBlob(resource)) {\n        const blob = resource;\n        return blob.type || '';\n    }\n    if (typeof resource === 'string') {\n        return parseMIMETypeFromURL(resource);\n    }\n    // Unknown\n    return '';\n}\n/**\n  * Returns (approximate) content length for a resource if it can be determined.\n  * Returns -1 if content length cannot be determined.\n  * @param resource\n\n  * @note string parameters are NOT assumed to be URLs\n  */\nexport function getResourceContentLength(resource) {\n    if (isResponse(resource)) {\n        const response = resource;\n        return response.headers['content-length'] || -1;\n    }\n    if (isBlob(resource)) {\n        const blob = resource;\n        return blob.size;\n    }\n    if (typeof resource === 'string') {\n        // TODO - handle data URL?\n        return resource.length;\n    }\n    if (resource instanceof ArrayBuffer) {\n        return resource.byteLength;\n    }\n    if (ArrayBuffer.isView(resource)) {\n        return resource.byteLength;\n    }\n    return -1;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isResponse } from \"../../javascript-utils/is-type.js\";\nimport { FetchError } from \"../fetch/fetch-error.js\";\nimport { getResourceContentLength, getResourceUrl, getResourceMIMEType } from \"./resource-utils.js\";\nimport { shortenUrlForDisplay } from \"./url-utils.js\";\n/**\n * Returns a Response object\n * Adds content-length header when possible\n *\n * @param resource\n */\nexport async function makeResponse(resource) {\n    if (isResponse(resource)) {\n        return resource;\n    }\n    // Add content-length header if possible\n    const headers = {};\n    const contentLength = getResourceContentLength(resource);\n    if (contentLength >= 0) {\n        headers['content-length'] = String(contentLength);\n    }\n    // `new Response(File)` does not preserve content-type and URL\n    // so we add them here\n    const url = getResourceUrl(resource);\n    const type = getResourceMIMEType(resource);\n    if (type) {\n        headers['content-type'] = type;\n    }\n    // Add a custom header with initial bytes if available\n    const initialDataUrl = await getInitialDataUrl(resource);\n    if (initialDataUrl) {\n        headers['x-first-bytes'] = initialDataUrl;\n    }\n    // TODO - is this the best way of handling strings?\n    // Maybe package as data URL instead?\n    if (typeof resource === 'string') {\n        // Convert to ArrayBuffer to avoid Response treating it as a URL\n        resource = new TextEncoder().encode(resource);\n    }\n    // Attempt to create a Response from the resource, adding headers and setting url\n    const response = new Response(resource, { headers });\n    // We can't control `Response.url` via constructor, use a property override to record URL.\n    Object.defineProperty(response, 'url', { value: url });\n    return response;\n}\n/**\n * Checks response status (async) and throws a helpful error message if status is not OK.\n * @param response\n */\nexport async function checkResponse(response) {\n    if (!response.ok) {\n        const error = await getResponseError(response);\n        throw error;\n    }\n}\n/**\n * Checks response status (sync) and throws a helpful error message if status is not OK.\n * @param response\n */\nexport function checkResponseSync(response) {\n    if (!response.ok) {\n        let message = `${response.status} ${response.statusText}`;\n        message = message.length > 60 ? `${message.slice(0, 60)}...` : message;\n        throw new Error(message);\n    }\n}\n// HELPERS\nasync function getResponseError(response) {\n    const shortUrl = shortenUrlForDisplay(response.url);\n    let message = `Failed to fetch resource (${response.status}) ${response.statusText}: ${shortUrl}`;\n    message = message.length > 100 ? `${message.slice(0, 100)}...` : message;\n    const info = {\n        reason: response.statusText,\n        url: response.url,\n        response\n    };\n    // See if we got an error message in the body\n    try {\n        const contentType = response.headers.get('Content-Type');\n        info.reason =\n            !response.bodyUsed && contentType?.includes('application/json')\n                ? await response.json()\n                : await response.text();\n    }\n    catch (error) {\n        // eslint forbids return in a finally statement, so we just catch here\n    }\n    return new FetchError(message, info);\n}\nasync function getInitialDataUrl(resource) {\n    const INITIAL_DATA_LENGTH = 5;\n    if (typeof resource === 'string') {\n        return `data:,${resource.slice(0, INITIAL_DATA_LENGTH)}`;\n    }\n    if (resource instanceof Blob) {\n        const blobSlice = resource.slice(0, 5);\n        return await new Promise((resolve) => {\n            const reader = new FileReader();\n            reader.onload = (event) => resolve(event?.target?.result);\n            reader.readAsDataURL(blobSlice);\n        });\n    }\n    if (resource instanceof ArrayBuffer) {\n        const slice = resource.slice(0, INITIAL_DATA_LENGTH);\n        const base64 = arrayBufferToBase64(slice);\n        return `data:base64,${base64}`;\n    }\n    return null;\n}\n// https://stackoverflow.com/questions/9267899/arraybuffer-to-base64-encoded-string\nfunction arrayBufferToBase64(buffer) {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return btoa(binary);\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { resolvePath } from '@loaders.gl/loader-utils';\nimport { makeResponse } from \"../utils/response-utils.js\";\n// import {FetchError} from './fetch-error';\nexport function isNodePath(url) {\n    return !isRequestURL(url) && !isDataURL(url);\n}\nexport function isRequestURL(url) {\n    return url.startsWith('http:') || url.startsWith('https:');\n}\nexport function isDataURL(url) {\n    return url.startsWith('data:');\n}\n/**\n * fetch API compatible function\n * - Supports fetching from Node.js local file system paths\n * - Respects pathPrefix and file aliases\n */\nexport async function fetchFile(urlOrData, fetchOptions) {\n    if (typeof urlOrData === 'string') {\n        const url = resolvePath(urlOrData);\n        // Support fetching from local file system\n        if (isNodePath(url)) {\n            if (globalThis.loaders?.fetchNode) {\n                return globalThis.loaders?.fetchNode(url, fetchOptions);\n            }\n            // throw new Error(\n            //   'fetchFile: globalThis.loaders.fetchNode not defined. Install @loaders.gl/polyfills'\n            // );\n        }\n        // Call global fetch\n        return await fetch(url, fetchOptions);\n    }\n    // TODO - should we still call fetch on non-URL inputs?\n    return await makeResponse(urlOrData);\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// probe.gl Log compatible loggers\nimport { Log } from '@probe.gl/log';\nexport const probeLog = new Log({ id: 'loaders.gl' });\n// Logs nothing\nexport class NullLog {\n    log() {\n        return () => { };\n    }\n    info() {\n        return () => { };\n    }\n    warn() {\n        return () => { };\n    }\n    error() {\n        return () => { };\n    }\n}\n// Logs to console\nexport class ConsoleLog {\n    console;\n    constructor() {\n        this.console = console; // eslint-disable-line\n    }\n    log(...args) {\n        return this.console.log.bind(this.console, ...args);\n    }\n    info(...args) {\n        return this.console.info.bind(this.console, ...args);\n    }\n    warn(...args) {\n        return this.console.warn.bind(this.console, ...args);\n    }\n    error(...args) {\n        return this.console.error.bind(this.console, ...args);\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isBrowser } from '@loaders.gl/loader-utils';\nimport { ConsoleLog } from \"./loggers.js\";\nexport const DEFAULT_LOADER_OPTIONS = {\n    // baseUri\n    fetch: null,\n    mimeType: undefined,\n    nothrow: false,\n    log: new ConsoleLog(), // A probe.gl compatible (`log.log()()` syntax) that just logs to console\n    useLocalLibraries: false,\n    CDN: 'https://unpkg.com/@loaders.gl',\n    worker: true, // By default, use worker if provided by loader.\n    maxConcurrency: 3, // How many worker instances should be created for each loader.\n    maxMobileConcurrency: 1, // How many worker instances should be created for each loader on mobile devices.\n    reuseWorkers: isBrowser, // By default reuse workers in browser (Node.js refuses to terminate if browsers are running)\n    _nodeWorkers: false, // By default do not support node workers\n    _workerType: '', // 'test' to use locally generated workers\n    limit: 0,\n    _limitMB: 0,\n    batchSize: 'auto',\n    batchDebounceMs: 0,\n    metadata: false, // TODO - currently only implemented for parseInBatches, adds initial metadata batch,\n    transforms: []\n};\nexport const REMOVED_LOADER_OPTIONS = {\n    throws: 'nothrow',\n    dataType: '(no longer used)',\n    uri: 'baseUri',\n    // Warn if fetch options are used on top-level\n    method: 'fetch.method',\n    headers: 'fetch.headers',\n    body: 'fetch.body',\n    mode: 'fetch.mode',\n    credentials: 'fetch.credentials',\n    cache: 'fetch.cache',\n    redirect: 'fetch.redirect',\n    referrer: 'fetch.referrer',\n    referrerPolicy: 'fetch.referrerPolicy',\n    integrity: 'fetch.integrity',\n    keepalive: 'fetch.keepalive',\n    signal: 'fetch.signal'\n};\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { registerJSModules } from '@loaders.gl/loader-utils';\nimport { isPureObject, isObject } from \"../../javascript-utils/is-type.js\";\nimport { probeLog, NullLog } from \"./loggers.js\";\nimport { DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS } from \"./option-defaults.js\";\n/**\n * Helper for safely accessing global loaders.gl variables\n * Wraps initialization of global variable in function to defeat overly aggressive tree-shakers\n */\nexport function getGlobalLoaderState() {\n    // @ts-ignore\n    globalThis.loaders = globalThis.loaders || {};\n    // @ts-ignore\n    const { loaders } = globalThis;\n    // Add _state object to keep separate from modules added to globalThis.loaders\n    if (!loaders._state) {\n        loaders._state = {};\n    }\n    return loaders._state;\n}\n/**\n * Store global loader options on the global object to increase chances of cross loaders-version interoperability\n * NOTE: This use case is not reliable but can help when testing new versions of loaders.gl with existing frameworks\n * @returns global loader options merged with default loader options\n */\nexport function getGlobalLoaderOptions() {\n    const state = getGlobalLoaderState();\n    // Ensure all default loader options from this library are mentioned\n    state.globalOptions = state.globalOptions || { ...DEFAULT_LOADER_OPTIONS };\n    return state.globalOptions;\n}\n/**\n * Set global loader options\n * @param options\n */\nexport function setGlobalOptions(options) {\n    const state = getGlobalLoaderState();\n    const globalOptions = getGlobalLoaderOptions();\n    // @ts-expect-error First param looks incorrect\n    state.globalOptions = normalizeOptionsInternal(globalOptions, options);\n    // Make sure any new modules are registered\n    registerJSModules(options.modules);\n}\n/**\n * Merges options with global opts and loader defaults, also injects baseUri\n * @param options\n * @param loader\n * @param loaders\n * @param url\n */\nexport function normalizeOptions(options, loader, loaders, url) {\n    loaders = loaders || [];\n    loaders = Array.isArray(loaders) ? loaders : [loaders];\n    validateOptions(options, loaders);\n    return normalizeOptionsInternal(loader, options, url);\n}\n// VALIDATE OPTIONS\n/**\n * Warn for unsupported options\n * @param options\n * @param loaders\n */\nfunction validateOptions(options, loaders) {\n    // Check top level options\n    validateOptionsObject(options, null, DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS, loaders);\n    for (const loader of loaders) {\n        // Get the scoped, loader specific options from the user supplied options\n        const idOptions = ((options && options[loader.id]) || {});\n        // Get scoped, loader specific default and deprecated options from the selected loader\n        const loaderOptions = (loader.options && loader.options[loader.id]) || {};\n        const deprecatedOptions = (loader.deprecatedOptions && loader.deprecatedOptions[loader.id]) || {};\n        // Validate loader specific options\n        // @ts-ignore\n        validateOptionsObject(idOptions, loader.id, loaderOptions, deprecatedOptions, loaders);\n    }\n}\n// eslint-disable-next-line max-params, complexity\nfunction validateOptionsObject(options, id, defaultOptions, deprecatedOptions, loaders) {\n    const loaderName = id || 'Top level';\n    const prefix = id ? `${id}.` : '';\n    for (const key in options) {\n        // If top level option value is an object it could options for a loader, so ignore\n        const isSubOptions = !id && isObject(options[key]);\n        const isBaseUriOption = key === 'baseUri' && !id;\n        const isWorkerUrlOption = key === 'workerUrl' && id;\n        // <loader>.workerUrl requires special handling as it is now auto-generated and no longer specified as a default option.\n        if (!(key in defaultOptions) && !isBaseUriOption && !isWorkerUrlOption) {\n            // Issue deprecation warnings\n            if (key in deprecatedOptions) {\n                probeLog.warn(`${loaderName} loader option \\'${prefix}${key}\\' no longer supported, use \\'${deprecatedOptions[key]}\\'`)();\n            }\n            else if (!isSubOptions) {\n                const suggestion = findSimilarOption(key, loaders);\n                probeLog.warn(`${loaderName} loader option \\'${prefix}${key}\\' not recognized. ${suggestion}`)();\n            }\n        }\n    }\n}\nfunction findSimilarOption(optionKey, loaders) {\n    const lowerCaseOptionKey = optionKey.toLowerCase();\n    let bestSuggestion = '';\n    for (const loader of loaders) {\n        for (const key in loader.options) {\n            if (optionKey === key) {\n                return `Did you mean \\'${loader.id}.${key}\\'?`;\n            }\n            const lowerCaseKey = key.toLowerCase();\n            const isPartialMatch = lowerCaseOptionKey.startsWith(lowerCaseKey) || lowerCaseKey.startsWith(lowerCaseOptionKey);\n            if (isPartialMatch) {\n                bestSuggestion = bestSuggestion || `Did you mean \\'${loader.id}.${key}\\'?`;\n            }\n        }\n    }\n    return bestSuggestion;\n}\nfunction normalizeOptionsInternal(loader, options, url) {\n    const loaderDefaultOptions = loader.options || {};\n    const mergedOptions = { ...loaderDefaultOptions };\n    addUrlOptions(mergedOptions, url);\n    // LOGGING: options.log can be set to `null` to defeat logging\n    if (mergedOptions.log === null) {\n        mergedOptions.log = new NullLog();\n    }\n    mergeNestedFields(mergedOptions, getGlobalLoaderOptions());\n    mergeNestedFields(mergedOptions, options);\n    return mergedOptions;\n}\n// Merge nested options objects\nfunction mergeNestedFields(mergedOptions, options) {\n    for (const key in options) {\n        // Check for nested options\n        // object in options => either no key in defaultOptions or object in defaultOptions\n        if (key in options) {\n            const value = options[key];\n            if (isPureObject(value) && isPureObject(mergedOptions[key])) {\n                mergedOptions[key] = {\n                    ...mergedOptions[key],\n                    ...options[key]\n                };\n            }\n            else {\n                mergedOptions[key] = options[key];\n            }\n        }\n        // else: No need to merge nested opts, and the initial merge already copied over the nested options\n    }\n}\n/**\n * Harvest information from the url\n * @deprecated This is mainly there to support a hack in the GLTFLoader\n * TODO - baseUri should be a directory, i.e. remove file component from baseUri\n * TODO - extract extension?\n * TODO - extract query parameters?\n * TODO - should these be injected on context instead of options?\n */\nfunction addUrlOptions(options, url) {\n    if (url && !('baseUri' in options)) {\n        options.baseUri = url;\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { assert } from '@loaders.gl/loader-utils';\nexport function isLoaderObject(loader) {\n    if (!loader) {\n        return false;\n    }\n    if (Array.isArray(loader)) {\n        loader = loader[0];\n    }\n    const hasExtensions = Array.isArray(loader?.extensions);\n    /* Now handled by types and worker loaders do not have these\n    let hasParser =\n      loader.parseTextSync ||\n      loader.parseSync ||\n      loader.parse ||\n      loader.parseStream || // TODO Remove, Replace with parseInBatches\n      loader.parseInBatches;\n    */\n    return hasExtensions;\n}\nexport function normalizeLoader(loader) {\n    // This error is fairly easy to trigger by mixing up import statements etc\n    // So we make an exception and add a developer error message for this case\n    // To help new users from getting stuck here\n    assert(loader, 'null loader');\n    assert(isLoaderObject(loader), 'invalid loader');\n    // NORMALIZE [LOADER, OPTIONS] => LOADER\n    // If [loader, options], create a new loaders object with options merged in\n    let options;\n    if (Array.isArray(loader)) {\n        options = loader[1];\n        loader = loader[0];\n        loader = {\n            ...loader,\n            options: { ...loader.options, ...options }\n        };\n    }\n    // NORMALIZE text and binary flags\n    // Ensure at least one of text/binary flags are properly set\n    // @ts-expect-error\n    if (loader?.parseTextSync || loader?.parseText) {\n        loader.text = true;\n    }\n    if (!loader.text) {\n        loader.binary = true;\n    }\n    return loader;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { normalizeLoader } from \"../loader-utils/normalize-loader.js\";\nimport { getGlobalLoaderState } from \"../loader-utils/option-utils.js\";\n/**\n * Store global registered loaders on the global object to increase chances of cross loaders-version interoperability\n * This use case is not reliable but can help when testing new versions of loaders.gl with existing frameworks\n */\nconst getGlobalLoaderRegistry = () => {\n    const state = getGlobalLoaderState();\n    state.loaderRegistry = state.loaderRegistry || [];\n    return state.loaderRegistry;\n};\n/**\n * Register a list of global loaders\n * @note Registration erases loader type information.\n * @deprecated It is recommended that applications manage loader registration. This function will likely be remove in loaders.gl v5\n */\nexport function registerLoaders(loaders) {\n    const loaderRegistry = getGlobalLoaderRegistry();\n    loaders = Array.isArray(loaders) ? loaders : [loaders];\n    for (const loader of loaders) {\n        const normalizedLoader = normalizeLoader(loader);\n        if (!loaderRegistry.find((registeredLoader) => normalizedLoader === registeredLoader)) {\n            // add to the beginning of the loaderRegistry, so the last registeredLoader get picked\n            loaderRegistry.unshift(normalizedLoader);\n        }\n    }\n}\n/**\n * @deprecated It is recommended that applications manage loader registration. This function will likely be remove in loaders.gl v5\n */\nexport function getRegisteredLoaders() {\n    return getGlobalLoaderRegistry();\n}\n/** @deprecated For testing only  */\nexport function _unregisterLoaders() {\n    const state = getGlobalLoaderState();\n    state.loaderRegistry = [];\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { compareArrayBuffers, path, log } from '@loaders.gl/loader-utils';\nimport { normalizeLoader } from \"../loader-utils/normalize-loader.js\";\nimport { getResourceUrl, getResourceMIMEType } from \"../utils/resource-utils.js\";\nimport { compareMIMETypes } from \"../utils/mime-type-utils.js\";\nimport { getRegisteredLoaders } from \"./register-loaders.js\";\nimport { isBlob } from \"../../javascript-utils/is-type.js\";\nimport { stripQueryString } from \"../utils/url-utils.js\";\nconst EXT_PATTERN = /\\.([^.]+)$/;\n// TODO - Need a variant that peeks at streams for parseInBatches\n// TODO - Detect multiple matching loaders? Use heuristics to grade matches?\n// TODO - Allow apps to pass context to disambiguate between multiple matches (e.g. multiple .json formats)?\n/**\n * Find a loader that matches file extension and/or initial file content\n * Search the loaders array argument for a loader that matches url extension or initial data\n * Returns: a normalized loader\n * @param data data to assist\n * @param loaders\n * @param options\n * @param context used internally, applications should not provide this parameter\n */\nexport async function selectLoader(data, loaders = [], options, context) {\n    if (!validHTTPResponse(data)) {\n        return null;\n    }\n    // First make a sync attempt, disabling exceptions\n    let loader = selectLoaderSync(data, loaders, { ...options, nothrow: true }, context);\n    if (loader) {\n        return loader;\n    }\n    // For Blobs and Files, try to asynchronously read a small initial slice and test again with that\n    // to see if we can detect by initial content\n    if (isBlob(data)) {\n        data = await data.slice(0, 10).arrayBuffer();\n        loader = selectLoaderSync(data, loaders, options, context);\n    }\n    // no loader available\n    if (!loader && !options?.nothrow) {\n        throw new Error(getNoValidLoaderMessage(data));\n    }\n    return loader;\n}\n/**\n * Find a loader that matches file extension and/or initial file content\n * Search the loaders array argument for a loader that matches url extension or initial data\n * Returns: a normalized loader\n * @param data data to assist\n * @param loaders\n * @param options\n * @param context used internally, applications should not provide this parameter\n */\nexport function selectLoaderSync(data, loaders = [], options, context) {\n    if (!validHTTPResponse(data)) {\n        return null;\n    }\n    // eslint-disable-next-line complexity\n    // if only a single loader was provided (not as array), force its use\n    // TODO - Should this behavior be kept and documented?\n    if (loaders && !Array.isArray(loaders)) {\n        // TODO - remove support for legacy loaders\n        return normalizeLoader(loaders);\n    }\n    // Build list of candidate loaders that will be searched in order for a match\n    let candidateLoaders = [];\n    // First search supplied loaders\n    if (loaders) {\n        candidateLoaders = candidateLoaders.concat(loaders);\n    }\n    // Then fall back to registered loaders\n    if (!options?.ignoreRegisteredLoaders) {\n        candidateLoaders.push(...getRegisteredLoaders());\n    }\n    // TODO - remove support for legacy loaders\n    normalizeLoaders(candidateLoaders);\n    const loader = selectLoaderInternal(data, candidateLoaders, options, context);\n    // no loader available\n    if (!loader && !options?.nothrow) {\n        throw new Error(getNoValidLoaderMessage(data));\n    }\n    return loader;\n}\n/** Implements loaders selection logic */\n// eslint-disable-next-line complexity\nfunction selectLoaderInternal(data, loaders, options, context) {\n    const url = getResourceUrl(data);\n    const type = getResourceMIMEType(data);\n    const testUrl = stripQueryString(url) || context?.url;\n    let loader = null;\n    let reason = '';\n    // if options.mimeType is supplied, it takes precedence\n    if (options?.mimeType) {\n        loader = findLoaderByMIMEType(loaders, options?.mimeType);\n        reason = `match forced by supplied MIME type ${options?.mimeType}`;\n    }\n    // Look up loader by url\n    loader = loader || findLoaderByUrl(loaders, testUrl);\n    reason = reason || (loader ? `matched url ${testUrl}` : '');\n    // Look up loader by mime type\n    loader = loader || findLoaderByMIMEType(loaders, type);\n    reason = reason || (loader ? `matched MIME type ${type}` : '');\n    // Look for loader via initial bytes (Note: not always accessible (e.g. Response, stream, async iterator)\n    // @ts-ignore Blob | Response\n    loader = loader || findLoaderByInitialBytes(loaders, data);\n    // @ts-ignore Blob | Response\n    reason = reason || (loader ? `matched initial data ${getFirstCharacters(data)}` : '');\n    // Look up loader by fallback mime type\n    if (options?.fallbackMimeType) {\n        loader = loader || findLoaderByMIMEType(loaders, options?.fallbackMimeType);\n        reason = reason || (loader ? `matched fallback MIME type ${type}` : '');\n    }\n    if (reason) {\n        log.log(1, `selectLoader selected ${loader?.name}: ${reason}.`);\n    }\n    return loader;\n}\n/** Check HTTP Response */\nfunction validHTTPResponse(data) {\n    // HANDLE HTTP status\n    if (data instanceof Response) {\n        // 204 - NO CONTENT. This handles cases where e.g. a tile server responds with 204 for a missing tile\n        if (data.status === 204) {\n            return false;\n        }\n    }\n    return true;\n}\n/** Generate a helpful message to help explain why loader selection failed. */\nfunction getNoValidLoaderMessage(data) {\n    const url = getResourceUrl(data);\n    const type = getResourceMIMEType(data);\n    let message = 'No valid loader found (';\n    message += url ? `${path.filename(url)}, ` : 'no url provided, ';\n    message += `MIME type: ${type ? `\"${type}\"` : 'not provided'}, `;\n    // First characters are only accessible when called on data (string or arrayBuffer).\n    // @ts-ignore Blob | Response\n    const firstCharacters = data ? getFirstCharacters(data) : '';\n    message += firstCharacters ? ` first bytes: \"${firstCharacters}\"` : 'first bytes: not available';\n    message += ')';\n    return message;\n}\nfunction normalizeLoaders(loaders) {\n    for (const loader of loaders) {\n        normalizeLoader(loader);\n    }\n}\n// TODO - Would be nice to support http://example.com/file.glb?parameter=1\n// E.g: x = new URL('http://example.com/file.glb?load=1'; x.pathname\nfunction findLoaderByUrl(loaders, url) {\n    // Get extension\n    const match = url && EXT_PATTERN.exec(url);\n    const extension = match && match[1];\n    return extension ? findLoaderByExtension(loaders, extension) : null;\n}\nfunction findLoaderByExtension(loaders, extension) {\n    extension = extension.toLowerCase();\n    for (const loader of loaders) {\n        for (const loaderExtension of loader.extensions) {\n            if (loaderExtension.toLowerCase() === extension) {\n                return loader;\n            }\n        }\n    }\n    return null;\n}\nfunction findLoaderByMIMEType(loaders, mimeType) {\n    for (const loader of loaders) {\n        if (loader.mimeTypes?.some((mimeType1) => compareMIMETypes(mimeType, mimeType1))) {\n            return loader;\n        }\n        // Support referring to loaders using the \"unregistered tree\"\n        // https://en.wikipedia.org/wiki/Media_type#Unregistered_tree\n        if (compareMIMETypes(mimeType, `application/x.${loader.id}`)) {\n            return loader;\n        }\n    }\n    return null;\n}\nfunction findLoaderByInitialBytes(loaders, data) {\n    if (!data) {\n        return null;\n    }\n    for (const loader of loaders) {\n        if (typeof data === 'string') {\n            if (testDataAgainstText(data, loader)) {\n                return loader;\n            }\n        }\n        else if (ArrayBuffer.isView(data)) {\n            // Typed Arrays can have offsets into underlying buffer\n            if (testDataAgainstBinary(data.buffer, data.byteOffset, loader)) {\n                return loader;\n            }\n        }\n        else if (data instanceof ArrayBuffer) {\n            const byteOffset = 0;\n            if (testDataAgainstBinary(data, byteOffset, loader)) {\n                return loader;\n            }\n        }\n        // TODO Handle streaming case (requires creating a new AsyncIterator)\n    }\n    return null;\n}\nfunction testDataAgainstText(data, loader) {\n    if (loader.testText) {\n        return loader.testText(data);\n    }\n    const tests = Array.isArray(loader.tests) ? loader.tests : [loader.tests];\n    return tests.some((test) => data.startsWith(test));\n}\nfunction testDataAgainstBinary(data, byteOffset, loader) {\n    const tests = Array.isArray(loader.tests) ? loader.tests : [loader.tests];\n    return tests.some((test) => testBinary(data, byteOffset, loader, test));\n}\nfunction testBinary(data, byteOffset, loader, test) {\n    if (test instanceof ArrayBuffer) {\n        return compareArrayBuffers(test, data, test.byteLength);\n    }\n    switch (typeof test) {\n        case 'function':\n            return test(data);\n        case 'string':\n            // Magic bytes check: If `test` is a string, check if binary data starts with that strings\n            const magic = getMagicString(data, byteOffset, test.length);\n            return test === magic;\n        default:\n            return false;\n    }\n}\nfunction getFirstCharacters(data, length = 5) {\n    if (typeof data === 'string') {\n        return data.slice(0, length);\n    }\n    else if (ArrayBuffer.isView(data)) {\n        // Typed Arrays can have offsets into underlying buffer\n        return getMagicString(data.buffer, data.byteOffset, length);\n    }\n    else if (data instanceof ArrayBuffer) {\n        const byteOffset = 0;\n        return getMagicString(data, byteOffset, length);\n    }\n    return '';\n}\nfunction getMagicString(arrayBuffer, byteOffset, length) {\n    if (arrayBuffer.byteLength < byteOffset + length) {\n        return '';\n    }\n    const dataView = new DataView(arrayBuffer);\n    let magic = '';\n    for (let i = 0; i < length; i++) {\n        magic += String.fromCharCode(dataView.getUint8(byteOffset + i));\n    }\n    return magic;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst DEFAULT_CHUNK_SIZE = 256 * 1024;\n/**\n * Returns an iterator that breaks a big string into chunks and yields them one-by-one as ArrayBuffers\n * @param blob string to iterate over\n * @param options\n * @param options.chunkSize\n */\nexport function* makeStringIterator(string, options) {\n    const chunkSize = options?.chunkSize || DEFAULT_CHUNK_SIZE;\n    let offset = 0;\n    const textEncoder = new TextEncoder();\n    while (offset < string.length) {\n        // Create a chunk of the right size\n        const chunkLength = Math.min(string.length - offset, chunkSize);\n        const chunk = string.slice(offset, offset + chunkLength);\n        offset += chunkLength;\n        // yield an ArrayBuffer chunk\n        yield textEncoder.encode(chunk);\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst DEFAULT_CHUNK_SIZE = 256 * 1024;\n/**\n * Returns an iterator that breaks a big ArrayBuffer into chunks and yields them one-by-one\n * @param blob ArrayBuffer to iterate over\n * @param options\n * @param options.chunkSize\n */\nexport function* makeArrayBufferIterator(arrayBuffer, options = {}) {\n    const { chunkSize = DEFAULT_CHUNK_SIZE } = options;\n    let byteOffset = 0;\n    while (byteOffset < arrayBuffer.byteLength) {\n        // Create a chunk of the right size\n        const chunkByteLength = Math.min(arrayBuffer.byteLength - byteOffset, chunkSize);\n        const chunk = new ArrayBuffer(chunkByteLength);\n        // Copy data from the big chunk\n        const sourceArray = new Uint8Array(arrayBuffer, byteOffset, chunkByteLength);\n        const chunkArray = new Uint8Array(chunk);\n        chunkArray.set(sourceArray);\n        // yield the chunk\n        byteOffset += chunkByteLength;\n        yield chunk;\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst DEFAULT_CHUNK_SIZE = 1024 * 1024; // 1MB — biggest value that keeps UI responsive\n/**\n * Returns an iterator that breaks a big Blob into chunks and yields them one-by-one\n * @param blob Blob or File object\n * @param options\n * @param options.chunkSize\n */\nexport async function* makeBlobIterator(blob, options) {\n    const chunkSize = options?.chunkSize || DEFAULT_CHUNK_SIZE;\n    let offset = 0;\n    while (offset < blob.size) {\n        const end = offset + chunkSize;\n        const chunk = await blob.slice(offset, end).arrayBuffer();\n        offset = end;\n        yield chunk;\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isBrowser, toArrayBuffer } from '@loaders.gl/loader-utils';\n/**\n * Returns an async iterable that reads from a stream (works in both Node.js and browsers)\n * @param stream stream to iterator over\n */\nexport function makeStreamIterator(stream, options) {\n    return isBrowser\n        ? makeBrowserStreamIterator(stream, options)\n        : makeNodeStreamIterator(stream, options);\n}\n/**\n * Returns an async iterable that reads from a DOM (browser) stream\n * @param stream stream to iterate from\n * @see https://jakearchibald.com/2017/async-iterators-and-generators/#making-streams-iterate\n */\nasync function* makeBrowserStreamIterator(stream, options) {\n    // WhatWG: stream is supposed to have a `getIterator` method\n    // if (typeof stream.getIterator === 'function') {\n    //   return stream.getIterator();\n    // }\n    // if (typeof stream[Symbol.asyncIterator] === 'function') {\n    //   return makeToArrayBufferIterator(stream);\n    // }\n    // In the browser, we first need to get a lock on the stream\n    const reader = stream.getReader();\n    let nextBatchPromise;\n    try {\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const currentBatchPromise = nextBatchPromise || reader.read();\n            // Issue a read for an additional batch, while we await the next batch\n            // Idea is to make fetching happen in parallel with processing / parsing\n            if (options?._streamReadAhead) {\n                nextBatchPromise = reader.read();\n            }\n            // Read from the stream\n            // value is a Uint8Array\n            const { done, value } = await currentBatchPromise;\n            // Exit if we're done\n            if (done) {\n                return;\n            }\n            // Else yield the chunk\n            yield toArrayBuffer(value);\n        }\n    }\n    catch (error) {\n        // TODO - examples makes it look like this should always be called,\n        // but that generates exceptions so only call it if we do not reach the end\n        reader.releaseLock();\n    }\n}\n/**\n * Returns an async iterable that reads from a DOM (browser) stream\n * @param stream stream to iterate from\n * @note Requires Node.js >= 10\n */\nasync function* makeNodeStreamIterator(stream, options) {\n    // Hacky test for node version to ensure we don't call bad polyfills\n    // NODE 10+: stream is an asyncIterator\n    for await (const chunk of stream) {\n        yield toArrayBuffer(chunk); // Coerce each chunk to ArrayBuffer\n    }\n}\n/* TODO - remove NODE < 10\n * @see https://github.com/bustle/streaming-iterables, MIT license\n *\n  if (typeof stream[Symbol.asyncIterator] === 'function') {\n    return;\n  }\n\n  // TODO - check if is this ever used in Node 10+?\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const data = stream.read();\n    if (data !== null) {\n      yield toArrayBuffer(data);\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (stream._readableState?.ended) {\n      return;\n    }\n    await onceReadable(stream);\n  }\n\nasync function onceReadable(stream: Readable): Promise<any> {\n  return new Promise((resolve) => {\n    stream.once('readable', resolve);\n  });\n}\n  */\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { makeStringIterator } from \"./make-string-iterator.js\";\nimport { makeArrayBufferIterator } from \"./make-array-buffer-iterator.js\";\nimport { makeBlobIterator } from \"./make-blob-iterator.js\";\nimport { makeStreamIterator } from \"./make-stream-iterator.js\";\nimport { isBlob, isReadableStream, isResponse } from \"../../javascript-utils/is-type.js\";\n/**\n * Returns an iterator that breaks its input into chunks and yields them one-by-one.\n * @param data\n * @param options\n * @returns\n * This function can e.g. be used to enable data sources that can only be read atomically\n * (such as `Blob` and `File` via `FileReader`) to still be parsed in batches.\n */\nexport function makeIterator(data, options) {\n    if (typeof data === 'string') {\n        // Note: Converts string chunks to binary\n        return makeStringIterator(data, options);\n    }\n    if (data instanceof ArrayBuffer) {\n        return makeArrayBufferIterator(data, options);\n    }\n    if (isBlob(data)) {\n        return makeBlobIterator(data, options);\n    }\n    if (isReadableStream(data)) {\n        return makeStreamIterator(data, options);\n    }\n    if (isResponse(data)) {\n        const response = data;\n        return makeStreamIterator(response.body, options);\n    }\n    throw new Error('makeIterator');\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { concatenateArrayBuffersAsync } from '@loaders.gl/loader-utils';\nimport { isResponse, isReadableStream, isAsyncIterable, isIterable, isIterator, isBlob, isBuffer } from \"../../javascript-utils/is-type.js\";\nimport { makeIterator } from \"../../iterators/make-iterator/make-iterator.js\";\nimport { checkResponse, makeResponse } from \"../utils/response-utils.js\";\nconst ERR_DATA = 'Cannot convert supplied data type';\n// eslint-disable-next-line complexity\nexport function getArrayBufferOrStringFromDataSync(data, loader, options) {\n    if (loader.text && typeof data === 'string') {\n        return data;\n    }\n    if (isBuffer(data)) {\n        // @ts-ignore\n        data = data.buffer;\n    }\n    if (data instanceof ArrayBuffer) {\n        const arrayBuffer = data;\n        if (loader.text && !loader.binary) {\n            const textDecoder = new TextDecoder('utf8');\n            return textDecoder.decode(arrayBuffer);\n        }\n        return arrayBuffer;\n    }\n    // We may need to handle offsets\n    if (ArrayBuffer.isView(data)) {\n        // TextDecoder is invoked on typed arrays and will handle offsets\n        if (loader.text && !loader.binary) {\n            const textDecoder = new TextDecoder('utf8');\n            return textDecoder.decode(data);\n        }\n        let arrayBuffer = data.buffer;\n        // Since we are returning the underlying arrayBuffer, we must create a new copy\n        // if this typed array / Buffer is a partial view into the ArryayBuffer\n        // TODO - this is a potentially unnecessary copy\n        const byteLength = data.byteLength || data.length;\n        if (data.byteOffset !== 0 || byteLength !== arrayBuffer.byteLength) {\n            // console.warn(`loaders.gl copying arraybuffer of length ${byteLength}`);\n            arrayBuffer = arrayBuffer.slice(data.byteOffset, data.byteOffset + byteLength);\n        }\n        return arrayBuffer;\n    }\n    throw new Error(ERR_DATA);\n}\n// Convert async iterator to a promise\nexport async function getArrayBufferOrStringFromData(data, loader, options) {\n    const isArrayBuffer = data instanceof ArrayBuffer || ArrayBuffer.isView(data);\n    if (typeof data === 'string' || isArrayBuffer) {\n        return getArrayBufferOrStringFromDataSync(data, loader, options);\n    }\n    // Blobs and files are FileReader compatible\n    if (isBlob(data)) {\n        data = await makeResponse(data);\n    }\n    if (isResponse(data)) {\n        const response = data;\n        await checkResponse(response);\n        return loader.binary ? await response.arrayBuffer() : await response.text();\n    }\n    if (isReadableStream(data)) {\n        // @ts-expect-error TS2559 options type\n        data = makeIterator(data, options);\n    }\n    if (isIterable(data) || isAsyncIterable(data)) {\n        // Assume arrayBuffer iterator - attempt to concatenate\n        return concatenateArrayBuffersAsync(data);\n    }\n    throw new Error(ERR_DATA);\n}\nexport async function getAsyncIterableFromData(data, options) {\n    if (isIterator(data)) {\n        return data;\n    }\n    if (isResponse(data)) {\n        const response = data;\n        // Note Since this function is not async, we currently can't load error message, just status\n        await checkResponse(response);\n        // TODO - bug in polyfill, body can be a Promise under Node.js\n        // eslint-disable-next-line @typescript-eslint/await-thenable\n        const body = await response.body;\n        // TODO - body can be null?\n        return makeIterator(body, options);\n    }\n    if (isBlob(data) || isReadableStream(data)) {\n        return makeIterator(data, options);\n    }\n    if (isAsyncIterable(data)) {\n        return data;\n    }\n    return getIterableFromData(data);\n}\nexport async function getReadableStream(data) {\n    if (isReadableStream(data)) {\n        return data;\n    }\n    if (isResponse(data)) {\n        // @ts-ignore\n        return data.body;\n    }\n    const response = await makeResponse(data);\n    // @ts-ignore\n    return response.body;\n}\n// HELPERS\nfunction getIterableFromData(data) {\n    // generate an iterator that emits a single chunk\n    if (ArrayBuffer.isView(data)) {\n        return (function* oneChunk() {\n            yield data.buffer;\n        })();\n    }\n    if (data instanceof ArrayBuffer) {\n        return (function* oneChunk() {\n            yield data;\n        })();\n    }\n    if (isIterator(data)) {\n        return data;\n    }\n    if (isIterable(data)) {\n        return data[Symbol.iterator]();\n    }\n    throw new Error(ERR_DATA);\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isObject } from \"../../javascript-utils/is-type.js\";\nimport { fetchFile } from \"../fetch/fetch-file.js\";\nimport { getGlobalLoaderOptions } from \"./option-utils.js\";\n/**\n * Gets the current fetch function from options and context\n * @param options\n * @param context\n */\nexport function getFetchFunction(options, context) {\n    const globalOptions = getGlobalLoaderOptions();\n    const loaderOptions = options || globalOptions;\n    // options.fetch can be a function\n    if (typeof loaderOptions.fetch === 'function') {\n        return loaderOptions.fetch;\n    }\n    // options.fetch can be an options object\n    if (isObject(loaderOptions.fetch)) {\n        return (url) => fetchFile(url, loaderOptions.fetch);\n    }\n    // else refer to context (from parent loader) if available\n    if (context?.fetch) {\n        return context?.fetch;\n    }\n    // else return the default fetch function\n    return fetchFile;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { getFetchFunction } from \"./get-fetch-function.js\";\nimport { extractQueryString, stripQueryString } from \"../utils/url-utils.js\";\nimport { path } from '@loaders.gl/loader-utils';\n/**\n * \"sub\" loaders invoked by other loaders get a \"context\" injected on `this`\n * The context will inject core methods like `parse` and contain information\n * about loaders and options passed in to the top-level `parse` call.\n *\n * @param context\n * @param options\n * @param previousContext\n */\nexport function getLoaderContext(context, options, parentContext) {\n    // For recursive calls, we already have a context\n    // TODO - add any additional loaders to context?\n    if (parentContext) {\n        return parentContext;\n    }\n    const newContext = {\n        fetch: getFetchFunction(options, context),\n        ...context\n    };\n    // Parse URLs so that subloaders can easily generate correct strings\n    if (newContext.url) {\n        const baseUrl = stripQueryString(newContext.url);\n        newContext.baseUrl = baseUrl;\n        newContext.queryString = extractQueryString(newContext.url);\n        newContext.filename = path.filename(baseUrl);\n        newContext.baseUrl = path.dirname(baseUrl);\n    }\n    // Recursive loading does not use single loader\n    if (!Array.isArray(newContext.loaders)) {\n        newContext.loaders = null;\n    }\n    return newContext;\n}\n// eslint-disable-next-line complexity\nexport function getLoadersFromContext(loaders, context) {\n    // A single loader (non-array) indicates no selection desired. Force select.\n    if (loaders && !Array.isArray(loaders)) {\n        return loaders;\n    }\n    // Create a merged list\n    let candidateLoaders;\n    if (loaders) {\n        candidateLoaders = Array.isArray(loaders) ? loaders : [loaders];\n    }\n    if (context && context.loaders) {\n        const contextLoaders = Array.isArray(context.loaders) ? context.loaders : [context.loaders];\n        candidateLoaders = candidateLoaders ? [...candidateLoaders, ...contextLoaders] : contextLoaders;\n    }\n    // If no loaders, return null to look in globally registered loaders\n    return candidateLoaders && candidateLoaders.length ? candidateLoaders : undefined;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { parseWithWorker, canParseWithWorker, mergeLoaderOptions } from '@loaders.gl/loader-utils';\nimport { assert, validateWorkerVersion } from '@loaders.gl/worker-utils';\nimport { isLoaderObject } from \"../loader-utils/normalize-loader.js\";\nimport { isResponse } from \"../../javascript-utils/is-type.js\";\nimport { normalizeOptions } from \"../loader-utils/option-utils.js\";\nimport { getArrayBufferOrStringFromData } from \"../loader-utils/get-data.js\";\nimport { getLoaderContext, getLoadersFromContext } from \"../loader-utils/loader-context.js\";\nimport { getResourceUrl } from \"../utils/resource-utils.js\";\nimport { selectLoader } from \"./select-loader.js\";\n/**\n * Parses `data` using a specified loader\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\n// implementation signature\nexport async function parse(data, loaders, options, context) {\n    // Signature: parse(data, options, context | url)\n    // Uses registered loaders\n    if (loaders && !Array.isArray(loaders) && !isLoaderObject(loaders)) {\n        context = undefined; // context not supported in short signature\n        options = loaders;\n        loaders = undefined;\n    }\n    data = await data; // Resolve any promise\n    options = options || {}; // Could be invalid...\n    // Extract a url for auto detection\n    const url = getResourceUrl(data);\n    // Chooses a loader (and normalizes it)\n    // Also use any loaders in the context, new loaders take priority\n    const typedLoaders = loaders;\n    const candidateLoaders = getLoadersFromContext(typedLoaders, context);\n    // todo hacky type cast\n    const loader = await selectLoader(data, candidateLoaders, options);\n    // Note: if no loader was found, if so just return null\n    if (!loader) {\n        return null;\n    }\n    // Normalize options\n    // @ts-expect-error\n    options = normalizeOptions(options, loader, candidateLoaders, url); // Could be invalid...\n    // Get a context (if already present, will be unchanged)\n    context = getLoaderContext(\n    // @ts-expect-error\n    { url, _parse: parse, loaders: candidateLoaders }, options, context || null);\n    return await parseWithLoader(loader, data, options, context);\n}\n// TODO: support progress and abort\n// TODO - should accept loader.parseAsyncIterator and concatenate.\nasync function parseWithLoader(loader, data, options, context) {\n    validateWorkerVersion(loader);\n    options = mergeLoaderOptions(loader.options, options);\n    if (isResponse(data)) {\n        // Serialize to support passing the response to web worker\n        const response = data;\n        const { ok, redirected, status, statusText, type, url } = response;\n        const headers = Object.fromEntries(response.headers.entries());\n        // @ts-expect-error TODO - fix this\n        context.response = { headers, ok, redirected, status, statusText, type, url };\n    }\n    data = await getArrayBufferOrStringFromData(data, loader, options);\n    const loaderWithParser = loader;\n    // First check for synchronous text parser, wrap results in promises\n    if (loaderWithParser.parseTextSync && typeof data === 'string') {\n        return loaderWithParser.parseTextSync(data, options, context);\n    }\n    // If we have a workerUrl and the loader can parse the given options efficiently in a worker\n    if (canParseWithWorker(loader, options)) {\n        return await parseWithWorker(loader, data, options, context, parse);\n    }\n    // Check for asynchronous parser\n    if (loaderWithParser.parseText && typeof data === 'string') {\n        return await loaderWithParser.parseText(data, options, context);\n    }\n    if (loaderWithParser.parse) {\n        return await loaderWithParser.parse(data, options, context);\n    }\n    // This should not happen, all sync loaders should also offer `parse` function\n    assert(!loaderWithParser.parseSync);\n    // TBD - If asynchronous parser not available, return null\n    throw new Error(`${loader.id} loader - no parser found and worker is disabled`);\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// This code is adapted from ArrowJS https://github.com/apache/arrow\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport var Type;\n(function (Type) {\n    /** The default placeholder type */\n    Type[Type[\"NONE\"] = 0] = \"NONE\";\n    /** A NULL type having no physical storage */\n    Type[Type[\"Null\"] = 1] = \"Null\";\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Type[Type[\"Int\"] = 2] = \"Int\";\n    /** 2, 4, or 8-byte floating point value */\n    Type[Type[\"Float\"] = 3] = \"Float\";\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Type[Type[\"Binary\"] = 4] = \"Binary\";\n    /** UTF8 variable-length string as List<Char> */\n    Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Type[Type[\"Bool\"] = 6] = \"Bool\";\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Type[Type[\"Date\"] = 8] = \"Date\";\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Type[Type[\"Time\"] = 9] = \"Time\";\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Type[Type[\"Interval\"] = 11] = \"Interval\";\n    /** A list of some logical data type */\n    Type[Type[\"List\"] = 12] = \"List\";\n    /** Struct of logical types */\n    Type[Type[\"Struct\"] = 13] = \"Struct\";\n    /** Union of logical types */\n    Type[Type[\"Union\"] = 14] = \"Union\";\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n    /** Map of named logical types */\n    Type[Type[\"Map\"] = 17] = \"Map\";\n    /** Dictionary aka Category type */\n    Type[Type[\"Dictionary\"] = -1] = \"Dictionary\";\n    Type[Type[\"Int8\"] = -2] = \"Int8\";\n    Type[Type[\"Int16\"] = -3] = \"Int16\";\n    Type[Type[\"Int32\"] = -4] = \"Int32\";\n    Type[Type[\"Int64\"] = -5] = \"Int64\";\n    Type[Type[\"Uint8\"] = -6] = \"Uint8\";\n    Type[Type[\"Uint16\"] = -7] = \"Uint16\";\n    Type[Type[\"Uint32\"] = -8] = \"Uint32\";\n    Type[Type[\"Uint64\"] = -9] = \"Uint64\";\n    Type[Type[\"Float16\"] = -10] = \"Float16\";\n    Type[Type[\"Float32\"] = -11] = \"Float32\";\n    Type[Type[\"Float64\"] = -12] = \"Float64\";\n    Type[Type[\"DateDay\"] = -13] = \"DateDay\";\n    Type[Type[\"DateMillisecond\"] = -14] = \"DateMillisecond\";\n    Type[Type[\"TimestampSecond\"] = -15] = \"TimestampSecond\";\n    Type[Type[\"TimestampMillisecond\"] = -16] = \"TimestampMillisecond\";\n    Type[Type[\"TimestampMicrosecond\"] = -17] = \"TimestampMicrosecond\";\n    Type[Type[\"TimestampNanosecond\"] = -18] = \"TimestampNanosecond\";\n    Type[Type[\"TimeSecond\"] = -19] = \"TimeSecond\";\n    Type[Type[\"TimeMillisecond\"] = -20] = \"TimeMillisecond\";\n    Type[Type[\"TimeMicrosecond\"] = -21] = \"TimeMicrosecond\";\n    Type[Type[\"TimeNanosecond\"] = -22] = \"TimeNanosecond\";\n    Type[Type[\"DenseUnion\"] = -23] = \"DenseUnion\";\n    Type[Type[\"SparseUnion\"] = -24] = \"SparseUnion\";\n    Type[Type[\"IntervalDayTime\"] = -25] = \"IntervalDayTime\";\n    Type[Type[\"IntervalYearMonth\"] = -26] = \"IntervalYearMonth\";\n})(Type || (Type = {}));\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isBlob } from \"../../javascript-utils/is-type.js\";\nimport { isLoaderObject } from \"../loader-utils/normalize-loader.js\";\nimport { getFetchFunction } from \"../loader-utils/get-fetch-function.js\";\nimport { parse } from \"./parse.js\";\n// export async function load(url: string | DataType, loaders: LoaderOptions): Promise<any>;\n// implementation signature\nexport async function load(url, loaders, options, context) {\n    let resolvedLoaders;\n    let resolvedOptions;\n    // Signature: load(url, options)\n    if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n        resolvedLoaders = [];\n        resolvedOptions = loaders;\n        context = undefined; // context not supported in short signature\n    }\n    else {\n        resolvedLoaders = loaders;\n        resolvedOptions = options;\n    }\n    // Select fetch function\n    const fetch = getFetchFunction(resolvedOptions);\n    // at this point, `url` could be already loaded binary data\n    let data = url;\n    // url is a string, fetch the url\n    if (typeof url === 'string') {\n        data = await fetch(url);\n        // URL is Blob or File, fetchFile handles it (alt: we could generate ObjectURL here)\n    }\n    if (isBlob(url)) {\n        // The fetch response object will contain blob.name\n        // @ts-expect-error TODO - This may not work for overridden fetch functions\n        data = await fetch(url);\n    }\n    // Data is loaded (at least we have a `Response` object) so time to hand over to `parse`\n    // return await parse(data, loaders as Loader[], options);\n    return Array.isArray(resolvedLoaders)\n        ? await parse(data, resolvedLoaders, resolvedOptions) // loader array overload\n        : await parse(data, resolvedLoaders, resolvedOptions); // single loader overload\n}\n", "// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof \"4.3.3\" !== 'undefined' ? \"4.3.3\" : 'latest';\n", "import { isBrowser } from '@loaders.gl/loader-utils';\n// @ts-ignore TS2339: Property does not exist on type\nconst parseImageNode = globalThis.loaders?.parseImageNode;\nconst IMAGE_SUPPORTED = typeof Image !== 'undefined'; // NOTE: \"false\" positives if jsdom is installed\nconst IMAGE_BITMAP_SUPPORTED = typeof ImageBitmap !== 'undefined';\nconst NODE_IMAGE_SUPPORTED = Boolean(parseImageNode);\nconst DATA_SUPPORTED = isBrowser ? true : NODE_IMAGE_SUPPORTED;\n/**\n * Checks if a loaders.gl image type is supported\n * @param type image type string\n */\nexport function isImageTypeSupported(type) {\n    switch (type) {\n        case 'auto':\n            // Should only ever be false in Node.js, if polyfills have not been installed...\n            return IMAGE_BITMAP_SUPPORTED || IMAGE_SUPPORTED || DATA_SUPPORTED;\n        case 'imagebitmap':\n            return IMAGE_BITMAP_SUPPORTED;\n        case 'image':\n            return IMAGE_SUPPORTED;\n        case 'data':\n            return DATA_SUPPORTED;\n        default:\n            throw new Error(`@loaders.gl/images: image ${type} not supported in this environment`);\n    }\n}\n/**\n * Returns the \"most performant\" supported image type on this platform\n * @returns image type string\n */\nexport function getDefaultImageType() {\n    if (IMAGE_BITMAP_SUPPORTED) {\n        return 'imagebitmap';\n    }\n    if (IMAGE_SUPPORTED) {\n        return 'image';\n    }\n    if (DATA_SUPPORTED) {\n        return 'data';\n    }\n    // This should only happen in Node.js\n    throw new Error('Install \\'@loaders.gl/polyfills\\' to parse images under Node.js');\n}\n", "export function isImage(image) {\n    return Boolean(getImageTypeOrNull(image));\n}\nexport function deleteImage(image) {\n    switch (getImageType(image)) {\n        case 'imagebitmap':\n            image.close();\n            break;\n        default:\n        // Nothing to do for images and image data objects\n    }\n}\nexport function getImageType(image) {\n    const format = getImageTypeOrNull(image);\n    if (!format) {\n        throw new Error('Not an image');\n    }\n    return format;\n}\nexport function getImageSize(image) {\n    return getImageData(image);\n}\nexport function getImageData(image) {\n    switch (getImageType(image)) {\n        case 'data':\n            return image;\n        case 'image':\n        case 'imagebitmap':\n            // Extract the image data from the image via a canvas\n            const canvas = document.createElement('canvas');\n            // TODO - reuse the canvas?\n            const context = canvas.getContext('2d');\n            if (!context) {\n                throw new Error('getImageData');\n            }\n            // @ts-ignore\n            canvas.width = image.width;\n            // @ts-ignore\n            canvas.height = image.height;\n            // @ts-ignore\n            context.drawImage(image, 0, 0);\n            // @ts-ignore\n            return context.getImageData(0, 0, image.width, image.height);\n        default:\n            throw new Error('getImageData');\n    }\n}\n// PRIVATE\n// eslint-disable-next-line complexity\nfunction getImageTypeOrNull(image) {\n    if (typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n        return 'imagebitmap';\n    }\n    if (typeof Image !== 'undefined' && image instanceof Image) {\n        return 'image';\n    }\n    if (image && typeof image === 'object' && image.data && image.width && image.height) {\n        return 'data';\n    }\n    return null;\n}\n", "// SVG parsing has limitations, e.g:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=606319\nconst SVG_DATA_URL_PATTERN = /^data:image\\/svg\\+xml/;\nconst SVG_URL_PATTERN = /\\.svg((\\?|#).*)?$/;\nexport function isSVG(url) {\n    return url && (SVG_DATA_URL_PATTERN.test(url) || SVG_URL_PATTERN.test(url));\n}\nexport function getBlobOrSVGDataUrl(arrayBuffer, url) {\n    if (isSVG(url)) {\n        // Prepare a properly tagged data URL, and load using normal mechanism\n        const textDecoder = new TextDecoder();\n        let xmlText = textDecoder.decode(arrayBuffer);\n        // TODO Escape in browser to support e.g. Chinese characters\n        try {\n            if (typeof unescape === 'function' && typeof encodeURIComponent === 'function') {\n                xmlText = unescape(encodeURIComponent(xmlText));\n            }\n        }\n        catch (error) {\n            throw new Error(error.message);\n        }\n        // base64 encoding is safer. utf-8 fails in some browsers\n        const src = `data:image/svg+xml;base64,${btoa(xmlText)}`;\n        return src;\n    }\n    return getBlob(arrayBuffer, url);\n}\nexport function getBlob(arrayBuffer, url) {\n    if (isSVG(url)) {\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=606319\n        // return new Blob([new Uint8Array(arrayBuffer)], {type: 'image/svg+xml'});\n        throw new Error('SVG cannot be parsed directly to imagebitmap');\n    }\n    // TODO - how to determine mime type? Param? Sniff here?\n    return new Blob([new Uint8Array(arrayBuffer)]); // MIME type not needed?\n}\n", "import { getBlobOrSVGDataUrl } from \"./svg-utils.js\";\n// Parses html image from array buffer\nexport async function parseToImage(arrayBuffer, options, url) {\n    // Note: image parsing requires conversion to Blob (for createObjectURL).\n    // Potentially inefficient for not using `response.blob()` (and for File / Blob inputs)...\n    // But presumably not worth adding 'blob' flag to loader objects?\n    const blobOrDataUrl = getBlobOrSVGDataUrl(arrayBuffer, url);\n    const URL = self.URL || self.webkitURL;\n    const objectUrl = typeof blobOrDataUrl !== 'string' && URL.createObjectURL(blobOrDataUrl);\n    try {\n        return await loadToImage(objectUrl || blobOrDataUrl, options);\n    }\n    finally {\n        if (objectUrl) {\n            URL.revokeObjectURL(objectUrl);\n        }\n    }\n}\nexport async function loadToImage(url, options) {\n    const image = new Image();\n    image.src = url;\n    // The `image.onload()` callback does not guarantee that the image has been decoded\n    // so a main thread \"freeze\" can be incurred when using the image for the first time.\n    // `Image.decode()` returns a promise that completes when image is decoded.\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/decode\n    // Note: When calling `img.decode()`, we do not need to wait for `img.onload()`\n    // Note: `HTMLImageElement.decode()` is not available in Edge and IE11\n    if (options.image && options.image.decode && image.decode) {\n        await image.decode();\n        return image;\n    }\n    // Create a promise that tracks onload/onerror callbacks\n    return await new Promise((resolve, reject) => {\n        try {\n            image.onload = () => resolve(image);\n            image.onerror = (error) => {\n                const message = error instanceof Error ? error.message : 'error';\n                reject(new Error(message));\n            };\n        }\n        catch (error) {\n            reject(error);\n        }\n    });\n}\n", "import { isSVG, getBlob } from \"./svg-utils.js\";\nimport { parseToImage } from \"./parse-to-image.js\";\nconst EMPTY_OBJECT = {};\nlet imagebitmapOptionsSupported = true;\n/**\n * Asynchronously parses an array buffer into an ImageBitmap - this contains the decoded data\n * ImageBitmaps are supported on worker threads, but not supported on Edge, IE11 and Safari\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap#Browser_compatibility\n *\n * TODO - createImageBitmap supports source rect (5 param overload), pass through?\n */\nexport async function parseToImageBitmap(arrayBuffer, options, url) {\n    let blob;\n    // Cannot parse SVG directly to ImageBitmap, parse to Image first\n    if (isSVG(url)) {\n        // Note: this only works on main thread\n        const image = await parseToImage(arrayBuffer, options, url);\n        blob = image;\n    }\n    else {\n        // Create blob from the array buffer\n        blob = getBlob(arrayBuffer, url);\n    }\n    const imagebitmapOptions = options && options.imagebitmap;\n    return await safeCreateImageBitmap(blob, imagebitmapOptions);\n}\n/**\n * Safely creates an imageBitmap with options\n * *\n * Firefox crashes if imagebitmapOptions is supplied\n * Avoid supplying if not provided or supported, remember if not supported\n */\nasync function safeCreateImageBitmap(blob, imagebitmapOptions = null) {\n    if (isEmptyObject(imagebitmapOptions) || !imagebitmapOptionsSupported) {\n        imagebitmapOptions = null;\n    }\n    if (imagebitmapOptions) {\n        try {\n            // @ts-ignore Options\n            return await createImageBitmap(blob, imagebitmapOptions);\n        }\n        catch (error) {\n            console.warn(error); // eslint-disable-line\n            imagebitmapOptionsSupported = false;\n        }\n    }\n    return await createImageBitmap(blob);\n}\nfunction isEmptyObject(object) {\n    // @ts-ignore\n    for (const key in object || EMPTY_OBJECT) {\n        return false;\n    }\n    return true;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// code adapted from https://github.com/sindresorhus/file-type under MIT license\n/**\n * Tests if a buffer is in ISO base media file format (ISOBMFF) @see https://en.wikipedia.org/wiki/ISO_base_media_file_format\n * (ISOBMFF is a media container standard based on the Apple QuickTime container format)\n */\nexport function getISOBMFFMediaType(buffer) {\n    // Almost all ISO base media files start with `ftyp` box. (It's not required to be first, but it's recommended to be.)\n    if (!checkString(buffer, 'ftyp', 4)) {\n        return null;\n    }\n    // Extra check: test for 8859-1 printable characters (for simplicity, it's a mask which also catches one non-printable character).\n    if ((buffer[8] & 0x60) === 0x00) {\n        return null;\n    }\n    // `ftyp` box must contain a brand major identifier, which must consist of ISO 8859-1 printable characters.\n    return decodeMajorBrand(buffer);\n}\n/**\n * brands explained @see https://github.com/strukturag/libheif/issues/83\n * code adapted from @see https://github.com/sindresorhus/file-type/blob/main/core.js#L489-L492\n */\nexport function decodeMajorBrand(buffer) {\n    const brandMajor = getUTF8String(buffer, 8, 12).replace('\\0', ' ').trim();\n    switch (brandMajor) {\n        case 'avif':\n        case 'avis':\n            return { extension: 'avif', mimeType: 'image/avif' };\n        default:\n            return null;\n    }\n    // We don't need these now, but they are easy to add\n    // case 'mif1':\n    //   return {extension: 'heic', mimeType: 'image/heif'};\n    // case 'msf1':\n    //   return {extension: 'heic', mimeType: 'image/heif-sequence'};\n    // case 'heic':\n    // case 'heix':\n    //   return {extension: 'heic', mimeType: 'image/heic'};\n    // case 'hevc':\n    // case 'hevx':\n    //   return {extension: 'heic', mimeType: 'image/heic-sequence'};\n    // case 'qt':\n    //   return {ext: 'mov', mime: 'video/quicktime'};\n    // case 'M4V':\n    // case 'M4VH':\n    // case 'M4VP':\n    //   return {ext: 'm4v', mime: 'video/x-m4v'};\n    // case 'M4P':\n    //   return {ext: 'm4p', mime: 'video/mp4'};\n    // case 'M4B':\n    //   return {ext: 'm4b', mime: 'audio/mp4'};\n    // case 'M4A':\n    //   return {ext: 'm4a', mime: 'audio/x-m4a'};\n    // case 'F4V':\n    //   return {ext: 'f4v', mime: 'video/mp4'};\n    // case 'F4P':\n    //   return {ext: 'f4p', mime: 'video/mp4'};\n    // case 'F4A':\n    //   return {ext: 'f4a', mime: 'audio/mp4'};\n    // case 'F4B':\n    //   return {ext: 'f4b', mime: 'audio/mp4'};\n    // case 'crx':\n    //   return {ext: 'cr3', mime: 'image/x-canon-cr3'};\n    // default:\n    // if (brandMajor.startsWith('3g')) {\n    //   if (brandMajor.startsWith('3g2')) {\n    //     return {ext: '3g2', mime: 'video/3gpp2'};\n    //   }\n    //   return {ext: '3gp', mime: 'video/3gpp'};\n    // }\n    // return {ext: 'mp4', mime: 'video/mp4'};\n}\n/** Interpret a chunk of bytes as a UTF8 string */\nfunction getUTF8String(array, start, end) {\n    return String.fromCharCode(...array.slice(start, end));\n}\nfunction stringToBytes(string) {\n    return [...string].map((character) => character.charCodeAt(0));\n}\nfunction checkString(buffer, header, offset = 0) {\n    const headerBytes = stringToBytes(header);\n    for (let i = 0; i < headerBytes.length; ++i) {\n        if (headerBytes[i] !== buffer[i + offset]) {\n            return false;\n        }\n    }\n    return true;\n}\n", "// Attributions\n// * Based on binary-gltf-utils under MIT license: Copyright (c) 2016-17 Karl Cheng\nimport { getISOBMFFMediaType } from \"./parse-isobmff-binary.js\";\nconst BIG_ENDIAN = false;\nconst LITTLE_ENDIAN = true;\n/**\n * Extracts `{mimeType, width and height}` from a memory buffer containing a known image format\n * Currently supports `image/png`, `image/jpeg`, `image/bmp` and `image/gif`.\n * @param binaryData: DataView | ArrayBuffer image file memory to parse\n * @returns metadata or null if memory is not a valid image file format layout.\n */\nexport function getBinaryImageMetadata(binaryData) {\n    const dataView = toDataView(binaryData);\n    return (getPngMetadata(dataView) ||\n        getJpegMetadata(dataView) ||\n        getGifMetadata(dataView) ||\n        getBmpMetadata(dataView) ||\n        getISOBMFFMetadata(dataView));\n}\n// ISOBMFF\nfunction getISOBMFFMetadata(binaryData) {\n    const buffer = new Uint8Array(binaryData instanceof DataView ? binaryData.buffer : binaryData);\n    const mediaType = getISOBMFFMediaType(buffer);\n    if (!mediaType) {\n        return null;\n    }\n    return {\n        mimeType: mediaType.mimeType,\n        // TODO - decode width and height\n        width: 0,\n        height: 0\n    };\n}\n// PNG\nfunction getPngMetadata(binaryData) {\n    const dataView = toDataView(binaryData);\n    // Check file contains the first 4 bytes of the PNG signature.\n    const isPng = dataView.byteLength >= 24 && dataView.getUint32(0, BIG_ENDIAN) === 0x89504e47;\n    if (!isPng) {\n        return null;\n    }\n    // Extract size from a binary PNG file\n    return {\n        mimeType: 'image/png',\n        width: dataView.getUint32(16, BIG_ENDIAN),\n        height: dataView.getUint32(20, BIG_ENDIAN)\n    };\n}\n// GIF\n// Extract size from a binary GIF file\n// TODO: GIF is not this simple\nfunction getGifMetadata(binaryData) {\n    const dataView = toDataView(binaryData);\n    // Check first 4 bytes of the GIF signature (\"GIF8\").\n    const isGif = dataView.byteLength >= 10 && dataView.getUint32(0, BIG_ENDIAN) === 0x47494638;\n    if (!isGif) {\n        return null;\n    }\n    // GIF is little endian.\n    return {\n        mimeType: 'image/gif',\n        width: dataView.getUint16(6, LITTLE_ENDIAN),\n        height: dataView.getUint16(8, LITTLE_ENDIAN)\n    };\n}\n// BMP\n// TODO: BMP is not this simple\nexport function getBmpMetadata(binaryData) {\n    const dataView = toDataView(binaryData);\n    // Check magic number is valid (first 2 characters should be \"BM\").\n    // The mandatory bitmap file header is 14 bytes long.\n    const isBmp = dataView.byteLength >= 14 &&\n        dataView.getUint16(0, BIG_ENDIAN) === 0x424d &&\n        dataView.getUint32(2, LITTLE_ENDIAN) === dataView.byteLength;\n    if (!isBmp) {\n        return null;\n    }\n    // BMP is little endian.\n    return {\n        mimeType: 'image/bmp',\n        width: dataView.getUint32(18, LITTLE_ENDIAN),\n        height: dataView.getUint32(22, LITTLE_ENDIAN)\n    };\n}\n// JPEG\n// Extract width and height from a binary JPEG file\nfunction getJpegMetadata(binaryData) {\n    const dataView = toDataView(binaryData);\n    // Check file contains the JPEG \"start of image\" (SOI) marker\n    // followed by another marker.\n    const isJpeg = dataView.byteLength >= 3 &&\n        dataView.getUint16(0, BIG_ENDIAN) === 0xffd8 &&\n        dataView.getUint8(2) === 0xff;\n    if (!isJpeg) {\n        return null;\n    }\n    const { tableMarkers, sofMarkers } = getJpegMarkers();\n    // Exclude the two byte SOI marker.\n    let i = 2;\n    while (i + 9 < dataView.byteLength) {\n        const marker = dataView.getUint16(i, BIG_ENDIAN);\n        // The frame that contains the width and height of the JPEG image.\n        if (sofMarkers.has(marker)) {\n            return {\n                mimeType: 'image/jpeg',\n                height: dataView.getUint16(i + 5, BIG_ENDIAN), // Number of lines\n                width: dataView.getUint16(i + 7, BIG_ENDIAN) // Number of pixels per line\n            };\n        }\n        // Miscellaneous tables/data preceding the frame header.\n        if (!tableMarkers.has(marker)) {\n            return null;\n        }\n        // Length includes size of length parameter but not the two byte header.\n        i += 2;\n        i += dataView.getUint16(i, BIG_ENDIAN);\n    }\n    return null;\n}\nfunction getJpegMarkers() {\n    // Tables/misc header markers.\n    // DQT, DHT, DAC, DRI, COM, APP_n\n    const tableMarkers = new Set([0xffdb, 0xffc4, 0xffcc, 0xffdd, 0xfffe]);\n    for (let i = 0xffe0; i < 0xfff0; ++i) {\n        tableMarkers.add(i);\n    }\n    // SOF markers and DHP marker.\n    // These markers are after tables/misc data.\n    const sofMarkers = new Set([\n        0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc5, 0xffc6, 0xffc7, 0xffc9, 0xffca, 0xffcb, 0xffcd, 0xffce,\n        0xffcf, 0xffde\n    ]);\n    return { tableMarkers, sofMarkers };\n}\n// TODO - move into image module?\nfunction toDataView(data) {\n    if (data instanceof DataView) {\n        return data;\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new DataView(data.buffer);\n    }\n    // TODO: make these functions work for Node.js buffers?\n    // if (bufferToArrayBuffer) {\n    //   data = bufferToArrayBuffer(data);\n    // }\n    // Careful - Node Buffers will look like ArrayBuffers (keep after isBuffer)\n    if (data instanceof ArrayBuffer) {\n        return new DataView(data);\n    }\n    throw new Error('toDataView');\n}\n", "import { assert } from '@loaders.gl/loader-utils';\nimport { getBinaryImageMetadata } from \"../category-api/binary-image-api.js\";\n// Use polyfills if installed to parsed image using get-pixels\nexport async function parseToNodeImage(arrayBuffer, options) {\n    const { mimeType } = getBinaryImageMetadata(arrayBuffer) || {};\n    // @ts-ignore\n    const parseImageNode = globalThis.loaders?.parseImageNode;\n    assert(parseImageNode); // '@loaders.gl/polyfills not installed'\n    // @ts-expect-error TODO should we throw error in this case?\n    return await parseImageNode(arrayBuffer, mimeType);\n}\n", "import { assert } from '@loaders.gl/loader-utils';\nimport { isImageTypeSupported, getDefaultImageType } from \"../category-api/image-type.js\";\nimport { getImageData } from \"../category-api/parsed-image-api.js\";\nimport { parseToImage } from \"./parse-to-image.js\";\nimport { parseToImageBitmap } from \"./parse-to-image-bitmap.js\";\nimport { parseToNodeImage } from \"./parse-to-node-image.js\";\n// Parse to platform defined image type (data on node, ImageBitmap or HTMLImage on browser)\n// eslint-disable-next-line complexity\nexport async function parseImage(arrayBuffer, options, context) {\n    options = options || {};\n    const imageOptions = options.image || {};\n    // The user can request a specific output format via `options.image.type`\n    const imageType = imageOptions.type || 'auto';\n    const { url } = context || {};\n    // Note: For options.image.type === `data`, we may still need to load as `image` or `imagebitmap`\n    const loadType = getLoadableImageType(imageType);\n    let image;\n    switch (loadType) {\n        case 'imagebitmap':\n            image = await parseToImageBitmap(arrayBuffer, options, url);\n            break;\n        case 'image':\n            image = await parseToImage(arrayBuffer, options, url);\n            break;\n        case 'data':\n            // Node.js loads imagedata directly\n            image = await parseToNodeImage(arrayBuffer, options);\n            break;\n        default:\n            assert(false);\n    }\n    // Browser: if options.image.type === 'data', we can now extract data from the loaded image\n    if (imageType === 'data') {\n        image = getImageData(image);\n    }\n    return image;\n}\n// Get a loadable image type from image type\nfunction getLoadableImageType(type) {\n    switch (type) {\n        case 'auto':\n        case 'data':\n            // Browser: For image data we need still need to load using an image format\n            // Node: the default image type is `data`.\n            return getDefaultImageType();\n        default:\n            // Throw an error if not supported\n            isImageTypeSupported(type);\n            return type;\n    }\n}\n", "// import type { ImageType } from '@loaders.gl/schema';\nimport { VERSION } from \"./lib/utils/version.js\";\nimport { parseImage } from \"./lib/parsers/parse-image.js\";\nimport { getBinaryImageMetadata } from \"./lib/category-api/binary-image-api.js\";\nconst EXTENSIONS = ['png', 'jpg', 'jpeg', 'gif', 'webp', 'bmp', 'ico', 'svg', 'avif'];\nconst MIME_TYPES = [\n    'image/png',\n    'image/jpeg',\n    'image/gif',\n    'image/webp',\n    'image/avif',\n    'image/bmp',\n    'image/vnd.microsoft.icon',\n    'image/svg+xml'\n];\nconst DEFAULT_IMAGE_LOADER_OPTIONS = {\n    image: {\n        type: 'auto',\n        decode: true // if format is HTML\n    }\n    // imagebitmap: {} - passes (platform dependent) parameters to ImageBitmap constructor\n};\n/**\n * Loads a platform-specific image type\n * Note: This type can be used as input data to WebGL texture creation\n */\nexport const ImageLoader = {\n    dataType: null,\n    batchType: null,\n    id: 'image',\n    module: 'images',\n    name: 'Images',\n    version: VERSION,\n    mimeTypes: MIME_TYPES,\n    extensions: EXTENSIONS,\n    parse: parseImage,\n    // TODO: byteOffset, byteLength;\n    tests: [(arrayBuffer) => Boolean(getBinaryImageMetadata(new DataView(arrayBuffer)))],\n    options: DEFAULT_IMAGE_LOADER_OPTIONS\n};\n", "import { getImageSize } from \"../category-api/parsed-image-api.js\";\n// @ts-ignore TS2339: Property does not exist on type\nconst encodeImageNode = globalThis.loaders?.encodeImageNode;\n/**\n * Returns data bytes representing a compressed image in PNG or JPG format,\n * This data can be saved using file system (f) methods or used in a request.\n * @param image - ImageBitmap Image or Canvas\n * @param options\n * param opt.type='png' - png, jpg or image/png, image/jpg are valid\n * param mimeType= - Whether to include a data URI header\n */\nexport async function encodeImage(image, options) {\n    options = options || {};\n    options.image = options.image || {};\n    return encodeImageNode\n        ? encodeImageNode(image, { type: options.image.mimeType })\n        : encodeImageInBrowser(image, options);\n}\n// In case we get exceptions from canvas.toBlob(resolve, type, quality)\nlet qualityParamSupported = true;\n/**\n *\n * @param image\n * @param options\n * @note Based on canvas.toBlob\n * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob\n */\nasync function encodeImageInBrowser(image, options) {\n    const { mimeType, jpegQuality } = options.image;\n    const { width, height } = getImageSize(image);\n    // create a canvas and resize it to the size of our image\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    drawImageToCanvas(image, canvas);\n    // The actual encoding is done asynchronously with `canvas.toBlob()`\n    const blob = await new Promise((resolve) => {\n        // get it back as a Blob\n        if (jpegQuality && qualityParamSupported) {\n            try {\n                canvas.toBlob(resolve, mimeType, jpegQuality);\n                return;\n            }\n            catch (error) {\n                qualityParamSupported = false;\n            }\n        }\n        canvas.toBlob(resolve, mimeType);\n    });\n    if (!blob) {\n        throw new Error('image encoding failed');\n    }\n    return await blob.arrayBuffer();\n}\nfunction drawImageToCanvas(image, canvas, x = 0, y = 0) {\n    // Try optimized path for ImageBitmaps via bitmaprenderer context\n    if (x === 0 && y === 0 && typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n        const context = canvas.getContext('bitmaprenderer');\n        if (context) {\n            // transfer the ImageBitmap to it\n            context.transferFromImageBitmap(image);\n            return canvas;\n        }\n    }\n    // Available on most platforms, except IE11 and Andriod WebViews...\n    const context = canvas.getContext('2d');\n    if (image.data) {\n        // ImageData constructor expects clamped array even though getImageData does not return a clamped array...\n        const clampedArray = new Uint8ClampedArray(image.data);\n        const imageData = new ImageData(clampedArray, image.width, image.height);\n        context.putImageData(imageData, 0, 0);\n        return canvas;\n    }\n    // Fall back to generic image/image bitmap rendering path\n    context.drawImage(image, 0, 0);\n    return canvas;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Log} from '@probe.gl/log';\n\nconst defaultLogger: Log = new Log({id: 'deck'});\n\nexport default defaultLogger;\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Log} from '@probe.gl/log';\n\nconst logState: {\n  attributeUpdateStart: number;\n  attributeManagerUpdateStart: number;\n  attributeUpdateMessages: string[];\n} = {\n  attributeUpdateStart: -1,\n  attributeManagerUpdateStart: -1,\n  attributeUpdateMessages: []\n};\n\nconst LOG_LEVEL_MAJOR_UPDATE = 1; // Events with direct perf impact\nconst LOG_LEVEL_MINOR_UPDATE = 2; // Events that may affect perf\nconst LOG_LEVEL_UPDATE_DETAIL = 3;\nconst LOG_LEVEL_INFO = 4;\nconst LOG_LEVEL_DRAW = 2;\n\nexport const getLoggers = (log: Log): Record<string, Function> => ({\n  /* Layer events */\n\n  'layer.changeFlag': (layer, key, flags) => {\n    log.log(LOG_LEVEL_UPDATE_DETAIL, `${layer.id} ${key}: `, flags[key])();\n  },\n\n  'layer.initialize': layer => {\n    log.log(LOG_LEVEL_MAJOR_UPDATE, `Initializing ${layer}`)();\n  },\n  'layer.update': (layer, needsUpdate) => {\n    if (needsUpdate) {\n      const flags = layer.getChangeFlags();\n      log.log(\n        LOG_LEVEL_MINOR_UPDATE,\n        `Updating ${layer} because: ${Object.keys(flags)\n          .filter(key => flags[key])\n          .join(', ')}`\n      )();\n    } else {\n      log.log(LOG_LEVEL_INFO, `${layer} does not need update`)();\n    }\n  },\n  'layer.matched': (layer, changed) => {\n    if (changed) {\n      log.log(LOG_LEVEL_INFO, `Matched ${layer}, state transfered`)();\n    }\n  },\n  'layer.finalize': layer => {\n    log.log(LOG_LEVEL_MAJOR_UPDATE, `Finalizing ${layer}`)();\n  },\n\n  /* CompositeLayer events */\n\n  'compositeLayer.renderLayers': (layer, updated, subLayers) => {\n    if (updated) {\n      log.log(\n        LOG_LEVEL_MINOR_UPDATE,\n        `Composite layer rendered new subLayers ${layer}`,\n        subLayers\n      )();\n    } else {\n      log.log(LOG_LEVEL_INFO, `Composite layer reused subLayers ${layer}`, subLayers)();\n    }\n  },\n\n  /* LayerManager events */\n\n  'layerManager.setLayers': (layerManager, updated, layers) => {\n    if (updated) {\n      log.log(LOG_LEVEL_MINOR_UPDATE, `Updating ${layers.length} deck layers`)();\n    }\n  },\n\n  'layerManager.activateViewport': (layerManager, viewport) => {\n    log.log(LOG_LEVEL_UPDATE_DETAIL, 'Viewport changed', viewport)();\n  },\n\n  /* AttributeManager events */\n\n  'attributeManager.invalidate': (attributeManager, trigger, attributeNames) => {\n    log.log(\n      LOG_LEVEL_MAJOR_UPDATE,\n      attributeNames\n        ? `invalidated attributes ${attributeNames} (${trigger}) for ${attributeManager.id}`\n        : `invalidated all attributes for ${attributeManager.id}`\n    )();\n  },\n\n  'attributeManager.updateStart': attributeManager => {\n    logState.attributeUpdateMessages.length = 0;\n    logState.attributeManagerUpdateStart = Date.now();\n  },\n  'attributeManager.updateEnd': (attributeManager, numInstances) => {\n    const timeMs = Math.round(Date.now() - logState.attributeManagerUpdateStart);\n    log.groupCollapsed(\n      LOG_LEVEL_MINOR_UPDATE,\n      `Updated attributes for ${numInstances} instances in ${attributeManager.id} in ${timeMs}ms`\n    )();\n    for (const updateMessage of logState.attributeUpdateMessages) {\n      log.log(LOG_LEVEL_UPDATE_DETAIL, updateMessage)();\n    }\n    log.groupEnd(LOG_LEVEL_MINOR_UPDATE)();\n  },\n\n  /* Attribute events */\n\n  'attribute.updateStart': attribute => {\n    logState.attributeUpdateStart = Date.now();\n  },\n  'attribute.allocate': (attribute, numInstances) => {\n    const message = `${attribute.id} allocated ${numInstances}`;\n    logState.attributeUpdateMessages.push(message);\n  },\n  'attribute.updateEnd': (attribute, numInstances) => {\n    const timeMs = Math.round(Date.now() - logState.attributeUpdateStart);\n    const message = `${attribute.id} updated ${numInstances} in ${timeMs}ms`;\n    logState.attributeUpdateMessages.push(message);\n  },\n\n  /* Render events */\n\n  'deckRenderer.renderLayers': (deckRenderer, renderStats, opts) => {\n    const {pass, redrawReason, stats} = opts;\n    for (const status of renderStats) {\n      const {totalCount, visibleCount, compositeCount, pickableCount} = status;\n      const primitiveCount = totalCount - compositeCount;\n      const hiddenCount = primitiveCount - visibleCount;\n\n      log.log(\n        LOG_LEVEL_DRAW,\n        `RENDER #${deckRenderer.renderCount} \\\n  ${visibleCount} (of ${totalCount} layers) to ${pass} because ${redrawReason} \\\n  (${hiddenCount} hidden, ${compositeCount} composite ${pickableCount} pickable)`\n      )();\n\n      if (stats) {\n        stats.get('Redraw Layers').add(visibleCount);\n      }\n    }\n  }\n});\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport deckLog from '../utils/log';\nimport {getLoggers} from './loggers';\n\n/* debug utility */\n\nlet loggers: Record<string, Function> = {};\n\n// Conditionally load default loggers in development mode\n// eslint-disable-next-line\nif (process.env.NODE_ENV !== 'production') {\n  loggers = getLoggers(deckLog);\n}\n\nexport function register(handlers: Record<string, Function>): void {\n  loggers = handlers;\n}\n\nexport default function debug(eventType: string, arg1?: any, arg2?: any, arg3?: any): void {\n  if (deckLog.level > 0 && loggers[eventType]) {\n    // Not using rest parameters to defeat perf hit from array construction\n    loggers[eventType].call(null, arg1, arg2, arg3);\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Loader} from '@loaders.gl/loader-utils';\n\nfunction isJSON(text: string): boolean {\n  const firstChar = text[0];\n  const lastChar = text[text.length - 1];\n  return (firstChar === '{' && lastChar === '}') || (firstChar === '[' && lastChar === ']');\n}\n\n// A light weight version instead of @loaders.gl/json (stream processing etc.)\nexport default {\n  dataType: null as any,\n  batchType: null as never,\n  id: 'JSON',\n  name: 'JSON',\n  module: '',\n  version: '',\n  options: {},\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json', 'application/geo+json'],\n  testText: isJSON,\n  parseTextSync: JSON.parse\n} as Loader;\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {registerLoaders} from '@loaders.gl/core';\nimport {ImageLoader} from '@loaders.gl/images';\n\nimport log from '../utils/log';\nimport {register} from '../debug/index';\nimport jsonLoader from '../utils/json-loader';\n\ndeclare global {\n  const __VERSION__: string;\n}\n\nfunction checkVersion() {\n  // Version detection using typescript plugin.\n  // Fallback for tests and SSR since global variable is defined by esbuild.\n  const version =\n    typeof __VERSION__ !== 'undefined'\n      ? __VERSION__\n      : globalThis.DECK_VERSION || 'untranspiled source';\n\n  // Note: a `deck` object not created by deck.gl may exist in the global scope\n  const existingVersion = globalThis.deck && globalThis.deck.VERSION;\n\n  if (existingVersion && existingVersion !== version) {\n    throw new Error(`deck.gl - multiple versions detected: ${existingVersion} vs ${version}`);\n  }\n\n  if (!existingVersion) {\n    log.log(1, `deck.gl ${version}`)();\n\n    globalThis.deck = {\n      ...globalThis.deck,\n      VERSION: version,\n      version,\n      log,\n      // experimental\n      _registerLoggers: register\n    };\n\n    registerLoaders([\n      jsonLoader,\n      // @ts-expect-error non-standard Loader format\n      [ImageLoader, {imagebitmap: {premultiplyAlpha: 'none'}}]\n    ]);\n  }\n\n  return version;\n}\n\nexport const VERSION = checkVersion();\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Recommendation is to ignore message but current test suite checks agains the\n// message so keep it for now.\nexport function assert(condition: unknown, message?: string): void {\n  if (!condition) {\n    throw new Error(message || 'shadertools: assertion failed.');\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {assert} from '../utils/assert';\n\n/**\n * For use by shader module and shader pass writers to describe the types of the\n * properties they expose (properties ultimately map to uniforms).\n */\nexport type PropType =\n  | {\n      type?: string;\n      value?: unknown;\n      max?: number;\n      min?: number;\n      softMax?: number;\n      softMin?: number;\n      hint?: string;\n      /** @deprecated internal uniform */\n      private?: boolean;\n    }\n  | number;\n\n/**\n * Internal property validators generated by processing the prop types ,\n * The `validate()` method can be used to validate the type of properties passed in to\n * shader module or shader pass\n */\nexport type PropValidator = {\n  type: string;\n  value?: unknown;\n  max?: number;\n  min?: number;\n  private?: boolean;\n  validate?(value: unknown, propDef: PropValidator): boolean;\n};\n\n/** Minimal validators for number and array types */\nconst DEFAULT_PROP_VALIDATORS: Record<string, PropValidator> = {\n  number: {\n    type: 'number',\n    validate(value: unknown, propType: PropType) {\n      return (\n        Number.isFinite(value) &&\n        typeof propType === 'object' &&\n        (propType.max === undefined || (value as number) <= propType.max) &&\n        (propType.min === undefined || (value as number) >= propType.min)\n      );\n    }\n  },\n  array: {\n    type: 'array',\n    validate(value: unknown, propType: PropType) {\n      return Array.isArray(value) || ArrayBuffer.isView(value);\n    }\n  }\n};\n\n/**\n * Parse a list of property types into property definitions that can be used to validate\n * values passed in by applications.\n * @param propTypes\n * @returns\n */\nexport function makePropValidators(\n  propTypes: Record<string, PropType>\n): Record<string, PropValidator> {\n  const propValidators: Record<string, PropValidator> = {};\n  for (const [name, propType] of Object.entries(propTypes)) {\n    propValidators[name] = makePropValidator(propType);\n  }\n  return propValidators;\n}\n\n/**\n * Validate a map of user supplied properties against a map of validators\n * Inject default values when user doesn't supply a property\n * @param properties\n * @param propValidators\n * @returns\n */\nexport function getValidatedProperties(\n  properties: Record<string, unknown>,\n  propValidators: Record<string, PropValidator>,\n  errorMessage: string\n): Record<string, unknown> {\n  const validated: Record<string, unknown> = {};\n\n  for (const [key, propsValidator] of Object.entries(propValidators)) {\n    if (properties && key in properties && !propsValidator.private) {\n      if (propsValidator.validate) {\n        assert(\n          propsValidator.validate(properties[key], propsValidator),\n          `${errorMessage}: invalid ${key}`\n        );\n      }\n      validated[key] = properties[key];\n    } else {\n      // property not supplied - use default value\n      validated[key] = propsValidator.value;\n    }\n  }\n\n  // TODO - warn for unused properties that don't match a validator?\n\n  return validated;\n}\n\n/**\n * Creates a property validator for a prop type. Either contains:\n * - a valid prop type object ({type, ...})\n * - or just a default value, in which case type and name inference is used\n */\nfunction makePropValidator(propType: PropType): PropValidator {\n  let type = getTypeOf(propType);\n\n  if (type !== 'object') {\n    return {value: propType, ...DEFAULT_PROP_VALIDATORS[type], type};\n  }\n\n  // Special handling for objects\n  if (typeof propType === 'object') {\n    if (!propType) {\n      return {type: 'object', value: null};\n    }\n    if (propType.type !== undefined) {\n      return {...propType, ...DEFAULT_PROP_VALIDATORS[propType.type], type: propType.type};\n    }\n    // If no type and value this object is likely the value\n    if (propType.value === undefined) {\n      return {type: 'object', value: propType};\n    }\n\n    type = getTypeOf(propType.value);\n    return {...propType, ...DEFAULT_PROP_VALIDATORS[type], type};\n  }\n\n  throw new Error('props');\n}\n\n/**\n * \"improved\" version of javascript typeof that can distinguish arrays and null values\n */\nfunction getTypeOf(value: unknown): string {\n  if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n    return 'array';\n  }\n  return typeof value;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nexport const MODULE_INJECTORS_VS = /* glsl */ `\\\n#ifdef MODULE_LOGDEPTH\n  logdepth_adjustPosition(gl_Position);\n#endif\n`;\n\nexport const MODULE_INJECTORS_FS = /* glsl */ `\\\n#ifdef MODULE_MATERIAL\n  fragColor = material_filterColor(fragColor);\n#endif\n\n#ifdef MODULE_LIGHTING\n  fragColor = lighting_filterColor(fragColor);\n#endif\n\n#ifdef MODULE_FOG\n  fragColor = fog_filterColor(fragColor);\n#endif\n\n#ifdef MODULE_PICKING\n  fragColor = picking_filterHighlightColor(fragColor);\n  fragColor = picking_filterPickingColor(fragColor);\n#endif\n\n#ifdef MODULE_LOGDEPTH\n  logdepth_setFragDepth();\n#endif\n`;\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {MODULE_INJECTORS_VS, MODULE_INJECTORS_FS} from '../../module-injectors';\nimport {assert} from '../utils/assert';\n\n// TODO - experimental\nconst MODULE_INJECTORS = {\n  vertex: MODULE_INJECTORS_VS,\n  fragment: MODULE_INJECTORS_FS\n};\n\nconst REGEX_START_OF_MAIN = /void\\s+main\\s*\\([^)]*\\)\\s*\\{\\n?/; // Beginning of main\nconst REGEX_END_OF_MAIN = /}\\n?[^{}]*$/; // End of main, assumes main is last function\nconst fragments: string[] = [];\n\nexport const DECLARATION_INJECT_MARKER = '__LUMA_INJECT_DECLARATIONS__';\n\n/**\n *\n */\nexport type ShaderInjection = {\n  injection: string;\n  order: number;\n};\n\n/**\n *  ShaderInjections, parsed and split per shader\n */\nexport type ShaderInjections = {\n  vertex: Record<string, ShaderInjection>;\n  fragment: Record<string, ShaderInjection>;\n};\n\n/**\n *\n */\nexport function normalizeInjections(\n  injections: Record<string, string | ShaderInjection>\n): ShaderInjections {\n  const result: ShaderInjections = {vertex: {}, fragment: {}};\n\n  for (const hook in injections) {\n    let injection = injections[hook];\n    const stage = getHookStage(hook);\n    if (typeof injection === 'string') {\n      injection = {\n        order: 0,\n        injection\n      };\n    }\n\n    result[stage][hook] = injection;\n  }\n\n  return result;\n}\n\nfunction getHookStage(hook: string): 'vertex' | 'fragment' {\n  const type = hook.slice(0, 2);\n  switch (type) {\n    case 'vs':\n      return 'vertex';\n    case 'fs':\n      return 'fragment';\n    default:\n      throw new Error(type);\n  }\n}\n\n/**\n// A minimal shader injection/templating system.\n// RFC: https://github.com/visgl/luma.gl/blob/7.0-release/dev-docs/RFCs/v6.0/shader-injection-rfc.md\n * @param source \n * @param type \n * @param inject \n * @param injectStandardStubs \n * @returns \n */\n// eslint-disable-next-line complexity\nexport function injectShader(\n  source: string,\n  stage: 'vertex' | 'fragment',\n  inject: Record<string, ShaderInjection[]>,\n  injectStandardStubs = false\n): string {\n  const isVertex = stage === 'vertex';\n\n  for (const key in inject) {\n    const fragmentData = inject[key];\n    fragmentData.sort((a: ShaderInjection, b: ShaderInjection): number => a.order - b.order);\n    fragments.length = fragmentData.length;\n    for (let i = 0, len = fragmentData.length; i < len; ++i) {\n      fragments[i] = fragmentData[i].injection;\n    }\n    const fragmentString = `${fragments.join('\\n')}\\n`;\n    switch (key) {\n      // declarations are injected before the main function\n      case 'vs:#decl':\n        if (isVertex) {\n          source = source.replace(DECLARATION_INJECT_MARKER, fragmentString);\n        }\n        break;\n      // inject code at the beginning of the main function\n      case 'vs:#main-start':\n        if (isVertex) {\n          source = source.replace(REGEX_START_OF_MAIN, (match: string) => match + fragmentString);\n        }\n        break;\n      // inject code at the end of main function\n      case 'vs:#main-end':\n        if (isVertex) {\n          source = source.replace(REGEX_END_OF_MAIN, (match: string) => fragmentString + match);\n        }\n        break;\n      // declarations are injected before the main function\n      case 'fs:#decl':\n        if (!isVertex) {\n          source = source.replace(DECLARATION_INJECT_MARKER, fragmentString);\n        }\n        break;\n      // inject code at the beginning of the main function\n      case 'fs:#main-start':\n        if (!isVertex) {\n          source = source.replace(REGEX_START_OF_MAIN, (match: string) => match + fragmentString);\n        }\n        break;\n      // inject code at the end of main function\n      case 'fs:#main-end':\n        if (!isVertex) {\n          source = source.replace(REGEX_END_OF_MAIN, (match: string) => fragmentString + match);\n        }\n        break;\n\n      default:\n        // TODO(Tarek): I think this usage should be deprecated.\n\n        // inject code after key, leaving key in place\n        source = source.replace(key, (match: string) => match + fragmentString);\n    }\n  }\n\n  // Remove if it hasn't already been replaced\n  source = source.replace(DECLARATION_INJECT_MARKER, '');\n\n  // Finally, if requested, insert an automatic module injector chunk\n  if (injectStandardStubs) {\n    source = source.replace(/\\}\\s*$/, (match: string) => match + MODULE_INJECTORS[stage]);\n  }\n\n  return source;\n}\n\n// Takes an array of inject objects and combines them into one\nexport function combineInjects(injects: any[]): Record<string, string> {\n  const result: Record<string, string> = {};\n  assert(Array.isArray(injects) && injects.length > 1);\n  injects.forEach(inject => {\n    for (const key in inject) {\n      result[key] = result[key] ? `${result[key]}\\n${inject[key]}` : inject[key];\n    }\n  });\n  return result;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {UniformFormat} from '../../types';\nimport {\n  PropType,\n  PropValidator,\n  makePropValidators,\n  getValidatedProperties\n} from '../filters/prop-types';\nimport type {UniformTypes, UniformValue} from '../utils/uniform-types';\nimport {ShaderInjection, normalizeInjections} from '../shader-assembly/shader-injections';\n\n// To avoid dependency on core module, do not import `Binding` type.\n// The ShaderModule is not concerned with the type of `Binding`,\n// it is the repsonsibility of `splitUniformsAndBindings` in\n// ShaderInputs to type the result of `getUniforms()`\ntype Binding = unknown; // import type {Binding} from '@luma.gl/core';\n\nexport type UniformInfo = {\n  format?: UniformFormat;\n} & PropType;\n\n// Helper types\ntype BindingKeys<T> = {[K in keyof T]: T[K] extends UniformValue ? never : K}[keyof T];\ntype UniformKeys<T> = {[K in keyof T]: T[K] extends UniformValue ? K : never}[keyof T];\nexport type PickBindings<T> = {[K in BindingKeys<Required<T>>]: T[K]};\nexport type PickUniforms<T> = {[K in UniformKeys<Required<T>>]: T[K]};\n\n/**\n * A shader module definition object\n *\n * @note Needs to be initialized with `initializeShaderModules`\n * @note `UniformsT` & `BindingsT` are deduced from `PropsT` by default. If\n * a custom type for `UniformsT` is used, `BindingsT` should be also be provided.\n */\nexport type ShaderModule<\n  PropsT extends Record<string, any> = Record<string, any>,\n  UniformsT extends Record<string, UniformValue> = PickUniforms<PropsT>,\n  BindingsT extends Record<string, Binding> = PickBindings<PropsT>\n> = {\n  /** Used for type inference not for values */\n  props?: PropsT;\n  /** Used for type inference, not currently used for values */\n  uniforms?: UniformsT;\n  /** Used for type inference, not currently used for values */\n  bindings?: BindingsT;\n\n  name: string;\n\n  /** WGSL code */\n  source?: string;\n  /** GLSL fragment shader code */\n  fs?: string;\n  /** GLSL vertex shader code */\n  vs?: string;\n\n  /** Uniform shader types @note: Both order and types MUST match uniform block declarations in shader */\n  uniformTypes?: Required<UniformTypes<UniformsT>>; // Record<keyof UniformsT, UniformFormat>;\n  /** Uniform JS prop types  */\n  propTypes?: Record<keyof UniformsT, UniformInfo>;\n  /** Default uniform values */\n  defaultUniforms?: Required<UniformsT>; // Record<keyof UniformsT, UniformValue>;\n\n  /** Function that maps props to uniforms & bindings */\n  getUniforms?: (\n    props: Partial<PropsT>,\n    prevUniforms?: UniformsT\n  ) => Partial<UniformsT & BindingsT>;\n\n  defines?: Record<string, string | number>;\n  /** Injections */\n  inject?: Record<string, string | {injection: string; order: number}>;\n  dependencies?: ShaderModule<any, any>[];\n  /** Information on deprecated properties */\n  deprecations?: ShaderModuleDeprecation[];\n\n  /** The instance field contains information that is generated at run-time */\n  instance?: {\n    propValidators?: Record<string, PropValidator>;\n    parsedDeprecations: ShaderModuleDeprecation[];\n\n    normalizedInjections: {\n      vertex: Record<string, ShaderInjection>;\n      fragment: Record<string, ShaderInjection>;\n    };\n  };\n};\n\n/** Use to generate deprecations when shader module is used */\nexport type ShaderModuleDeprecation = {\n  type: string;\n  regex?: RegExp;\n  new: string;\n  old: string;\n  deprecated?: boolean;\n};\n\n// SHNDER MODULE API\n\nexport function initializeShaderModules(modules: ShaderModule[]): void {\n  modules.map((module: ShaderModule) => initializeShaderModule(module));\n}\n\nexport function initializeShaderModule(module: ShaderModule): void {\n  if (module.instance) {\n    return;\n  }\n\n  initializeShaderModules(module.dependencies || []);\n\n  const {\n    propTypes = {},\n    deprecations = [],\n    // defines = {},\n    inject = {}\n  } = module;\n\n  const instance: Required<ShaderModule>['instance'] = {\n    normalizedInjections: normalizeInjections(inject),\n    parsedDeprecations: parseDeprecationDefinitions(deprecations)\n  };\n\n  if (propTypes) {\n    instance.propValidators = makePropValidators(propTypes);\n  }\n\n  module.instance = instance;\n\n  // TODO(ib) - we need to apply the original prop types to the default uniforms\n  let defaultProps: ShaderModule['props'] = {};\n  if (propTypes) {\n    defaultProps = Object.entries(propTypes).reduce(\n      (obj: ShaderModule['props'], [key, propType]) => {\n        // @ts-expect-error\n        const value = propType?.value;\n        if (value) {\n          // @ts-expect-error\n          obj[key] = value;\n        }\n        return obj;\n      },\n      {} as ShaderModule['props']\n    );\n  }\n\n  module.defaultUniforms = {...module.defaultUniforms, ...defaultProps} as any;\n}\n\n/** Convert module props to uniforms */\nexport function getShaderModuleUniforms<\n  ShaderModuleT extends ShaderModule<Record<string, unknown>, Record<string, UniformValue>>\n>(\n  module: ShaderModuleT,\n  props?: ShaderModuleT['props'],\n  oldUniforms?: ShaderModuleT['uniforms']\n): Record<string, Binding | UniformValue> {\n  initializeShaderModule(module);\n\n  const uniforms = oldUniforms || {...module.defaultUniforms};\n  // If module has a getUniforms function, use it\n  if (props && module.getUniforms) {\n    return module.getUniforms(props, uniforms);\n  }\n\n  // Build uniforms from the uniforms array\n  // @ts-expect-error\n  return getValidatedProperties(props, module.instance?.propValidators, module.name);\n}\n\n/* TODO this looks like it was unused code\n  _defaultGetUniforms(opts: Record<string, any> = {}): Record<string, any> {\n    const uniforms: Record<string, any> = {};\n    const propTypes = this.uniforms;\n\n    for (const key in propTypes) {\n      const propDef = propTypes[key];\n      if (key in opts && !propDef.private) {\n        if (propDef.validate) {\n          assert(propDef.validate(opts[key], propDef), `${this.name}: invalid ${key}`);\n        }\n        uniforms[key] = opts[key];\n      } else {\n        uniforms[key] = propDef.value;\n      }\n    }\n\n    return uniforms;\n  }\n}\n*/\n// Warn about deprecated uniforms or functions\nexport function checkShaderModuleDeprecations(\n  shaderModule: ShaderModule,\n  shaderSource: string,\n  log: any\n): void {\n  shaderModule.deprecations?.forEach(def => {\n    if (def.regex?.test(shaderSource)) {\n      if (def.deprecated) {\n        log.deprecated(def.old, def.new)();\n      } else {\n        log.removed(def.old, def.new)();\n      }\n    }\n  });\n}\n\n// HELPERS\n\nfunction parseDeprecationDefinitions(deprecations: ShaderModuleDeprecation[]) {\n  deprecations.forEach(def => {\n    switch (def.type) {\n      case 'function':\n        def.regex = new RegExp(`\\\\b${def.old}\\\\(`);\n        break;\n      default:\n        def.regex = new RegExp(`${def.type} ${def.old};`);\n    }\n  });\n\n  return deprecations;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {ShaderModule, initializeShaderModules} from './shader-module';\n\n// import type {ShaderModule} from '../shader-module/shader-module';\n\ntype AbstractModule = {\n  name: string;\n  dependencies?: AbstractModule[];\n};\n\n/**\n * Takes a list of shader module names and returns a new list of\n * shader module names that includes all dependencies, sorted so\n * that modules that are dependencies of other modules come first.\n *\n * If the shader glsl code from the returned modules is concatenated\n * in the reverse order, it is guaranteed that all functions be resolved and\n * that all function and variable definitions come before use.\n *\n * @param modules - Array of modules (inline modules or module names)\n * @return - Array of modules\n */\nexport function getShaderModuleDependencies<T extends AbstractModule>(modules: T[]): T[] {\n  initializeShaderModules(modules);\n  const moduleMap: Record<string, T> = {};\n  const moduleDepth: Record<string, number> = {};\n  getDependencyGraph({modules, level: 0, moduleMap, moduleDepth});\n\n  // Return a reverse sort so that dependencies come before the modules that use them\n  const dependencies = Object.keys(moduleDepth)\n    .sort((a, b) => moduleDepth[b] - moduleDepth[a])\n    .map(name => moduleMap[name]);\n  initializeShaderModules(dependencies);\n  return dependencies;\n}\n\n/**\n * Recursively checks module dependencies to calculate dependency level of each module.\n *\n * @param options.modules - Array of modules\n * @param options.level - Current level\n * @param options.moduleMap -\n * @param options.moduleDepth - Current level\n * @return - Map of module name to its level\n */\n// Adds another level of dependencies to the result map\nexport function getDependencyGraph<T extends AbstractModule>(options: {\n  modules: T[];\n  level: number;\n  moduleMap: Record<string, T>;\n  moduleDepth: Record<string, number>;\n}) {\n  const {modules, level, moduleMap, moduleDepth} = options;\n  if (level >= 5) {\n    throw new Error('Possible loop in shader dependency graph');\n  }\n\n  // Update level on all current modules\n  for (const module of modules) {\n    moduleMap[module.name] = module;\n    if (moduleDepth[module.name] === undefined || moduleDepth[module.name] < level) {\n      moduleDepth[module.name] = level;\n    }\n  }\n\n  // Recurse\n  for (const module of modules) {\n    if (module.dependencies) {\n      getDependencyGraph({modules: module.dependencies, level: level + 1, moduleMap, moduleDepth});\n    }\n  }\n}\n\n/**\n * Takes a list of shader module names and returns a new list of\n * shader module names that includes all dependencies, sorted so\n * that modules that are dependencies of other modules come first.\n *\n * If the shader glsl code from the returned modules is concatenated\n * in the reverse order, it is guaranteed that all functions be resolved and\n * that all function and variable definitions come before use.\n *\n * @param modules - Array of modules (inline modules or module names)\n * @return - Array of modules\n */\nexport function getShaderDependencies(modules: ShaderModule[]): ShaderModule[] {\n  initializeShaderModules(modules);\n  const moduleMap: Record<string, ShaderModule> = {};\n  const moduleDepth: Record<string, number> = {};\n  getDependencyGraph({modules, level: 0, moduleMap, moduleDepth});\n\n  // Return a reverse sort so that dependencies come before the modules that use them\n  modules = Object.keys(moduleDepth)\n    .sort((a, b) => moduleDepth[b] - moduleDepth[a])\n    .map(name => moduleMap[name]);\n  initializeShaderModules(modules);\n  return modules;\n}\n\n// DEPRECATED\n\n/**\n * Instantiate shader modules and resolve any dependencies\n * @deprecated Use getShaderDpendencies\n */\nexport function resolveModules(modules: ShaderModule[]): ShaderModule[] {\n  return getShaderDependencies(modules);\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {PlatformInfo} from './platform-info';\n\n/** Adds defines to help identify GPU architecture / platform */\nexport function getPlatformShaderDefines(platformInfo: PlatformInfo): string {\n  switch (platformInfo?.gpu.toLowerCase()) {\n    case 'apple':\n      return /* glsl */ `\\\n#define APPLE_GPU\n// Apple optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n`;\n\n    case 'nvidia':\n      return /* glsl */ `\\\n#define NVIDIA_GPU\n// Nvidia optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n`;\n\n    case 'intel':\n      return /* glsl */ `\\\n#define INTEL_GPU\n// Intel optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n// Intel's built-in 'tan' function doesn't have acceptable precision\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n`;\n\n    case 'amd':\n      // AMD Does not eliminate fp64 code\n      return /* glsl */ `\\\n#define AMD_GPU\n`;\n\n    default:\n      // We don't know what GPU it is, could be that the GPU driver or\n      // browser is not implementing UNMASKED_RENDERER constant and not\n      // reporting a correct name\n      return /* glsl */ `\\\n#define DEFAULT_GPU\n// Prevent driver from optimizing away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n// Headless Chrome's software shader 'tan' function doesn't have acceptable precision\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// If the GPU doesn't have full 32 bits precision, will causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n`;\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// TRANSPILATION TABLES\n\n/**\n * Transpiles GLSL 3.00 shader source code to target GLSL version (3.00 or 1.00)\n *\n * @note We always run transpiler even if same version e.g. 3.00 => 3.00\n * @note For texture sampling transpilation, apps need to use non-standard texture* calls in GLSL 3.00 source\n * RFC: https://github.com/visgl/luma.gl/blob/7.0-release/dev-docs/RFCs/v6.0/portable-glsl-300-rfc.md\n */\nexport function transpileGLSLShader(source: string, stage: 'vertex' | 'fragment'): string {\n  const sourceGLSLVersion = Number(source.match(/^#version[ \\t]+(\\d+)/m)?.[1] || 100);\n  if (sourceGLSLVersion !== 300) {\n    // TODO - we splurge on a longer error message to help deck.gl custom layer developers\n    throw new Error('luma.gl v9 only supports GLSL 3.00 shader sources');\n  }\n\n  switch (stage) {\n    case 'vertex':\n      source = convertShader(source, ES300_VERTEX_REPLACEMENTS);\n      return source;\n    case 'fragment':\n      source = convertShader(source, ES300_FRAGMENT_REPLACEMENTS);\n      return source;\n    default:\n      // Unknown shader stage\n      throw new Error(stage);\n  }\n}\n\ntype GLSLReplacement = [RegExp, string];\n\n/** Simple regex replacements for GLSL ES 1.00 syntax that has changed in GLSL ES 3.00 */\nconst ES300_REPLACEMENTS: GLSLReplacement[] = [\n  // Fix poorly formatted version directive\n  [/^(#version[ \\t]+(100|300[ \\t]+es))?[ \\t]*\\n/, '#version 300 es\\n'],\n  // The individual `texture...()` functions were replaced with `texture()` overloads\n  [/\\btexture(2D|2DProj|Cube)Lod(EXT)?\\(/g, 'textureLod('],\n  [/\\btexture(2D|2DProj|Cube)(EXT)?\\(/g, 'texture(']\n];\n\nconst ES300_VERTEX_REPLACEMENTS: GLSLReplacement[] = [\n  ...ES300_REPLACEMENTS,\n  // `attribute` keyword replaced with `in`\n  [makeVariableTextRegExp('attribute'), 'in $1'],\n  // `varying` keyword replaced with `out`\n  [makeVariableTextRegExp('varying'), 'out $1']\n];\n\n/** Simple regex replacements for GLSL ES 1.00 syntax that has changed in GLSL ES 3.00 */\nconst ES300_FRAGMENT_REPLACEMENTS: GLSLReplacement[] = [\n  ...ES300_REPLACEMENTS,\n  // `varying` keyword replaced with `in`\n  [makeVariableTextRegExp('varying'), 'in $1']\n];\n\nfunction convertShader(source: string, replacements: GLSLReplacement[]) {\n  for (const [pattern, replacement] of replacements) {\n    source = source.replace(pattern, replacement);\n  }\n  return source;\n}\n\n/**\n * Creates a regexp that tests for a specific variable type\n * @example\n *   should match:\n *     in float weight;\n *     out vec4 positions[2];\n *   should not match:\n *     void f(out float a, in float b) {}\n */\nfunction makeVariableTextRegExp(qualifier: 'attribute' | 'varying' | 'in' | 'out'): RegExp {\n  return new RegExp(`\\\\b${qualifier}[ \\\\t]+(\\\\w+[ \\\\t]+\\\\w+(\\\\[\\\\w+\\\\])?;)`, 'g');\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {ShaderInjection} from './shader-injections';\n\n// A normalized hook function\n/**\n * The shader hook mechanism allows the application to create shaders\n * that can be automatically extended by the shader modules the application\n * includes.\n *\n * A shader hook function that shader modules can inject code into.\n * Shaders can call these functions, which will be no-ops by default.\n *\n * If a shader module injects code it will be executed upon the hook\n * function call.\n */\nexport type ShaderHook = {\n  /** `vs:` or `fs:` followed by the name and arguments of the function, e.g. `vs:MYHOOK_func(inout vec4 value)`. Hook name without arguments\n  will also be used as the name of the shader hook */\n  hook: string;\n  /** Code always included at the beginning of a hook function */\n  header: string;\n  /** Code always included at the end of a hook function */\n  footer: string;\n  /** To Be Documented */\n  signature?: string;\n};\n\n/** Normalized shader hooks per shader */\nexport type ShaderHooks = {\n  /** Normalized shader hooks for vertex shader */\n  vertex: Record<string, ShaderHook>;\n  /** Normalized shader hooks for fragment shader */\n  fragment: Record<string, ShaderHook>;\n};\n\n/** Generate hook source code */\nexport function getShaderHooks(\n  hookFunctions: Record<string, ShaderHook>,\n  hookInjections: Record<string, ShaderInjection[]>\n): string {\n  let result = '';\n  for (const hookName in hookFunctions) {\n    const hookFunction = hookFunctions[hookName];\n    result += `void ${hookFunction.signature} {\\n`;\n    if (hookFunction.header) {\n      result += `  ${hookFunction.header}`;\n    }\n    if (hookInjections[hookName]) {\n      const injections = hookInjections[hookName];\n      injections.sort((a: {order: number}, b: {order: number}): number => a.order - b.order);\n      for (const injection of injections) {\n        result += `  ${injection.injection}\\n`;\n      }\n    }\n    if (hookFunction.footer) {\n      result += `  ${hookFunction.footer}`;\n    }\n    result += '}\\n';\n  }\n\n  return result;\n}\n\n/**\n * Parse string based hook functions\n * And split per shader\n */\nexport function normalizeShaderHooks(hookFunctions: (string | ShaderHook)[]): ShaderHooks {\n  const result: ShaderHooks = {vertex: {}, fragment: {}};\n\n  for (const hookFunction of hookFunctions) {\n    let opts: ShaderHook;\n    let hook: string;\n    if (typeof hookFunction !== 'string') {\n      opts = hookFunction;\n      hook = opts.hook;\n    } else {\n      opts = {} as ShaderHook;\n      hook = hookFunction;\n    }\n    hook = hook.trim();\n    const [shaderStage, signature] = hook.split(':');\n    const name = hook.replace(/\\(.+/, '');\n    const normalizedHook: ShaderHook = Object.assign(opts, {signature});\n    switch (shaderStage) {\n      case 'vs':\n        result.vertex[name] = normalizedHook;\n        break;\n      case 'fs':\n        result.fragment[name] = normalizedHook;\n        break;\n      default:\n        throw new Error(shaderStage);\n    }\n  }\n\n  return result;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/** Information extracted from shader source code */\nexport type ShaderInfo = {\n  name: string;\n  language: 'glsl' | 'wgsl';\n  version: number;\n};\n\n/** Extracts information from shader source code */\nexport function getShaderInfo(source: string, defaultName?: string): ShaderInfo {\n  return {\n    name: getShaderName(source, defaultName),\n    language: 'glsl',\n    version: getShaderVersion(source)\n  };\n}\n\n/** Extracts GLSLIFY style naming of shaders: `#define SHADER_NAME ...` */\nfunction getShaderName(shader: string, defaultName: string = 'unnamed'): string {\n  const SHADER_NAME_REGEXP = /#define[^\\S\\r\\n]*SHADER_NAME[^\\S\\r\\n]*([A-Za-z0-9_-]+)\\s*/;\n  const match = SHADER_NAME_REGEXP.exec(shader);\n  return match ? match[1] : defaultName;\n}\n\n/** returns GLSL shader version of given shader string */\nfunction getShaderVersion(source: string): 100 | 300 {\n  let version = 100;\n  const words = source.match(/[^\\s]+/g);\n  if (words && words.length >= 2 && words[0] === '#version') {\n    const parsedVersion = parseInt(words[1], 10);\n    if (Number.isFinite(parsedVersion)) {\n      version = parsedVersion;\n    }\n  }\n  if (version !== 100 && version !== 300) {\n    throw new Error(`Invalid GLSL version ${version}`);\n  }\n  return version;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {getShaderModuleDependencies} from '../shader-module/shader-module-dependencies';\nimport {PlatformInfo} from './platform-info';\nimport {getPlatformShaderDefines} from './platform-defines';\nimport {injectShader, DECLARATION_INJECT_MARKER} from './shader-injections';\nimport {transpileGLSLShader} from '../shader-transpiler/transpile-glsl-shader';\nimport {checkShaderModuleDeprecations} from '../shader-module/shader-module';\nimport type {ShaderInjection} from './shader-injections';\nimport type {ShaderModule} from '../shader-module/shader-module';\nimport {ShaderHook, normalizeShaderHooks, getShaderHooks} from './shader-hooks';\nimport {assert} from '../utils/assert';\nimport {getShaderInfo} from '../glsl-utils/get-shader-info';\n\n/** Define map */\nexport type ShaderDefine = string | number | boolean;\n\nconst INJECT_SHADER_DECLARATIONS = `\\n\\n${DECLARATION_INJECT_MARKER}\\n`;\n\n/**\n * Precision prologue to inject before functions are injected in shader\n * TODO - extract any existing prologue in the fragment source and move it up...\n */\nconst FRAGMENT_SHADER_PROLOGUE = /* glsl */ `\\\nprecision highp float;\n`;\n\n/**\n * Options for `ShaderAssembler.assembleShaders()`\n */\nexport type AssembleShaderProps = AssembleShaderOptions & {\n  platformInfo: PlatformInfo;\n  /** WGSL: single shader source. */\n  source?: string | null;\n  /** GLSL vertex shader source. */\n  vs?: string | null;\n  /** GLSL fragment shader source. */\n  fs?: string | null;\n};\n\nexport type AssembleShaderOptions = {\n  /** information about the platform (which shader language & version, extensions etc.) */\n  platformInfo: PlatformInfo;\n  /** Inject shader id #defines */\n  id?: string;\n  /** Modules to be injected */\n  modules?: ShaderModule[];\n  /** Defines to be injected */\n  defines?: Record<string, ShaderDefine>;\n  /** Hook functions */\n  hookFunctions?: (ShaderHook | string)[];\n  /** Code injections */\n  inject?: Record<string, string | ShaderInjection>;\n  /** Whether to inject prologue */\n  prologue?: boolean;\n  /** logger object */\n  log?: any;\n};\n\ntype AssembleStageOptions = {\n  /** Inject shader id #defines */\n  id?: string;\n  /** Vertex shader */\n  source: string;\n  stage: 'vertex' | 'fragment';\n  /** Modules to be injected */\n  modules: any[];\n  /** Defines to be injected */\n  defines?: Record<string, ShaderDefine>;\n  /** Hook functions */\n  hookFunctions?: (ShaderHook | string)[];\n  /** Code injections */\n  inject?: Record<string, string | ShaderInjection>;\n  /** Whether to inject prologue */\n  prologue?: boolean;\n  /** logger object */\n  log?: any;\n};\n\nexport type HookFunction = {hook: string; header: string; footer: string; signature?: string};\n\n/**\n * getUniforms function returned from the shader module system\n */\nexport type GetUniformsFunc = (opts: Record<string, any>) => Record<string, any>;\n\n/**\n * Inject a list of shader modules into a single shader source for WGSL\n */\nexport function assembleWGSLShader(\n  options: AssembleShaderOptions & {\n    /** Single WGSL shader */\n    source: string;\n  }\n): {\n  source: string;\n  getUniforms: GetUniformsFunc;\n} {\n  const modules = getShaderModuleDependencies(options.modules || []);\n\n  return {\n    source: assembleShaderWGSL(options.platformInfo, {\n      ...options,\n      source: options.source,\n      stage: 'vertex',\n      modules\n    }),\n    getUniforms: assembleGetUniforms(modules)\n  };\n}\n\n/**\n * Injects dependent shader module sources into pair of main vertex/fragment shader sources for GLSL\n */\nexport function assembleGLSLShaderPair(\n  options: AssembleShaderOptions & {\n    /** Vertex shader */\n    vs: string;\n    /** Fragment shader */\n    fs?: string;\n  }\n): {\n  vs: string;\n  fs: string;\n  getUniforms: GetUniformsFunc;\n} {\n  const {vs, fs} = options;\n  const modules = getShaderModuleDependencies(options.modules || []);\n\n  return {\n    vs: assembleShaderGLSL(options.platformInfo, {\n      ...options,\n      source: vs,\n      stage: 'vertex',\n      modules\n    }),\n    fs: assembleShaderGLSL(options.platformInfo, {\n      ...options,\n      // @ts-expect-error\n      source: fs,\n      stage: 'fragment',\n      modules\n    }),\n    getUniforms: assembleGetUniforms(modules)\n  };\n}\n\n/**\n * Pulls together complete source code for either a vertex or a fragment shader\n * adding prologues, requested module chunks, and any final injections.\n * @param gl\n * @param options\n * @returns\n */\nexport function assembleShaderWGSL(platformInfo: PlatformInfo, options: AssembleStageOptions) {\n  const {\n    // id,\n    source,\n    stage,\n    modules,\n    // defines = {},\n    hookFunctions = [],\n    inject = {},\n    log\n  } = options;\n\n  assert(typeof source === 'string', 'shader source must be a string');\n\n  // const isVertex = type === 'vs';\n  // const sourceLines = source.split('\\n');\n\n  const coreSource = source;\n\n  // Combine Module and Application Defines\n  // const allDefines = {};\n  // modules.forEach(module => {\n  //   Object.assign(allDefines, module.getDefines());\n  // });\n  // Object.assign(allDefines, defines);\n\n  // Add platform defines (use these to work around platform-specific bugs and limitations)\n  // Add common defines (GLSL version compatibility, feature detection)\n  // Add precision declaration for fragment shaders\n  let assembledSource = '';\n  //   prologue\n  //     ? `\\\n  // ${getShaderNameDefine({id, source, type})}\n  // ${getShaderType(type)}\n  // ${getPlatformShaderDefines(platformInfo)}\n  // ${getApplicationDefines(allDefines)}\n  // ${isVertex ? '' : FRAGMENT_SHADER_PROLOGUE}\n  // `\n  // `;\n\n  const hookFunctionMap = normalizeShaderHooks(hookFunctions);\n\n  // Add source of dependent modules in resolved order\n  const hookInjections: Record<string, ShaderInjection[]> = {};\n  const declInjections: Record<string, ShaderInjection[]> = {};\n  const mainInjections: Record<string, ShaderInjection[]> = {};\n\n  for (const key in inject) {\n    const injection =\n      typeof inject[key] === 'string' ? {injection: inject[key], order: 0} : inject[key];\n    const match = /^(v|f)s:(#)?([\\w-]+)$/.exec(key);\n    if (match) {\n      const hash = match[2];\n      const name = match[3];\n      if (hash) {\n        if (name === 'decl') {\n          declInjections[key] = [injection as any];\n        } else {\n          mainInjections[key] = [injection as any];\n        }\n      } else {\n        hookInjections[key] = [injection as any];\n      }\n    } else {\n      // Regex injection\n      mainInjections[key] = [injection as any];\n    }\n  }\n\n  // TODO - hack until shadertool modules support WebGPU\n  const modulesToInject = modules;\n\n  for (const module of modulesToInject) {\n    if (log) {\n      checkShaderModuleDeprecations(module, coreSource, log);\n    }\n    const moduleSource = getShaderModuleSource(module, 'wgsl');\n    // Add the module source, and a #define that declares it presence\n    assembledSource += moduleSource;\n\n    const injections = module.injections?.[stage] || {};\n    for (const key in injections) {\n      const match = /^(v|f)s:#([\\w-]+)$/.exec(key);\n      if (match) {\n        const name = match[2];\n        const injectionType = name === 'decl' ? declInjections : mainInjections;\n        injectionType[key] = injectionType[key] || [];\n        injectionType[key].push(injections[key]);\n      } else {\n        hookInjections[key] = hookInjections[key] || [];\n        hookInjections[key].push(injections[key]);\n      }\n    }\n  }\n\n  // For injectShader\n  assembledSource += INJECT_SHADER_DECLARATIONS;\n\n  assembledSource = injectShader(assembledSource, stage, declInjections);\n\n  assembledSource += getShaderHooks(hookFunctionMap[stage], hookInjections);\n\n  // Add the version directive and actual source of this shader\n  assembledSource += coreSource;\n\n  // Apply any requested shader injections\n  assembledSource = injectShader(assembledSource, stage, mainInjections);\n\n  return assembledSource;\n}\n\n/**\n * Pulls together complete source code for either a vertex or a fragment shader\n * adding prologues, requested module chunks, and any final injections.\n * @param gl\n * @param options\n * @returns\n */\nfunction assembleShaderGLSL(\n  platformInfo: PlatformInfo,\n  options: {\n    id?: string;\n    source: string;\n    language?: 'glsl' | 'wgsl';\n    stage: 'vertex' | 'fragment';\n    modules: ShaderModule[];\n    defines?: Record<string, ShaderDefine>;\n    hookFunctions?: any[];\n    inject?: Record<string, string | ShaderInjection>;\n    prologue?: boolean;\n    log?: any;\n  }\n) {\n  const {\n    id,\n    source,\n    stage,\n    language = 'glsl',\n    modules,\n    defines = {},\n    hookFunctions = [],\n    inject = {},\n    prologue = true,\n    log\n  } = options;\n\n  assert(typeof source === 'string', 'shader source must be a string');\n\n  const sourceVersion = language === 'glsl' ? getShaderInfo(source).version : -1;\n  const targetVersion = platformInfo.shaderLanguageVersion;\n\n  const sourceVersionDirective = sourceVersion === 100 ? '#version 100' : '#version 300 es';\n\n  const sourceLines = source.split('\\n');\n  // TODO : keep all pre-processor statements at the beginning of the shader.\n  const coreSource = sourceLines.slice(1).join('\\n');\n\n  // Combine Module and Application Defines\n  const allDefines = {};\n  modules.forEach(module => {\n    Object.assign(allDefines, module.defines);\n  });\n  Object.assign(allDefines, defines);\n\n  // Add platform defines (use these to work around platform-specific bugs and limitations)\n  // Add common defines (GLSL version compatibility, feature detection)\n  // Add precision declaration for fragment shaders\n  let assembledSource = '';\n  switch (language) {\n    case 'wgsl':\n      break;\n    case 'glsl':\n      assembledSource = prologue\n        ? `\\\n${sourceVersionDirective}\n\n// ----- PROLOGUE -------------------------\n${getShaderNameDefine({id, source, stage})}\n${`#define SHADER_TYPE_${stage.toUpperCase()}`}\n\n${getPlatformShaderDefines(platformInfo)}\n${stage === 'fragment' ? FRAGMENT_SHADER_PROLOGUE : ''}\n\n// ----- APPLICATION DEFINES -------------------------\n\n${getApplicationDefines(allDefines)}\n\n`\n        : `${sourceVersionDirective}\n`;\n      break;\n  }\n\n  const hookFunctionMap = normalizeShaderHooks(hookFunctions);\n\n  // Add source of dependent modules in resolved order\n  const hookInjections: Record<string, ShaderInjection[]> = {};\n  const declInjections: Record<string, ShaderInjection[]> = {};\n  const mainInjections: Record<string, ShaderInjection[]> = {};\n\n  for (const key in inject) {\n    const injection: ShaderInjection =\n      typeof inject[key] === 'string' ? {injection: inject[key], order: 0} : inject[key];\n    const match = /^(v|f)s:(#)?([\\w-]+)$/.exec(key);\n    if (match) {\n      const hash = match[2];\n      const name = match[3];\n      if (hash) {\n        if (name === 'decl') {\n          declInjections[key] = [injection];\n        } else {\n          mainInjections[key] = [injection];\n        }\n      } else {\n        hookInjections[key] = [injection];\n      }\n    } else {\n      // Regex injection\n      mainInjections[key] = [injection];\n    }\n  }\n\n  for (const module of modules) {\n    if (log) {\n      checkShaderModuleDeprecations(module, coreSource, log);\n    }\n    const moduleSource = getShaderModuleSource(module, stage);\n    // Add the module source, and a #define that declares it presence\n    assembledSource += moduleSource;\n\n    const injections = module.instance?.normalizedInjections[stage] || {};\n    for (const key in injections) {\n      const match = /^(v|f)s:#([\\w-]+)$/.exec(key);\n      if (match) {\n        const name = match[2];\n        const injectionType = name === 'decl' ? declInjections : mainInjections;\n        injectionType[key] = injectionType[key] || [];\n        injectionType[key].push(injections[key]);\n      } else {\n        hookInjections[key] = hookInjections[key] || [];\n        hookInjections[key].push(injections[key]);\n      }\n    }\n  }\n\n  assembledSource += '// ----- MAIN SHADER SOURCE -------------------------';\n\n  // For injectShader\n  assembledSource += INJECT_SHADER_DECLARATIONS;\n\n  assembledSource = injectShader(assembledSource, stage, declInjections);\n\n  assembledSource += getShaderHooks(hookFunctionMap[stage], hookInjections);\n\n  // Add the version directive and actual source of this shader\n  assembledSource += coreSource;\n\n  // Apply any requested shader injections\n  assembledSource = injectShader(assembledSource, stage, mainInjections);\n\n  if (language === 'glsl' && sourceVersion !== targetVersion) {\n    assembledSource = transpileGLSLShader(assembledSource, stage);\n  }\n\n  return assembledSource.trim();\n}\n\n/**\n * Returns a combined `getUniforms` covering the options for all the modules,\n * the created function will pass on options to the inidividual `getUniforms`\n * function of each shader module and combine the results into one object that\n * can be passed to setUniforms.\n * @param modules\n * @returns\n */\nexport function assembleGetUniforms(modules: ShaderModule[]) {\n  return function getUniforms(opts: Record<string, any>): Record<string, any> {\n    const uniforms = {};\n    for (const module of modules) {\n      // `modules` is already sorted by dependency level. This guarantees that\n      // modules have access to the uniforms that are generated by their dependencies.\n      const moduleUniforms = module.getUniforms?.(opts, uniforms);\n      Object.assign(uniforms, moduleUniforms);\n    }\n    return uniforms;\n  };\n}\n\n/**\n * Generate \"glslify-compatible\" SHADER_NAME defines\n * These are understood by the GLSL error parsing function\n * If id is provided and no SHADER_NAME constant is present in source, create one\n */\nfunction getShaderNameDefine(options: {\n  id?: string;\n  source: string;\n  stage: 'vertex' | 'fragment';\n}): string {\n  const {id, source, stage} = options;\n  const injectShaderName = id && source.indexOf('SHADER_NAME') === -1;\n  return injectShaderName\n    ? `\n#define SHADER_NAME ${id}_${stage}`\n    : '';\n}\n\n/** Generates application defines from an object of key value pairs */\nfunction getApplicationDefines(defines: Record<string, ShaderDefine> = {}): string {\n  let sourceText = '';\n  for (const define in defines) {\n    const value = defines[define];\n    if (value || Number.isFinite(value)) {\n      sourceText += `#define ${define.toUpperCase()} ${defines[define]}\\n`;\n    }\n  }\n  return sourceText;\n}\n\n/** Extracts the source code chunk for the specified shader type from the named shader module */\nexport function getShaderModuleSource(\n  module: ShaderModule,\n  stage: 'vertex' | 'fragment' | 'wgsl'\n): string {\n  let moduleSource;\n  switch (stage) {\n    case 'vertex':\n      moduleSource = module.vs || '';\n      break;\n    case 'fragment':\n      moduleSource = module.fs || '';\n      break;\n    case 'wgsl':\n      moduleSource = module.source || '';\n      break;\n    default:\n      assert(false);\n  }\n\n  if (!module.name) {\n    throw new Error('Shader module must have a name');\n  }\n  const moduleName = module.name.toUpperCase().replace(/[^0-9a-z]/gi, '_');\n  let source = `\\\n// ----- MODULE ${module.name} ---------------\n\n`;\n  if (stage !== 'wgsl') {\n    source += `#define MODULE_${moduleName}\\n`;\n  }\n  source += `${moduleSource}\\n`;\n  return source;\n}\n\n/*\nfunction getHookFunctions(\n  hookFunctions: Record<string, HookFunction>,\n  hookInjections: Record<string, Injection[]>\n): string {\n  let result = '';\n  for (const hookName in hookFunctions) {\n    const hookFunction = hookFunctions[hookName];\n    result += `void ${hookFunction.signature} {\\n`;\n    if (hookFunction.header) {\n      result += `  ${hookFunction.header}`;\n    }\n    if (hookInjections[hookName]) {\n      const injections = hookInjections[hookName];\n      injections.sort((a: {order: number}, b: {order: number}): number => a.order - b.order);\n      for (const injection of injections) {\n        result += `  ${injection.injection}\\n`;\n      }\n    }\n    if (hookFunction.footer) {\n      result += `  ${hookFunction.footer}`;\n    }\n    result += '}\\n';\n  }\n\n  return result;\n}\n\nfunction normalizeHookFunctions(hookFunctions: (string | HookFunction)[]): {\n  vs: Record<string, HookFunction>;\n  fs: Record<string, HookFunction>;\n} {\n  const result: {vs: Record<string, any>; fs: Record<string, any>} = {\n    vs: {},\n    fs: {}\n  };\n\n  hookFunctions.forEach((hookFunction: string | HookFunction) => {\n    let opts: HookFunction;\n    let hook: string;\n    if (typeof hookFunction !== 'string') {\n      opts = hookFunction;\n      hook = opts.hook;\n    } else {\n      opts = {} as HookFunction;\n      hook = hookFunction;\n    }\n    hook = hook.trim();\n    const [stage, signature] = hook.split(':');\n    const name = hook.replace(/\\(.+/, '');\n    if (stage !== 'vs' && stage !== 'fs') {\n      throw new Error(stage);\n    }\n    result[stage][name] = Object.assign(opts, {signature});\n  });\n\n  return result;\n}\n*/\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nconst IFDEF_REGEXP = /^\\s*\\#\\s*ifdef\\s*([a-zA-Z_]+)\\s*$/;\nconst ENDIF_REGEXP = /^\\s*\\#\\s*endif\\s*$/;\n\nexport type PreprocessorOptions = {\n  defines?: Record<string, boolean>;\n};\n\nexport function preprocess(source: string, options?: PreprocessorOptions): string {\n  const lines = source.split('\\n');\n  const output: string[] = [];\n\n  let conditional = true;\n  let currentDefine: string | null = null;\n  for (const line of lines) {\n    const matchIf = line.match(IFDEF_REGEXP);\n    const matchEnd = line.match(ENDIF_REGEXP);\n    if (matchIf) {\n      currentDefine = matchIf[1];\n      conditional = Boolean(options?.defines?.[currentDefine]);\n    } else if (matchEnd) {\n      conditional = true;\n    } else if (conditional) {\n      output.push(line);\n    }\n  }\n  return output.join('\\n');\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {ShaderModule} from './shader-module/shader-module';\nimport {initializeShaderModules} from './shader-module/shader-module';\nimport {\n  AssembleShaderProps,\n  GetUniformsFunc,\n  assembleWGSLShader,\n  assembleGLSLShaderPair\n} from './shader-assembly/assemble-shaders';\nimport {preprocess} from './preprocessor/preprocessor';\n\n/**\n * A stateful version of `assembleShaders` that can be used to assemble shaders.\n * Supports setting of default modules and hooks.\n */\nexport class ShaderAssembler {\n  /** Default ShaderAssembler instance */\n  static defaultShaderAssembler: ShaderAssembler;\n  /** Hook functions */\n  private readonly _hookFunctions: any[] = [];\n  /** Shader modules */\n  private _defaultModules: ShaderModule[] = [];\n\n  /**\n   * A default shader assembler instance - the natural place to register default modules and hooks\n   * @returns\n   */\n  static getDefaultShaderAssembler(): ShaderAssembler {\n    ShaderAssembler.defaultShaderAssembler =\n      ShaderAssembler.defaultShaderAssembler || new ShaderAssembler();\n    return ShaderAssembler.defaultShaderAssembler;\n  }\n\n  /**\n   * Add a default module that does not have to be provided with every call to assembleShaders()\n   */\n  addDefaultModule(module: ShaderModule): void {\n    if (\n      !this._defaultModules.find(\n        m => m.name === (typeof module === 'string' ? module : module.name)\n      )\n    ) {\n      this._defaultModules.push(module);\n    }\n  }\n\n  /**\n   * Remove a default module\n   */\n  removeDefaultModule(module: ShaderModule): void {\n    const moduleName = typeof module === 'string' ? module : module.name;\n    this._defaultModules = this._defaultModules.filter(m => m.name !== moduleName);\n  }\n\n  /**\n   * Register a shader hook\n   * @param hook\n   * @param opts\n   */\n  addShaderHook(hook: string, opts?: any): void {\n    if (opts) {\n      hook = Object.assign(opts, {hook});\n    }\n    this._hookFunctions.push(hook);\n  }\n\n  /**\n   * Assemble a WGSL unified shader\n   * @param platformInfo\n   * @param props\n   * @returns\n   */\n  assembleWGSLShader(props: AssembleShaderProps): {\n    source: string;\n    getUniforms: GetUniformsFunc;\n    modules: ShaderModule[];\n  } {\n    const modules = this._getModuleList(props.modules); // Combine with default modules\n    const hookFunctions = this._hookFunctions; // TODO - combine with default hook functions\n    const {source, getUniforms} = assembleWGSLShader({\n      ...props,\n      // @ts-expect-error\n      source: props.source,\n      modules,\n      hookFunctions\n    });\n    // WGSL does not have built-in preprocessing support (just compile time constants)\n    const preprocessedSource =\n      props.platformInfo.shaderLanguage === 'wgsl' ? preprocess(source) : source;\n    return {source: preprocessedSource, getUniforms, modules};\n  }\n\n  /**\n   * Assemble a pair of shaders into a single shader program\n   * @param platformInfo\n   * @param props\n   * @returns\n   */\n  assembleGLSLShaderPair(props: AssembleShaderProps): {\n    vs: string;\n    fs: string;\n    getUniforms: GetUniformsFunc;\n    modules: ShaderModule[];\n  } {\n    const modules = this._getModuleList(props.modules); // Combine with default modules\n    const hookFunctions = this._hookFunctions; // TODO - combine with default hook functions\n    const assembled = assembleGLSLShaderPair({\n      ...props,\n      // @ts-expect-error\n      vs: props.vs,\n      // @ts-expect-error\n      fs: props.fs,\n      modules,\n      hookFunctions\n    });\n\n    return {...assembled, modules};\n  }\n\n  /**\n   * Dedupe and combine with default modules\n   */\n  _getModuleList(appModules: ShaderModule[] = []): ShaderModule[] {\n    const modules = new Array<ShaderModule>(this._defaultModules.length + appModules.length);\n    const seen: Record<string, boolean> = {};\n    let count = 0;\n\n    for (let i = 0, len = this._defaultModules.length; i < len; ++i) {\n      const module = this._defaultModules[i];\n      const name = module.name;\n      modules[count++] = module;\n      seen[name] = true;\n    }\n\n    for (let i = 0, len = appModules.length; i < len; ++i) {\n      const module = appModules[i];\n      const name = module.name;\n      if (!seen[name]) {\n        modules[count++] = module;\n        seen[name] = true;\n      }\n    }\n\n    modules.length = count;\n\n    initializeShaderModules(modules);\n    return modules;\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nconst FS_GLES = /* glsl */ `\\\nout vec4 transform_output;\nvoid main() {\n  transform_output = vec4(0);\n}`;\nconst FS300 = `#version 300 es\\n${FS_GLES}`;\n\ntype QualifierInfo = {\n  qualifier: string;\n  type: string;\n  name: string;\n};\n\n// Prase given glsl line and return qualifier details or null\nexport function getQualifierDetails(\n  line: string,\n  qualifiers: string | string[]\n): QualifierInfo | null {\n  qualifiers = Array.isArray(qualifiers) ? qualifiers : [qualifiers];\n  const words = line.replace(/^\\s+/, '').split(/\\s+/);\n  // TODO add support for precession qualifiers (highp, mediump and lowp)\n  const [qualifier, type, definition] = words;\n  if (!qualifiers.includes(qualifier) || !type || !definition) {\n    return null;\n  }\n  const name = definition.split(';')[0];\n  return {qualifier, type, name};\n}\n\n/**\n * Given the shader input and output variable names,\n * builds and return a pass through fragment shader.\n */\nexport function getPassthroughFS(options?: {\n  input?: string;\n  inputChannels?: 1 | 2 | 3 | 4;\n  output?: string;\n}): string {\n  const {input, inputChannels, output} = options || {};\n  if (!input) {\n    // Default shader\n    return FS300;\n  }\n  if (!inputChannels) {\n    throw new Error('inputChannels');\n  }\n  const inputType = channelCountToType(inputChannels);\n  const outputValue = convertToVec4(input, inputChannels);\n  return `\\\n#version 300 es\nin ${inputType} ${input};\nout vec4 ${output};\nvoid main() {\n  ${output} = ${outputValue};\n}`;\n}\n\n/** convert glsl type to suffix */\nexport function typeToChannelSuffix(type: string): 'x' | 'xy' | 'xyz' | 'xyzw' {\n  // prettier-ignore\n  switch (type) {\n    case 'float': return 'x';\n    case 'vec2': return 'xy';\n    case 'vec3': return 'xyz';\n    case 'vec4': return 'xyzw';\n    default:\n      throw new Error(type);\n  }\n}\n\n/** convert glsl type to channel count */\nexport function typeToChannelCount(type: string): 1 | 2 | 3 | 4 {\n  // prettier-ignore\n  switch (type) {\n    case 'float': return 1;\n    case 'vec2': return 2;\n    case 'vec3': return 3;\n    case 'vec4': return 4;\n    default:\n      throw new Error(type);\n  }\n}\nfunction channelCountToType(channels: 1 | 2 | 3 | 4): 'float' | 'vec2' | 'vec3' | 'vec4' {\n  // prettier-ignore\n  switch (channels) {\n    case 1: return 'float';\n    case 2: return 'vec2';\n    case 3: return 'vec3';\n    case 4: return 'vec4';\n    default:\n      throw new Error(`invalid channels: ${channels}`);\n  }\n}\n\n/** Returns glsl instruction for converting to vec4 */\nexport function convertToVec4(variable: string, channels: 1 | 2 | 3 | 4): string {\n  // prettier-ignore\n  switch (channels) {\n    case 1: return `vec4(${variable}, 0.0, 0.0, 1.0)`;\n    case 2: return `vec4(${variable}, 0.0, 1.0)`;\n    case 3: return `vec4(${variable}, 1.0)`;\n    case 4: return variable;\n    default:\n      throw new Error(`invalid channels: ${channels}`);\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Stats} from '@probe.gl/stats';\n\n/**\n * Helper class managing a collection of probe.gl stats objects\n */\nexport class StatsManager {\n  stats = new Map();\n\n  getStats(name: string): Stats {\n    return this.get(name);\n  }\n\n  get(name: string): Stats {\n    if (!this.stats.has(name)) {\n      this.stats.set(name, new Stats({id: name}));\n    }\n\n    return this.stats.get(name);\n  }\n}\n\n/** Global stats for all luma.gl devices */\nexport const lumaStats: StatsManager = new StatsManager();\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Log} from '@probe.gl/log';\n\n/** Global log instance */\nexport const log: Log = new Log({id: 'luma.gl'});\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nconst uidCounters: Record<string, number> = {};\n\n/**\n * Returns a UID.\n * @param id= - Identifier base name\n * @return uid\n **/\nexport function uid(id: string = 'id'): string {\n  uidCounters[id] = uidCounters[id] || 1;\n  const count = uidCounters[id]++;\n  return `${id}-${count}`;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device} from '../device';\nimport {uid} from '../../utils/uid';\n\nexport type ResourceProps = {\n  /** Name of resource, mainly for debugging purposes. A unique name will be assigned if not provided */\n  id?: string;\n  /** Handle for the underlying resources (WebGL object or WebGPU handle) */\n  handle?: any;\n  /** User provided data stored on this resource  */\n  userData?: {[key: string]: any};\n};\n\n/**\n * Base class for GPU (WebGPU/WebGL) Resources\n */\nexport abstract class Resource<Props extends ResourceProps> {\n  /** Default properties for resource */\n  static defaultProps: Required<ResourceProps> = {\n    id: 'undefined',\n    handle: undefined,\n    userData: undefined!\n  };\n\n  abstract get [Symbol.toStringTag](): string;\n\n  toString(): string {\n    return `${this[Symbol.toStringTag] || this.constructor.name}:\"${this.id}\"`;\n  }\n\n  /** props.id, for debugging. */\n  id: string;\n  readonly props: Required<Props>;\n  readonly userData: Record<string, unknown> = {};\n  abstract readonly device: Device;\n  private _device: Device;\n\n  /** Whether this resource has been destroyed */\n  destroyed: boolean = false;\n  /** For resources that allocate GPU memory */\n  private allocatedBytes: number = 0;\n  /** Attached resources will be destroyed when this resource is destroyed. Tracks auto-created \"sub\" resources. */\n  private _attachedResources = new Set<Resource<ResourceProps>>();\n\n  /**\n   * Create a new Resource. Called from Subclass\n   */\n  constructor(device: Device, props: Props, defaultProps: Required<Props>) {\n    if (!device) {\n      throw new Error('no device');\n    }\n    this._device = device;\n    this.props = selectivelyMerge<Props>(props, defaultProps);\n\n    const id =\n      this.props.id !== 'undefined' ? (this.props.id as string) : uid(this[Symbol.toStringTag]);\n    this.props.id = id;\n    this.id = id;\n    this.userData = this.props.userData || {};\n\n    this.addStats();\n  }\n\n  /**\n   * destroy can be called on any resource to release it before it is garbage collected.\n   */\n  destroy(): void {\n    this.destroyResource();\n  }\n\n  /** @deprecated Use destroy() */\n  delete(): this {\n    this.destroy();\n    return this;\n  }\n\n  /**\n   * Combines a map of user props and default props, only including props from defaultProps\n   * @returns returns a map of overridden default props\n   */\n  getProps(): object {\n    return this.props;\n  }\n\n  // ATTACHED RESOURCES\n\n  /**\n   * Attaches a resource. Attached resources are auto destroyed when this resource is destroyed\n   * Called automatically when sub resources are auto created but can be called by application\n   */\n  attachResource(resource: Resource<ResourceProps>): void {\n    this._attachedResources.add(resource);\n  }\n\n  /**\n   * Detach an attached resource. The resource will no longer be auto-destroyed when this resource is destroyed.\n   */\n  detachResource(resource: Resource<ResourceProps>): void {\n    this._attachedResources.delete(resource);\n  }\n\n  /**\n   * Destroys a resource (only if owned), and removes from the owned (auto-destroy) list for this resource.\n   */\n  destroyAttachedResource(resource: Resource<ResourceProps>): void {\n    if (this._attachedResources.delete(resource)) {\n      resource.destroy();\n    }\n  }\n\n  /** Destroy all owned resources. Make sure the resources are no longer needed before calling. */\n  destroyAttachedResources(): void {\n    for (const resource of Object.values(this._attachedResources)) {\n      resource.destroy();\n    }\n    // don't remove while we are iterating\n    this._attachedResources = new Set<Resource<ResourceProps>>();\n  }\n\n  // PROTECTED METHODS\n\n  /** Perform all destroy steps. Can be called by derived resources when overriding destroy() */\n  protected destroyResource(): void {\n    this.destroyAttachedResources();\n    this.removeStats();\n    this.destroyed = true;\n  }\n\n  /** Called by .destroy() to track object destruction. Subclass must call if overriding destroy() */\n  protected removeStats(): void {\n    const stats = this._device.statsManager.getStats('Resource Counts');\n    const name = this[Symbol.toStringTag];\n    stats.get(`${name}s Active`).decrementCount();\n  }\n\n  /** Called by subclass to track memory allocations */\n  protected trackAllocatedMemory(bytes: number, name = this[Symbol.toStringTag]): void {\n    const stats = this._device.statsManager.getStats('Resource Counts');\n    stats.get('GPU Memory').addCount(bytes);\n    stats.get(`${name} Memory`).addCount(bytes);\n    this.allocatedBytes = bytes;\n  }\n\n  /** Called by subclass to track memory deallocations */\n  protected trackDeallocatedMemory(name = this[Symbol.toStringTag]): void {\n    const stats = this._device.statsManager.getStats('Resource Counts');\n    stats.get('GPU Memory').subtractCount(this.allocatedBytes);\n    stats.get(`${name} Memory`).subtractCount(this.allocatedBytes);\n    this.allocatedBytes = 0;\n  }\n\n  /** Called by resource constructor to track object creation */\n  private addStats(): void {\n    const stats = this._device.statsManager.getStats('Resource Counts');\n    const name = this[Symbol.toStringTag];\n    stats.get('Resources Created').incrementCount();\n    stats.get(`${name}s Created`).incrementCount();\n    stats.get(`${name}s Active`).incrementCount();\n  }\n}\n\n/**\n * Combines a map of user props and default props, only including props from defaultProps\n * @param props\n * @param defaultProps\n * @returns returns a map of overridden default props\n */\nfunction selectivelyMerge<Props>(props: Props, defaultProps: Required<Props>): Required<Props> {\n  const mergedProps = {...defaultProps};\n  for (const key in props) {\n    if (props[key] !== undefined) {\n      mergedProps[key] = props[key];\n    }\n  }\n  return mergedProps;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device} from '../device';\nimport {Resource, ResourceProps} from './resource';\n\nexport type BufferProps = ResourceProps & {\n  /** Supply a handle to connect to an existing device-specific buffer */\n  handle?: WebGLBuffer;\n  /** Specifies how this buffer can be used */\n  usage?: number;\n  /** Length in bytes of memory to be allocated. If not specified, `byteLength` of  `props.data` will be used. */\n  byteLength?: number;\n  /** Data to initialize the buffer with. */\n  data?: ArrayBuffer | ArrayBufferView | null;\n  /** Byte offset into the newly created Buffer to store data at */\n  byteOffset?: number;\n  /** If props.usage includes Buffer.INDEX */\n  indexType?: 'uint16' | 'uint32';\n\n  // TBD\n  mappedAtCreation?: boolean;\n};\n\n/** Abstract GPU buffer */\nexport abstract class Buffer extends Resource<BufferProps> {\n  static override defaultProps: Required<BufferProps> = {\n    ...Resource.defaultProps,\n    usage: 0, // Buffer.COPY_DST | Buffer.COPY_SRC\n    byteLength: 0,\n    byteOffset: 0,\n    data: null,\n    indexType: 'uint16',\n    mappedAtCreation: false\n  };\n\n  // Usage Flags\n  static MAP_READ = 0x01;\n  static MAP_WRITE = 0x02;\n  static COPY_SRC = 0x0004;\n  static COPY_DST = 0x0008;\n  /** Index buffer */\n  static INDEX = 0x0010;\n  /** Vertex buffer */\n  static VERTEX = 0x0020;\n  /** Uniform buffer */\n  static UNIFORM = 0x0040;\n  /** Storage buffer */\n  static STORAGE = 0x0080;\n  static INDIRECT = 0x0100;\n  static QUERY_RESOLVE = 0x0200;\n\n  override get [Symbol.toStringTag](): string {\n    return 'Buffer';\n  }\n\n  /** The usage with which this buffer was created */\n  readonly usage: number;\n  /** For index buffers, whether indices are 16 or 32 bit */\n  readonly indexType?: 'uint16' | 'uint32';\n  /** Length of buffer in bytes */\n  abstract byteLength: number;\n  /** \"Time\" of last update, can be used to check if redraw is needed */\n  updateTimestamp: number;\n\n  constructor(device: Device, props: BufferProps) {\n    const deducedProps = {...props};\n\n    // Deduce indexType\n    if ((props.usage || 0) & Buffer.INDEX && !props.indexType) {\n      if (props.data instanceof Uint32Array) {\n        deducedProps.indexType = 'uint32';\n      } else if (props.data instanceof Uint16Array) {\n        deducedProps.indexType = 'uint16';\n      }\n    }\n\n    // Remove data from props before storing, we don't want to hold on to a big chunk of memory\n    delete deducedProps.data;\n\n    super(device, deducedProps, Buffer.defaultProps);\n\n    this.usage = deducedProps.usage || 0;\n    this.indexType = deducedProps.indexType;\n\n    // TODO - perhaps this should be set on async write completion?\n    this.updateTimestamp = device.incrementTimestamp();\n  }\n\n  /**\n   * Create a copy of this Buffer with new byteLength, with same props but of the specified size.\n   * @note Does not copy contents of the cloned Buffer.\n   */\n  clone(props: {byteLength: number}): Buffer {\n    return this.device.createBuffer({...this.props, ...props});\n  }\n\n  /** Write data to buffer */\n  abstract write(data: ArrayBufferView, byteOffset?: number): void;\n\n  /** Read data asynchronously */\n  abstract readAsync(byteOffset?: number, byteLength?: number): Promise<Uint8Array>;\n\n  /** Read data synchronously. @note WebGL2 only */\n  readSyncWebGL(byteOffset?: number, byteLength?: number): Uint8Array {\n    throw new Error('not implemented');\n  }\n\n  // PROTECTED METHODS (INTENDED FOR USE BY OTHER FRAMEWORK CODE ONLY)\n\n  /** Max amount of debug data saved. Two vec4's */\n  static DEBUG_DATA_MAX_LENGTH = 32;\n\n  /** A partial CPU-side copy of the data in this buffer, for debugging purposes */\n  debugData: ArrayBuffer = new ArrayBuffer(0);\n\n  /** This doesn't handle partial non-zero offset updates correctly */\n  protected _setDebugData(\n    data: ArrayBufferView | ArrayBuffer | null,\n    byteOffset: number,\n    byteLength: number\n  ): void {\n    const arrayBuffer: ArrayBuffer | null = ArrayBuffer.isView(data) ? data.buffer : data;\n    const debugDataLength = Math.min(\n      data ? data.byteLength : byteLength,\n      Buffer.DEBUG_DATA_MAX_LENGTH\n    );\n    if (arrayBuffer === null) {\n      this.debugData = new ArrayBuffer(debugDataLength);\n    } else if (byteOffset === 0 && byteLength === arrayBuffer.byteLength) {\n      this.debugData = arrayBuffer.slice(0, debugDataLength);\n    } else {\n      this.debugData = arrayBuffer.slice(byteOffset, byteOffset + debugDataLength);\n    }\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {DataType, NormalizedDataType} from './vertex-formats';\n\nexport type DecodedVertexType = {\n  /** WebGPU data type */\n  dataType: DataType;\n  /** Length in bytes of the data for one vertex */\n  byteLength: number;\n  /** Whether this is for integer or float vert */\n  integer: boolean;\n  /** Whether this data type is signed */\n  signed: boolean;\n  /** Whether this is a normalized integer (that must be used as float) */\n  normalized: boolean;\n};\n\n/** Decodes a vertex type, returning byte length and flags (integer, signed, normalized) */\nexport function decodeVertexType(type: NormalizedDataType): DecodedVertexType {\n  const dataType = TYPE_MAP[type];\n  const bytes = getDataTypeBytes(dataType);\n  const normalized: boolean = type.includes('norm');\n  const integer: boolean = !normalized && !type.startsWith('float');\n  const signed: boolean = type.startsWith('s');\n  return {\n    dataType: TYPE_MAP[type],\n    byteLength: bytes,\n    integer,\n    signed,\n    normalized\n  };\n}\n\nfunction getDataTypeBytes(type: DataType): number {\n  const bytes = TYPE_SIZES[type];\n  // assert(bytes);\n  return bytes;\n}\n\nconst TYPE_MAP: Record<NormalizedDataType, DataType> = {\n  uint8: 'uint8',\n  sint8: 'sint8',\n  unorm8: 'uint8',\n  snorm8: 'sint8',\n  uint16: 'uint16',\n  sint16: 'sint16',\n  unorm16: 'uint16',\n  snorm16: 'sint16',\n  float16: 'float16',\n  float32: 'float32',\n  uint32: 'uint32',\n  sint32: 'sint32'\n};\n\nconst TYPE_SIZES: Record<DataType, number> = {\n  uint8: 1,\n  sint8: 1,\n  uint16: 2,\n  sint16: 2,\n  float16: 2,\n  float32: 4,\n  uint32: 4,\n  sint32: 4\n};\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {TextureFormat} from './texture-formats';\nimport {TextureFeature} from './texture-features';\nimport {TextureFormatInfo} from './texture-format-info';\n\n/* eslint-disable camelcase */\n\n// Define local device feature strings to optimize minification\nconst texture_compression_bc: TextureFeature = 'texture-compression-bc';\nconst texture_compression_astc: TextureFeature = 'texture-compression-astc';\nconst texture_compression_etc2: TextureFeature = 'texture-compression-etc2';\nconst texture_compression_etc1_webgl: TextureFeature = 'texture-compression-etc1-webgl';\nconst texture_compression_pvrtc_webgl: TextureFeature = 'texture-compression-pvrtc-webgl';\nconst texture_compression_atc_webgl: TextureFeature = 'texture-compression-atc-webgl';\n\nconst float32_renderable: TextureFeature = 'float32-renderable-webgl';\nconst float16_renderable: TextureFeature = 'float16-renderable-webgl';\nconst rgb9e5ufloat_renderable: TextureFeature = 'rgb9e5ufloat-renderable-webgl';\nconst snorm8_renderable: TextureFeature = 'snorm8-renderable-webgl';\nconst norm16_renderable: TextureFeature = 'norm16-renderable-webgl';\nconst snorm16_renderable: TextureFeature = 'snorm16-renderable-webgl';\n\nconst float32_filterable: TextureFeature = 'float32-filterable';\nconst float16_filterable: TextureFeature = 'float16-filterable-webgl';\n\n/** https://www.w3.org/TR/webgpu/#texture-format-caps */\n\n/** Internal type representing texture capabilities */\ntype TextureFormatDefinition = Partial<TextureFormatInfo> & {\n  /** for compressed texture formats */\n  f?: TextureFeature;\n  /** renderable if feature is present. false means the spec does not support this format */\n  render?: TextureFeature | false;\n  /** filterable if feature is present. false means the spec does not support this format */\n  filter?: TextureFeature | false;\n  blend?: TextureFeature | false;\n  store?: TextureFeature | false;\n\n  /** (bytes per pixel), for memory usage calculations. */\n  b?: number;\n  /** channels */\n  c?: number;\n  bpp?: number;\n  /** packed */\n  p?: number;\n\n  /** If not supported on WebGPU */\n  wgpu?: false;\n};\n\nexport function getTextureFormatDefinition(format: TextureFormat): TextureFormatDefinition {\n  const info = TEXTURE_FORMAT_TABLE[format];\n  if (!info) {\n    throw new Error(`Unsupported texture format ${format}`);\n  }\n  return info;\n}\n\nexport function getTextureFormatTable(): Readonly<Record<TextureFormat, TextureFormatDefinition>> {\n  return TEXTURE_FORMAT_TABLE;\n}\n\n// prettier-ignore\nconst TEXTURE_FORMAT_TABLE: Readonly<Record<TextureFormat, TextureFormatDefinition>> = {\n  // 8-bit formats\n  'r8unorm': {},\n  'r8snorm': {render: snorm8_renderable},\n  'r8uint': {},\n  'r8sint': {},\n\n  // 16-bit formats\n  'rg8unorm': {},\n  'rg8snorm': {render: snorm8_renderable},\n  'rg8uint': {},\n  'rg8sint': {},\n\n  'r16uint': {},\n  'r16sint': {},\n  'r16float': {render: float16_renderable, filter: 'float16-filterable-webgl'},\n  'r16unorm-webgl': {f: norm16_renderable},\n  'r16snorm-webgl': {f: snorm16_renderable},\n\n  // Packed 16-bit formats\n  'rgba4unorm-webgl': {channels: 'rgba', bitsPerChannel: [4, 4, 4, 4], packed: true},\n  'rgb565unorm-webgl': {channels: 'rgb', bitsPerChannel: [5, 6, 5, 0], packed: true},\n  'rgb5a1unorm-webgl': {channels: 'rgba', bitsPerChannel: [5, 5, 5, 1], packed: true},\n\n  // 24-bit formats\n  'rgb8unorm-webgl': {},\n  'rgb8snorm-webgl': {},\n\n  // 32-bit formats  \n  'rgba8unorm': {},\n  'rgba8unorm-srgb': {},\n  'rgba8snorm': {render: snorm8_renderable},\n  'rgba8uint': {},\n  'rgba8sint': {},\n\n  // 32-bit, reverse colors, webgpu only\n  'bgra8unorm': {},\n  'bgra8unorm-srgb': {},\n\n  'rg16uint': {},\n  'rg16sint': {},\n  'rg16float': {render: float16_renderable, filter: float16_filterable},\n  'rg16unorm-webgl': {render: norm16_renderable},\n  'rg16snorm-webgl': {render: snorm16_renderable},\n\n  'r32uint': {},\n  'r32sint': {},\n  'r32float': {render: float32_renderable, filter: float32_filterable},\n\n  // Packed 32 bit formats\n  'rgb9e5ufloat': {channels: 'rgb', packed: true, render: rgb9e5ufloat_renderable}, // , filter: true},\n  'rg11b10ufloat': {channels: 'rgb', bitsPerChannel: [11, 11, 10, 0], packed: true, p: 1,render: float32_renderable},\n  'rgb10a2unorm': {channels: 'rgba',  bitsPerChannel: [10, 10, 10, 2], packed: true, p: 1},\n  'rgb10a2uint-webgl': {channels: 'rgba', bitsPerChannel: [10, 10, 10, 2], packed: true, p: 1, wgpu: false},\n\n  // 48-bit formats\n  'rgb16unorm-webgl': {f: norm16_renderable}, // rgb not renderable\n  'rgb16snorm-webgl': {f: norm16_renderable}, // rgb not renderable\n\n  // 64-bit formats\n  'rg32uint': {},\n  'rg32sint': {},\n  'rg32float': {render: false, filter: float32_filterable},\n  'rgba16uint': {},\n  'rgba16sint': {},\n  'rgba16float': {render: float16_renderable, filter: float16_filterable},\n  'rgba16unorm-webgl': {render: norm16_renderable},\n  'rgba16snorm-webgl': {render: snorm16_renderable},\n\n  // 96-bit formats (deprecated!)\n  'rgb32float-webgl': {render: float32_renderable, filter: float32_filterable},\n  \n  // 128-bit formats\n  'rgba32uint': {},\n  'rgba32sint': {},\n  'rgba32float': {render: float32_renderable, filter: float32_filterable},\n\n  // Depth/stencil\n  \n  // Depth and stencil formats\n  stencil8: {attachment: 'stencil', bitsPerChannel: [8, 0, 0, 0], dataType: 'uint8'},\n  'depth16unorm': {attachment: 'depth',  bitsPerChannel: [16, 0, 0, 0], dataType: 'uint16'},\n  'depth24plus': {attachment: 'depth', bitsPerChannel: [24, 0, 0, 0], dataType: 'uint32'},\n  'depth32float': {attachment: 'depth', bitsPerChannel: [32, 0, 0, 0], dataType: 'float32'},\n  // The depth component of the \"depth24plus\" and \"depth24plus-stencil8\" formats may be implemented as either a 24-bit depth value or a \"depth32float\" value.\n  'depth24plus-stencil8': {attachment: 'depth-stencil', bitsPerChannel: [24, 8, 0, 0], packed: true},\n  // \"depth32float-stencil8\" feature\n  'depth32float-stencil8': {attachment: 'depth-stencil', bitsPerChannel: [32, 8, 0, 0], packed: true},\n\n  // BC compressed formats: check device.features.has(\"texture-compression-bc\");\n\n  'bc1-rgb-unorm-webgl': {f: texture_compression_bc},\n  'bc1-rgb-unorm-srgb-webgl': {f: texture_compression_bc},\n\n  'bc1-rgba-unorm': {f: texture_compression_bc},\n  'bc1-rgba-unorm-srgb': {f: texture_compression_bc},\n  'bc2-rgba-unorm': {f: texture_compression_bc},\n  'bc2-rgba-unorm-srgb': {f: texture_compression_bc},\n  'bc3-rgba-unorm': {f: texture_compression_bc},\n  'bc3-rgba-unorm-srgb': {f: texture_compression_bc},\n  'bc4-r-unorm': {f: texture_compression_bc},\n  'bc4-r-snorm': {f: texture_compression_bc},\n  'bc5-rg-unorm': {f: texture_compression_bc},\n  'bc5-rg-snorm': {f: texture_compression_bc},\n  'bc6h-rgb-ufloat': {f: texture_compression_bc},\n  'bc6h-rgb-float': {f: texture_compression_bc},\n  'bc7-rgba-unorm': {f: texture_compression_bc},\n  'bc7-rgba-unorm-srgb': {f: texture_compression_bc},\n\n  // WEBGL_compressed_texture_etc: device.features.has(\"texture-compression-etc2\")\n  // Note: Supposedly guaranteed availability compressed formats in WebGL2, but through CPU decompression\n\n  'etc2-rgb8unorm': {f: texture_compression_etc2},\n  'etc2-rgb8unorm-srgb': {f: texture_compression_etc2},\n  'etc2-rgb8a1unorm': {f: texture_compression_etc2},\n  'etc2-rgb8a1unorm-srgb': {f: texture_compression_etc2},\n  'etc2-rgba8unorm': {f: texture_compression_etc2},\n  'etc2-rgba8unorm-srgb': {f: texture_compression_etc2},\n\n  'eac-r11unorm': {f: texture_compression_etc2},\n  'eac-r11snorm': {f: texture_compression_etc2},\n  'eac-rg11unorm': {f: texture_compression_etc2},\n  'eac-rg11snorm': {f: texture_compression_etc2},\n\n  // X_ASTC compressed formats: device.features.has(\"texture-compression-astc\")\n\n  'astc-4x4-unorm': {f: texture_compression_astc},\n  'astc-4x4-unorm-srgb': {f: texture_compression_astc},\n  'astc-5x4-unorm': {f: texture_compression_astc},\n  'astc-5x4-unorm-srgb': {f: texture_compression_astc},\n  'astc-5x5-unorm': {f: texture_compression_astc},\n  'astc-5x5-unorm-srgb': {f: texture_compression_astc},\n  'astc-6x5-unorm': {f: texture_compression_astc},\n  'astc-6x5-unorm-srgb': {f: texture_compression_astc},\n  'astc-6x6-unorm': {f: texture_compression_astc},\n  'astc-6x6-unorm-srgb': {f: texture_compression_astc},\n  'astc-8x5-unorm': {f: texture_compression_astc},\n  'astc-8x5-unorm-srgb': {f: texture_compression_astc},\n  'astc-8x6-unorm': {f: texture_compression_astc},\n  'astc-8x6-unorm-srgb': {f: texture_compression_astc},\n  'astc-8x8-unorm': {f: texture_compression_astc},\n  'astc-8x8-unorm-srgb': {f: texture_compression_astc},\n  'astc-10x5-unorm': {f: texture_compression_astc},\n  'astc-10x5-unorm-srgb': {f: texture_compression_astc},\n  'astc-10x6-unorm': {f: texture_compression_astc},\n  'astc-10x6-unorm-srgb': {f: texture_compression_astc},\n  'astc-10x8-unorm': {f: texture_compression_astc},\n  'astc-10x8-unorm-srgb': {f: texture_compression_astc},\n  'astc-10x10-unorm': {f: texture_compression_astc},\n  'astc-10x10-unorm-srgb': {f: texture_compression_astc},\n  'astc-12x10-unorm': {f: texture_compression_astc},\n  'astc-12x10-unorm-srgb': {f: texture_compression_astc},\n  'astc-12x12-unorm': {f: texture_compression_astc},\n  'astc-12x12-unorm-srgb': {f: texture_compression_astc},\n\n  // WEBGL_compressed_texture_pvrtc\n\n  'pvrtc-rgb4unorm-webgl': {f: texture_compression_pvrtc_webgl},\n  'pvrtc-rgba4unorm-webgl': {f: texture_compression_pvrtc_webgl},\n  'pvrtc-rbg2unorm-webgl': {f: texture_compression_pvrtc_webgl},\n  'pvrtc-rgba2unorm-webgl': {f: texture_compression_pvrtc_webgl},\n\n  // WEBGL_compressed_texture_etc1\n\n  'etc1-rbg-unorm-webgl': {f: texture_compression_etc1_webgl},\n\n  // WEBGL_compressed_texture_atc\n\n  'atc-rgb-unorm-webgl': {f: texture_compression_atc_webgl},\n  'atc-rgba-unorm-webgl': {f: texture_compression_atc_webgl},\n  'atc-rgbai-unorm-webgl': {f: texture_compression_atc_webgl}\n};\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {TextureFormat, CompressedTextureFormat} from './texture-formats';\nimport {VertexType} from './vertex-formats';\nimport {decodeVertexType} from './decode-data-type';\nimport {TextureFormatInfo} from './texture-format-info';\n\nimport {getTextureFormatDefinition} from './texture-format-table';\n\n// prettier-ignore\nconst COMPRESSED_TEXTURE_FORMAT_PREFIXES = [\n  'bc1', 'bc2', 'bc3', 'bc4', 'bc5', 'bc6', 'bc7', 'etc1', 'etc2', 'eac', 'atc', 'astc', 'pvrtc'\n];\n\nconst RGB_FORMAT_REGEX = /^(r|rg|rgb|rgba|bgra)([0-9]*)([a-z]*)(-srgb)?(-webgl)?$/;\n\n/**\n * Returns true if a texture format is GPU compressed\n */\nexport function isTextureFormatCompressed(\n  format: TextureFormat\n): format is CompressedTextureFormat {\n  return COMPRESSED_TEXTURE_FORMAT_PREFIXES.some(prefix => (format as string).startsWith(prefix));\n}\n\n/**\n * Decodes a texture format, returning e.g. attatchment type, components, byte length and flags (integer, signed, normalized)\n */\nexport function decodeTextureFormat(format: TextureFormat): TextureFormatInfo {\n  let formatInfo: TextureFormatInfo = decodeTextureFormatUsingTable(format);\n\n  if (isTextureFormatCompressed(format)) {\n    formatInfo.channels = 'rgb';\n    formatInfo.components = 3;\n    formatInfo.bytesPerPixel = 1;\n    formatInfo.srgb = false;\n    formatInfo.compressed = true;\n\n    const blockSize = getCompressedTextureBlockSize(format);\n    if (blockSize) {\n      formatInfo.blockWidth = blockSize.blockWidth;\n      formatInfo.blockHeight = blockSize.blockHeight;\n    }\n  }\n\n  // Fill in missing information that can be derived from the format string\n  const matches = RGB_FORMAT_REGEX.exec(format as string);\n  if (matches) {\n    const [, channels, length, type, srgb, suffix] = matches;\n    const dataType = `${type}${length}` as VertexType;\n    const decodedType = decodeVertexType(dataType);\n    const bits = decodedType.byteLength * 8;\n    const components = channels.length as 1 | 2 | 3 | 4;\n    const bitsPerChannel: [number, number, number, number] = [\n      bits,\n      components >= 2 ? bits : 0,\n      components >= 3 ? bits : 0,\n      components >= 4 ? bits : 0\n    ];\n\n    formatInfo = {\n      format,\n      attachment: formatInfo.attachment,\n      dataType: decodedType.dataType,\n      components,\n      channels: channels as 'r' | 'rg' | 'rgb' | 'rgba',\n      integer: decodedType.integer,\n      signed: decodedType.signed,\n      normalized: decodedType.normalized,\n      bitsPerChannel,\n      bytesPerPixel: decodedType.byteLength * channels.length,\n      packed: formatInfo.packed,\n      srgb: formatInfo.srgb\n    };\n\n    if (suffix === '-webgl') {\n      formatInfo.webgl = true;\n    }\n    // dataType - overwritten by decodedType\n    if (srgb === '-srgb') {\n      formatInfo.srgb = true;\n    }\n  }\n\n  if (format.endsWith('-webgl')) {\n    formatInfo.webgl = true;\n  }\n  if (format.endsWith('-srgb')) {\n    formatInfo.srgb = true;\n  }\n\n  return formatInfo;\n}\n\n/** Decode texture format info from the table */\nfunction decodeTextureFormatUsingTable(format: TextureFormat): TextureFormatInfo {\n  const info = getTextureFormatDefinition(format);\n\n  const bytesPerPixel = info.bytesPerPixel || 1;\n  const bitsPerChannel = info.bitsPerChannel || [8, 8, 8, 8];\n  delete info.bitsPerChannel;\n  delete info.bytesPerPixel;\n  delete info.f;\n  delete info.render;\n  delete info.filter;\n  delete info.blend;\n  delete info.store;\n\n  const formatInfo: TextureFormatInfo = {\n    ...info,\n    format,\n    attachment: info.attachment || 'color',\n    channels: info.channels || 'r',\n    components: (info.components || info.channels?.length || 1) as 1 | 2 | 3 | 4,\n    bytesPerPixel,\n    bitsPerChannel,\n    dataType: info.dataType || 'uint8',\n    srgb: info.srgb ?? false,\n    packed: info.packed ?? false,\n    webgl: info.webgl ?? false,\n    integer: info.integer ?? false,\n    signed: info.signed ?? false,\n    normalized: info.normalized ?? false,\n    compressed: info.compressed ?? false\n  };\n\n  return formatInfo;\n}\n\n/** Parses ASTC block widths from format string */\nfunction getCompressedTextureBlockSize(\n  format: CompressedTextureFormat\n): {blockWidth: number; blockHeight: number} | null {\n  const REGEX = /.*-(\\d+)x(\\d+)-.*/;\n  const matches = REGEX.exec(format as string);\n  if (matches) {\n    const [, blockWidth, blockHeight] = matches;\n    return {blockWidth: Number(blockWidth), blockHeight: Number(blockHeight)};\n  }\n  return null;\n}\n\n/*\n'r8unorm':\t{s: \"float\"}, // \t✓\t✓\t✓\t},\n'r8snorm':\t{s: \"float\"}, // \t\t✓\t\t},\n'r8uint':\t{s: \"uint\"}, // \t✓\t✓\t\t},\n'r8sint':\t{s: \"sint\"}, // \t✓\t✓\t\t},\n'rg8unorm':\t{s: \"float\"}, // \t✓\t✓\t✓\t},\n'rg8snorm':\t{s: \"float\"}, // \t\t✓\t\t},\n'rg8uint':\t{s: \"uint\"}, // \t✓\t✓\t\t},\n'rg8sint':\t{s: \"sint\"}, // \t✓\t✓\t\t},\n'rgba8unorm':\t{s: \"float\"}, // \t✓\t✓\t✓\t✓},\n'rgba8unorm-srgb': {s: \"float\"}, // \t✓\t✓\t✓\t},\n'rgba8snorm':\t{s: \"float\"}, // \t\t✓\t\t✓},\n'rgba8uint':\t{s: \"uint\"}, // \t✓\t✓\t\t✓},\n'rgba8sint':\t{s: \"sint\"}, // \t✓\t✓\t\t✓},\n'bgra8unorm':\t{s: \"float\"}, // \t✓\t✓\t✓\t},\n'bgra8unorm-srgb': {s: \"float\"}, // \t✓\t✓\t✓\t},\n// 16-bit per component\t\t\t\t\t\n'r16uint': {s: \"uint\"}, // \t✓\t✓\t\t},\n'r16sint': {s: \"sint\"}, // \t✓\t✓\t\t},\n'r16float': {s: \"float\"}, // \t✓\t✓\t✓\t},\n'rg16uint': {s: \"uint\"}, // \t✓\t✓\t\t},\n'rg16sint': {s: \"sint\"}, // \t✓\t✓\t\t},\n'rg16float': {s: \"float\"}, // \t✓\t✓\t✓\t},\n'rgba16uint': {s: \"uint\"}, // \t✓\t✓\t\t✓},\n'rgba16sint': {s: \"sint\"}, // \t✓\t✓\t\t✓},\n'rgba16float': {s: \"float\"}, // \t✓\t✓\t✓\t✓},\n// 32-bit per component\t\t\t\t\t\n'r32uint': {s: \"uint\"}, // \t✓\t\t\t✓},\n'r32sint': {s: \"sint\"}, // \t✓\t\t\t✓},\n'r32float': {\"unfilterable-float\"\t✓\t✓\t\t✓},\n'rg32uint': {s: \"uint\"}, // \t✓\t\t\t✓},\n'rg32sint': {s: \"sint\"}, // \t✓\t\t\t✓},\n'rg32float': {\"unfilterable-float\"\t✓\t\t\t✓},\n'rgba32uint': {s: \"uint\"}, // \t✓\t\t\t✓},\n'rgba32sint': {s: \"sint\"}, // \t✓\t\t\t✓},\n'rgba32float': {\"unfilterable-float\"\t✓\t\t\t✓},\n// mixed component width\t\t\t\t\t\n'rgb10a2unorm': {s: \"float\"}, // \t✓\t✓\t✓\t}\n'rg11b10ufloat': {s: \"float\"}, // \t\t✓\t\t}\n// Format\tBytes per texel\tAspect\tGPUTextureSampleType\tValid image copy source\tValid image copy destination\n'stencil8': {1 − 4\tstencil\t\"uint\"\t✓}\n'depth16unorm': {2\tdepth\t\"depth\"\t✓}\n'depth24plus': {4\tdepth\t\"depth\"\t✗}\n'depth24plus': {stencil8\t4 − 8\tdepth\t\"depth\"\t✗}\n'stencil': {s: \"uint\"}, // \t✓}\n'depth32float': {4\tdepth\t\"depth\"\t✓\t✗}\n'depth24unorm': {stencil8\t4\tdepth\t\"depth\"\t✗}\n'stencil': {s: \"uint\"}, // \t✓}\n'depth32float': {stencil8}\n\n// Format\tBytes per block\tGPUTextureSampleType\tBlock Size\tFeature\n'rgb9e5ufloat': {c: 4, s: \"float\",\tbpp: 4/(1*1)},\n\n'bc1-rgba-unorm': {c: 4. s: \"float\", bpp: 8/(4 * 4) f: 'texture-compression-bc'},\n'bc1-rgba-unorm-srgb': {c: 4. s: \"float\", bpp: 8/(4 * 4) f: 'texture-compression-bc'},\n'bc2-rgba-unorm': {c: 4. s: \"float\", bpp: 16/(4 * 4) f: 'texture-compression-bc'},\n'bc2-rgba-unorm-srgb': {c: 4. s: \"float\", bpp: 16/(4 * 4) f: 'texture-compression-bc'},\n'bc3-rgba-unorm': {c: 4. s: \"float\", bpp: 16/(4 * 4) f: 'texture-compression-bc'},\n'bc3-rgba-unorm-srgb': {c: 4. s: \"float\", bpp: 16/(4 * 4) f: 'texture-compression-bc'},\n'bc4-r-unorm': {c: 1. s: \"float\", bpp: 8/(4 * 4) f: 'texture-compression-bc'},\n'bc4-r-snorm': {c: 1. s: \"float\", bpp: 8/(4 * 4) f: 'texture-compression-bc'},\n'bc5-rg-unorm': {c: 2. s: \"float\", bpp: 16/(4 * 4) f: 'texture-compression-bc'},\n'bc5-rg-snorm': { },\n'bc6h-rgb-ufloat': {\t16 },\n'bc6h-rgb-float': { },\n'bc7-rgba-unorm': {\t16 },\n'bc7-rgba-unorm-srgb': { },\n\n'etc2-rgb8unorm': {\t8\t\"float\"\t4 × 4\ttexture-compression-etc2 },\n'etc2-rgb8unorm-srgb': { },\n'etc2-rgb8a1unorm': {\t8 },\n'etc2-rgb8a1unorm-srgb': { },\n'etc2-rgba8unorm': {\t16 },\n'etc2-rgba8unorm-srgb': { },\n\n'eac-r11unorm': {\t8 },\n'eac-r11snorm': { },\n'eac-rg11unorm': {\t16 },\n'eac-rg11snorm': { },\n\n'astc-4x4-unorm': {\t16\t\"float\"\t4 × 4\ttexture-compression-astc },\n'astc-4x4-unorm-srgb': { },\n'astc-5x4-unorm': {\t16\t5 × 4 },\n'astc-5x4-unorm-srgb': { },\n'astc-5x5-unorm': {\t16\t5 × 5 },\n'astc-5x5-unorm-srgb': { },\n'astc-6x5-unorm': {\t16\t6 × 5 },\n'astc-6x5-unorm-srgb': { },\n'astc-6x6-unorm': {\t16\t6 × 6 },\n'astc-6x6-unorm-srgb': { },\n'astc-8x5-unorm': {\t16\t8 × 5 },\n'astc-8x5-unorm-srgb': { },\n'astc-8x6-unorm': {\t16\t8 × 6 },\n'astc-8x6-unorm-srgb': { },\n'astc-8x8-unorm': {\t16\t8 × 8 },\n'astc-8x8-unorm-srgb': { },\n'astc-10x5-unorm': {\t16\t10 × 5 },\n'astc-10x5-unorm-srgb': { },\n'astc-10x6-unorm': {\t16\t10 × 6 },\n'astc-10x6-unorm-srgb': { },\n'astc-10x8-unorm': {\t16\t10 × 8 },\n'astc-10x8-unorm-srgb': { },\n'astc-10x10-unorm': {\t16\t10 × 10 },\n'astc-10x10-unorm-srgb': { },\n'astc-12x10-unorm': {\t16\t12 × 10 },\n'astc-12x10-unorm-srgb': { },\n'astc-12x12-unorm': {\t16 },\n*/\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {TextureFormat} from './texture-formats';\nimport type {TextureFeature} from './texture-features';\nimport {decodeTextureFormat} from './decode-texture-format';\n\nimport {getTextureFormatDefinition} from './texture-format-table';\n\n/**\n * Texture format capabilities.\n * @note Not directly usable. Can contain TextureFeature strings that need to be checked against a specific device.\n */\nexport type TextureFormatCapabilities = {\n  format: TextureFormat;\n  /** Can the format be created */\n  create: TextureFeature | boolean;\n  /** If a feature string, the specified device feature determines if format is renderable. */\n  render: TextureFeature | boolean;\n  /** If a feature string, the specified device feature determines if format is filterable. */\n  filter: TextureFeature | boolean;\n  /** If a feature string, the specified device feature determines if format is blendable. */\n  blend: TextureFeature | boolean;\n  /** If a feature string, the specified device feature determines if format is storeable. */\n  store: TextureFeature | boolean;\n};\n\nexport function getTextureFormatCapabilities(format: TextureFormat): TextureFormatCapabilities {\n  const info = getTextureFormatDefinition(format);\n\n  const formatCapabilities: Required<TextureFormatCapabilities> = {\n    format,\n    create: info.f ?? true,\n    render: info.render ?? true,\n    filter: info.filter ?? true,\n    blend: info.blend ?? true,\n    store: info.store ?? true\n  };\n\n  const formatInfo = decodeTextureFormat(format);\n  const isDepthStencil = format.startsWith('depth') || format.startsWith('stencil');\n  const isSigned = formatInfo?.signed;\n  const isInteger = formatInfo?.integer;\n  const isWebGLSpecific = formatInfo?.webgl;\n\n  // signed formats are not renderable\n  formatCapabilities.render &&= !isSigned;\n  // signed and integer formats are not filterable\n  formatCapabilities.filter &&= !isDepthStencil && !isSigned && !isInteger && !isWebGLSpecific;\n\n  return formatCapabilities;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {StatsManager, lumaStats} from '../utils/stats-manager';\nimport {log} from '../utils/log';\nimport {uid} from '../utils/uid';\nimport type {TextureFormat} from '../gpu-type-utils/texture-formats';\nimport type {TextureFormatCapabilities} from '../gpu-type-utils/texture-format-capabilities';\nimport type {CanvasContext, CanvasContextProps} from './canvas-context';\nimport type {BufferProps} from './resources/buffer';\nimport {Buffer} from './resources/buffer';\nimport type {RenderPipeline, RenderPipelineProps} from './resources/render-pipeline';\nimport type {ComputePipeline, ComputePipelineProps} from './resources/compute-pipeline';\nimport type {Sampler, SamplerProps} from './resources/sampler';\nimport type {Shader, ShaderProps} from './resources/shader';\nimport type {Texture, TextureProps} from './resources/texture';\nimport type {ExternalTexture, ExternalTextureProps} from './resources/external-texture';\nimport type {Framebuffer, FramebufferProps} from './resources/framebuffer';\nimport type {RenderPass, RenderPassProps} from './resources/render-pass';\nimport type {ComputePass, ComputePassProps} from './resources/compute-pass';\nimport type {CommandEncoder, CommandEncoderProps} from './resources/command-encoder';\nimport type {VertexArray, VertexArrayProps} from './resources/vertex-array';\nimport type {TransformFeedback, TransformFeedbackProps} from './resources/transform-feedback';\nimport type {QuerySet, QuerySetProps} from './resources/query-set';\n\nimport {isTextureFormatCompressed} from '../gpu-type-utils/decode-texture-format';\nimport {getTextureFormatCapabilities} from '../gpu-type-utils/texture-format-capabilities';\n\n/**\n * Identifies the GPU vendor and driver.\n * @note Chrome WebGPU does not provide much information, though more can be enabled with\n * @see https://developer.chrome.com/blog/new-in-webgpu-120#adapter_information_updates\n * chrome://flags/#enable-webgpu-developer-features\n */\nexport type DeviceInfo = {\n  /** Type of device */\n  type: 'webgl' | 'webgpu' | 'unknown';\n  /** Vendor (name of GPU vendor, Apple, nVidia etc */\n  vendor: string;\n  /** Renderer (usually driver name) */\n  renderer: string;\n  /** version of driver */\n  version: string;\n  /** family of GPU */\n  gpu: 'nvidia' | 'amd' | 'intel' | 'apple' | 'software' | 'unknown';\n  /** Type of GPU () */\n  gpuType: 'discrete' | 'integrated' | 'cpu' | 'unknown';\n  /** GPU architecture */\n  gpuArchitecture?: string; // 'common-3' on Apple\n  /** GPU driver backend. Can sometimes be sniffed */\n  gpuBackend?: 'opengl' | 'opengles' | 'metal' | 'd3d11' | 'd3d12' | 'vulkan' | 'unknown';\n  /** If this is a fallback adapter */\n  fallback?: boolean;\n  /** Shader language supported by device.createShader() */\n  shadingLanguage: 'wgsl' | 'glsl';\n  /** Highest supported shader language version: GLSL 3.00 = 300, WGSL 1.00 = 100 */\n  shadingLanguageVersion: number;\n};\n\n/** Limits for a device (max supported sizes of resources, max number of bindings etc) */\nexport abstract class DeviceLimits {\n  /** max number of TextureDimension1D */\n  abstract maxTextureDimension1D: number;\n  /** max number of TextureDimension2D */\n  abstract maxTextureDimension2D: number;\n  /** max number of TextureDimension3D */\n  abstract maxTextureDimension3D: number;\n  /** max number of TextureArrayLayers */\n  abstract maxTextureArrayLayers: number;\n  /** max number of BindGroups */\n  abstract maxBindGroups: number;\n  /** max number of DynamicUniformBuffers per PipelineLayout */\n  abstract maxDynamicUniformBuffersPerPipelineLayout: number;\n  /** max number of DynamicStorageBuffers per PipelineLayout */\n  abstract maxDynamicStorageBuffersPerPipelineLayout: number;\n  /** max number of SampledTextures per ShaderStage */\n  abstract maxSampledTexturesPerShaderStage: number;\n  /** max number of Samplers per ShaderStage */\n  abstract maxSamplersPerShaderStage: number;\n  /** max number of StorageBuffers per ShaderStage */\n  abstract maxStorageBuffersPerShaderStage: number;\n  /** max number of StorageTextures per ShaderStage */\n  abstract maxStorageTexturesPerShaderStage: number;\n  /** max number of UniformBuffers per ShaderStage */\n  abstract maxUniformBuffersPerShaderStage: number;\n  /** max number of UniformBufferBindingSize */\n  abstract maxUniformBufferBindingSize: number;\n  /** max number of StorageBufferBindingSize */\n  abstract maxStorageBufferBindingSize: number;\n  /** min UniformBufferOffsetAlignment */\n  abstract minUniformBufferOffsetAlignment: number;\n  /** min StorageBufferOffsetAlignment */\n  abstract minStorageBufferOffsetAlignment: number;\n  /** max number of VertexBuffers */\n  abstract maxVertexBuffers: number;\n  /** max number of VertexAttributes */\n  abstract maxVertexAttributes: number;\n  /** max number of VertexBufferArrayStride */\n  abstract maxVertexBufferArrayStride: number;\n  /** max number of InterStageShaderComponents */\n  abstract maxInterStageShaderComponents: number;\n  /** max number of ComputeWorkgroupStorageSize */\n  abstract maxComputeWorkgroupStorageSize: number;\n  /** max number of ComputeInvocations per Workgroup */\n  abstract maxComputeInvocationsPerWorkgroup: number;\n  /** max ComputeWorkgroupSizeX */\n  abstract maxComputeWorkgroupSizeX: number;\n  /** max ComputeWorkgroupSizeY */\n  abstract maxComputeWorkgroupSizeY: number;\n  /** max ComputeWorkgroupSizeZ */\n  abstract maxComputeWorkgroupSizeZ: number;\n  /** max ComputeWorkgroupsPerDimension */\n  abstract maxComputeWorkgroupsPerDimension: number;\n}\n\n/** Set-like class for features (lets apps check for WebGL / WebGPU extensions) */\nexport class DeviceFeatures {\n  protected features: Set<DeviceFeature>;\n  protected disabledFeatures?: Partial<Record<DeviceFeature, boolean>>;\n\n  constructor(\n    features: DeviceFeature[] = [],\n    disabledFeatures: Partial<Record<DeviceFeature, boolean>>\n  ) {\n    this.features = new Set<DeviceFeature>(features);\n    this.disabledFeatures = disabledFeatures || {};\n  }\n\n  *[Symbol.iterator](): IterableIterator<DeviceFeature> {\n    yield* this.features;\n  }\n\n  has(feature: DeviceFeature): boolean {\n    return !this.disabledFeatures?.[feature] && this.features.has(feature);\n  }\n}\n\n/** Device feature names */\nexport type DeviceFeature =\n  | WebGPUDeviceFeature\n  | WebGLDeviceFeature\n  | WebGLCompressedTextureFeatures;\n\nexport type WebGPUDeviceFeature =\n  | 'depth-clip-control'\n  | 'indirect-first-instance'\n  | 'timestamp-query'\n  | 'shader-f16'\n  | 'depth32float-stencil8'\n  | 'rg11b10ufloat-renderable' // Is the rg11b10ufloat texture format renderable?\n  | 'float32-filterable' // Is the float32 format filterable?\n  | 'bgra8unorm-storage' // Can the bgra8unorm texture format be used in storage buffers?\n  | 'texture-compression-bc'\n  | 'texture-compression-etc2'\n  | 'texture-compression-astc';\n// | 'depth-clamping' // removed from the WebGPU spec...\n// | 'pipeline-statistics-query' // removed from the WebGPU spec...\n\nexport type WebGLDeviceFeature =\n  // webgl extension features\n  | 'timer-query-webgl' // unify with WebGPU timestamp-query?\n  | 'compilation-status-async-webgl' // Non-blocking shader compile/link status query available\n  | 'provoking-vertex-webgl' // parameters.provokingVertex\n  | 'polygon-mode-webgl' // parameters.polygonMode and parameters.polygonOffsetLine\n\n  // GLSL extension features\n  | 'shader-noperspective-interpolation-webgl' // Vertex outputs & fragment inputs can have a `noperspective` interpolation qualifier.\n  | 'shader-conservative-depth-webgl' // GLSL `gl_FragDepth` qualifiers `depth_unchanged` etc can enable early depth test\n  | 'shader-clip-cull-distance-webgl' // Makes gl_ClipDistance and gl_CullDistance available in shaders\n\n  // texture rendering\n  | 'float32-renderable-webgl'\n  | 'float16-renderable-webgl'\n  | 'rgb9e5ufloat-renderable-webgl'\n  | 'snorm8-renderable-webgl'\n  | 'norm16-renderable-webgl'\n  | 'snorm16-renderable-webgl'\n\n  // texture filtering\n  | 'float16-filterable-webgl'\n  | 'texture-filterable-anisotropic-webgl'\n\n  // texture storage bindings\n  | 'bgra8unorm-storage'\n\n  // texture blending\n  | 'texture-blend-float-webgl';\n\ntype WebGLCompressedTextureFeatures =\n  | 'texture-compression-bc5-webgl'\n  | 'texture-compression-bc7-webgl'\n  | 'texture-compression-etc1-webgl'\n  | 'texture-compression-pvrtc-webgl'\n  | 'texture-compression-atc-webgl';\n\n/** Texture format capabilities that have been checked against a specific device */\nexport type DeviceTextureFormatCapabilities = {\n  format: TextureFormat;\n  /** Can the format be created */\n  create: boolean;\n  /** If a feature string, the specified device feature determines if format is renderable. */\n  render: boolean;\n  /** If a feature string, the specified device feature determines if format is filterable. */\n  filter: boolean;\n  /** If a feature string, the specified device feature determines if format is blendable. */\n  blend: boolean;\n  /** If a feature string, the specified device feature determines if format is storeable. */\n  store: boolean;\n};\n\n/** Device properties */\nexport type DeviceProps = {\n  /** string id for debugging. Stored on the object, used in logging and set on underlying GPU objects when feasible. */\n  id?: string;\n  /** Properties for creating a default canvas context */\n  createCanvasContext?: CanvasContextProps | true;\n  /** Control which type of GPU is preferred on systems with both integrated and discrete GPU. Defaults to \"high-performance\" / discrete GPU. */\n  powerPreference?: 'default' | 'high-performance' | 'low-power';\n  /** Hints that device creation should fail if no hardware GPU is available (if the system performance is \"low\"). */\n  failIfMajorPerformanceCaveat?: boolean;\n  /** Error handling */\n  onError?: (error: Error) => unknown;\n\n  /** WebGL specific: Properties passed through to WebGL2RenderingContext creation: `canvas.getContext('webgl2', props.webgl)` */\n  webgl?: WebGLContextProps;\n\n  // DEBUG SETTINGS\n\n  /** Turn on implementation defined checks that slow down execution but help break where errors occur */\n  debug?: boolean;\n  /** Show shader source in browser? The default is`'error'`, meaning that logs are shown when shader compilation has errors */\n  debugShaders?: 'never' | 'errors' | 'warnings' | 'always';\n  /** Renders a small version of updated Framebuffers into the primary canvas context. Can be set in console luma.log.set('debug-framebuffers', true) */\n  debugFramebuffers?: boolean;\n  /** WebGL specific - Trace WebGL calls (instruments WebGL2RenderingContext at the expense of performance). Can be set in console luma.log.set('debug-webgl', true)  */\n  debugWebGL?: boolean;\n  /** WebGL specific - Initialize the SpectorJS WebGL debugger. Can be set in console luma.log.set('debug-spectorjs', true)  */\n  debugSpectorJS?: boolean;\n  /** WebGL specific - SpectorJS URL. Override if CDN is down or different SpectorJS version is desired. */\n  debugSpectorJSUrl?: string;\n\n  // EXPERIMENTAL SETTINGS - subject to change\n\n  /** adapter.create() returns the existing Device if the provided canvas' WebGL context is already associated with a Device.  */\n  _reuseDevices?: boolean;\n  /** WebGPU specific - Request a Device with the highest limits supported by platform. On WebGPU devices can be created with minimal limits. */\n  _requestMaxLimits?: boolean;\n  /** Disable specific features */\n  _disabledFeatures?: Partial<Record<DeviceFeature, boolean>>;\n  /** WebGL specific - Initialize all features on startup */\n  _initializeFeatures?: boolean;\n  /** Never destroy cached shaders and pipelines */\n  _factoryDestroyPolicy?: 'unused' | 'never';\n  /** Resource default overrides */\n  _resourceDefaults?: {\n    texture?: Partial<TextureProps>;\n    sampler?: Partial<SamplerProps>;\n    renderPass?: Partial<RenderPassProps>;\n  };\n\n  /** @deprecated Internal, Do not use directly! Use `luma.attachDevice()` to attach to pre-created contexts/devices. */\n  _handle?: unknown; // WebGL2RenderingContext | GPUDevice | null;\n};\n\n/** WebGL independent copy of WebGLContextAttributes */\ntype WebGLContextProps = {\n  alpha?: boolean; // indicates if the canvas contains an alpha buffer.\n  desynchronized?: boolean; // hints the user agent to reduce the latency by desynchronizing the canvas paint cycle from the event loop\n  antialias?: boolean; // indicates whether or not to perform anti-aliasing.\n  depth?: boolean; // indicates that the drawing buffer has a depth buffer of at least 16 bits.\n  failIfMajorPerformanceCaveat?: boolean; // indicates if a context will be created if the system performance is low or if no hardware GPU is available.\n  powerPreference?: 'default' | 'high-performance' | 'low-power';\n  premultipliedAlpha?: boolean; // page compositor will assume the drawing buffer contains colors with pre-multiplied alpha.\n  preserveDrawingBuffer?: boolean; // buffers will not be cleared and will preserve their values until cleared or overwritten by the author.\n};\n\n/**\n * Create and attach devices for a specific backend. Currently static methods on each device\n */\nexport interface DeviceFactory {\n  // new (props: DeviceProps): Device; Constructor isn't used\n  type: string;\n  isSupported(): boolean;\n  create(props: DeviceProps): Promise<Device>;\n  attach?(handle: unknown): Device;\n}\n\n/**\n * WebGPU Device/WebGL context abstraction\n */\nexport abstract class Device {\n  static defaultProps: Required<DeviceProps> = {\n    id: null!,\n    powerPreference: 'high-performance',\n    failIfMajorPerformanceCaveat: false,\n    createCanvasContext: undefined!,\n\n    // Callbacks\n    onError: (error: Error) => log.error(error.message)(),\n\n    // Experimental\n    _reuseDevices: false,\n    _requestMaxLimits: true,\n    _factoryDestroyPolicy: 'unused',\n    // TODO - Change these after confirming things work as expected\n    _initializeFeatures: true,\n    _disabledFeatures: {\n      'compilation-status-async-webgl': true\n    },\n    _resourceDefaults: {},\n\n    // WebGL specific\n    webgl: {},\n\n    debug: log.get('debug') || undefined!,\n    debugShaders: log.get('debug-shaders') || undefined!,\n    debugFramebuffers: Boolean(log.get('debug-framebuffers')),\n    debugWebGL: Boolean(log.get('debug-webgl')),\n    debugSpectorJS: undefined!, // Note: log setting is queried by the spector.js code\n    debugSpectorJSUrl: undefined!,\n\n    // INTERNAL\n    _handle: undefined!\n  };\n\n  get [Symbol.toStringTag](): string {\n    return 'Device';\n  }\n\n  constructor(props: DeviceProps) {\n    this.props = {...Device.defaultProps, ...props};\n    this.id = this.props.id || uid(this[Symbol.toStringTag].toLowerCase());\n  }\n\n  /** id of this device, primarily for debugging */\n  readonly id: string;\n  /** type of this device */\n  abstract readonly type: 'webgl' | 'webgpu' | 'unknown';\n  /** A copy of the device props  */\n  readonly props: Required<DeviceProps>;\n  /** Available for the application to store data on the device */\n  userData: {[key: string]: unknown} = {};\n  /** stats */\n  readonly statsManager: StatsManager = lumaStats;\n  /** An abstract timestamp used for change tracking */\n  timestamp: number = 0;\n\n  /** True if this device has been reused during device creation (app has multiple references) */\n  _reused: boolean = false;\n  /** Used by other luma.gl modules to store data on the device */\n  _lumaData: {[key: string]: unknown} = {};\n\n  abstract destroy(): void;\n\n  // Capabilities\n\n  /** Information about the device (vendor, versions etc) */\n  abstract info: DeviceInfo;\n  /** Optional capability discovery */\n  abstract features: DeviceFeatures;\n  /** WebGPU style device limits */\n  abstract get limits(): DeviceLimits;\n\n  /** Determines what operations are supported on a texture format, checking against supported device features */\n  getTextureFormatCapabilities(format: TextureFormat): DeviceTextureFormatCapabilities {\n    const genericCapabilities = getTextureFormatCapabilities(format);\n\n    // Check standard features\n    const checkFeature = (featureOrBoolean: DeviceFeature | boolean | undefined) =>\n      (typeof featureOrBoolean === 'string'\n        ? this.features.has(featureOrBoolean)\n        : featureOrBoolean) ?? true;\n\n    const supported = checkFeature(genericCapabilities.create);\n\n    const deviceCapabilities: DeviceTextureFormatCapabilities = {\n      format,\n      create: supported,\n      render: supported && checkFeature(genericCapabilities.render),\n      filter: supported && checkFeature(genericCapabilities.filter),\n      blend: supported && checkFeature(genericCapabilities.blend),\n      store: supported && checkFeature(genericCapabilities.store)\n    };\n\n    return this._getDeviceSpecificTextureFormatCapabilities(deviceCapabilities);\n  }\n\n  /** Check if device supports a specific texture format (creation and `nearest` sampling) */\n  isTextureFormatSupported(\n    format: TextureFormat,\n    capabilities: Partial<TextureFormatCapabilities>\n  ): boolean {\n    return this.getTextureFormatCapabilities(format).create;\n  }\n\n  /** Check if linear filtering (sampler interpolation) is supported for a specific texture format */\n  isTextureFormatFilterable(format: TextureFormat): boolean {\n    return this.getTextureFormatCapabilities(format).filter;\n  }\n\n  /** Check if device supports rendering to a framebuffer color attachment of a specific texture format */\n  isTextureFormatRenderable(format: TextureFormat): boolean {\n    return this.getTextureFormatCapabilities(format).render;\n  }\n\n  /** Check if a specific texture format is GPU compressed */\n  isTextureFormatCompressed(format: TextureFormat): boolean {\n    return isTextureFormatCompressed(format);\n  }\n\n  // Device loss\n\n  /** `true` if device is already lost */\n  abstract get isLost(): boolean;\n\n  /** Promise that resolves when device is lost */\n  abstract readonly lost: Promise<{reason: 'destroyed'; message: string}>;\n\n  /**\n   * Trigger device loss.\n   * @returns `true` if context loss could actually be triggered.\n   * @note primarily intended for testing how application reacts to device loss\n   */\n  loseDevice(): boolean {\n    return false;\n  }\n\n  /** Report error (normally called for unhandled device errors) */\n  reportError(error: Error): void {\n    this.props.onError(error);\n  }\n\n  // Canvas context\n\n  /** Default / primary canvas context. Can be null as WebGPU devices can be created without a CanvasContext */\n  abstract canvasContext: CanvasContext | null;\n\n  /** Returns the default / primary canvas context. Throws an error if no canvas context is available (a WebGPU compute device) */\n  getDefaultCanvasContext(): CanvasContext {\n    if (!this.canvasContext) {\n      throw new Error('Device has no default CanvasContext. See props.createCanvasContext');\n    }\n    return this.canvasContext;\n  }\n\n  /** Creates a new CanvasContext (WebGPU only) */\n  abstract createCanvasContext(props?: CanvasContextProps): CanvasContext;\n\n  /** Call after rendering a frame (necessary e.g. on WebGL OffscreenCanvas) */\n  abstract submit(): void;\n\n  // Resource creation\n\n  /** Create a buffer */\n  abstract createBuffer(props: BufferProps | ArrayBuffer | ArrayBufferView): Buffer;\n\n  /** Create a texture */\n  abstract createTexture(props: TextureProps): Texture;\n\n  /** Create a temporary texture view of a video source */\n  abstract createExternalTexture(props: ExternalTextureProps): ExternalTexture;\n\n  /** Create a sampler */\n  abstract createSampler(props: SamplerProps): Sampler;\n\n  /** Create a Framebuffer. Must have at least one attachment. */\n  abstract createFramebuffer(props: FramebufferProps): Framebuffer;\n\n  /** Create a shader */\n  abstract createShader(props: ShaderProps): Shader;\n\n  /** Create a render pipeline (aka program) */\n  abstract createRenderPipeline(props: RenderPipelineProps): RenderPipeline;\n\n  /** Create a compute pipeline (aka program). WebGPU only. */\n  abstract createComputePipeline(props: ComputePipelineProps): ComputePipeline;\n\n  /** Create a vertex array */\n  abstract createVertexArray(props: VertexArrayProps): VertexArray;\n\n  /** Create a RenderPass */\n  abstract beginRenderPass(props?: RenderPassProps): RenderPass;\n\n  /** Create a ComputePass */\n  abstract beginComputePass(props?: ComputePassProps): ComputePass;\n\n  /** Create a transform feedback (immutable set of output buffer bindings). WebGL only. */\n  abstract createTransformFeedback(props: TransformFeedbackProps): TransformFeedback;\n\n  abstract createQuerySet(props: QuerySetProps): QuerySet;\n\n  createCommandEncoder(props: CommandEncoderProps = {}): CommandEncoder {\n    throw new Error('not implemented');\n  }\n\n  /** A monotonic counter for tracking buffer and texture updates */\n  incrementTimestamp(): number {\n    return this.timestamp++;\n  }\n\n  // Error Handling\n\n  /** Report unhandled device errors */\n  onError(error: Error) {\n    this.props.onError(error);\n  }\n\n  // DEPRECATED METHODS\n\n  /** @deprecated Use getDefaultCanvasContext() */\n  getCanvasContext(): CanvasContext {\n    return this.getDefaultCanvasContext();\n  }\n\n  // WebGL specific HACKS - enables app to remove webgl import\n  // Use until we have a better way to handle these\n\n  /** @deprecated - will be removed - should use command encoder */\n  readPixelsToArrayWebGL(\n    source: Framebuffer | Texture,\n    options?: {\n      sourceX?: number;\n      sourceY?: number;\n      sourceFormat?: number;\n      sourceAttachment?: number;\n      target?: Uint8Array | Uint16Array | Float32Array;\n      // following parameters are auto deduced if not provided\n      sourceWidth?: number;\n      sourceHeight?: number;\n      sourceType?: number;\n    }\n  ): Uint8Array | Uint16Array | Float32Array {\n    throw new Error('not implemented');\n  }\n\n  /** @deprecated - will be removed - should use command encoder */\n  readPixelsToBufferWebGL(\n    source: Framebuffer | Texture,\n    options?: {\n      sourceX?: number;\n      sourceY?: number;\n      sourceFormat?: number;\n      target?: Buffer; // A new Buffer object is created when not provided.\n      targetByteOffset?: number; // byte offset in buffer object\n      // following parameters are auto deduced if not provided\n      sourceWidth?: number;\n      sourceHeight?: number;\n      sourceType?: number;\n    }\n  ): Buffer {\n    throw new Error('not implemented');\n  }\n\n  /** @deprecated - will be removed - should use WebGPU parameters (pipeline) */\n  setParametersWebGL(parameters: any): void {\n    throw new Error('not implemented');\n  }\n\n  /** @deprecated - will be removed - should use WebGPU parameters (pipeline) */\n  getParametersWebGL(parameters: any): void {\n    throw new Error('not implemented');\n  }\n\n  /** @deprecated - will be removed - should use WebGPU parameters (pipeline) */\n  withParametersWebGL(parameters: any, func: any): any {\n    throw new Error('not implemented');\n  }\n\n  /** @deprecated - will be removed - should use clear arguments in RenderPass */\n  clearWebGL(options?: {framebuffer?: Framebuffer; color?: any; depth?: any; stencil?: any}): void {\n    throw new Error('not implemented');\n  }\n\n  /** @deprecated - will be removed - should use for debugging only */\n  resetWebGL(): void {\n    throw new Error('not implemented');\n  }\n\n  // IMPLEMENTATION\n\n  /** Helper to get the canvas context props */\n  static _getCanvasContextProps(props: DeviceProps): CanvasContextProps | undefined {\n    return props.createCanvasContext === true ? {} : props.createCanvasContext;\n  }\n\n  /**\n   * Determines what operations are supported on a texture format, checking against supported device features\n   * Subclasses override to apply additional checks\n   */\n  protected abstract _getDeviceSpecificTextureFormatCapabilities(\n    format: DeviceTextureFormatCapabilities\n  ): DeviceTextureFormatCapabilities;\n\n  /** Subclasses use this to support .createBuffer() overloads */\n  protected _normalizeBufferProps(props: BufferProps | ArrayBuffer | ArrayBufferView): BufferProps {\n    if (props instanceof ArrayBuffer || ArrayBuffer.isView(props)) {\n      props = {data: props};\n    }\n\n    // TODO - fragile, as this is done before we merge with default options\n    // inside the Buffer constructor\n\n    const newProps = {...props};\n    // Deduce indexType\n    if ((props.usage || 0) & Buffer.INDEX && !props.indexType) {\n      if (props.data instanceof Uint32Array) {\n        newProps.indexType = 'uint32';\n      } else if (props.data instanceof Uint16Array) {\n        newProps.indexType = 'uint16';\n      } else {\n        log.warn('indices buffer content must be of integer type')();\n      }\n    }\n    return newProps;\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Log} from '@probe.gl/log';\nimport {isBrowser} from '@probe.gl/env';\nimport type {DeviceProps} from './device';\nimport {Device} from './device';\nimport {Adapter} from './adapter';\nimport {StatsManager, lumaStats} from '../utils/stats-manager';\nimport {log} from '../utils/log';\n\nconst isPage: boolean = isBrowser() && typeof document !== 'undefined';\nconst isPageLoaded: () => boolean = () => isPage && document.readyState === 'complete';\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var luma: Luma;\n}\n\nconst STARTUP_MESSAGE = 'set luma.log.level=1 (or higher) to trace rendering';\n\nconst ERROR_MESSAGE =\n  'No matching device found. Ensure `@luma.gl/webgl` and/or `@luma.gl/webgpu` modules are imported.';\n\n/** Properties for creating a new device */\nexport type CreateDeviceProps = {\n  /** Selects the type of device. `best-available` uses webgpu if available, then webgl. */\n  type?: 'webgl' | 'webgpu' | 'unknown' | 'best-available';\n  /** List of adapters. Will also search any pre-registered adapters */\n  adapters?: Adapter[];\n  /** Whether to wait for page to be loaded */\n  waitForPageLoad?: boolean;\n} & DeviceProps;\n\n/** Properties for attaching an existing WebGL context or WebGPU device to a new luma Device */\nexport type AttachDeviceProps = {\n  type?: 'webgl' | 'webgpu' | 'unknown' | 'best-available';\n  /** Externally created WebGL context or WebGPU device */\n  handle: unknown; // WebGL2RenderingContext | GPUDevice | null;\n  /** List of adapters. Will also search any pre-registered adapters */\n  adapters?: Adapter[];\n} & DeviceProps;\n\n/**\n * Entry point to the luma.gl GPU abstraction\n * Register WebGPU and/or WebGL adapters (controls application bundle size)\n * Run-time selection of the first available Device\n */\nexport class Luma {\n  static defaultProps: Required<CreateDeviceProps> = {\n    ...Device.defaultProps,\n    type: 'best-available',\n    adapters: undefined!,\n    waitForPageLoad: true\n  };\n\n  /**\n   * Page load promise\n   * Get a 'lazy' promise that resolves when the DOM is loaded.\n   * @note Since there may be limitations on number of `load` event listeners,\n   * it is recommended avoid calling this function until actually needed.\n   * I.e. don't call it until you know that you will be looking up a string in the DOM.\n   */\n  static pageLoaded: Promise<void> = getPageLoadPromise().then(() => {\n    log.probe(2, 'DOM is loaded')();\n  });\n\n  /** Global stats for all devices */\n  readonly stats: StatsManager = lumaStats;\n\n  /**\n   * Global log\n   *\n   * Assign luma.log.level in console to control logging: \\\n   * 0: none, 1: minimal, 2: verbose, 3: attribute/uniforms, 4: gl logs\n   * luma.log.break[], set to gl funcs, luma.log.profile[] set to model names`;\n   */\n  readonly log: Log = log;\n\n  /** Version of luma.gl */\n  readonly VERSION: string =\n    // Version detection using build plugin\n    // @ts-expect-error no-undef\n    typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'running from source';\n\n  spector: unknown;\n\n  protected preregisteredAdapters = new Map<string, Adapter>();\n\n  constructor() {\n    if (globalThis.luma) {\n      if (globalThis.luma.VERSION !== this.VERSION) {\n        log.error(`Found luma.gl ${globalThis.luma.VERSION} while initialzing ${this.VERSION}`)();\n        log.error(`'yarn why @luma.gl/core' can help identify the source of the conflict`)();\n        throw new Error(`luma.gl - multiple versions detected: see console log`);\n      }\n\n      log.error('This version of luma.gl has already been initialized')();\n    }\n\n    log.log(1, `${this.VERSION} - ${STARTUP_MESSAGE}`)();\n\n    globalThis.luma = this;\n  }\n\n  registerAdapters(adapters: Adapter[]): void {\n    for (const deviceClass of adapters) {\n      this.preregisteredAdapters.set(deviceClass.type, deviceClass);\n    }\n  }\n\n  /** Get type strings for supported Devices */\n  getSupportedAdapters(adapters: Adapter[] = []): string[] {\n    const adapterMap = this.getAdapterMap(adapters);\n    return Array.from(adapterMap)\n      .map(([, adapter]) => adapter)\n      .filter(adapter => adapter.isSupported?.())\n      .map(adapter => adapter.type);\n  }\n\n  /** Get type strings for best available Device */\n  getBestAvailableAdapter(adapters: Adapter[] = []): 'webgpu' | 'webgl' | null {\n    const adapterMap = this.getAdapterMap(adapters);\n    if (adapterMap.get('webgpu')?.isSupported?.()) {\n      return 'webgpu';\n    }\n    if (adapterMap.get('webgl')?.isSupported?.()) {\n      return 'webgl';\n    }\n    return null;\n  }\n\n  setDefaultDeviceProps(props: CreateDeviceProps): void {\n    Object.assign(Luma.defaultProps, props);\n  }\n\n  /** Creates a device. Asynchronously. */\n  async createDevice(props: CreateDeviceProps = {}): Promise<Device> {\n    props = {...Luma.defaultProps, ...props};\n\n    if (props.waitForPageLoad) {\n      // || props.createCanvasContext) {\n      await Luma.pageLoaded;\n    }\n\n    const adapterMap = this.getAdapterMap(props.adapters);\n\n    let type: string = props.type || '';\n    if (type === 'best-available') {\n      type = this.getBestAvailableAdapter(props.adapters) || type;\n    }\n\n    const adapters = this.getAdapterMap(props.adapters) || adapterMap;\n\n    const adapter = adapters.get(type);\n    const device = await adapter?.create?.(props);\n    if (device) {\n      return device;\n    }\n\n    throw new Error(ERROR_MESSAGE);\n  }\n\n  /** Attach to an existing GPU API handle (WebGL2RenderingContext or GPUDevice). */\n  async attachDevice(props: AttachDeviceProps): Promise<Device> {\n    const adapters = this.getAdapterMap(props.adapters);\n\n    // WebGL\n    let type = '';\n    if (props.handle instanceof WebGL2RenderingContext) {\n      type = 'webgl';\n    }\n\n    if (props.createCanvasContext) {\n      await Luma.pageLoaded;\n    }\n\n    // TODO - WebGPU does not yet have a stable API\n    // if (props.handle instanceof GPUDevice) {\n    //   const WebGPUDevice = adapters.get('webgpu') as any;\n    //   if (WebGPUDevice) {\n    //     return (await WebGPUDevice.attach(props.handle)) as Device;\n    //   }\n    // }\n\n    // null\n    if (props.handle === null) {\n      type = 'unknown';\n    }\n\n    const adapter = adapters.get(type);\n    const device = await adapter?.attach?.(null);\n    if (device) {\n      return device;\n    }\n\n    throw new Error(ERROR_MESSAGE);\n  }\n\n  /**\n   * Override `HTMLCanvasContext.getCanvas()` to always create WebGL2 contexts with additional WebGL1 compatibility.\n   * Useful when attaching luma to a context from an external library does not support creating WebGL2 contexts.\n   */\n  enforceWebGL2(enforce: boolean = true, adapters: Adapter[] = []): void {\n    const adapterMap = this.getAdapterMap(adapters);\n    const webgl2Adapter = adapterMap.get('webgl');\n    if (!webgl2Adapter) {\n      log.warn('enforceWebGL2: webgl adapter not found')();\n    }\n    (webgl2Adapter as any)?.enforceWebGL2?.(enforce);\n  }\n\n  /** Convert a list of adapters to a map */\n  protected getAdapterMap(adapters: Adapter[] = []): Map<string, Adapter> {\n    const map = new Map(this.preregisteredAdapters);\n    for (const adapter of adapters) {\n      map.set(adapter.type, adapter);\n    }\n    return map;\n  }\n\n  // DEPRECATED\n\n  /** @deprecated Use registerAdapters */\n  registerDevices(deviceClasses: any[]): void {\n    log.warn('luma.registerDevices() is deprecated, use luma.registerAdapters() instead');\n    for (const deviceClass of deviceClasses) {\n      const adapter = deviceClass.adapter as Adapter;\n      if (adapter) {\n        this.preregisteredAdapters.set(adapter.type, adapter);\n      }\n    }\n  }\n}\n\n/**\n * Entry point to the luma.gl GPU abstraction\n * Register WebGPU and/or WebGL adapters (controls application bundle size)\n * Run-time selection of the first available Device\n */\nexport const luma = new Luma();\n\n// HELPER FUNCTIONS\n\n/** Returns a promise that resolves when the page is loaded */\nfunction getPageLoadPromise(): Promise<void> {\n  if (isPageLoaded() || typeof window === 'undefined') {\n    return Promise.resolve();\n  }\n  return new Promise(resolve => {\n    window.addEventListener('load', () => resolve());\n  });\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Device, DeviceProps} from './device';\n\n/**\n * Create and attach devices for a specific backend.\n */\nexport abstract class Adapter {\n  // new (props: DeviceProps): Device; Constructor isn't used\n  abstract type: string;\n  abstract isSupported(): boolean;\n  abstract create(props: DeviceProps): Promise<Device>;\n  abstract attach?(handle: unknown): Promise<Device>;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {isBrowser} from '@probe.gl/env';\nimport type {Device} from './device';\nimport type {Framebuffer} from './resources/framebuffer';\nimport {log} from '../utils/log';\nimport {uid} from '../utils/uid';\nimport type {TextureFormat} from '../gpu-type-utils/texture-formats';\n\n/** Properties for a CanvasContext */\nexport type CanvasContextProps = {\n  /** If a canvas not supplied, one will be created and added to the DOM. If a string, a canvas with that id will be looked up in the DOM */\n  canvas?: HTMLCanvasElement | OffscreenCanvas | string | null;\n  /** If new canvas is created, it will be created in the specified container, otherwise is appended as a child of document.body */\n  container?: HTMLElement | string | null;\n  /** Width in pixels of the canvas - used when creating a new canvas */\n  width?: number;\n  /** Height in pixels of the canvas - used when creating a new canvas */\n  height?: number;\n  /** Visibility (only used if new canvas is created). */\n  visible?: boolean;\n  /** Whether to apply a device pixels scale factor (`true` uses browser DPI) */\n  useDevicePixels?: boolean | number;\n  /** Whether to track window resizes */\n  autoResize?: boolean;\n  /** https://developer.mozilla.org/en-US/docs/Web/API/GPUCanvasContext/configure#alphamode */\n  alphaMode?: 'opaque' | 'premultiplied';\n  /** https://developer.mozilla.org/en-US/docs/Web/API/GPUCanvasContext/configure#colorspace */\n  colorSpace?: 'srgb'; // GPUPredefinedColorSpace\n};\n\n/**\n * Manages a canvas. Supports both HTML or offscreen canvas\n * - Creates a new canvas or looks up a canvas from the DOM\n * - Provides check for DOM loaded\n * @todo commit(): https://github.com/w3ctag/design-reviews/issues/288\n * @todo transferControlToOffscreen: https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/transferControlToOffscreen\n */\nexport abstract class CanvasContext {\n  static defaultProps: Required<CanvasContextProps> = {\n    canvas: null,\n    width: 800, // width are height are only used by headless gl\n    height: 600,\n    useDevicePixels: true,\n    autoResize: true,\n    container: null,\n    visible: true,\n    alphaMode: 'opaque',\n    colorSpace: 'srgb'\n  };\n\n  abstract readonly device: Device;\n  readonly id: string;\n  readonly props: Required<CanvasContextProps>;\n  readonly canvas: HTMLCanvasElement | OffscreenCanvas;\n  readonly htmlCanvas?: HTMLCanvasElement;\n  readonly offscreenCanvas?: OffscreenCanvas;\n  readonly type: 'html-canvas' | 'offscreen-canvas' | 'node';\n\n  /** Format of returned textures: \"bgra8unorm\", \"rgba8unorm\" */\n  abstract readonly format: TextureFormat;\n  /** Default stencil format for depth textures */\n  abstract readonly depthStencilFormat: TextureFormat;\n\n  width: number = 1;\n  height: number = 1;\n\n  readonly resizeObserver: ResizeObserver | undefined;\n\n  /** State used by luma.gl classes: TODO - move to canvasContext*/\n  readonly _canvasSizeInfo = {clientWidth: 0, clientHeight: 0, devicePixelRatio: 1};\n\n  abstract get [Symbol.toStringTag](): string;\n\n  toString(): string {\n    return `${this[Symbol.toStringTag]}(${this.id})`;\n  }\n\n  constructor(props?: CanvasContextProps) {\n    this.props = {...CanvasContext.defaultProps, ...props};\n    props = this.props;\n\n    if (!isBrowser()) {\n      this.id = 'node-canvas-context';\n      this.type = 'node';\n      this.width = this.props.width;\n      this.height = this.props.height;\n      // TODO - does this prevent app from using jsdom style polyfills?\n      this.canvas = null!;\n      return;\n    }\n\n    if (!props.canvas) {\n      const canvas = createCanvas(props);\n      const container = getContainer(props?.container || null);\n      container.insertBefore(canvas, container.firstChild);\n\n      this.canvas = canvas;\n\n      if (!props?.visible) {\n        this.canvas.style.visibility = 'hidden';\n      }\n    } else if (typeof props.canvas === 'string') {\n      this.canvas = getCanvasFromDOM(props.canvas);\n    } else {\n      this.canvas = props.canvas;\n    }\n\n    if (this.canvas instanceof HTMLCanvasElement) {\n      this.id = this.canvas.id;\n      this.type = 'html-canvas';\n      this.htmlCanvas = this.canvas;\n    } else {\n      this.id = 'offscreen-canvas';\n      this.type = 'offscreen-canvas';\n      this.offscreenCanvas = this.canvas;\n    }\n\n    // React to size changes\n    if (this.canvas instanceof HTMLCanvasElement && props.autoResize) {\n      this.resizeObserver = new ResizeObserver(entries => {\n        for (const entry of entries) {\n          if (entry.target === this.canvas) {\n            this.update();\n          }\n        }\n      });\n      this.resizeObserver.observe(this.canvas);\n    }\n  }\n\n  /** Returns a framebuffer with properly resized current 'swap chain' textures */\n  abstract getCurrentFramebuffer(): Framebuffer;\n\n  /**\n   * Returns the current DPR, if props.useDevicePixels is true\n   * Device refers to physical\n   */\n  getDevicePixelRatio(useDevicePixels?: boolean | number): number {\n    if (typeof OffscreenCanvas !== 'undefined' && this.canvas instanceof OffscreenCanvas) {\n      return 1;\n    }\n\n    useDevicePixels = useDevicePixels === undefined ? this.props.useDevicePixels : useDevicePixels;\n\n    if (!useDevicePixels || (useDevicePixels as number) <= 0) {\n      return 1;\n    }\n\n    // The param was mainly provide to support the test cases, could be removed\n    if (useDevicePixels === true) {\n      const dpr = typeof window !== 'undefined' && window.devicePixelRatio;\n      return dpr || 1;\n    }\n\n    return useDevicePixels;\n  }\n\n  /**\n   * Returns the size of drawing buffer in device pixels.\n   * @note This can be different from the 'CSS' size of a canvas, and also from the\n   * canvas' internal drawing buffer size (.width, .height).\n   * This is the size required to cover the canvas, adjusted for DPR\n   */\n  getPixelSize(): [number, number] {\n    switch (this.type) {\n      case 'node':\n        return [this.width, this.height];\n      case 'offscreen-canvas':\n        return [this.canvas.width, this.canvas.height];\n      case 'html-canvas':\n        const dpr = this.getDevicePixelRatio();\n        const canvas = this.canvas as HTMLCanvasElement;\n        // If not attached to DOM client size can be 0\n        return canvas.parentElement\n          ? [canvas.clientWidth * dpr, canvas.clientHeight * dpr]\n          : [this.canvas.width, this.canvas.height];\n      default:\n        throw new Error(this.type);\n    }\n  }\n\n  getAspect(): number {\n    const [width, height] = this.getPixelSize();\n    return width / height;\n  }\n\n  /**\n   * Returns multiplier need to convert CSS size to Device size\n   */\n  cssToDeviceRatio(): number {\n    try {\n      // For headless gl we might have used custom width and height\n      // hence use cached clientWidth\n      const [drawingBufferWidth] = this.getDrawingBufferSize();\n      // _canvasSizeInfo may not be populated if `setDevicePixelRatio` is never called\n      const clientWidth = this._canvasSizeInfo.clientWidth || this.htmlCanvas?.clientWidth;\n      return clientWidth ? drawingBufferWidth / clientWidth : 1;\n    } catch {\n      return 1;\n    }\n  }\n\n  /**\n   * Maps CSS pixel position to device pixel position\n   */\n  cssToDevicePixels(\n    cssPixel: number[],\n    yInvert: boolean = true\n  ): {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  } {\n    const ratio = this.cssToDeviceRatio();\n    const [width, height] = this.getDrawingBufferSize();\n    return scalePixels(cssPixel, ratio, width, height, yInvert);\n  }\n\n  /**\n   * Use devicePixelRatio to set canvas width and height\n   * @note this is a raw port of luma.gl v8 code. Might be worth a review\n   */\n  setDevicePixelRatio(\n    devicePixelRatio: number,\n    options: {width?: number; height?: number} = {}\n  ): void {\n    if (!this.htmlCanvas) {\n      return;\n    }\n\n    // NOTE: if options.width and options.height not used remove in v8\n    let clientWidth = 'width' in options ? options.width : this.htmlCanvas.clientWidth;\n    let clientHeight = 'height' in options ? options.height : this.htmlCanvas.clientHeight;\n\n    if (!clientWidth || !clientHeight) {\n      log.log(1, 'Canvas clientWidth/clientHeight is 0')();\n      // by forcing devicePixel ratio to 1, we do not scale canvas.width and height in each frame.\n      devicePixelRatio = 1;\n      clientWidth = this.htmlCanvas.width || 1;\n      clientHeight = this.htmlCanvas.height || 1;\n    }\n\n    const cachedSize = this._canvasSizeInfo;\n    // Check if canvas needs to be resized\n    if (\n      cachedSize.clientWidth !== clientWidth ||\n      cachedSize.clientHeight !== clientHeight ||\n      cachedSize.devicePixelRatio !== devicePixelRatio\n    ) {\n      let clampedPixelRatio = devicePixelRatio;\n\n      const canvasWidth = Math.floor(clientWidth * clampedPixelRatio);\n      const canvasHeight = Math.floor(clientHeight * clampedPixelRatio);\n      this.htmlCanvas.width = canvasWidth;\n      this.htmlCanvas.height = canvasHeight;\n\n      // @ts-expect-error This only works for WebGL\n      const gl = this.device.gl;\n      if (gl) {\n        // Note: when devicePixelRatio is too high, it is possible we might hit system limit for\n        // drawing buffer width and hight, in those cases they get clamped and resulting aspect ration may not be maintained\n        // for those cases, reduce devicePixelRatio.\n        const [drawingBufferWidth, drawingBufferHeight] = this.getDrawingBufferSize();\n\n        if (drawingBufferWidth !== canvasWidth || drawingBufferHeight !== canvasHeight) {\n          clampedPixelRatio = Math.min(\n            drawingBufferWidth / clientWidth,\n            drawingBufferHeight / clientHeight\n          );\n\n          this.htmlCanvas.width = Math.floor(clientWidth * clampedPixelRatio);\n          this.htmlCanvas.height = Math.floor(clientHeight * clampedPixelRatio);\n\n          log.warn('Device pixel ratio clamped')();\n        }\n\n        this._canvasSizeInfo.clientWidth = clientWidth;\n        this._canvasSizeInfo.clientHeight = clientHeight;\n        this._canvasSizeInfo.devicePixelRatio = devicePixelRatio;\n      }\n    }\n  }\n\n  // PRIVATE\n\n  /** @todo Major hack done to port the CSS methods above, base canvas context should not depend on WebGL */\n  getDrawingBufferSize(): [number, number] {\n    // @ts-expect-error This only works for WebGL\n    const gl = this.device.gl;\n    if (!gl) {\n      // use default device pixel ratio\n      return this.getPixelSize();\n    }\n    return [gl.drawingBufferWidth, gl.drawingBufferHeight];\n  }\n\n  abstract resize(options?: {\n    width?: number;\n    height?: number;\n    useDevicePixels?: boolean | number;\n  }): void;\n\n  /** Perform platform specific updates (WebGPU vs WebGL) */\n  protected abstract update(): void;\n\n  /**\n   * Allows subclass constructor to override the canvas id for auto created canvases.\n   * This can really help when debugging DOM in apps that create multiple devices\n   */\n  protected _setAutoCreatedCanvasId(id: string) {\n    if (this.htmlCanvas?.id === 'lumagl-auto-created-canvas') {\n      this.htmlCanvas.id = id;\n    }\n  }\n}\n\n// HELPER FUNCTIONS\n\nfunction getContainer(container: HTMLElement | string | null): HTMLElement {\n  if (typeof container === 'string') {\n    const element = document.getElementById(container);\n    if (!element) {\n      throw new Error(`${container} is not an HTML element`);\n    }\n    return element;\n  } else if (container) {\n    return container;\n  }\n  return document.body;\n}\n\n/** Get a Canvas element from DOM id */\nfunction getCanvasFromDOM(canvasId: string): HTMLCanvasElement {\n  const canvas = document.getElementById(canvasId);\n  if (!(canvas instanceof HTMLCanvasElement)) {\n    throw new Error('Object is not a canvas element');\n  }\n  return canvas;\n}\n\n/** Create a new canvas */\nfunction createCanvas(props: CanvasContextProps) {\n  const {width, height} = props;\n  const targetCanvas = document.createElement('canvas');\n  targetCanvas.id = uid('lumagl-auto-created-canvas');\n  targetCanvas.width = width || 1;\n  targetCanvas.height = height || 1;\n  targetCanvas.style.width = Number.isFinite(width) ? `${width}px` : '100%';\n  targetCanvas.style.height = Number.isFinite(height) ? `${height}px` : '100%';\n  return targetCanvas;\n}\n\n/**\n *\n * @param pixel\n * @param ratio\n * @param width\n * @param height\n * @param yInvert\n * @returns\n */\nfunction scalePixels(\n  pixel: number[],\n  ratio: number,\n  width: number,\n  height: number,\n  yInvert: boolean\n): {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n} {\n  const point = pixel as [number, number];\n\n  const x = scaleX(point[0], ratio, width);\n  let y = scaleY(point[1], ratio, height, yInvert);\n\n  // Find boundaries of next pixel to provide valid range of device pixel locations\n\n  let t = scaleX(point[0] + 1, ratio, width);\n  // If next pixel's position is clamped to boundary, use it as is, otherwise subtract 1 for current pixel boundary\n  const xHigh = t === width - 1 ? t : t - 1;\n\n  t = scaleY(point[1] + 1, ratio, height, yInvert);\n  let yHigh;\n  if (yInvert) {\n    // If next pixel's position is clamped to boundary, use it as is, otherwise clamp it to valid range\n    t = t === 0 ? t : t + 1;\n    // swap y and yHigh\n    yHigh = y;\n    y = t;\n  } else {\n    // If next pixel's position is clamped to boundary, use it as is, otherwise clamp it to valid range\n    yHigh = t === height - 1 ? t : t - 1;\n    // y remains same\n  }\n  return {\n    x,\n    y,\n    // when ratio < 1, current css pixel and next css pixel may point to same device pixel, set width/height to 1 in those cases.\n    width: Math.max(xHigh - x + 1, 1),\n    height: Math.max(yHigh - y + 1, 1)\n  };\n}\n\nfunction scaleX(x: number, ratio: number, width: number): number {\n  // since we are rounding to nearest, when ratio > 1, edge pixels may point to out of bounds value, clamp to the limit\n  const r = Math.min(Math.round(x * ratio), width - 1);\n  return r;\n}\n\nfunction scaleY(y: number, ratio: number, height: number, yInvert: boolean): number {\n  // since we are rounding to nearest, when ratio > 1, edge pixels may point to out of bounds value, clamp to the limit\n  return yInvert\n    ? Math.max(0, height - 1 - Math.round(y * ratio))\n    : Math.min(Math.round(y * ratio), height - 1);\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device} from '../device';\nimport type {TypedArray} from '../../types';\nimport type {TextureFormat} from '../../gpu-type-utils/texture-formats';\nimport type {TextureView, TextureViewProps} from './texture-view';\nimport {Resource, ResourceProps} from './resource';\nimport {Sampler, SamplerProps} from './sampler';\n\n/**\n * These represent the main compressed texture formats\n * Each format typically has a number of more specific subformats\n */\nexport type TextureCompressionFormat =\n  | 'dxt'\n  | 'dxt-srgb'\n  | 'etc1'\n  | 'etc2'\n  | 'pvrtc'\n  | 'atc'\n  | 'astc'\n  | 'rgtc';\n\n/** Names of cube texture faces */\nexport type TextureCubeFace = '+X' | '-X' | '+Y' | '-Y' | '+Z' | '-Z';\n\n/**\n * One mip level\n * Basic data structure is similar to `ImageData`\n * additional optional fields can describe compressed texture data.\n */\nexport type TextureLevelData = {\n  /** WebGPU style format string. Defaults to 'rgba8unorm' */\n  format?: TextureFormat;\n  data: TypedArray;\n  width: number;\n  height: number;\n\n  compressed?: boolean;\n  byteLength?: number;\n  hasAlpha?: boolean;\n};\n\n/**\n * Built-in data types that can be used to initialize textures\n * @note ImageData can be used for 8 bit data via Uint8ClampedArray\n */\nexport type ExternalImage =\n  | ImageBitmap\n  | ImageData\n  | HTMLImageElement\n  | HTMLVideoElement\n  | VideoFrame\n  | HTMLCanvasElement\n  | OffscreenCanvas;\n\nexport type TextureLevelSource = TextureLevelData | ExternalImage;\n\n/** Texture data can be one or more mip levels */\nexport type TextureData = TextureLevelData | ExternalImage | (TextureLevelData | ExternalImage)[];\n\n/** @todo - define what data type is supported for 1D textures */\nexport type Texture1DData = TypedArray | TextureLevelData;\n\n/** Texture data can be one or more mip levels */\nexport type Texture2DData =\n  | TypedArray\n  | TextureLevelData\n  | ExternalImage\n  | (TextureLevelData | ExternalImage)[];\n\n/** Array of textures */\nexport type Texture3DData = TypedArray | TextureData[];\n\n/** 6 face textures */\nexport type TextureCubeData = Record<TextureCubeFace, Texture2DData>;\n\n/** Array of textures */\nexport type TextureArrayData = TextureData[];\n\n/** Array of 6 face textures */\nexport type TextureCubeArrayData = Record<TextureCubeFace, TextureData>[];\n\nexport type TextureDataProps =\n  | Texture1DProps\n  | Texture2DProps\n  | Texture3DProps\n  | TextureArrayProps\n  | TextureCubeProps\n  | TextureCubeArrayProps;\n\nexport type Texture1DProps = {dimension: '1d'; data?: Texture1DData | null};\nexport type Texture2DProps = {dimension?: '2d'; data?: Texture2DData | null};\nexport type Texture3DProps = {dimension: '3d'; data?: Texture3DData | null};\nexport type TextureArrayProps = {dimension: '2d-array'; data?: TextureArrayData | null};\nexport type TextureCubeProps = {dimension: 'cube'; data?: TextureCubeData | null};\nexport type TextureCubeArrayProps = {dimension: 'cube-array'; data: TextureCubeArrayData | null};\n\n/** Texture properties */\nexport type TextureProps = ResourceProps &\n  TextureDataProps & {\n    format?: TextureFormat;\n    width?: number | undefined;\n    height?: number | undefined;\n    depth?: number;\n    usage?: number;\n\n    /** How many mip levels */\n    mipLevels?: number | 'pyramid';\n    /** Multi sampling */\n    samples?: number;\n\n    /** Specifying mipmaps will default mipLevels to 'pyramid' and attempt to generate mipmaps */\n    mipmaps?: boolean;\n\n    /** Sampler (or SamplerProps) for the default sampler for this texture. Used if no sampler provided. Note that other samplers can still be used. */\n    sampler?: Sampler | SamplerProps;\n    /** Props for the default TextureView for this texture. Note that other views can still be created and used. */\n    view?: TextureViewProps;\n\n    /** Whether to flip the image vertically. Used if texture is initialized with an image. */\n    flipY?: boolean;\n\n    /** @deprecated - this is implicit from format */\n    compressed?: boolean;\n  };\n\n/** Options for Texture.copyExternalImage */\nexport type CopyExternalImageOptions = {\n  /** Image */\n  image: ExternalImage;\n  /** Copy from image x offset (default 0) */\n  sourceX?: number;\n  /** Copy from image y offset (default 0) */\n  sourceY?: number;\n  /** Copy area width (default 1) */\n  width?: number;\n  /** Copy area height (default 1) */\n  height?: number;\n  /** Copy depth (default 1) */\n  depth?: number;\n  /** Which mip-level to copy into (default 0) */\n  mipLevel?: number;\n  /** Start copying into offset x (default 0) */\n  x?: number;\n  /** Start copying into offset y (default 0) */\n  y?: number;\n  /** Start copying from depth layer z (default 0) */\n  z?: number;\n  /** When copying into depth stencil textures (default 'all') */\n  aspect?: 'all' | 'stencil-only' | 'depth-only';\n  /** Specific color space of image data */\n  colorSpace?: 'srgb';\n  /** load as premultiplied alpha  */\n  premultipliedAlpha?: boolean;\n  /** Whether to flip the image vertically */\n  flipY?: boolean;\n};\n\n/**\n * Abstract Texture interface\n * Texture Object\n * https://gpuweb.github.io/gpuweb/#gputexture\n */\nexport abstract class Texture extends Resource<TextureProps> {\n  static COPY_SRC = 0x01;\n  static COPY_DST = 0x02;\n  static TEXTURE = 0x04;\n  static STORAGE = 0x08;\n  static RENDER_ATTACHMENT = 0x10;\n\n  static CubeFaces: TextureCubeFace[] = ['+X', '-X', '+Y', '-Y', '+Z', '-Z'];\n\n  static override defaultProps: Required<TextureProps> = {\n    ...Resource.defaultProps,\n    data: null,\n    dimension: '2d',\n    format: 'rgba8unorm',\n    width: undefined!,\n    height: undefined!,\n    depth: 1,\n    mipmaps: false,\n    compressed: false,\n    usage: 0,\n    mipLevels: undefined!,\n    samples: undefined!,\n    sampler: {},\n    view: undefined!,\n    flipY: undefined!\n  };\n\n  override get [Symbol.toStringTag](): string {\n    return 'Texture';\n  }\n\n  override toString(): string {\n    return `Texture(${this.id},${this.format},${this.width}x${this.height})`;\n  }\n\n  /** dimension of this texture */\n  readonly dimension: '1d' | '2d' | '2d-array' | 'cube' | 'cube-array' | '3d';\n  /** format of this texture */\n  readonly format: TextureFormat;\n  /** width in pixels of this texture */\n  width: number;\n  /** height in pixels of this texture */\n  height: number;\n  /** depth of this texture */\n  depth: number;\n  /** mip levels in this texture */\n  mipLevels: number;\n\n  /** Default sampler for this texture */\n  abstract sampler: Sampler;\n  /** Default view for this texture */\n  abstract view: TextureView;\n\n  /** \"Time\" of last update. Monotonically increasing timestamp. TODO move to AsyncTexture? */\n  updateTimestamp: number;\n\n  /** Do not use directly. Create with device.createTexture() */\n  constructor(device: Device, props: TextureProps) {\n    props = Texture.normalizeProps(device, props);\n    super(device, props, Texture.defaultProps);\n    this.dimension = this.props.dimension;\n    this.format = this.props.format;\n\n    // Size\n    this.width = this.props.width;\n    this.height = this.props.height;\n    this.depth = this.props.depth;\n\n    // Calculate size, if not provided\n    if (this.props.width === undefined || this.props.height === undefined) {\n      // @ts-ignore\n      const size = Texture.getTextureDataSize(this.props.data);\n      this.width = size?.width || 1;\n      this.height = size?.height || 1;\n    }\n\n    // mipLevels\n\n    // If mipmap generation is requested and mipLevels is not provided, initialize a full pyramid\n    if (this.props.mipmaps && this.props.mipLevels === undefined) {\n      this.props.mipLevels = 'pyramid';\n    }\n\n    // Auto-calculate the number of mip levels as a convenience\n    // TODO - Should we clamp to 1-getMipLevelCount?\n    this.mipLevels =\n      this.props.mipLevels === 'pyramid'\n        ? Texture.getMipLevelCount(this.width, this.height)\n        : this.props.mipLevels || 1;\n\n    // TODO - perhaps this should be set on async write completion?\n    this.updateTimestamp = device.incrementTimestamp();\n  }\n\n  /** Create a texture view for this texture */\n  abstract createView(props: TextureViewProps): TextureView;\n\n  /** Set sampler props associated with this texture */\n  abstract setSampler(sampler?: Sampler | SamplerProps): void;\n\n  /** Copy external image data into the texture */\n  abstract copyExternalImage(options: CopyExternalImageOptions): {width: number; height: number};\n\n  /**\n   * Create a new texture with the same parameters and optionally, a different size\n   * @note Textures are immutable and cannot be resized after creation, but we can create a similar texture with the same parameters but a new size.\n   * @note Does not copy contents of the texture\n   */\n  clone(size?: {width: number; height: number}): Texture {\n    return this.device.createTexture({...this.props, ...size});\n  }\n\n  /** Check if data is an external image */\n  static isExternalImage(data: unknown): data is ExternalImage {\n    return (\n      (typeof ImageData !== 'undefined' && data instanceof ImageData) ||\n      (typeof ImageBitmap !== 'undefined' && data instanceof ImageBitmap) ||\n      (typeof HTMLImageElement !== 'undefined' && data instanceof HTMLImageElement) ||\n      (typeof HTMLVideoElement !== 'undefined' && data instanceof HTMLVideoElement) ||\n      (typeof VideoFrame !== 'undefined' && data instanceof VideoFrame) ||\n      (typeof HTMLCanvasElement !== 'undefined' && data instanceof HTMLCanvasElement) ||\n      (typeof OffscreenCanvas !== 'undefined' && data instanceof OffscreenCanvas)\n    );\n  }\n\n  /** Determine size (width and height) of provided image data */\n  static getExternalImageSize(data: ExternalImage): {width: number; height: number} {\n    if (\n      (typeof ImageData !== 'undefined' && data instanceof ImageData) ||\n      (typeof ImageBitmap !== 'undefined' && data instanceof ImageBitmap) ||\n      (typeof HTMLCanvasElement !== 'undefined' && data instanceof HTMLCanvasElement) ||\n      (typeof OffscreenCanvas !== 'undefined' && data instanceof OffscreenCanvas)\n    ) {\n      return {width: data.width, height: data.height};\n    }\n    if (typeof HTMLImageElement !== 'undefined' && data instanceof HTMLImageElement) {\n      return {width: data.naturalWidth, height: data.naturalHeight};\n    }\n    if (typeof HTMLVideoElement !== 'undefined' && data instanceof HTMLVideoElement) {\n      return {width: data.videoWidth, height: data.videoHeight};\n    }\n    if (typeof VideoFrame !== 'undefined' && data instanceof VideoFrame) {\n      // TODO: is this the right choice for width and height?\n      return {width: data.displayWidth, height: data.displayHeight};\n    }\n    throw new Error('Unknown image type');\n  }\n\n  /** Check if texture data is a typed array */\n  static isTextureLevelData(data: TextureData): data is TextureLevelData {\n    const typedArray = (data as TextureLevelData)?.data;\n    return ArrayBuffer.isView(typedArray);\n  }\n\n  /** Get the size of the texture described by the provided TextureData */\n  static getTextureDataSize(\n    data: TextureData | TextureCubeData | TextureArrayData | TextureCubeArrayData | TypedArray\n  ): {width: number; height: number} | null {\n    if (!data) {\n      return null;\n    }\n    if (ArrayBuffer.isView(data)) {\n      return null;\n    }\n    // Recurse into arrays (array of miplevels)\n    if (Array.isArray(data)) {\n      return Texture.getTextureDataSize(data[0]);\n    }\n    if (Texture.isExternalImage(data)) {\n      return Texture.getExternalImageSize(data);\n    }\n    if (data && typeof data === 'object' && data.constructor === Object) {\n      const textureDataArray = Object.values(data) as Texture2DData[];\n      const untypedData = textureDataArray[0] as any;\n      return {width: untypedData.width, height: untypedData.height};\n    }\n    throw new Error('texture size deduction failed');\n  }\n\n  /**\n   * Normalize TextureData to an array of TextureLevelData / ExternalImages\n   * @param data\n   * @param options\n   * @returns array of TextureLevelData / ExternalImages\n   */\n  static normalizeTextureData(\n    data: Texture2DData,\n    options: {width: number; height: number; depth: number}\n  ): (TextureLevelData | ExternalImage)[] {\n    let lodArray: (TextureLevelData | ExternalImage)[];\n    if (ArrayBuffer.isView(data)) {\n      lodArray = [\n        {\n          // ts-expect-error does data really need to be Uint8ClampedArray?\n          data,\n          width: options.width,\n          height: options.height\n          // depth: options.depth\n        }\n      ];\n    } else if (!Array.isArray(data)) {\n      lodArray = [data];\n    } else {\n      lodArray = data;\n    }\n    return lodArray;\n  }\n\n  /** Calculate the number of mip levels for a texture of width and height */\n  static getMipLevelCount(width: number, height: number): number {\n    return Math.floor(Math.log2(Math.max(width, height))) + 1;\n  }\n\n  /** Convert luma.gl cubemap face constants to depth index */\n  static getCubeFaceDepth(face: TextureCubeFace): number {\n    // prettier-ignore\n    switch (face) {\n        case '+X': return  0;\n        case '-X': return  1;\n        case '+Y': return  2;\n        case '-Y': return  3;\n        case '+Z': return  4;\n        case '-Z': return  5;\n        default: throw new Error(face);\n      }\n  }\n\n  /** Default options */\n  protected static defaultCopyExternalImageOptions: Required<CopyExternalImageOptions> = {\n    image: undefined!,\n    sourceX: 0,\n    sourceY: 0,\n    width: undefined!,\n    height: undefined!,\n    depth: 1,\n    mipLevel: 0,\n    x: 0,\n    y: 0,\n    z: 0,\n    aspect: 'all',\n    colorSpace: 'srgb',\n    premultipliedAlpha: false,\n    flipY: false\n  };\n\n  /** Ensure we have integer coordinates */\n  protected static normalizeProps(device: Device, props: TextureProps): TextureProps {\n    const newProps = {...props};\n\n    // Allow device to override props (e.g. props.mipmaps)\n    const overriddenDefaultProps: Partial<TextureProps> =\n      device?.props?._resourceDefaults?.texture || {};\n    // TODO - Type issue with props.data circumvented with Object.assign\n    Object.assign(newProps, overriddenDefaultProps);\n\n    // Ensure we have integer coordinates\n    const {width, height} = newProps;\n    if (typeof width === 'number') {\n      newProps.width = Math.max(1, Math.ceil(width));\n    }\n    if (typeof height === 'number') {\n      newProps.height = Math.max(1, Math.ceil(height));\n    }\n    return newProps;\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device} from '../device';\nimport type {Texture} from './texture';\nimport type {TextureFormat} from '../../gpu-type-utils/texture-formats';\nimport {Resource, ResourceProps} from './resource';\n\n/** Properties for initializing a texture view */\nexport type TextureViewProps = ResourceProps & {\n  /** The format of the texture view. Must be either the format of the texture or one of the viewFormats specified during its creation. */\n  format?: TextureFormat;\n  /** The dimension to view the texture as. */\n  dimension?: '1d' | '2d' | '2d-array' | 'cube' | 'cube-array' | '3d';\n  /** Which aspect(s) of the texture are accessible to the texture view. default \"all\"*/\n  aspect?: 'all' | 'stencil-only' | 'depth-only';\n  /** The first (most detailed) mipmap level accessible to the texture view.  default 0*/\n  baseMipLevel?: number;\n  /** How many mipmap levels, starting with baseMipLevel, are accessible to the texture view. */\n  mipLevelCount: number;\n  /** The index of the first array layer accessible to the texture view. default 0 */\n  baseArrayLayer?: number;\n  /** How many array layers, starting with baseArrayLayer, are accessible to the texture view. */\n  arrayLayerCount: number;\n};\n\n/** Immutable TextureView object */\nexport abstract class TextureView extends Resource<TextureViewProps> {\n  static override defaultProps: Required<TextureViewProps> = {\n    ...Resource.defaultProps,\n    format: undefined!,\n    dimension: undefined!,\n    aspect: 'all',\n    baseMipLevel: 0,\n    mipLevelCount: undefined!,\n    baseArrayLayer: 0,\n    arrayLayerCount: undefined!\n  };\n\n  abstract texture: Texture;\n\n  override get [Symbol.toStringTag](): string {\n    return 'TextureView';\n  }\n\n  /** Should not be constructed directly. Use `texture.createView(props)` */\n  constructor(device: Device, props: TextureViewProps & {texture: Texture}) {\n    super(device, props, TextureView.defaultProps);\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device} from '../device';\nimport {Resource, ResourceProps} from './resource';\n\nexport type ExternalTextureProps = ResourceProps & {\n  source: HTMLVideoElement; //  | null;\n  colorSpace?: 'srgb';\n};\nexport abstract class ExternalTexture extends Resource<ExternalTextureProps> {\n  static override defaultProps: Required<ExternalTextureProps> = {\n    ...Resource.defaultProps,\n    source: undefined!,\n    colorSpace: 'srgb'\n  };\n\n  override get [Symbol.toStringTag](): string {\n    return 'ExternalTexture';\n  }\n\n  constructor(device: Device, props: ExternalTextureProps) {\n    super(device, props, ExternalTexture.defaultProps);\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {CompilerMessage} from '../adapter/types/compiler-message';\n\n/** @returns annotated errors or warnings */\nexport function formatCompilerLog(\n  shaderLog: readonly CompilerMessage[],\n  source: string,\n  options?: {\n    /** Include source code in the log. Either just the lines before issues or all source code */\n    showSourceCode?: 'no' | 'issues' | 'all';\n    html?: boolean;\n  }\n): string {\n  let formattedLog = '';\n  const lines = source.split(/\\r?\\n/);\n  const log = shaderLog.slice().sort((a, b) => a.lineNum - b.lineNum);\n\n  switch (options?.showSourceCode || 'no') {\n    case 'all':\n      // Parse the error - note: browser and driver dependent\n      let currentMessage = 0;\n      for (let lineNum = 1; lineNum <= lines.length; lineNum++) {\n        formattedLog += getNumberedLine(lines[lineNum - 1], lineNum, options);\n        while (log.length > currentMessage && log[currentMessage].lineNum === lineNum) {\n          const message = log[currentMessage++];\n          formattedLog += formatCompilerMessage(message, lines, message.lineNum, {\n            ...options,\n            inlineSource: false\n          });\n        }\n      }\n      return formattedLog;\n\n    case 'issues':\n    case 'no':\n      // Parse the error - note: browser and driver dependent\n      for (const message of shaderLog) {\n        formattedLog += formatCompilerMessage(message, lines, message.lineNum, {\n          inlineSource: options?.showSourceCode !== 'no'\n        });\n      }\n      return formattedLog;\n  }\n}\n\n// Helpers\n\n/** Format one message */\nfunction formatCompilerMessage(\n  message: CompilerMessage,\n  lines: readonly string[],\n  lineNum: number,\n  options: {\n    inlineSource?: boolean;\n    html?: boolean;\n  }\n): string {\n  if (options?.inlineSource) {\n    const numberedLines = getNumberedLines(lines, lineNum);\n    // If we got error position on line add a `^^^` indicator on next line\n    const positionIndicator = message.linePos > 0 ? `${' '.repeat(message.linePos + 5)}^^^\\n` : '';\n    return `\n${numberedLines}${positionIndicator}${message.type.toUpperCase()}: ${message.message}\n\n`;\n  }\n  const color = message.type === 'error' ? 'red' : '#8B4000'; // dark orange\n  return options?.html\n    ? `<div class='luma-compiler-log-error' style=\"color:${color};\"><b> ${message.type.toUpperCase()}: ${\n        message.message\n      }</b></div>`\n    : `${message.type.toUpperCase()}: ${message.message}`;\n}\n\nfunction getNumberedLines(\n  lines: readonly string[],\n  lineNum: number,\n  options?: {html?: boolean}\n): string {\n  let numberedLines = '';\n  for (let lineIndex = lineNum - 2; lineIndex <= lineNum; lineIndex++) {\n    const sourceLine = lines[lineIndex - 1];\n    if (sourceLine !== undefined) {\n      numberedLines += getNumberedLine(sourceLine, lineNum, options);\n    }\n  }\n  return numberedLines;\n}\n\nfunction getNumberedLine(line: string, lineNum: number, options?: {html?: boolean}): string {\n  const escapedLine = options?.html ? escapeHTML(line) : line;\n  return `${padLeft(String(lineNum), 4)}: ${escapedLine}${options?.html ? '<br/>' : '\\n'}`;\n}\n\n/**\n * Pads a string with a number of spaces (space characters) to the left\n * @param {String} string - string to pad\n * @param {Number} digits - number of spaces to add\n * @return {String} string - The padded string\n */\nfunction padLeft(string: string, paddedLength: number): string {\n  let result = '';\n  for (let i = string.length; i < paddedLength; ++i) {\n    result += ' ';\n  }\n  return result + string;\n}\n\nfunction escapeHTML(unsafe: string): string {\n  return unsafe\n    .replaceAll('&', '&amp;')\n    .replaceAll('<', '&lt;')\n    .replaceAll('>', '&gt;')\n    .replaceAll('\"', '&quot;')\n    .replaceAll(\"'\", '&#039;');\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device} from '../device';\nimport {Resource, ResourceProps} from './resource';\n// import { log } from '../../utils/log';\nimport {uid} from '../../utils/uid';\nimport {CompilerMessage} from '../types/compiler-message';\nimport {formatCompilerLog} from '../../adapter-utils/format-compiler-log';\n\n/**\n * Properties for a Shader\n */\nexport type ShaderProps = ResourceProps & {\n  /** Shader language (defaults to auto) */\n  language?: 'glsl' | 'wgsl' | 'auto';\n  /** Which stage are we compiling? Required for GLSL. Ignored for WGSL. */\n  stage?: 'vertex' | 'fragment' | 'compute';\n  /** Shader source code */\n  source: string;\n  /** Optional shader source map (WebGPU only) */\n  sourceMap?: string | null;\n  /** Optional shader entry point (WebGPU only) */\n  entryPoint?: string;\n  /** Show shader source in browser? Overrides the device.props.debugShaders setting */\n  debugShaders?: 'never' | 'errors' | 'warnings' | 'always';\n};\n\n/**\n * Immutable Shader object\n * In WebGPU the handle can be copied between threads\n */\nexport abstract class Shader extends Resource<ShaderProps> {\n  static override defaultProps: Required<ShaderProps> = {\n    ...Resource.defaultProps,\n    language: 'auto',\n    stage: undefined!,\n    source: '',\n    sourceMap: null,\n    entryPoint: 'main',\n    debugShaders: undefined!\n  };\n\n  override get [Symbol.toStringTag](): string {\n    return 'Shader';\n  }\n\n  /** The stage of this shader */\n  readonly stage: 'vertex' | 'fragment' | 'compute';\n  /** The source code of this shader */\n  readonly source: string;\n  /** The compilation status of the shader. 'pending' if compilation is asynchronous, and on production */\n  compilationStatus: 'pending' | 'success' | 'error' = 'pending';\n\n  /** Create a new Shader instance */\n  constructor(device: Device, props: ShaderProps) {\n    props = {...props, debugShaders: props.debugShaders || device.props.debugShaders || 'errors'};\n    super(device, {id: getShaderIdFromProps(props), ...props}, Shader.defaultProps);\n    this.stage = this.props.stage;\n    this.source = this.props.source;\n  }\n\n  abstract get asyncCompilationStatus(): Promise<'pending' | 'success' | 'error'>;\n\n  /** Get compiler log asynchronously */\n  abstract getCompilationInfo(): Promise<readonly CompilerMessage[]>;\n\n  /** Get compiler log synchronously (WebGL only) */\n  getCompilationInfoSync(): readonly CompilerMessage[] | null {\n    return null;\n  }\n\n  /** Get translated shader source in host platform's native language (HLSL, GLSL, and even GLSL ES), if available */\n  getTranslatedSource(): string | null {\n    return null;\n  }\n\n  // PORTABLE HELPERS\n\n  /** In browser logging of errors */\n  async debugShader(): Promise<void> {\n    const trigger = this.props.debugShaders;\n    switch (trigger) {\n      case 'never':\n        return;\n      case 'errors':\n        // On WebGL - Don't extract the log unless errors\n        if (this.compilationStatus === 'success') {\n          return;\n        }\n        break;\n      case 'warnings':\n      case 'always':\n        break;\n    }\n\n    const messages = await this.getCompilationInfo();\n    if (trigger === 'warnings' && messages?.length === 0) {\n      return;\n    }\n    this._displayShaderLog(messages);\n  }\n\n  // PRIVATE\n\n  /**\n   * In-browser UI logging of errors\n   * TODO - this HTML formatting code should not be in Device, should be pluggable\n   */\n  protected _displayShaderLog(messages: readonly CompilerMessage[]): void {\n    // Return if under Node.js / incomplete `document` polyfills\n    if (typeof document === 'undefined' || !document?.createElement) {\n      return;\n    }\n\n    const shaderName: string = getShaderName(this.source);\n    const shaderTitle: string = `${this.stage} ${shaderName}`;\n    let htmlLog = formatCompilerLog(messages, this.source, {showSourceCode: 'all', html: true});\n    // Show translated source if available\n    const translatedSource = this.getTranslatedSource();\n    if (translatedSource) {\n      htmlLog += `<br /><br /><h1>Translated Source</h1><br /><br /><code style=\"user-select:text;\"><pre>${translatedSource}</pre></code>`;\n    }\n    // Make it clickable so we can copy to clipboard\n    const button = document.createElement('Button');\n    button.innerHTML = `\n<h1>Shader Compilation Error in ${shaderTitle}</h1><br /><br />\n<code style=\"user-select:text;\"><pre>\n${htmlLog}\n</pre></code>`;\n    button.style.top = '10px';\n    button.style.left = '10px';\n    button.style.position = 'absolute';\n    button.style.zIndex = '9999';\n    button.style.width = '100%';\n    button.style.textAlign = 'left';\n    document.body.appendChild(button);\n\n    const errors = document.getElementsByClassName('luma-compiler-log-error');\n    errors[0]?.scrollIntoView();\n\n    // TODO - add a small embedded copy button (instead of main button)\n    button.onclick = () => {\n      // const source = this.source.replaceAll('\\n', '<br />');\n      const dataURI = `data:text/plain,${encodeURIComponent(this.source)}`;\n      navigator.clipboard.writeText(dataURI);\n    };\n\n    // TODO - add a small embedded close button\n  }\n}\n\n// HELPERS\n\n/** Deduce an id, from shader source, or supplied id, or shader type */\nfunction getShaderIdFromProps(props: ShaderProps): string {\n  return getShaderName(props.source) || props.id || uid(`unnamed ${props.stage}-shader`);\n}\n\n/** Extracts GLSLIFY style naming of shaders: `#define SHADER_NAME ...` */\nfunction getShaderName(shader: string, defaultName: string = 'unnamed'): string {\n  const SHADER_NAME_REGEXP = /#define[\\s*]SHADER_NAME[\\s*]([A-Za-z0-9_-]+)[\\s*]/;\n  const match = SHADER_NAME_REGEXP.exec(shader);\n  return match ? match[1] : defaultName;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device} from '../device';\nimport {CompareFunction} from '../types/parameters';\nimport {Resource, ResourceProps} from './resource';\n\n/** Edge values sampling mode */\nexport type SamplerAddressMode = 'clamp-to-edge' | 'repeat' | 'mirror-repeat';\n\n/** Sampler filtering mode */\nexport type SamplerFilterMode = 'nearest' | 'linear';\n\n/**\n * Properties for initializing a sampler\n */\nexport type SamplerProps = ResourceProps & {\n  /** Comparison / shadow samplers are used with depth textures. See the `Sampler.compare` field */\n  type?: 'color-sampler' | 'comparison-sampler';\n  /** Edge value sampling in X direction */\n  addressModeU?: 'clamp-to-edge' | 'repeat' | 'mirror-repeat';\n  /** Edge value sampling in Y direction */\n  addressModeV?: 'clamp-to-edge' | 'repeat' | 'mirror-repeat';\n  /** Edge value sampling in Z direction */\n  addressModeW?: 'clamp-to-edge' | 'repeat' | 'mirror-repeat';\n\n  /** Magnification: the area of the fragment in texture space is smaller than a texel */\n  magFilter?: 'nearest' | 'linear';\n  /** Minification: the area of the fragment in texture space is larger than a texel */\n  minFilter?: 'nearest' | 'linear';\n  /** mipmapping: select between multiple mipmaps based on angle and size of the texture relative to the screen. */\n  mipmapFilter?: 'none' | 'nearest' | 'linear';\n  /** Affects the mipmap image selection */\n  lodMinClamp?: number;\n  /** Affects the mipmap image selection */\n  lodMaxClamp?: number;\n  /** Maximum number of samples that can be taken of the texture during any one texture fetch */\n  maxAnisotropy?: number;\n  /** How to compare reference values provided in shader shadow sampler calls with those pulled from the texture */\n  compare?: CompareFunction;\n};\n\nexport type SamplerParameters = Omit<SamplerProps, keyof ResourceProps>;\n\n/** Immutable Sampler object */\nexport abstract class Sampler extends Resource<SamplerProps> {\n  static override defaultProps: Required<SamplerProps> = {\n    ...Resource.defaultProps,\n    type: 'color-sampler',\n    addressModeU: 'clamp-to-edge',\n    addressModeV: 'clamp-to-edge',\n    addressModeW: 'clamp-to-edge',\n    magFilter: 'nearest',\n    minFilter: 'nearest',\n    mipmapFilter: 'none',\n    lodMinClamp: 0,\n    lodMaxClamp: 32, // Per WebGPU spec\n    compare: 'less-equal',\n    maxAnisotropy: 1\n  };\n\n  override get [Symbol.toStringTag](): string {\n    return 'Sampler';\n  }\n\n  constructor(device: Device, props: SamplerProps) {\n    props = Sampler.normalizeProps(device, props);\n    super(device, props, Sampler.defaultProps);\n  }\n\n  protected static normalizeProps(device: Device, props: SamplerProps): SamplerProps {\n    const overriddenDefaultProps: Partial<SamplerProps> =\n      device?.props?._resourceDefaults?.sampler || {};\n    const newProps = {...props, ...overriddenDefaultProps};\n    return newProps;\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {\n  ColorTextureFormat,\n  DepthStencilTextureFormat,\n  TextureFormat\n} from '../../gpu-type-utils/texture-formats';\nimport type {Device} from '../device';\nimport {Resource, ResourceProps} from './resource';\nimport {Texture} from './texture';\nimport {TextureView} from './texture-view';\nimport {log} from '../../utils/log';\n\nexport type FramebufferProps = ResourceProps & {\n  width?: number;\n  height?: number;\n  colorAttachments?: (TextureView | Texture | ColorTextureFormat)[];\n  depthStencilAttachment?: (TextureView | Texture | DepthStencilTextureFormat) | null;\n};\n\n/**\n * Create new textures with correct size for all attachments.\n * @note resize() destroys existing textures (if size has changed).\n */\nexport abstract class Framebuffer extends Resource<FramebufferProps> {\n  static override defaultProps: Required<FramebufferProps> = {\n    ...Resource.defaultProps,\n    width: 1,\n    height: 1,\n    colorAttachments: [], // ['rgba8unorm'],\n    depthStencilAttachment: null // 'depth24plus-stencil8'\n  };\n\n  override get [Symbol.toStringTag](): string {\n    return 'Framebuffer';\n  }\n\n  /** Width of all attachments in this framebuffer */\n  width: number;\n  /** Height of all attachments in this framebuffer */\n  height: number;\n  /** Color attachments */\n  abstract colorAttachments: TextureView[];\n  /** Depth-stencil attachment, if provided */\n  abstract depthStencilAttachment: TextureView | null;\n\n  constructor(device: Device, props: FramebufferProps = {}) {\n    super(device, props, Framebuffer.defaultProps);\n    this.width = this.props.width;\n    this.height = this.props.height;\n  }\n\n  /**\n   * Create a copy of this framebuffer with new attached textures, with same props but of the specified size.\n   * @note Does not copy contents of the attached textures.\n   */\n  clone(size?: {width: number; height: number}): Framebuffer {\n    const colorAttachments = this.colorAttachments.map(colorAttachment =>\n      colorAttachment.texture.clone(size)\n    );\n\n    const depthStencilAttachment =\n      this.depthStencilAttachment && this.depthStencilAttachment.texture.clone(size);\n\n    return this.device.createFramebuffer({...this.props, colorAttachments, depthStencilAttachment});\n  }\n\n  /**\n   * Resizes all attachments\n   * @note resize() destroys existing textures (if size has changed).\n   * @deprecated Use framebuffer.clone()\n   */\n  resize(size: {width: number; height: number}): void;\n  resize(size: [width: number, height: number]): void;\n  resize(): void;\n  resize(size?: {width: number; height: number} | [width: number, height: number]): void {\n    let updateSize: boolean = !size;\n    if (size) {\n      const [width, height] = Array.isArray(size) ? size : [size.width, size.height];\n      updateSize = updateSize || height !== this.height || width !== this.width;\n      this.width = width;\n      this.height = height;\n    }\n    if (updateSize) {\n      log.log(2, `Resizing framebuffer ${this.id} to ${this.width}x${this.height}`)();\n      this.resizeAttachments(this.width, this.height);\n    }\n  }\n\n  /** Auto creates any textures */\n  protected autoCreateAttachmentTextures(): void {\n    if (this.props.colorAttachments.length === 0 && !this.props.depthStencilAttachment) {\n      throw new Error('Framebuffer has noattachments');\n    }\n\n    this.colorAttachments = this.props.colorAttachments.map((attachment, index) => {\n      if (typeof attachment === 'string') {\n        const texture = this.createColorTexture(attachment, index);\n        this.attachResource(texture);\n        return texture.view;\n      }\n      if (attachment instanceof Texture) {\n        return attachment.view;\n      }\n      return attachment;\n    });\n\n    const attachment = this.props.depthStencilAttachment;\n    if (attachment) {\n      if (typeof attachment === 'string') {\n        const texture = this.createDepthStencilTexture(attachment);\n        this.attachResource(texture);\n        this.depthStencilAttachment = texture.view;\n      } else if (attachment instanceof Texture) {\n        this.depthStencilAttachment = attachment.view;\n      } else {\n        this.depthStencilAttachment = attachment;\n      }\n    }\n  }\n\n  /** Create a color texture */\n  protected createColorTexture(format: TextureFormat, index: number): Texture {\n    return this.device.createTexture({\n      id: `${this.id}-color-attachment-${index}`,\n      usage: Texture.RENDER_ATTACHMENT,\n      format,\n      width: this.width,\n      height: this.height,\n      // TODO deprecated? - luma.gl v8 compatibility\n      sampler: {\n        magFilter: 'linear',\n        minFilter: 'linear'\n      }\n    });\n  }\n\n  /** Create depth stencil texture */\n  protected createDepthStencilTexture(format: TextureFormat): Texture {\n    return this.device.createTexture({\n      id: `${this.id}-depth-stencil-attachment`,\n      usage: Texture.RENDER_ATTACHMENT,\n      format,\n      width: this.width,\n      height: this.height,\n      mipmaps: false\n    });\n  }\n\n  /**\n   * Default implementation of resize\n   * Creates new textures with correct size for all attachments.\n   * and destroys existing textures if owned\n   */\n  protected resizeAttachments(width: number, height: number): void {\n    for (let i = 0; i < this.colorAttachments.length; ++i) {\n      if (this.colorAttachments[i]) {\n        const resizedTexture = this.colorAttachments[i].texture.clone({\n          width,\n          height\n        });\n        this.destroyAttachedResource(this.colorAttachments[i]);\n        this.colorAttachments[i] = resizedTexture.view;\n        this.attachResource(resizedTexture.view);\n      }\n    }\n\n    if (this.depthStencilAttachment) {\n      const resizedTexture = this.depthStencilAttachment.texture.clone({\n        width,\n        height\n      });\n      this.destroyAttachedResource(this.depthStencilAttachment);\n      this.depthStencilAttachment = resizedTexture.view;\n      this.attachResource(resizedTexture);\n    }\n\n    this.updateAttachments();\n  }\n\n  /** Implementation is expected to update any underlying binding (WebGL framebuffer attachment) */\n  protected abstract updateAttachments(): void;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device} from '../device';\nimport type {UniformValue} from '../types/uniforms';\nimport type {PrimitiveTopology, RenderPipelineParameters} from '../types/parameters';\nimport type {ShaderLayout, Binding} from '../types/shader-layout';\nimport type {BufferLayout} from '../types/buffer-layout';\n// import {normalizeAttributeMap} from '../helpers/attribute-bindings';\nimport {Resource, ResourceProps} from './resource';\nimport type {Shader} from './shader';\nimport type {RenderPass} from './render-pass';\nimport {VertexArray} from './vertex-array';\nimport {TransformFeedback} from './transform-feedback';\n\nexport type RenderPipelineProps = ResourceProps & {\n  // Shaders and shader layout\n\n  /** Compiled vertex shader */\n  vs?: Shader | null;\n  /** Name of vertex shader stage main function (defaults to 'main'). WGSL only */\n  vertexEntryPoint?: string; //\n  /** Constant values to apply to compiled vertex shader. Do not require re-compilation. (WGSL only) */\n  vsConstants?: Record<string, number>; // WGSL only\n  /** Compiled fragment shader */\n  fs?: Shader | null;\n  /** Name of fragment shader stage main function (defaults to 'main'). WGSL only */\n  fragmentEntryPoint?: string; // WGSL only\n  /** Constant values to apply to compiled fragment shader. Do not require re-compilation. (WGSL only) */\n  fsConstants?: Record<string, number>;\n\n  /** Describes the attributes and bindings exposed by the pipeline shader(s). */\n  shaderLayout?: ShaderLayout | null;\n  /** Describes the buffers accepted by this pipeline and how they are mapped to shader attributes. */\n  bufferLayout?: BufferLayout[]; // Record<string, Omit<BufferLayout, 'name'>\n\n  /** Determines how vertices are read from the 'vertex' attributes */\n  topology?: PrimitiveTopology;\n  /** Parameters that are controlled by pipeline */\n  parameters?: RenderPipelineParameters;\n\n  // /** Use instanced rendering? */\n  // isInstanced?: boolean;\n  // /** Number of instances */\n  // instanceCount?: number;\n  // /** Number of vertices */\n  // vertexCount?: number;\n\n  /** Buffers, Textures, Samplers for the shader bindings */\n  bindings?: Record<string, Binding>;\n  /** @deprecated uniforms (WebGL only) */\n  uniforms?: Record<string, UniformValue>;\n};\n\n/**\n * A compiled and linked shader program\n */\nexport abstract class RenderPipeline extends Resource<RenderPipelineProps> {\n  static override defaultProps: Required<RenderPipelineProps> = {\n    ...Resource.defaultProps,\n\n    vs: null,\n    vertexEntryPoint: 'vertexMain',\n    vsConstants: {},\n\n    fs: null,\n    fragmentEntryPoint: 'fragmentMain',\n    fsConstants: {},\n\n    shaderLayout: null,\n    bufferLayout: [],\n    topology: 'triangle-list',\n    parameters: {},\n\n    // isInstanced: false,\n    // instanceCount: 0,\n    // vertexCount: 0,\n\n    bindings: {},\n    uniforms: {}\n  };\n\n  override get [Symbol.toStringTag](): string {\n    return 'RenderPipeline';\n  }\n\n  abstract readonly vs: Shader;\n  abstract readonly fs: Shader | null;\n\n  /** The merged layout */\n  shaderLayout: ShaderLayout;\n  /** Buffer map describing buffer interleaving etc */\n  readonly bufferLayout: BufferLayout[];\n  /** The linking status of the pipeline. 'pending' if linking is asynchronous, and on production */\n  linkStatus: 'pending' | 'success' | 'error' = 'pending';\n  /** The hash of the pipeline */\n  hash: string = '';\n\n  constructor(device: Device, props: RenderPipelineProps) {\n    super(device, props, RenderPipeline.defaultProps);\n    this.shaderLayout = this.props.shaderLayout!;\n    this.bufferLayout = this.props.bufferLayout || [];\n  }\n\n  /** Set bindings (stored on pipeline and set before each call) */\n  abstract setBindings(\n    bindings: Record<string, Binding>,\n    options?: {disableWarnings?: boolean}\n  ): void;\n\n  /** Draw call. Returns false if the draw call was aborted (due to resources still initializing) */\n  abstract draw(options: {\n    /** Render pass to draw into (targeting screen or framebuffer) */\n    renderPass?: RenderPass;\n    /** Parameters to be set during draw call. Note that most parameters can only be overridden in WebGL. */\n    parameters?: RenderPipelineParameters;\n    /** Topology. Note can only be overridden in WebGL. */\n    topology?: PrimitiveTopology;\n    /** vertex attributes */\n    vertexArray: VertexArray;\n    /** Use instanced rendering? */\n    isInstanced?: boolean;\n    /** Number of \"rows\" in 'instance' buffers */\n    instanceCount?: number;\n    /** Number of \"rows\" in 'vertex' buffers */\n    vertexCount?: number;\n    /** Number of \"rows\" in index buffer */\n    indexCount?: number;\n    /** First vertex to draw from */\n    firstVertex?: number;\n    /** First index to draw from */\n    firstIndex?: number;\n    /** First instance to draw from */\n    firstInstance?: number;\n    baseVertex?: number;\n    /** Transform feedback. WebGL only. */\n    transformFeedback?: TransformFeedback;\n  }): boolean;\n\n  // DEPRECATED METHODS\n\n  /**\n   * Uniforms\n   * @deprecated Use uniforms buffers\n   * @note textures, samplers and uniform buffers should be set via `setBindings()`, these are not considered uniforms.\n   * @note In WebGL uniforms have a performance penalty, they are reset before each call to enable pipeline sharing.\n   */\n  setUniformsWebGL(uniforms: Record<string, UniformValue>): void {\n    throw new Error('Use uniform blocks');\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {NumberArray4, TypedArray} from '@math.gl/types';\nimport type {Device} from '../device';\nimport type {RenderPassParameters} from '../types/parameters';\n// import {Binding} from '../types/shader-layout';\nimport {Resource, ResourceProps} from './resource';\nimport {Framebuffer} from './framebuffer';\nimport {QuerySet} from './query-set';\n\n/**\n * Properties for a RenderPass instance is a required parameter to all draw calls.\n */\nexport type RenderPassProps = ResourceProps & {\n  /** Framebuffer specifies which textures to render into. Default gets framebuffer from canvas context. */\n  framebuffer?: Framebuffer | null;\n  /** Control viewport, scissor rect, blend constant and stencil ref */\n  parameters?: RenderPassParameters;\n\n  // TODO - API needs to be able to control multiple render targets\n\n  /** Clear value for color attachment, or false to preserve the previous value */\n  clearColor?: NumberArray4 | TypedArray | false;\n  /** Experimental: Clear color values for multiple color attachments. Must specify typed arrays. props.clearColor will be ignored. */\n  clearColors?: (TypedArray | false)[];\n  /** Clear value for depth attachment (true === `1`), or false to preserve the previous value. Must be between 0.0 (near) and 1.0 (far), inclusive. */\n  clearDepth?: number | false;\n  /** Clear value for stencil attachment (true === `0`), or false to preserve the previous value. Converted to the type and number of LSBs as the number of bits in the stencil aspect */\n  clearStencil?: number | false;\n\n  /** Indicates that the depth component is read only. */\n  depthReadOnly?: boolean;\n  /** Indicates that the stencil component is read only. */\n  stencilReadOnly?: boolean;\n\n  /** Whether to disable / discard the output of the rasterizer */\n  discard?: boolean;\n\n  /** QuerySet to write begin/end timestamps to */\n  occlusionQuerySet?: QuerySet;\n  /** QuerySet to write begin/end timestamps to */\n  timestampQuerySet?: QuerySet;\n  /** QuerySet index to write begin timestamp to. No timestamp is written if not provided. */\n  beginTimestampIndex?: number;\n  /** QuerySet index to write end timestamp to. No timestamp is written if not provided. */\n  endTimestampIndex?: number;\n};\n\n/**\n * A RenderPass instance is a required parameter to all draw calls.\n *\n * It holds a combination of\n * - render targets (specified via a framebuffer)\n * - clear colors, read/write, discard information for the framebuffer attachments\n * - a couple of mutable parameters ()\n */\nexport abstract class RenderPass extends Resource<RenderPassProps> {\n  /** TODO - should be [0, 0, 0, 0], update once deck.gl tests run clean */\n  static defaultClearColor: [number, number, number, number] = [0, 0, 0, 1];\n  /** Depth 1.0 represents the far plance */\n  static defaultClearDepth = 1;\n  /** Clears all stencil bits */\n  static defaultClearStencil = 0;\n\n  /** Default properties for RenderPass */\n  static override defaultProps: Required<RenderPassProps> = {\n    ...Resource.defaultProps,\n    framebuffer: null,\n    parameters: undefined!,\n    clearColor: RenderPass.defaultClearColor,\n    clearColors: undefined!,\n    clearDepth: RenderPass.defaultClearDepth,\n    clearStencil: RenderPass.defaultClearStencil,\n    depthReadOnly: false,\n    stencilReadOnly: false,\n    discard: false,\n\n    occlusionQuerySet: undefined!,\n    timestampQuerySet: undefined!,\n    beginTimestampIndex: undefined!,\n    endTimestampIndex: undefined!\n  };\n\n  override get [Symbol.toStringTag](): string {\n    return 'RenderPass';\n  }\n\n  constructor(device: Device, props: RenderPassProps) {\n    props = RenderPass.normalizeProps(device, props);\n    super(device, props, RenderPass.defaultProps);\n  }\n\n  /** Call when rendering is done in this pass. */\n  abstract end(): void;\n\n  /** A few parameters can be changed at any time (viewport, scissorRect, blendColor, stencilReference) */\n  abstract setParameters(parameters: RenderPassParameters): void;\n\n  // executeBundles(bundles: Iterable<GPURenderBundle>): void;\n\n  /** Being an occlusion query. Value will be stored in the occlusionQuerySet at the index. Occlusion queries cannot be nested. */\n  abstract beginOcclusionQuery(queryIndex: number): void;\n  /** End an occlusion query. Stores result in the index specified in beginOcclusionQuery. */\n  abstract endOcclusionQuery(): void;\n\n  /** Begins a labeled debug group containing subsequent commands */\n  abstract pushDebugGroup(groupLabel: string): void;\n  /** Ends the labeled debug group most recently started by pushDebugGroup() */\n  abstract popDebugGroup(): void;\n  /** Marks a point in a stream of commands with a label */\n  abstract insertDebugMarker(markerLabel: string): void;\n\n  protected static normalizeProps(device: Device, props: RenderPassProps): RenderPassProps {\n    // Intended to override e.g. set default clear values to true\n    const overriddenDefaultProps = device.props._resourceDefaults?.renderPass;\n    const newProps = {...overriddenDefaultProps, ...props};\n    return newProps;\n  }\n}\n\n// TODO - Can we align WebGL implementation with WebGPU API?\n// In WebGPU the following methods are on the renderpass instead of the renderpipeline\n// luma.gl keeps them on the pipeline for now, but that has some issues.\n\n// abstract setPipeline(pipeline: RenderPipeline): void {}\n// abstract setIndexBuffer()\n// abstract setVertexBuffer(slot: number, buffer: Buffer, offset: number): void;\n// abstract setBindings(bindings: Record<string, Binding>): void;\n// abstract setParameters(parameters: RenderPassParameters);\n// abstract draw(options: {\n// abstract drawIndirect(indirectBuffer: GPUBuffer, indirectOffset: number): void;\n// abstract drawIndexedIndirect(indirectBuffer: GPUBuffer, indirectOffset: number): void;\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Resource, ResourceProps} from './resource';\nimport type {ComputeShaderLayout, Binding} from '../types/shader-layout';\nimport type {Device} from '../device';\nimport type {Shader} from './shader';\n\n/**\n * Properties for a compute pipeline\n */\nexport type ComputePipelineProps = ResourceProps & {\n  handle?: unknown;\n  /** Compiled shader object */\n  shader: Shader;\n  /** The entry point, defaults to main */\n  entryPoint?: string;\n  /** These are WGSL constant values - different from GLSL defines in that shader does not need to be recompiled */\n  constants?: Record<string, number>;\n  /** Describes the attributes and bindings exposed by the pipeline shader(s). */\n  shaderLayout?: ComputeShaderLayout | null;\n};\n\n/**\n * A compiled and linked shader program for compute\n */\nexport abstract class ComputePipeline extends Resource<ComputePipelineProps> {\n  static override defaultProps: Required<ComputePipelineProps> = {\n    ...Resource.defaultProps,\n    shader: undefined!,\n    entryPoint: undefined!,\n    constants: {},\n    shaderLayout: undefined!\n  };\n\n  override get [Symbol.toStringTag](): string {\n    return 'ComputePipeline';\n  }\n\n  hash: string = '';\n  /** The merged shader layout */\n  shaderLayout: ComputeShaderLayout;\n\n  constructor(device: Device, props: ComputePipelineProps) {\n    super(device, props, ComputePipeline.defaultProps);\n    this.shaderLayout = props.shaderLayout!;\n  }\n\n  /**\n   * @todo Use renderpass.setBindings() ?\n   * @todo Do we want to expose BindGroups in the API and remove this?\n   */\n  abstract setBindings(bindings: Record<string, Binding>): void;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Resource, ResourceProps} from './resource';\nimport {ComputePipeline} from './compute-pipeline';\nimport type {Device} from '../device';\nimport {Buffer} from './buffer';\nimport {QuerySet} from './query-set';\n\nexport type ComputePassProps = ResourceProps & {\n  /** QuerySet to write beging/end timestamps to */\n  timestampQuerySet?: QuerySet;\n  /** QuerySet index to write begin timestamp to. No timestamp is written if not provided. */\n  beginTimestampIndex?: number;\n  /** QuerySet index to write end timestamp to. No timestamp is written if not provided. */\n  endTimestampIndex?: number;\n};\n\nexport abstract class ComputePass extends Resource<ComputePassProps> {\n  static override defaultProps: Required<ComputePassProps> = {\n    ...Resource.defaultProps,\n    timestampQuerySet: undefined!,\n    beginTimestampIndex: undefined!,\n    endTimestampIndex: undefined!\n  };\n\n  override get [Symbol.toStringTag](): string {\n    return 'ComputePass';\n  }\n\n  constructor(device: Device, props: ComputePassProps) {\n    super(device, props, ComputePass.defaultProps);\n  }\n\n  abstract override destroy(): void;\n\n  abstract end(): void;\n\n  abstract setPipeline(pipeline: ComputePipeline): void;\n\n  /** Sets an array of bindings (uniform buffers, samplers, textures, ...) */\n  // abstract setBindings(bindings: Binding[]): void;\n\n  /**\n   * Dispatch work to be performed with the current ComputePipeline.\n   * @param x X dimension of the grid of workgroups to dispatch.\n   * @param y Y dimension of the grid of workgroups to dispatch.\n   * @param z Z dimension of the grid of workgroups to dispatch.\n   */\n  abstract dispatch(x: number, y?: number, z?: number): void;\n\n  /**\n   * Dispatch work to be performed with the current ComputePipeline.\n   * @param indirectBuffer buffer must be a tightly packed block of three 32-bit unsigned integer values (12 bytes total), given in the same order as the arguments for dispatch()\n   * @param indirectOffset\n   */\n  abstract dispatchIndirect(indirectBuffer: Buffer, indirectOffset?: number): void;\n\n  /** Begins a labeled debug group containing subsequent commands */\n  abstract pushDebugGroup(groupLabel: string): void;\n  /** Ends the labeled debug group most recently started by pushDebugGroup() */\n  abstract popDebugGroup(): void;\n  /** Marks a point in a stream of commands with a label */\n  abstract insertDebugMarker(markerLabel: string): void;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// import type {TypedArray} from '@math.gl/types';\nimport {Device} from '../device';\nimport {Resource, ResourceProps} from './resource';\nimport {Buffer} from './buffer';\nimport {Texture} from './texture';\nimport {QuerySet} from './query-set';\n\n// WEBGPU COMMAND ENCODER OPERATIONS\n\nexport type CopyBufferToBufferOptions = {\n  sourceBuffer: Buffer;\n  sourceOffset?: number;\n  destinationBuffer: Buffer;\n  destinationOffset?: number;\n  size: number;\n};\n\nexport type CopyBufferToTextureOptions = {\n  sourceBuffer: Buffer;\n  byteOffset?: number;\n  destinationTexture: Texture;\n  mipLevel?: number; //  = 0;\n  origin?: [number, number, number] | number[];\n  aspect?: 'all' | 'stencil-only' | 'depth-only';\n  bytesPerRow: number;\n  rowsPerImage: number;\n  size: [number, number, number] | number[];\n};\n\nexport type CopyTextureToBufferOptions = {\n  /** Texture to copy to/from. */\n  sourceTexture: Texture;\n  /**  Mip-map level of the texture to copy to/from. (Default 0) */\n  mipLevel?: number;\n  /** Defines the origin of the copy - the minimum corner of the texture sub-region to copy to/from.\n   * Together with `copySize`, defines the full copy sub-region.\n   */\n  /** Defines which aspects of the texture to copy to/from. */\n  aspect?: 'all' | 'stencil-only' | 'depth-only';\n\n  /** Width to copy */\n  width?: number;\n  height?: number;\n  depthOrArrayLayers?: number;\n  origin?: number[];\n\n  /** Destination buffer */\n  destinationBuffer: Buffer;\n  /** Offset, in bytes, from the beginning of the buffer to the start of the image data (default 0) */\n  byteOffset?: number;\n  /**\n   * The stride, in bytes, between the beginning of each block row and the subsequent block row.\n   * Required if there are multiple block rows (i.e. the copy height or depth is more than one block).\n   */\n  bytesPerRow?: number;\n  /**\n   * Number of block rows per single image of the texture.\n   * rowsPerImage &times; bytesPerRow is the stride, in bytes, between the beginning of each image of data and the subsequent image.\n   * Required if there are multiple images (i.e. the copy depth is more than one).\n   */\n  rowsPerImage?: number;\n};\n\nexport type CopyTextureToTextureOptions = {\n  /** Texture to copy to/from. */\n  sourceTexture: Texture;\n  /**  Mip-map level of the texture to copy to/from. (Default 0) */\n  mipLevel?: number;\n  /** Defines the origin of the copy - the minimum corner of the texture sub-region to copy from. */\n  origin?: number[];\n  /** Defines which aspects of the {@link GPUImageCopyTexture#texture} to copy to/from. */\n  aspect?: 'all' | 'stencil-only' | 'depth-only';\n\n  /** Texture to copy to/from. */\n  destinationTexture: Texture;\n  /**  Mip-map level of the texture to copy to/from. (Default 0) */\n  destinationMipLevel?: number;\n  /** Defines the origin of the copy - the minimum corner of the texture sub-region to copy to. */\n  destinationOrigin?: number[];\n  /** Defines which aspects of the {@link GPUImageCopyTexture#texture} to copy to/from. */\n  destinationAspect?: 'all' | 'stencil-only' | 'depth-only';\n\n  /** Width to copy */\n  width?: number;\n  height?: number;\n  depthOrArrayLayers?: number;\n};\n\n// ADDITIONAL COMMAND ENCODER OPERATIONS DEFINED BY LUMA.GL\n\n/** Options for clearing a texture mip level */\nexport type ClearTextureOptions = {\n  /** Texture to Clear. */\n  texture: Texture;\n  /**  Mip-map level of the texture clear. (Default 0) */\n  mipLevel?: number;\n  /** Defines which aspects of the Texture to clear. */\n  aspect?: 'all' | 'stencil-only' | 'depth-only';\n};\n\n// export type WriteBufferOptions = {\n//   buffer: Buffer;\n//   bufferOffset?: number;\n//   data: BufferSource;\n//   dataOffset?: number;\n//   size?: number;\n// };\n\n// export type WriteTextureOptions = {\n//   destination: Texture;\n//   mipLevel?: number; //  = 0;\n//   origin?: [number, number, number] | number[];\n//   aspect?: 'all' | 'stencil-only' | 'depth-only';\n//   data: BufferSource;\n//   // dataLayout;\n//   offset: number;\n//   bytesPerRow: number;\n//   rowsPerImage: number;\n//   size: [number, number, number] | number[];\n// };\n\nexport type CommandEncoderProps = ResourceProps & {\n  measureExecutionTime?: boolean;\n};\n\n/**\n * Encodes commands to queue that can be executed later\n */\nexport abstract class CommandEncoder extends Resource<CommandEncoderProps> {\n  static override defaultProps: Required<CommandEncoderProps> = {\n    ...Resource.defaultProps,\n    measureExecutionTime: undefined!\n  };\n\n  override get [Symbol.toStringTag](): string {\n    return 'CommandEncoder';\n  }\n\n  constructor(device: Device, props: CommandEncoderProps) {\n    super(device, props, CommandEncoder.defaultProps);\n  }\n\n  /** Completes recording of the commands sequence */\n  abstract finish(): void; // TODO - return the CommandBuffer?\n\n  /** Add a command that that copies data from a sub-region of a Buffer to a sub-region of another Buffer. */\n  abstract copyBufferToBuffer(options: CopyBufferToBufferOptions): void;\n\n  /** Add a command that copies data from a sub-region of a GPUBuffer to a sub-region of one or multiple continuous texture subresources. */\n  abstract copyBufferToTexture(options: CopyBufferToTextureOptions): void;\n\n  /** Add a command that copies data from a sub-region of one or multiple continuous texture subresources to a sub-region of a Buffer. */\n  abstract copyTextureToBuffer(options: CopyTextureToBufferOptions): void;\n\n  /** Add a command that copies data from a sub-region of one or multiple contiguous texture subresources to another sub-region of one or multiple continuous texture subresources. */\n  abstract copyTextureToTexture(options: CopyTextureToTextureOptions): void;\n\n  /** Add a command that clears a texture mip level. */\n  // abstract clearTexture(options: ClearTextureOptions): void;\n\n  // abstract readTexture(options: ReadTextureOptions): Promise<TypedArray>;\n\n  /** Reads results from a query set into a GPU buffer. Values are 64 bits so byteLength must be querySet.props.count * 8 */\n  abstract resolveQuerySet(\n    querySet: QuerySet,\n    destination: Buffer,\n    options?: {\n      firstQuery?: number;\n      queryCount?: number;\n      destinationOffset?: number;\n    }\n  ): void;\n\n  /** Begins a labeled debug group containing subsequent commands */\n  abstract pushDebugGroup(groupLabel: string): void;\n  /** Ends the labeled debug group most recently started by pushDebugGroup() */\n  abstract popDebugGroup(): void;\n  /** Marks a point in a stream of commands with a label */\n  abstract insertDebugMarker(markerLabel: string): void;\n\n  // TODO - luma.gl has these on the device, should we align with WebGPU API?\n  // beginRenderPass(GPURenderPassDescriptor descriptor): GPURenderPassEncoder;\n  // beginComputePass(optional GPUComputePassDescriptor descriptor = {}): GPUComputePassEncoder;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Device} from '../device';\nimport {Resource, ResourceProps} from './resource';\n\n// interface Queue {\n//   submit(commandBuffers);\n\n//   // onSubmittedWorkDone(): Promise<undefined>;\n\n//   writeBuffer(options: WriteBufferOptions): void;\n//   writeTexture(options: WriteTextureOptions): void;\n\n//   // copyExternalImageToTexture(\n//   //   GPUImageCopyExternalImage source,\n//   //   GPUImageCopyTextureTagged destination,\n//   //   GPUExtent3D copySize\n//   // ): void;\n// }\n\nexport type CommandBufferProps = ResourceProps & {};\n\n/**\n * Encodes commands to queue that can be executed later\n */\nexport abstract class CommandBuffer extends Resource<CommandBufferProps> {\n  static override defaultProps: Required<CommandBufferProps> = {\n    ...Resource.defaultProps\n  };\n\n  override get [Symbol.toStringTag](): string {\n    return 'CommandBuffer';\n  }\n\n  constructor(device: Device, props: CommandBufferProps) {\n    super(device, props, CommandBuffer.defaultProps);\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {ShaderDataType, ShaderAttributeType} from './shader-types';\nimport {VertexFormat, VertexType} from './vertex-formats';\n\n/** Information extracted from a ShaderAttributeInfo constant */\nexport type ShaderAttributeTypeInfo = {\n  /** WGSL-style primitive data type, f32, i32, u32 */\n  dataType: ShaderDataType;\n  /** Whether this is a normalized integer (that must be used as float) */\n  components: 1 | 2 | 3 | 4;\n  /** Length in bytes of the data for one vertex */\n  byteLength?: number;\n  /** Whether this is for integer or float vert */\n  integer: boolean;\n  /** Whether this data type is signed */\n  signed: boolean;\n  /** The simplest vertex format that matches the shader attribute's data type */\n  defaultVertexFormat: VertexFormat;\n};\n\n/** Decodes a vertex type, returning byte length and flags (integer, signed, normalized) */\nexport function decodeShaderAttributeType(\n  attributeType: ShaderAttributeType\n): ShaderAttributeTypeInfo {\n  const [dataType, components] = TYPE_INFO[attributeType];\n  const integer: boolean = dataType === 'i32' || dataType === 'u32';\n  const signed: boolean = dataType !== 'u32';\n\n  const byteLength = TYPE_SIZES[dataType] * components;\n  const defaultVertexFormat = getCompatibleVertexFormat(dataType, components);\n  return {\n    dataType,\n    components,\n    defaultVertexFormat,\n    byteLength,\n    integer,\n    signed\n  };\n}\n\n/** Get the \"default\" vertex format for a certain shader data type */\nfunction getCompatibleVertexFormat(\n  dataType: ShaderDataType,\n  components: 1 | 2 | 3 | 4\n): VertexFormat {\n  let vertexType: VertexType;\n  switch (dataType) {\n    case 'f32':\n      vertexType = 'float32';\n      break;\n    case 'i32':\n      vertexType = 'sint32';\n      break;\n    case 'u32':\n      vertexType = 'uint32';\n      break;\n    case 'f16':\n      return components <= 2 ? 'float16x2' : 'float16x4';\n  }\n  // TODO logic does not work for float16\n  if (components === 1) {\n    return vertexType;\n  }\n  return `${vertexType}x${components}`;\n}\n\n/** All valid shader attribute types. A table guarantees exhaustive list and fast execution */\nconst TYPE_INFO: Record<ShaderAttributeType, [ShaderDataType, 1 | 2 | 3 | 4]> = {\n  f32: ['f32', 1],\n  'vec2<f32>': ['f32', 2],\n  'vec3<f32>': ['f32', 3],\n  'vec4<f32>': ['f32', 4],\n  f16: ['f16', 1],\n  'vec2<f16>': ['f16', 2],\n  'vec3<f16>': ['f16', 3],\n  'vec4<f16>': ['f16', 4],\n  i32: ['i32', 1],\n  'vec2<i32>': ['i32', 2],\n  'vec3<i32>': ['i32', 3],\n  'vec4<i32>': ['i32', 4],\n  u32: ['u32', 1],\n  'vec2<u32>': ['u32', 2],\n  'vec3<u32>': ['u32', 3],\n  'vec4<u32>': ['u32', 4]\n};\n\nconst TYPE_SIZES: Record<ShaderDataType, number> = {\n  f32: 4,\n  f16: 2,\n  i32: 4,\n  u32: 4\n  // 'bool-webgl': 4,\n};\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {VertexFormat, VertexType} from './vertex-formats';\nimport {decodeVertexType} from './decode-data-type';\n\nexport type VertexFormatInfo = {\n  /** Length in bytes */\n  byteLength: number;\n  /** Type of each component */\n  type: VertexType;\n  /** Number of components per vertex / row */\n  components: 1 | 2 | 3 | 4;\n  /** Is this an integer format (normalized integer formats are not integer) */\n  integer: boolean;\n  /** Is this a signed format? */\n  signed: boolean;\n  /** Is this a normalized format? */\n  normalized: boolean;\n  /** Is this a webgl only format? */\n  webglOnly?: boolean;\n};\n\n/**\n * Decodes a vertex format, returning type, components, byte  length and flags (integer, signed, normalized)\n */\nexport function decodeVertexFormat(format: VertexFormat): VertexFormatInfo {\n  // Strip the -webgl ending if present\n  let webglOnly: boolean | undefined;\n  if (format.endsWith('-webgl')) {\n    format.replace('-webgl', '');\n    webglOnly = true;\n  }\n  // split components from type\n  const [type_, count] = format.split('x');\n  const type = type_ as VertexType;\n  const components = (count ? parseInt(count) : 1) as 1 | 2 | 3 | 4;\n  // decode the type\n  const decodedType = decodeVertexType(type);\n  const result: VertexFormatInfo = {\n    type,\n    components,\n    byteLength: decodedType.byteLength * components,\n    integer: decodedType.integer,\n    signed: decodedType.signed,\n    normalized: decodedType.normalized\n  };\n  if (webglOnly) {\n    result.webglOnly = true;\n  }\n  return result;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {log} from '../utils/log';\nimport type {ShaderLayout, AttributeDeclaration} from '../adapter/types/shader-layout';\nimport type {BufferLayout} from '../adapter/types/buffer-layout';\nimport type {ShaderDataType, ShaderAttributeType} from '../gpu-type-utils/shader-types';\nimport {decodeShaderAttributeType} from '../gpu-type-utils/decode-attribute-type';\nimport type {VertexFormat, VertexType} from '../gpu-type-utils/vertex-formats';\nimport {decodeVertexFormat} from '../gpu-type-utils/decode-vertex-format';\n\n/** Resolved info for a buffer / attribute combination to help backend configure it correctly */\nexport type AttributeInfo = {\n  /** Attribute name */\n  attributeName: string;\n  /** Location in shader */\n  location: number;\n  /** Type / precision used in shader (buffer values may be converted) */\n  shaderType: ShaderAttributeType;\n  /** Calculations are done in this type in the shader's attribute declaration */\n  shaderDataType: ShaderDataType;\n  /** Components refer to the number of components in the shader's attribute declaration */\n  shaderComponents: 1 | 2 | 3 | 4;\n  /** It is the shader attribute declaration that determines whether GPU will process as integer or float */\n  integer: boolean;\n\n  /** BufferName */\n  bufferName: string;\n  /** Format of buffer data */\n  vertexFormat: VertexFormat;\n  /** Memory data type refers to the data type in the buffer */\n  bufferDataType: VertexType;\n  /** Components refer to the number of components in the buffer's vertex format */\n  bufferComponents: 1 | 2 | 3 | 4;\n  /** Normalization is encoded in the buffer layout's vertex format... */\n  normalized: boolean;\n\n  /** If not specified, the step mode is inferred from the attribute name in the shader (contains string instance) */\n  stepMode: 'vertex' | 'instance';\n\n  /** The byteOffset is encoded in or calculated from the buffer layout */\n  byteOffset: number;\n  /** The byteStride is encoded in or calculated from the buffer layout */\n  byteStride: number;\n};\n\ntype BufferAttributeInfo = {\n  attributeName: string;\n  bufferName: string;\n  stepMode?: 'vertex' | 'instance';\n  vertexFormat: VertexFormat;\n  byteOffset: number;\n  byteStride: number;\n};\n\n/**\n * Map from \"attribute names\" to \"resolved attribute infos\"\n * containing information about both buffer layouts and shader attribute declarations\n */\nexport function getAttributeInfosFromLayouts(\n  shaderLayout: ShaderLayout,\n  bufferLayout: BufferLayout[]\n): Record<string, AttributeInfo> {\n  const attributeInfos: Record<string, AttributeInfo> = {};\n  for (const attribute of shaderLayout.attributes) {\n    const attributeInfo = getAttributeInfoFromLayouts(shaderLayout, bufferLayout, attribute.name);\n    if (attributeInfo) {\n      attributeInfos[attribute.name] = attributeInfo;\n    }\n  }\n  return attributeInfos;\n}\n\n/**\n * Array indexed by \"location\" holding \"resolved attribute infos\"\n */\nexport function getAttributeInfosByLocation(\n  shaderLayout: ShaderLayout,\n  bufferLayout: BufferLayout[],\n  maxVertexAttributes: number = 16\n): AttributeInfo[] {\n  const attributeInfos = getAttributeInfosFromLayouts(shaderLayout, bufferLayout);\n  const locationInfos: AttributeInfo[] = new Array(maxVertexAttributes).fill(null);\n  for (const attributeInfo of Object.values(attributeInfos)) {\n    locationInfos[attributeInfo.location] = attributeInfo;\n  }\n  return locationInfos;\n}\n\n/**\n * Get the combined information from a shader layout and a buffer layout for a specific attribute\n */\nfunction getAttributeInfoFromLayouts(\n  shaderLayout: ShaderLayout,\n  bufferLayout: BufferLayout[],\n  name: string\n): AttributeInfo | null {\n  const shaderDeclaration = getAttributeFromShaderLayout(shaderLayout, name);\n  const bufferMapping: BufferAttributeInfo | null = getAttributeFromBufferLayout(\n    bufferLayout,\n    name\n  );\n\n  // TODO should no longer happen\n  if (!shaderDeclaration) {\n    //  || !bufferMapping\n    return null;\n  }\n\n  const attributeTypeInfo = decodeShaderAttributeType(shaderDeclaration.type);\n  const vertexFormat = bufferMapping?.vertexFormat || attributeTypeInfo.defaultVertexFormat;\n  const vertexFormatInfo = decodeVertexFormat(vertexFormat);\n\n  return {\n    attributeName: bufferMapping?.attributeName || shaderDeclaration.name,\n    bufferName: bufferMapping?.bufferName || shaderDeclaration.name,\n    location: shaderDeclaration.location,\n    shaderType: shaderDeclaration.type,\n    shaderDataType: attributeTypeInfo.dataType,\n    shaderComponents: attributeTypeInfo.components,\n    vertexFormat,\n    bufferDataType: vertexFormatInfo.type,\n    bufferComponents: vertexFormatInfo.components,\n    // normalized is a property of the buffer's vertex format\n    normalized: vertexFormatInfo.normalized,\n    // integer is a property of the shader declaration\n    integer: attributeTypeInfo.integer,\n    stepMode: bufferMapping?.stepMode || shaderDeclaration.stepMode || 'vertex',\n    byteOffset: bufferMapping?.byteOffset || 0,\n    byteStride: bufferMapping?.byteStride || 0\n  };\n}\n\nfunction getAttributeFromShaderLayout(\n  shaderLayout: ShaderLayout,\n  name: string\n): AttributeDeclaration | null {\n  const attribute = shaderLayout.attributes.find(attr => attr.name === name);\n  if (!attribute) {\n    log.warn(`shader layout attribute \"${name}\" not present in shader`);\n  }\n  return attribute || null;\n}\n\nfunction getAttributeFromBufferLayout(\n  bufferLayouts: BufferLayout[],\n  name: string\n): BufferAttributeInfo | null {\n  // Check that bufferLayouts are valid (each either has format or attribute)\n  checkBufferLayouts(bufferLayouts);\n\n  let bufferLayoutInfo = getAttributeFromShortHand(bufferLayouts, name);\n  if (bufferLayoutInfo) {\n    return bufferLayoutInfo;\n  }\n\n  bufferLayoutInfo = getAttributeFromAttributesList(bufferLayouts, name);\n  if (bufferLayoutInfo) {\n    return bufferLayoutInfo;\n  }\n\n  // Didn't find...\n  log.warn(`layout for attribute \"${name}\" not present in buffer layout`);\n  return null;\n}\n\n/** Check that bufferLayouts are valid (each either has format or attribute) */\nfunction checkBufferLayouts(bufferLayouts: BufferLayout[]) {\n  for (const bufferLayout of bufferLayouts) {\n    if (\n      (bufferLayout.attributes && bufferLayout.format) ||\n      (!bufferLayout.attributes && !bufferLayout.format)\n    ) {\n      log.warn(`BufferLayout ${name} must have either 'attributes' or 'format' field`);\n    }\n  }\n}\n\n/** Get attribute from format shorthand if specified */\nfunction getAttributeFromShortHand(\n  bufferLayouts: BufferLayout[],\n  name: string\n): BufferAttributeInfo | null {\n  for (const bufferLayout of bufferLayouts) {\n    if (bufferLayout.format && bufferLayout.name === name) {\n      return {\n        attributeName: bufferLayout.name,\n        bufferName: name,\n        stepMode: bufferLayout.stepMode,\n        vertexFormat: bufferLayout.format,\n        // If offset is needed, use `attributes` field.\n        byteOffset: 0,\n        byteStride: bufferLayout.byteStride || 0\n      };\n    }\n  }\n  return null;\n}\n\n/**\n * Search attribute mappings (e.g. interleaved attributes) for buffer mapping.\n * Not the name of the buffer might be the same as one of the interleaved attributes.\n */\nfunction getAttributeFromAttributesList(\n  bufferLayouts: BufferLayout[],\n  name: string\n): BufferAttributeInfo | null {\n  for (const bufferLayout of bufferLayouts) {\n    let byteStride: number | undefined = bufferLayout.byteStride;\n\n    // Calculate a default byte stride if not provided\n    if (typeof bufferLayout.byteStride !== 'number') {\n      for (const attributeMapping of bufferLayout.attributes || []) {\n        const info = decodeVertexFormat(attributeMapping.format);\n        // @ts-ignore\n        byteStride += info.byteLength;\n      }\n    }\n\n    const attributeMapping = bufferLayout.attributes?.find(mapping => mapping.attribute === name);\n    if (attributeMapping) {\n      return {\n        attributeName: attributeMapping.attribute,\n        bufferName: bufferLayout.name,\n        stepMode: bufferLayout.stepMode,\n        vertexFormat: attributeMapping.format,\n        byteOffset: attributeMapping.byteOffset,\n        // @ts-ignore\n        byteStride\n      };\n    }\n  }\n\n  return null;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {TypedArray} from '../../types';\nimport {\n  AttributeInfo,\n  getAttributeInfosByLocation\n} from '../../adapter-utils/get-attribute-from-layouts';\nimport type {Device} from '../device';\nimport type {Buffer} from './buffer';\nimport type {RenderPass} from './render-pass';\nimport type {RenderPipeline} from './render-pipeline';\nimport {Resource, ResourceProps} from './resource';\n\n/** Properties for initializing a VertexArray */\nexport type VertexArrayProps = ResourceProps & {\n  renderPipeline: RenderPipeline | null;\n};\n\n/**\n * Stores attribute bindings.\n * Makes it easy to share a render pipeline and use separate vertex arrays.\n * @note On WebGL, VertexArray allows non-constant bindings to be performed in advance\n * reducing the number of WebGL calls per draw call.\n * @note On WebGPU this is just a convenience class that collects the bindings.\n */\nexport abstract class VertexArray extends Resource<VertexArrayProps> {\n  static override defaultProps: Required<VertexArrayProps> = {\n    ...Resource.defaultProps,\n    renderPipeline: null\n  };\n\n  override get [Symbol.toStringTag](): string {\n    return 'VertexArray';\n  }\n\n  /** Max number of vertex attributes */\n  readonly maxVertexAttributes: number;\n  /** Attribute infos indexed by location - TODO only needed by webgl module? */\n  protected readonly attributeInfos: AttributeInfo[];\n\n  /** Index buffer */\n  indexBuffer: Buffer | null = null;\n  /** Attributes indexed by buffer slot */\n  attributes: (Buffer | TypedArray | null)[];\n\n  constructor(device: Device, props: VertexArrayProps) {\n    super(device, props, VertexArray.defaultProps);\n    this.maxVertexAttributes = device.limits.maxVertexAttributes;\n    this.attributes = new Array(this.maxVertexAttributes).fill(null);\n    const {shaderLayout, bufferLayout} = props.renderPipeline || {};\n    if (!shaderLayout || !bufferLayout) {\n      throw new Error('VertexArray');\n    }\n    this.attributeInfos = getAttributeInfosByLocation(\n      shaderLayout,\n      bufferLayout,\n      this.maxVertexAttributes\n    );\n  }\n\n  /** Set attributes (stored on pipeline and set before each call) */\n  abstract setIndexBuffer(indices: Buffer | null): void;\n  /** Set attributes (stored on pipeline and set before each call) */\n  abstract setBuffer(bufferSlot: number, buffer: Buffer | null): void;\n\n  abstract bindBeforeRender(renderPass: RenderPass): void;\n  abstract unbindAfterRender(renderPass: RenderPass): void;\n\n  // DEPRECATED METHODS\n\n  /** @deprecated Set constant attributes (WebGL only) */\n  setConstantWebGL(location: number, value: TypedArray | null): void {\n    this.device.reportError(new Error('constant attributes not supported'));\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device} from '../device';\nimport {PrimitiveTopology} from '../types/parameters';\nimport {ShaderLayout} from '../types/shader-layout';\nimport type {Buffer} from './buffer';\nimport {Resource, ResourceProps} from './resource';\n\n/** For bindRange */\nexport type BufferRange = {\n  buffer: Buffer;\n  byteOffset?: number;\n  byteLength?: number;\n};\n\n/** Configures a set of output buffers for pipeline (WebGL only) */\nexport type TransformFeedbackProps = ResourceProps & {\n  /** Layout of shader (for varyings) */\n  layout: ShaderLayout;\n  /** Buffer bindings (for varyings) */\n  buffers: Record<string, Buffer | BufferRange>;\n};\n\n/** Holds a set of output buffers for pipeline (WebGL only) */\nexport abstract class TransformFeedback extends Resource<TransformFeedbackProps> {\n  static override defaultProps: Required<TransformFeedbackProps> = {\n    ...Resource.defaultProps,\n    layout: undefined!,\n    buffers: {}\n  };\n\n  get [Symbol.toStringTag](): string {\n    return 'TransformFeedback';\n  }\n\n  constructor(device: Device, props: TransformFeedbackProps) {\n    super(device, props, TransformFeedback.defaultProps);\n  }\n\n  abstract begin(topology?: PrimitiveTopology): void;\n  abstract end(): void;\n\n  abstract setBuffers(buffers: Record<string, Buffer | BufferRange>): void;\n  abstract setBuffer(locationOrName: string | number, bufferOrRange: Buffer | BufferRange): void;\n  abstract getBuffer(locationOrName: string | number): Buffer | BufferRange | null;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device} from '../device';\nimport {Resource, ResourceProps} from './resource';\n\n/**\n * Properties for creating a QuerySet\n * - 'timestamp' - query the GPU timestamp counter at the start and end of render passes\n *   timestamp queries are available if the 'timestamp-query' feature is present.\n * - 'occlusion' - query the number of fragment samples that pass all per-fragment tests for a set of drawing commands\n *   including scissor, sample mask, alpha to coverage, stencil, and depth tests\n */\nexport type QuerySetProps = ResourceProps & {\n  /**\n   * The type of query set\n   * occlusion - query the number of fragment samples that pass all the per-fragment tests for a set of drawing commands, including scissor, sample mask, alpha to coverage, stencil, and depth tests\n   * timestamp - query the GPU timestamp counter at the start and end of render passes\n   */\n  type: 'occlusion' | 'timestamp';\n  /** The number of queries managed by the query set */\n  count: number;\n};\n\n/** Immutable QuerySet object */\nexport abstract class QuerySet extends Resource<QuerySetProps> {\n  static override defaultProps: Required<QuerySetProps> = {\n    ...Resource.defaultProps,\n    type: undefined!,\n    count: undefined!\n  };\n\n  get [Symbol.toStringTag](): string {\n    return 'QuerySet';\n  }\n\n  constructor(device: Device, props: QuerySetProps) {\n    super(device, props, QuerySet.defaultProps);\n  }\n}\n", "import {Device} from '../device';\nimport {ShaderLayout} from '../types/shader-layout';\nimport {Resource, ResourceProps} from './resource';\n\nexport type PipelineLayoutProps = ResourceProps & {\n  shaderLayout: ShaderLayout;\n};\n\n/** Immutable PipelineLayout object */\nexport abstract class PipelineLayout extends Resource<PipelineLayoutProps> {\n  get [Symbol.toStringTag](): string {\n    return 'PipelineLayout';\n  }\n\n  constructor(device: Device, props: PipelineLayoutProps) {\n    super(device, props, PipelineLayout.defaultProps);\n  }\n\n  static override defaultProps: Required<PipelineLayoutProps> = {\n    ...Resource.defaultProps,\n    shaderLayout: {\n      attributes: [],\n      bindings: []\n    }\n  };\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {ShaderUniformType, ShaderDataType} from './shader-types';\n\nconst UNIFORM_FORMATS: Record<ShaderUniformType, {type: ShaderDataType; components: number}> = {\n  f32: {type: 'f32', components: 1},\n  i32: {type: 'i32', components: 1},\n  u32: {type: 'u32', components: 1},\n  // 'bool-webgl': {type: 'bool-webgl', components: 1},\n  'vec2<f32>': {type: 'f32', components: 2},\n  'vec3<f32>': {type: 'f32', components: 3},\n  'vec4<f32>': {type: 'f32', components: 4},\n  'vec2<i32>': {type: 'i32', components: 2},\n  'vec3<i32>': {type: 'i32', components: 3},\n  'vec4<i32>': {type: 'i32', components: 4},\n  'vec2<u32>': {type: 'u32', components: 2},\n  'vec3<u32>': {type: 'u32', components: 3},\n  'vec4<u32>': {type: 'u32', components: 4},\n  'mat2x2<f32>': {type: 'f32', components: 4},\n  'mat2x3<f32>': {type: 'f32', components: 6},\n  'mat2x4<f32>': {type: 'f32', components: 8},\n  'mat3x2<f32>': {type: 'f32', components: 6},\n  'mat3x3<f32>': {type: 'f32', components: 9},\n  'mat3x4<f32>': {type: 'f32', components: 12},\n  'mat4x2<f32>': {type: 'f32', components: 8},\n  'mat4x3<f32>': {type: 'f32', components: 12},\n  'mat4x4<f32>': {type: 'f32', components: 16}\n};\n\n/** Split a uniform type string into type and components */\nexport function decodeShaderUniformType(format: ShaderUniformType): {\n  type: ShaderDataType;\n  components: number;\n} {\n  const decoded = UNIFORM_FORMATS[format];\n  return decoded;\n}\n\n/** Align offset to 1, 2 or 4 elements (4, 8 or 16 bytes) */\nexport function alignTo(size: number, count: number): number {\n  // prettier-ignore\n  switch (count) {\n    case 1: return size; // Pad upwards to even multiple of 2\n    case 2: return size + (size % 2); // Pad upwards to even multiple of 2\n    default: return size + ((4 - (size % 4)) % 4); // Pad upwards to even multiple of 4\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {TypedArray} from '../types';\n\nlet arrayBuffer: ArrayBuffer;\n\nexport function getScratchArrayBuffer(byteLength: number): ArrayBuffer {\n  if (!arrayBuffer || arrayBuffer.byteLength < byteLength) {\n    arrayBuffer = new ArrayBuffer(byteLength);\n  }\n  return arrayBuffer;\n}\n\nexport function getScratchArray(Type: any, length: number): TypedArray {\n  const scratchArrayBuffer = getScratchArrayBuffer(Type.BYTES_PER_ELEMENT * length);\n  return new Type(scratchArrayBuffer, 0, length); // arrayBuffer, byteOffset, length (in elements)\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {TypedArray, NumberArray} from '../types';\n\n/**\n * Check is an array is a typed array\n * @param value value to be tested\n * @returns input as TypedArray, or null\n * @todo this should be provided by @math.gl/types\n */\nexport function isTypedArray(value: unknown): value is TypedArray {\n  return ArrayBuffer.isView(value) && !(value instanceof DataView);\n}\n\n/**\n * Check is an array is a numeric array (typed array or array of numbers)\n * @param value value to be tested\n * @returns input as NumberArray, or null\n * @todo this should be provided by @math.gl/types\n */\nexport function isNumberArray(value: unknown): value is NumberArray {\n  if (Array.isArray(value)) {\n    return value.length === 0 || typeof value[0] === 'number';\n  }\n  return isTypedArray(value);\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {ShaderUniformType, ShaderDataType} from '../gpu-type-utils/shader-types';\nimport {decodeShaderUniformType, alignTo} from '../gpu-type-utils/decode-shader-types';\n\nimport type {UniformValue} from '../adapter/types/uniforms';\nimport {getScratchArrayBuffer} from '../utils/array-utils-flat';\nimport {isNumberArray} from '../utils/is-array';\nimport {log} from '../utils/log';\n\n/**\n * Smallest buffer size that can be used for uniform buffers.\n * TODO - does this depend on device?\n */\nconst minBufferSize: number = 1024;\n\n/**\n * Std140 layout for uniform buffers\n * Supports manual listing of uniforms\n */\nexport class UniformBufferLayout {\n  readonly layout: Record<string, {offset: number; size: number; type: ShaderDataType}> = {};\n\n  /** number of bytes needed for buffer allocation */\n  readonly byteLength: number;\n\n  /** Create a new UniformBufferLayout given a map of attributes. */\n  constructor(uniformTypes: Record<string, ShaderUniformType>) {\n    /** number of 4 byte slots taken */\n    let size: number = 0;\n\n    // Add layout (type, size and offset) definitions for each uniform in the layout\n    for (const [key, uniformType] of Object.entries(uniformTypes)) {\n      const typeAndComponents = decodeShaderUniformType(uniformType);\n      const {type, components: count} = typeAndComponents;\n      // First, align (bump) current offset to an even multiple of current object (1, 2, 4)\n      size = alignTo(size, count);\n      // Use the aligned size as the offset of the current uniform.\n      const offset = size;\n      // Then, add our object's padded size ((1, 2, multiple of 4) to the current offset\n      size += count;\n      this.layout[key] = {type, size: count, offset};\n    }\n    size += (4 - (size % 4)) % 4;\n\n    const actualByteLength = size * 4;\n    this.byteLength = Math.max(actualByteLength, minBufferSize);\n  }\n\n  /** Get the data for the complete buffer */\n  getData(uniformValues: Record<string, UniformValue>): Uint8Array {\n    const bufferSize = Math.max(this.byteLength, minBufferSize);\n\n    // Allocate three typed arrays pointing at same memory\n    const arrayBuffer = getScratchArrayBuffer(bufferSize);\n    const typedArrays = {\n      i32: new Int32Array(arrayBuffer),\n      u32: new Uint32Array(arrayBuffer),\n      f32: new Float32Array(arrayBuffer),\n      // TODO not implemented\n      f16: new Uint16Array(arrayBuffer)\n    };\n    // TODO is this needed?\n    // typedArrays.i32.fill(0);\n\n    for (const [name, value] of Object.entries(uniformValues)) {\n      const uniformLayout = this.layout[name];\n      if (!uniformLayout) {\n        log.warn(`Supplied uniform value ${name} not present in uniform block layout`)();\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      const {type, size, offset} = uniformLayout;\n      const typedArray = typedArrays[type];\n      if (size === 1) {\n        if (typeof value !== 'number' && typeof value !== 'boolean') {\n          log.warn(\n            `Supplied value for single component uniform ${name} is not a number: ${value}`\n          )();\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n        // single value -> just set it\n        typedArray[offset] = Number(value);\n      } else {\n        if (!isNumberArray(value)) {\n          log.warn(\n            `Supplied value for multi component / array uniform ${name} is not a numeric array: ${value}`\n          )();\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n        // vector/matrix -> copy the supplied (typed) array, starting from offset\n        // TODO: we should limit or check size in case the supplied data overflows\n        typedArray.set(value, offset);\n      }\n    }\n\n    return new Uint8Array(arrayBuffer);\n  }\n\n  /** Does this layout have a field with specified name */\n  has(name: string) {\n    return Boolean(this.layout[name]);\n  }\n\n  /** Get offset and size for a field with specified name */\n  get(name: string): {offset: number; size: number} | undefined {\n    const layout = this.layout[name];\n    return layout;\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {isNumberArray} from './is-array';\n\n/** Test if two arrays are deep equal, with a length limit that defaults to 16 */\nexport function arrayEqual(a: unknown, b: unknown, limit: number = 16) {\n  if (a !== b) {\n    return false;\n  }\n  const arrayA = a;\n  const arrayB = b;\n  if (!isNumberArray(arrayA)) {\n    return false;\n  }\n  if (isNumberArray(arrayB) && arrayA.length === arrayB.length) {\n    for (let i = 0; i < arrayA.length; ++i) {\n      if (arrayB[i] !== arrayA[i]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/** Copy a value */\nexport function arrayCopy<T>(a: T): T {\n  if (isNumberArray(a)) {\n    return a.slice() as T;\n  }\n  return a;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {ShaderUniformType} from '../gpu-type-utils/shader-types';\nimport type {UniformValue} from '../adapter/types/uniforms';\nimport {\n  ShaderLayout,\n  UniformInfo,\n  UniformBufferBindingLayout\n} from '../adapter/types/shader-layout';\nimport {arrayEqual, arrayCopy} from '../utils/array-equal';\n\n/**\n * A uniform block holds values of the of uniform values for one uniform block / buffer.\n * It also does some book keeping on what has changed, to minimize unnecessary writes to uniform buffers.\n */\nexport class UniformBlock<\n  TUniforms extends Record<string, UniformValue> = Record<string, UniformValue>\n> {\n  name: string;\n\n  uniforms: Record<keyof TUniforms, UniformValue> = {} as Record<keyof TUniforms, UniformValue>;\n  modifiedUniforms: Record<keyof TUniforms, boolean> = {} as Record<keyof TUniforms, boolean>;\n  modified: boolean = true;\n\n  readonly bindingLayout: Record<string, UniformInfo> = {};\n  needsRedraw: string | false = 'initialized';\n\n  constructor(props?: {\n    name?: string;\n    shaderLayout?: ShaderLayout;\n    uniformTypes?: Record<keyof TUniforms, Record<string, ShaderUniformType>>;\n  }) {\n    this.name = props?.name || 'unnamed';\n\n    // TODO - Extract uniform layout from the shaderLayout object\n    if (props?.name && props?.shaderLayout) {\n      const binding = props?.shaderLayout.bindings?.find(\n        binding_ => binding_.type === 'uniform' && binding_.name === props?.name\n      );\n      if (!binding) {\n        throw new Error(props?.name);\n      }\n\n      const uniformBlock = binding as UniformBufferBindingLayout;\n      for (const uniform of uniformBlock.uniforms || []) {\n        this.bindingLayout[uniform.name] = uniform;\n      }\n    }\n  }\n\n  /** Set a map of uniforms */\n  setUniforms(uniforms: Partial<TUniforms>): void {\n    for (const [key, value] of Object.entries(uniforms)) {\n      this._setUniform(key, value);\n      if (!this.needsRedraw) {\n        this.setNeedsRedraw(`${this.name}.${key}=${value}`);\n      }\n    }\n  }\n\n  setNeedsRedraw(reason: string): void {\n    this.needsRedraw = this.needsRedraw || reason;\n  }\n\n  /** Returns all uniforms */\n  getAllUniforms(): Record<string, UniformValue> {\n    // @ts-expect-error\n    this.modifiedUniforms = {};\n    this.needsRedraw = false;\n    return (this.uniforms || {}) as Record<string, UniformValue>;\n  }\n\n  /** Set a single uniform */\n  private _setUniform(key: keyof TUniforms, value: UniformValue) {\n    if (arrayEqual(this.uniforms[key], value)) {\n      return;\n    }\n    this.uniforms[key] = arrayCopy(value);\n    this.modifiedUniforms[key] = true;\n    this.modified = true;\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {ShaderUniformType} from '../gpu-type-utils/shader-types';\nimport type {UniformValue} from '../adapter/types/uniforms';\nimport type {Device} from '../adapter/device';\nimport {Buffer} from '../adapter/resources/buffer';\nimport {log} from '../utils/log';\nimport {UniformBlock} from './uniform-block';\nimport {UniformBufferLayout} from './uniform-buffer-layout';\n\n/**\n * A uniform store holds a uniform values for one or more uniform blocks,\n * - It can generate binary data for any uniform buffer\n * - It can manage a uniform buffer for each block\n * - It can update managed uniform buffers with a single call\n * - It performs some book keeping on what has changed to minimize unnecessary writes to uniform buffers.\n */\nexport class UniformStore<\n  TPropGroups extends Record<string, Record<string, unknown>> = Record<\n    string,\n    Record<string, unknown>\n  >\n> {\n  /** Stores the uniform values for each uniform block */\n  uniformBlocks = new Map<keyof TPropGroups, UniformBlock>();\n  /** Can generate data for a uniform buffer for each block from data */\n  uniformBufferLayouts = new Map<keyof TPropGroups, UniformBufferLayout>();\n  /** Actual buffer for the blocks */\n  uniformBuffers = new Map<keyof TPropGroups, Buffer>();\n\n  /**\n   * Create a new UniformStore instance\n   * @param blocks\n   */\n  constructor(\n    blocks: Record<\n      keyof TPropGroups,\n      {\n        uniformTypes?: Record<string, ShaderUniformType>;\n        defaultProps?: Record<string, unknown>;\n        defaultUniforms?: Record<string, UniformValue>;\n      }\n    >\n  ) {\n    for (const [bufferName, block] of Object.entries(blocks)) {\n      const uniformBufferName = bufferName as keyof TPropGroups;\n\n      // Create a layout object to help us generate correctly formatted binary uniform buffers\n      const uniformBufferLayout = new UniformBufferLayout(block.uniformTypes || {});\n      this.uniformBufferLayouts.set(uniformBufferName, uniformBufferLayout);\n\n      // Create a Uniform block to store the uniforms for each buffer.\n      const uniformBlock = new UniformBlock({name: bufferName});\n      uniformBlock.setUniforms(block.defaultUniforms || {});\n      this.uniformBlocks.set(uniformBufferName, uniformBlock);\n    }\n  }\n\n  /** Destroy any managed uniform buffers */\n  destroy(): void {\n    for (const uniformBuffer of this.uniformBuffers.values()) {\n      uniformBuffer.destroy();\n    }\n  }\n\n  /**\n   * Set uniforms\n   * Makes all properties partial\n   */\n  setUniforms(\n    uniforms: Partial<{[group in keyof TPropGroups]: Partial<TPropGroups[group]>}>\n  ): void {\n    for (const [blockName, uniformValues] of Object.entries(uniforms)) {\n      this.uniformBlocks.get(blockName)?.setUniforms(uniformValues);\n      // We leverage logging in updateUniformBuffers(), even though slightly less efficient\n      // this.updateUniformBuffer(blockName);\n    }\n\n    this.updateUniformBuffers();\n  }\n\n  /** Get the required minimum length of the uniform buffer */\n  getUniformBufferByteLength(uniformBufferName: keyof TPropGroups): number {\n    return this.uniformBufferLayouts.get(uniformBufferName)?.byteLength || 0;\n  }\n\n  /** Get formatted binary memory that can be uploaded to a buffer */\n  getUniformBufferData(uniformBufferName: keyof TPropGroups): Uint8Array {\n    const uniformValues = this.uniformBlocks.get(uniformBufferName)?.getAllUniforms() || {};\n    // @ts-ignore\n    return this.uniformBufferLayouts.get(uniformBufferName)?.getData(uniformValues);\n  }\n\n  /**\n   * Creates an unmanaged uniform buffer (umnanaged means that application is responsible for destroying it)\n   * The new buffer is initialized with current / supplied values\n   */\n  createUniformBuffer(\n    device: Device,\n    uniformBufferName: keyof TPropGroups,\n    uniforms?: Partial<{[group in keyof TPropGroups]: Partial<TPropGroups[group]>}>\n  ): Buffer {\n    if (uniforms) {\n      this.setUniforms(uniforms);\n    }\n    const byteLength = this.getUniformBufferByteLength(uniformBufferName);\n    const uniformBuffer = device.createBuffer({\n      usage: Buffer.UNIFORM | Buffer.COPY_DST,\n      byteLength\n    });\n    // Note that this clears the needs redraw flag\n    const uniformBufferData = this.getUniformBufferData(uniformBufferName);\n    uniformBuffer.write(uniformBufferData);\n    return uniformBuffer;\n  }\n\n  /** Get the managed uniform buffer. \"managed\" resources are destroyed when the uniformStore is destroyed. */\n  getManagedUniformBuffer(device: Device, uniformBufferName: keyof TPropGroups): Buffer {\n    if (!this.uniformBuffers.get(uniformBufferName)) {\n      const byteLength = this.getUniformBufferByteLength(uniformBufferName);\n      const uniformBuffer = device.createBuffer({\n        usage: Buffer.UNIFORM | Buffer.COPY_DST,\n        byteLength\n      });\n      this.uniformBuffers.set(uniformBufferName, uniformBuffer);\n    }\n    // this.updateUniformBuffers();\n    // @ts-ignore\n    return this.uniformBuffers.get(uniformBufferName);\n  }\n\n  /** Updates all uniform buffers where values have changed */\n  updateUniformBuffers(): false | string {\n    let reason: false | string = false;\n    for (const uniformBufferName of this.uniformBlocks.keys()) {\n      const bufferReason = this.updateUniformBuffer(uniformBufferName);\n      reason ||= bufferReason;\n    }\n    if (reason) {\n      log.log(3, `UniformStore.updateUniformBuffers(): ${reason}`)();\n    }\n    return reason;\n  }\n\n  /** Update one uniform buffer. Only updates if values have changed */\n  updateUniformBuffer(uniformBufferName: keyof TPropGroups): false | string {\n    const uniformBlock = this.uniformBlocks.get(uniformBufferName);\n    let uniformBuffer = this.uniformBuffers.get(uniformBufferName);\n\n    let reason: false | string = false;\n    if (uniformBuffer && uniformBlock?.needsRedraw) {\n      reason ||= uniformBlock.needsRedraw;\n      // This clears the needs redraw flag\n      const uniformBufferData = this.getUniformBufferData(uniformBufferName);\n\n      uniformBuffer = this.uniformBuffers.get(uniformBufferName);\n      uniformBuffer?.write(uniformBufferData);\n\n      // logging - TODO - don't query the values unnecessarily\n      const uniformValues = this.uniformBlocks.get(uniformBufferName)?.getAllUniforms();\n      log.log(\n        4,\n        `Writing to uniform buffer ${String(uniformBufferName)}`,\n        uniformBufferData,\n        uniformValues\n      )();\n    }\n    return reason;\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {TypedArray, TypedArrayConstructor} from '../types';\nimport {VertexFormat} from './vertex-formats';\n\n// import {DataType} from '../types/vertex-formats';\n// type Omit<DataType, 'float16'> unfortunately breaks Typescript inferance\ntype DataType = 'uint8' | 'sint8' | 'uint16' | 'sint16' | 'uint32' | 'sint32' | 'float32';\ntype DataTypeNorm = 'unorm8' | 'snorm8' | 'unorm16' | 'snorm16';\n\nexport function getDataTypeFromTypedArray(\n  arrayOrType: TypedArray | TypedArrayConstructor\n): DataType {\n  const type = ArrayBuffer.isView(arrayOrType) ? arrayOrType.constructor : arrayOrType;\n  switch (type) {\n    case Float32Array:\n      return 'float32';\n    case Uint16Array:\n      return 'uint16';\n    case Uint32Array:\n      return 'uint32';\n    case Uint8Array:\n    case Uint8ClampedArray:\n      return 'uint8';\n    case Int8Array:\n      return 'sint8';\n    case Int16Array:\n      return 'sint16';\n    case Int32Array:\n      return 'sint32';\n    default:\n      // Failed to deduce data type from typed array\n      throw new Error(type.constructor.name);\n  }\n}\n\nexport function getTypedArrayFromDataType(\n  dataType: DataType | DataTypeNorm\n): TypedArrayConstructor {\n  switch (dataType) {\n    case 'float32':\n      return Float32Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'sint32':\n      return Int32Array;\n    case 'uint16':\n    case 'unorm16':\n      return Uint16Array;\n    case 'sint16':\n    case 'snorm16':\n      return Int16Array;\n    case 'uint8':\n    case 'unorm8':\n      return Uint8Array;\n    case 'sint8':\n    case 'snorm8':\n      return Int8Array;\n    default:\n      // Failed to deduce typed array from data type\n      throw new Error(dataType);\n  }\n}\n\n/** Get the vertex format for an attribute with TypedArray and size */\nexport function getVertexFormatFromAttribute(\n  typedArray: TypedArray,\n  size: number,\n  normalized?: boolean\n): VertexFormat {\n  if (!size || size > 4) {\n    throw new Error(`size ${size}`);\n  }\n\n  const components = size as 1 | 2 | 3 | 4;\n  let dataType: DataType | DataTypeNorm = getDataTypeFromTypedArray(typedArray);\n\n  // TODO - Special cases for WebGL (not supported on WebGPU), overrides the check below\n  if (dataType === 'uint8' && normalized && components === 1) {\n    return 'unorm8-webgl';\n  }\n  if (dataType === 'uint8' && normalized && components === 3) {\n    return 'unorm8x3-webgl';\n  }\n\n  if (dataType === 'uint8' || dataType === 'sint8') {\n    if (components === 1 || components === 3) {\n      // WebGPU 8 bit formats must be aligned to 16 bit boundaries');\n      throw new Error(`size: ${size}`);\n    }\n    if (normalized) {\n      dataType = dataType.replace('int', 'norm') as 'unorm8' | 'snorm8';\n    }\n    return `${dataType}x${components}`;\n  }\n  if (dataType === 'uint16' || dataType === 'sint16') {\n    if (components === 1 || components === 3) {\n      // WebGPU 16 bit formats must be aligned to 32 bit boundaries\n      throw new Error(`size: ${size}`);\n    }\n    if (normalized) {\n      dataType = dataType.replace('int', 'norm') as 'unorm16' | 'snorm16';\n    }\n    return `${dataType}x${components}`;\n  }\n\n  if (components === 1) {\n    return dataType;\n  }\n\n  return `${dataType}x${components}`;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {BufferLayout} from '../adapter/types/buffer-layout';\nimport {log} from '../utils/log';\n\n/** BufferLayoutHelper is a helper class that should not be used directly by applications */\nexport class BufferLayoutHelper {\n  bufferLayouts: BufferLayout[];\n\n  constructor(bufferLayouts: BufferLayout[]) {\n    this.bufferLayouts = bufferLayouts;\n  }\n\n  getBufferLayout(name: string): BufferLayout | null {\n    return this.bufferLayouts.find(layout => layout.name === name) || null;\n  }\n\n  /** Get attribute names from a BufferLayout */\n  getAttributeNamesForBuffer(bufferLayout: BufferLayout): string[] {\n    return bufferLayout.attributes\n      ? bufferLayout.attributes?.map(layout => layout.attribute)\n      : [bufferLayout.name];\n  }\n\n  mergeBufferLayouts(\n    bufferLayouts1: BufferLayout[],\n    bufferLayouts2: BufferLayout[]\n  ): BufferLayout[] {\n    const mergedLayouts = [...bufferLayouts1];\n    for (const attribute of bufferLayouts2) {\n      const index = mergedLayouts.findIndex(attribute2 => attribute2.name === attribute.name);\n      if (index < 0) {\n        mergedLayouts.push(attribute);\n      } else {\n        mergedLayouts[index] = attribute;\n      }\n    }\n    return mergedLayouts;\n  }\n\n  getBufferIndex(bufferName: string): number {\n    const bufferIndex = this.bufferLayouts.findIndex(layout => layout.name === bufferName);\n\n    if (bufferIndex === -1) {\n      log.warn(`BufferLayout: Missing buffer for \"${bufferName}\".`)();\n    }\n\n    return bufferIndex;\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {BufferLayout} from '../adapter/types/buffer-layout';\nimport {ShaderLayout} from '../adapter/types/shader-layout';\n\nexport function sortedBufferLayoutByShaderSourceLocations(\n  shaderLayout: ShaderLayout,\n  bufferLayout: BufferLayout[]\n): BufferLayout[] {\n  const shaderLayoutMap = Object.fromEntries(\n    shaderLayout.attributes.map(attr => [attr.name, attr.location])\n  );\n\n  const sortedLayout = bufferLayout.slice();\n  sortedLayout.sort((a, b) => {\n    const attributeNamesA = a.attributes ? a.attributes.map(attr => attr.attribute) : [a.name];\n    const attributeNamesB = b.attributes ? b.attributes.map(attr => attr.attribute) : [b.name];\n    const minLocationA = Math.min(...attributeNamesA.map(name => shaderLayoutMap[name]));\n    const minLocationB = Math.min(...attributeNamesB.map(name => shaderLayoutMap[name]));\n\n    return minLocationA - minLocationB;\n  });\n\n  return sortedLayout;\n}\n", "import { Attribute } from \"../wgsl_ast.js\";\r\n\r\nexport class TypeInfo {\r\n  name: string;\r\n  attributes: Attribute[] | null;\r\n  size: number;\r\n\r\n  constructor(name: string, attributes: Attribute[] | null) {\r\n    this.name = name;\r\n    this.attributes = attributes;\r\n    this.size = 0;\r\n  }\r\n\r\n  get isArray(): boolean {\r\n    return false;\r\n  }\r\n\r\n  get isStruct(): boolean {\r\n    return false;\r\n  }\r\n\r\n  get isTemplate(): boolean {\r\n    return false;\r\n  }\r\n\r\n  get isPointer(): boolean {\r\n    return false;\r\n  }\r\n\r\n  getTypeName(): string {\r\n    return this.name;\r\n  }\r\n}\r\n\r\nexport class MemberInfo {\r\n  name: string;\r\n  type: TypeInfo;\r\n  attributes: Attribute[] | null;\r\n  offset: number;\r\n  size: number;\r\n\r\n  constructor(\r\n    name: string,\r\n    type: TypeInfo,\r\n    attributes: Attribute[] | null\r\n  ) {\r\n    this.name = name;\r\n    this.type = type;\r\n    this.attributes = attributes;\r\n    this.offset = 0;\r\n    this.size = 0;\r\n  }\r\n\r\n  get isArray(): boolean {\r\n    return this.type.isArray;\r\n  }\r\n\r\n  get isStruct(): boolean {\r\n    return this.type.isStruct;\r\n  }\r\n\r\n  get isTemplate(): boolean {\r\n    return this.type.isTemplate;\r\n  }\r\n\r\n  get align(): number {\r\n    return this.type.isStruct ? (this.type as StructInfo).align : 0;\r\n  }\r\n\r\n  get members(): MemberInfo[] | null {\r\n    return this.type.isStruct ? (this.type as StructInfo).members : null;\r\n  }\r\n\r\n  get format(): TypeInfo | null {\r\n    return this.type.isArray\r\n      ? (this.type as ArrayInfo).format\r\n      : this.type.isTemplate\r\n      ? (this.type as TemplateInfo).format\r\n      : null;\r\n  }\r\n\r\n  get count(): number {\r\n    return this.type.isArray ? (this.type as ArrayInfo).count : 0;\r\n  }\r\n\r\n  get stride(): number {\r\n    return this.type.isArray ? (this.type as ArrayInfo).stride : this.size;\r\n  }\r\n}\r\n\r\nexport class StructInfo extends TypeInfo {\r\n  members: MemberInfo[] = [];\r\n  align: number = 0;\r\n  startLine: number = -1;\r\n  endLine: number = -1;\r\n  inUse: boolean = false;\r\n\r\n  constructor(name: string, attributes: Attribute[] | null) {\r\n    super(name, attributes);\r\n  }\r\n\r\n  get isStruct(): boolean {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport class ArrayInfo extends TypeInfo {\r\n  format: TypeInfo;\r\n  count: number;\r\n  stride: number;\r\n\r\n  constructor(name: string, attributes: Attribute[] | null) {\r\n    super(name, attributes);\r\n    this.count = 0;\r\n    this.stride = 0;\r\n  }\r\n\r\n  get isArray(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getTypeName(): string {\r\n    return `array<${this.format.getTypeName()}, ${this.count}>`;\r\n  }\r\n}\r\n\r\nexport class PointerInfo extends TypeInfo {\r\n  format: TypeInfo;\r\n  constructor(name: string, format: TypeInfo, attributes: Attribute[] | null) {\r\n    super(name, attributes);\r\n    this.format = format;\r\n  }\r\n\r\n  get isPointer(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getTypeName(): string {\r\n    return `&${this.format.getTypeName()}`;\r\n  }\r\n}\r\n\r\nexport class TemplateInfo extends TypeInfo {\r\n  format: TypeInfo | null;\r\n  access: string;\r\n  constructor(\r\n    name: string,\r\n    format: TypeInfo | null,\r\n    attributes: Attribute[] | null,\r\n    access: string\r\n  ) {\r\n    super(name, attributes);\r\n    this.format = format;\r\n    this.access = access;\r\n  }\r\n\r\n  get isTemplate(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getTypeName(): string {\r\n    let name = this.name;\r\n    if (this.format !== null) {\r\n      if (name === \"vec2\" || name === \"vec3\" || name === \"vec4\" ||\r\n          name === \"mat2x2\" || name === \"mat2x3\" || name === \"mat2x4\" ||\r\n          name === \"mat3x2\" || name === \"mat3x3\" || name === \"mat3x4\" ||\r\n          name === \"mat4x2\" || name === \"mat4x3\" || name === \"mat4x4\") {\r\n        if (this.format.name === \"f32\") {\r\n          name += \"f\";\r\n          return name;\r\n        } else if (this.format.name === \"i32\") {\r\n          name += \"i\";\r\n          return name;\r\n        } else if (this.format.name === \"u32\") {\r\n          name += \"u\";\r\n          return name;\r\n        } else if (this.format.name === \"bool\") {\r\n          name += \"b\";\r\n          return name;\r\n        } else if (this.format.name === \"f16\") {\r\n          name += \"h\";\r\n          return name;\r\n        }\r\n      }\r\n      name += `<${this.format.name}>`;\r\n    } else {\r\n      if (name === \"vec2\" || name === \"vec3\" || name === \"vec4\") {\r\n        return name;\r\n      }\r\n      //console.error(\"Template format is null.\");\r\n    }\r\n    return name;\r\n  }\r\n}\r\n\r\nexport enum ResourceType {\r\n  Uniform,\r\n  Storage,\r\n  Texture,\r\n  Sampler,\r\n  StorageTexture,\r\n}\r\n\r\nexport class VariableInfo {\r\n  attributes: Attribute[] | null;\r\n  name: string;\r\n  type: TypeInfo;\r\n  group: number;\r\n  binding: number;\r\n  resourceType: ResourceType;\r\n  access: string;\r\n\r\n  constructor(\r\n    name: string,\r\n    type: TypeInfo,\r\n    group: number,\r\n    binding: number,\r\n    attributes: Attribute[] | null,\r\n    resourceType: ResourceType,\r\n    access: string\r\n  ) {\r\n    this.name = name;\r\n    this.type = type;\r\n    this.group = group;\r\n    this.binding = binding;\r\n    this.attributes = attributes;\r\n    this.resourceType = resourceType;\r\n    this.access = access;\r\n  }\r\n\r\n  get isArray(): boolean {\r\n    return this.type.isArray;\r\n  }\r\n\r\n  get isStruct(): boolean {\r\n    return this.type.isStruct;\r\n  }\r\n\r\n  get isTemplate(): boolean {\r\n    return this.type.isTemplate;\r\n  }\r\n\r\n  get size(): number {\r\n    return this.type.size;\r\n  }\r\n\r\n  get align(): number {\r\n    return this.type.isStruct ? (this.type as StructInfo).align : 0;\r\n  }\r\n\r\n  get members(): MemberInfo[] | null {\r\n    return this.type.isStruct ? (this.type as StructInfo).members : null;\r\n  }\r\n\r\n  get format(): TypeInfo | null {\r\n    return this.type.isArray\r\n      ? (this.type as ArrayInfo).format\r\n      : this.type.isTemplate\r\n      ? (this.type as TemplateInfo).format\r\n      : null;\r\n  }\r\n\r\n  get count(): number {\r\n    return this.type.isArray ? (this.type as ArrayInfo).count : 0;\r\n  }\r\n\r\n  get stride(): number {\r\n    return this.type.isArray ? (this.type as ArrayInfo).stride : this.size;\r\n  }\r\n}\r\n\r\nexport class AliasInfo {\r\n  name: string;\r\n  type: TypeInfo;\r\n\r\n  constructor(name: string, type: TypeInfo) {\r\n    this.name = name;\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nexport class InputInfo {\r\n  name: string;\r\n  type: TypeInfo | null;\r\n  locationType: string;\r\n  location: number | string;\r\n  interpolation: string | null;\r\n\r\n  constructor(\r\n    name: string,\r\n    type: TypeInfo | null,\r\n    locationType: string,\r\n    location: number | string\r\n  ) {\r\n    this.name = name;\r\n    this.type = type;\r\n    this.locationType = locationType;\r\n    this.location = location;\r\n    this.interpolation = null;\r\n  }\r\n}\r\n\r\nexport class OutputInfo {\r\n  name: string;\r\n  type: TypeInfo | null;\r\n  locationType: string;\r\n  location: number | string;\r\n\r\n  constructor(\r\n    name: string,\r\n    type: TypeInfo | null,\r\n    locationType: string,\r\n    location: number | string\r\n  ) {\r\n    this.name = name;\r\n    this.type = type;\r\n    this.locationType = locationType;\r\n    this.location = location;\r\n  }\r\n}\r\n\r\nexport class OverrideInfo {\r\n  name: string;\r\n  type: TypeInfo | null;\r\n  attributes: Attribute[] | null;\r\n  id: number;\r\n\r\n  constructor(\r\n    name: string,\r\n    type: TypeInfo | null,\r\n    attributes: Attribute[] | null,\r\n    id: number\r\n  ) {\r\n    this.name = name;\r\n    this.type = type;\r\n    this.attributes = attributes;\r\n    this.id = id;\r\n  }\r\n}\r\n\r\nexport class ArgumentInfo {\r\n  name: string;\r\n  type: TypeInfo;\r\n  attributes: Attribute[] | null;\r\n\r\n  constructor(\r\n    name: string,\r\n    type: TypeInfo,\r\n    attributes: Attribute[] | null\r\n  ) {\r\n    this.name = name;\r\n    this.type = type;\r\n    this.attributes = attributes;\r\n  }\r\n}\r\n\r\nexport class FunctionInfo {\r\n  name: string;\r\n  stage: string | null = null;\r\n  inputs: InputInfo[] = [];\r\n  outputs: OutputInfo[] = [];\r\n  arguments: ArgumentInfo[] = [];\r\n  returnType: TypeInfo | null = null;\r\n  resources: VariableInfo[] = [];\r\n  overrides: OverrideInfo[] = [];\r\n  attributes: Attribute[] | null;\r\n  startLine: number = -1;\r\n  endLine: number = -1;\r\n  inUse: boolean = false;\r\n  calls: Set<FunctionInfo> = new Set();\r\n\r\n  constructor(name: string, stage: string | null = null, attributes: Attribute[] | null) {\r\n    this.name = name;\r\n    this.stage = stage;\r\n    this.attributes = attributes;\r\n  }\r\n}\r\n\r\nexport class EntryFunctions {\r\n  vertex: FunctionInfo[] = [];\r\n  fragment: FunctionInfo[] = [];\r\n  compute: FunctionInfo[] = [];\r\n}\r\n", "// From https://stackoverflow.com/questions/5678432/decompressing-half-precision-floats-in-javascript\r\nexport function float16ToFloat32(float16: number): number {\r\n    var s = (float16 & 0x8000) >> 15;\r\n    var e = (float16 & 0x7C00) >> 10;\r\n    var f = float16 & 0x03FF;\r\n\r\n    if (e == 0) {\r\n      return (s ? -1:1) * Math.pow(2, -14) * (f / Math.pow(2, 10));\r\n    } else if (e == 0x1F) {\r\n      return f ? NaN : ((s ? -1 : 1) * Infinity);\r\n    }\r\n\r\n    return (s ? -1 : 1) * Math.pow(2, e - 15) * (1 + (f / Math.pow(2, 10)));\r\n}\r\n\r\nconst float32View = new Float32Array(1);\r\nconst int32View = new Int32Array(float32View.buffer);\r\nconst float16View = new Uint16Array(1);\r\n\r\nexport function float32ToFloat16(float32: number): number {\r\n  float32View[0] = float32;\r\n\r\n  const f32 = int32View[0];\r\n  const sign = (f32 >> 31) & 1;\r\n  let exponent = (f32 >> 23) & 0xff;\r\n  let fraction = f32 & 0x7fffff;\r\n\r\n  if (exponent === 0xff) { // Infinity or NaN\r\n    float16View[0] = (sign << 15) | 0x7c00 | (fraction !== 0 ? 0x0200 : 0);\r\n    return float16View[0];\r\n  }\r\n\r\n  if (exponent === 0) { // Zero or subnormal\r\n    if (fraction === 0) { // Zero\r\n      float16View[0] = sign << 15;\r\n      return float16View[0];\r\n    }\r\n    // Subnormal\r\n    fraction |= 0x800000;\r\n    let shift = 113;\r\n    while ((fraction & 0x800000) === 0) {\r\n      fraction <<= 1;\r\n      shift--;\r\n    }\r\n    exponent = 127 - shift;\r\n    fraction &= 0x7fffff;\r\n    if (exponent > 0) {\r\n      fraction = (fraction >> (126 - exponent)) + ((fraction >> (127 - exponent)) & 1);\r\n      float16View[0] = (sign << 15) | (exponent << 10) | (fraction >> 13);\r\n      return float16View[0];\r\n    } else {\r\n      float16View[0] = sign << 15;\r\n      return float16View[0];\r\n    }\r\n  }\r\n\r\n  // Normalized\r\n  exponent = exponent - 127 + 15;\r\n  if (exponent >= 31) { // Overflow\r\n    float16View[0] = (sign << 15) | 0x7c00;\r\n    return float16View[0];\r\n  }\r\n  if (exponent <= 0) { // Underflow\r\n    if (exponent < -10) {\r\n      float16View[0] = sign << 15;\r\n      return float16View[0];\r\n    }\r\n    fraction = (fraction | 0x800000) >> (1 - exponent);\r\n    float16View[0] = (sign << 15) | (fraction >> 13);\r\n    return float16View[0];\r\n  }\r\n\r\n  fraction = fraction >> 13;\r\n  float16View[0] = (sign << 15) | (exponent << 10) | fraction;\r\n  return float16View[0];\r\n}\r\n\r\nconst uint32 = new Uint32Array(1);\r\nconst uint32ToFloat32 = new Float32Array(uint32.buffer, 0, 1);\r\n\r\nexport function float11ToFloat32(f11: number): number {\r\n  const u32 = (((((f11) >> 6) & 0x1F) + (127 - 15)) << 23) | (((f11) & 0x3F) << 17);\r\n  uint32[0] = u32;\r\n  return uint32ToFloat32[0];\r\n}\r\n\r\nexport function float10ToFloat32(f10: number): number {\r\n  const u32 = (((((f10) >> 5) & 0x1F) + (127 - 15)) << 23) | (((f10) & 0x1F) << 18);\r\n  uint32[0] = u32;\r\n  return uint32ToFloat32[0];\r\n}\r\n", "import { float16ToFloat32, float32ToFloat16, float10ToFloat32, float11ToFloat32 } from \"./float.js\";\r\n\r\nexport function setTexturePixel(imageData: Uint8Array, x: number, y: number, z: number, mipLevel: number,\r\n        height: number, bytesPerRow: number, texelByteSize: number, format: string, value: number[]): void {\r\n    bytesPerRow = bytesPerRow >> mipLevel;\r\n    height = height >> mipLevel;\r\n\r\n    const offset = (z * bytesPerRow * height) + y * bytesPerRow + x * texelByteSize;\r\n\r\n    switch (format) {\r\n        case \"r8unorm\": {\r\n            setPixelValue(imageData, offset, \"8unorm\", 1, value);\r\n            return;\r\n        }\r\n        case \"r8snorm\": {\r\n            setPixelValue(imageData, offset, \"8snorm\", 1, value);\r\n            return;\r\n        }\r\n        case \"r8uint\": {\r\n            setPixelValue(imageData, offset, \"8uint\", 1, value);\r\n            return;\r\n        }\r\n        case \"r8sint\": {\r\n            setPixelValue(imageData, offset, \"8sint\", 1, value);\r\n            return;\r\n        }\r\n\r\n        case \"rg8unorm\": {\r\n            setPixelValue(imageData, offset, \"8unorm\", 2, value);\r\n            return;\r\n        }\r\n        case \"rg8snorm\": {\r\n            setPixelValue(imageData, offset, \"8snorm\", 2, value);\r\n            return;\r\n        }\r\n        case \"rg8uint\": {\r\n            setPixelValue(imageData, offset, \"8uint\", 2, value);\r\n            return;\r\n        }\r\n        case \"rg8sint\": {\r\n            setPixelValue(imageData, offset, \"8sint\", 2, value);\r\n            return;\r\n        }\r\n\r\n        case \"rgba8unorm-srgb\":\r\n        case \"rgba8unorm\": {\r\n            setPixelValue(imageData, offset, \"8unorm\", 4, value);\r\n            return;\r\n        }\r\n        case \"rgba8snorm\": {\r\n            setPixelValue(imageData, offset, \"8snorm\", 4, value);\r\n            return;\r\n        }\r\n        case \"rgba8uint\": {\r\n            setPixelValue(imageData, offset, \"8uint\", 4, value);\r\n            return;\r\n        }\r\n        case \"rgba8sint\": {\r\n            setPixelValue(imageData, offset, \"8sint\", 4, value);\r\n            return;\r\n        }\r\n\r\n        case \"bgra8unorm-srgb\":\r\n        case \"bgra8unorm\": {\r\n            setPixelValue(imageData, offset, \"8unorm\", 4, value);\r\n            return;\r\n        }\r\n\r\n        case \"r16uint\": {\r\n            setPixelValue(imageData, offset, \"16uint\", 1, value);\r\n            return;\r\n        }\r\n        case \"r16sint\": {\r\n            setPixelValue(imageData, offset, \"16sint\", 1, value);\r\n            return;\r\n        }\r\n        case \"r16float\": {\r\n            setPixelValue(imageData, offset, \"16float\", 1, value);\r\n            return;\r\n        }\r\n\r\n        case \"rg16uint\": {\r\n            setPixelValue(imageData, offset, \"16uint\", 2, value);\r\n            return;\r\n        }\r\n        case \"rg16sint\": {\r\n            setPixelValue(imageData, offset, \"16sint\", 2, value);\r\n            return;\r\n        }\r\n        case \"rg16float\": {\r\n            setPixelValue(imageData, offset, \"16float\", 2, value);\r\n            return;\r\n        }\r\n\r\n        case \"rgba16uint\": {\r\n            setPixelValue(imageData, offset, \"16uint\", 4, value);\r\n            return;\r\n        }\r\n        case \"rgba16sint\": {\r\n            setPixelValue(imageData, offset, \"16sint\", 4, value);\r\n            return;\r\n        }\r\n        case \"rgba16float\": {\r\n            setPixelValue(imageData, offset, \"16float\", 4, value);\r\n            return;\r\n        }\r\n\r\n        case \"r32uint\": {\r\n            setPixelValue(imageData, offset, \"32uint\", 1, value);\r\n            return;\r\n        }\r\n        case \"r32sint\": {\r\n            setPixelValue(imageData, offset, \"32sint\", 1, value);\r\n            return;\r\n        }\r\n        case \"depth16unorm\": // depth formats get conerted to r32float\r\n        case \"depth24plus\":\r\n        case \"depth24plus-stencil8\":\r\n        case \"depth32float\":\r\n        case \"depth32float-stencil8\":\r\n        case \"r32float\": {\r\n            setPixelValue(imageData, offset, \"32float\", 1, value);\r\n            return;\r\n        }\r\n        case \"rg32uint\": {\r\n            setPixelValue(imageData, offset, \"32uint\", 2, value);\r\n            return;\r\n        }\r\n        case \"rg32sint\": {\r\n            setPixelValue(imageData, offset, \"32sint\", 2, value);\r\n            return;\r\n        }\r\n        case \"rg32float\": {\r\n            setPixelValue(imageData, offset, \"32float\", 2, value);\r\n            return;\r\n        }\r\n        case \"rgba32uint\": {\r\n            setPixelValue(imageData, offset, \"32uint\", 4, value);\r\n            return;\r\n        }\r\n        case \"rgba32sint\": {\r\n            setPixelValue(imageData, offset, \"32sint\", 4, value);\r\n            return;\r\n        }\r\n        case \"rgba32float\": {\r\n            setPixelValue(imageData, offset, \"32float\", 4, value);\r\n            return;\r\n        }\r\n\r\n        case \"rg11b10ufloat\": {\r\n            console.error(\"TODO: rg11b10ufloat not supported for writing\");\r\n            /*const uintValue = new Uint32Array(imageData.buffer, offset, 1)[0];\r\n            const ri = uintValue & 0x7FF;\r\n            const gi = (uintValue & 0x3FF800) >> 11;\r\n            const bi = (uintValue & 0xFFC00000) >> 22;\r\n            const rf = float11ToFloat32(ri);\r\n            const gf = float11ToFloat32(gi);\r\n            const bf = float10ToFloat32(bi);\r\n            return [rf, gf, bf, 1.0];*/\r\n            return;\r\n        }\r\n    }\r\n}\r\n\r\nexport function getTexturePixel(imageData: Uint8Array, x: number, y: number, z: number, mipLevel: number,\r\n        height: number, bytesPerRow: number, texelByteSize: number, format: string): number[] | null {\r\n    bytesPerRow = bytesPerRow >> mipLevel;\r\n    height = height >> mipLevel;\r\n\r\n    const offset = (z * bytesPerRow * height) + y * bytesPerRow + x * texelByteSize;\r\n\r\n    switch (format) {\r\n        case \"r8unorm\": {\r\n            const value = pixelValue(imageData, offset, \"8unorm\", 1);\r\n            return [value[0]];\r\n        }\r\n        case \"r8snorm\": {\r\n            const value = pixelValue(imageData, offset, \"8snorm\", 1);\r\n            return [value[0]];\r\n        }\r\n        case \"r8uint\": {\r\n            const value = pixelValue(imageData, offset, \"8uint\", 1);\r\n            return [value[0]];\r\n        }\r\n        case \"r8sint\": {\r\n            const value = pixelValue(imageData, offset, \"8sint\", 1);\r\n            return [value[0]];\r\n        }\r\n\r\n        case \"rg8unorm\": {\r\n            const value = pixelValue(imageData, offset, \"8unorm\", 2);\r\n            return [value[0], value[1]];\r\n        }\r\n        case \"rg8snorm\": {\r\n            const value = pixelValue(imageData, offset, \"8snorm\", 2);\r\n            return [value[0], value[1]];\r\n        }\r\n        case \"rg8uint\": {\r\n            const value = pixelValue(imageData, offset, \"8uint\", 2);\r\n            return [value[0], value[1]];\r\n        }\r\n        case \"rg8sint\": {\r\n            const value = pixelValue(imageData, offset, \"8sint\", 2);\r\n            return [value[0], value[1]];\r\n        }\r\n\r\n        case \"rgba8unorm-srgb\":\r\n        case \"rgba8unorm\": {\r\n            const value = pixelValue(imageData, offset, \"8unorm\", 4);\r\n            return [value[0], value[1], value[2], value[3]];\r\n        }\r\n        case \"rgba8snorm\": {\r\n            const value = pixelValue(imageData, offset, \"8snorm\", 4);\r\n            return [value[0], value[1], value[2], value[3]];\r\n        }\r\n        case \"rgba8uint\": {\r\n            const value = pixelValue(imageData, offset, \"8uint\", 4);\r\n            return [value[0], value[1], value[2], value[3]];\r\n        }\r\n        case \"rgba8sint\": {\r\n            const value = pixelValue(imageData, offset, \"8sint\", 4);\r\n            return [value[0], value[1], value[2], value[3]];\r\n        }\r\n\r\n        case \"bgra8unorm-srgb\":\r\n        case \"bgra8unorm\": {\r\n            const value = pixelValue(imageData, offset, \"8unorm\", 4);\r\n            return [value[2], value[1], value[0], value[3]];\r\n        }\r\n\r\n        case \"r16uint\": {\r\n            const value = pixelValue(imageData, offset, \"16uint\", 1);\r\n            return [value[0]];\r\n        }\r\n        case \"r16sint\": {\r\n            const value = pixelValue(imageData, offset, \"16sint\", 1);\r\n            return [value[0]];\r\n        }\r\n        case \"r16float\": {\r\n            const value = pixelValue(imageData, offset, \"16float\", 1);\r\n            return [value[0]];\r\n        }\r\n\r\n        case \"rg16uint\": {\r\n            const value = pixelValue(imageData, offset, \"16uint\", 2);\r\n            return [value[0], value[1]];\r\n        }\r\n        case \"rg16sint\": {\r\n            const value = pixelValue(imageData, offset, \"16sint\", 2);\r\n            return [value[0], value[1]];\r\n        }\r\n        case \"rg16float\": {\r\n            const value = pixelValue(imageData, offset, \"16float\", 2);\r\n            return [value[0], value[1]];\r\n        }\r\n\r\n        case \"rgba16uint\": {\r\n            const value = pixelValue(imageData, offset, \"16uint\", 4);\r\n            return [value[0], value[1], value[2], value[3]];\r\n        }\r\n        case \"rgba16sint\": {\r\n            const value = pixelValue(imageData, offset, \"16sint\", 4);\r\n            return [value[0], value[1], value[2], value[3]];\r\n        }\r\n        case \"rgba16float\": {\r\n            const value = pixelValue(imageData, offset, \"16float\", 4);\r\n            return [value[0], value[1], value[2], value[3]];\r\n        }\r\n\r\n        case \"r32uint\": {\r\n            const value = pixelValue(imageData, offset, \"32uint\", 1);\r\n            return [value[0]];\r\n        }\r\n        case \"r32sint\": {\r\n            const value = pixelValue(imageData, offset, \"32sint\", 1);\r\n            return [value[0]];\r\n        }\r\n        case \"depth16unorm\": // depth formats get conerted to r32float\r\n        case \"depth24plus\":\r\n        case \"depth24plus-stencil8\":\r\n        case \"depth32float\":\r\n        case \"depth32float-stencil8\":\r\n        case \"r32float\": {\r\n            const value = pixelValue(imageData, offset, \"32float\", 1);\r\n            return [value[0]];\r\n        }\r\n        case \"rg32uint\": {\r\n            const value = pixelValue(imageData, offset, \"32uint\", 2);\r\n            return [value[0], value[1]];\r\n        }\r\n        case \"rg32sint\": {\r\n            const value = pixelValue(imageData, offset, \"32sint\", 2);\r\n            return [value[0], value[1]];\r\n        }\r\n        case \"rg32float\": {\r\n            const value = pixelValue(imageData, offset, \"32float\", 2);\r\n            return [value[0], value[1]];\r\n        }\r\n        case \"rgba32uint\": {\r\n            const value = pixelValue(imageData, offset, \"32uint\", 4);\r\n            return [value[0], value[1], value[2], value[3]];\r\n        }\r\n        case \"rgba32sint\": {\r\n            const value = pixelValue(imageData, offset, \"32sint\", 4);\r\n            return [value[0], value[1], value[2], value[3]];\r\n        }\r\n        case \"rgba32float\": {\r\n            const value = pixelValue(imageData, offset, \"32float\", 4);\r\n            return [value[0], value[1], value[2], value[3]];\r\n        }\r\n\r\n        case \"rg11b10ufloat\": {\r\n            const uintValue = new Uint32Array(imageData.buffer, offset, 1)[0];\r\n            const ri = uintValue & 0x7FF;\r\n            const gi = (uintValue & 0x3FF800) >> 11;\r\n            const bi = (uintValue & 0xFFC00000) >> 22;\r\n            const rf = float11ToFloat32(ri);\r\n            const gf = float11ToFloat32(gi);\r\n            const bf = float10ToFloat32(bi);\r\n            return [rf, gf, bf, 1.0];\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction pixelValue(imageData: Uint8Array, offset: number, format: string, numChannels: number) {\r\n    const value = [0, 0, 0, 0];\r\n    for (let i = 0; i < numChannels; ++i) {\r\n      switch (format) {\r\n        case \"8unorm\":\r\n          value[i] = imageData[offset] / 255;\r\n          offset++;\r\n          break;\r\n        case \"8snorm\":\r\n          value[i] = (imageData[offset] / 255) * 2 - 1;\r\n          offset++;\r\n          break;\r\n        case \"8uint\":\r\n          value[i] = imageData[offset];\r\n          offset++;\r\n          break;\r\n        case \"8sint\":\r\n          value[i] = imageData[offset] - 127;\r\n          offset++;\r\n          break;\r\n        case \"16uint\":\r\n          value[i] = imageData[offset] | (imageData[offset + 1] << 8);\r\n          offset += 2;\r\n          break;\r\n        case \"16sint\":\r\n          value[i] = (imageData[offset] | (imageData[offset + 1] << 8)) - 32768;\r\n          offset += 2;\r\n          break;\r\n        case \"16float\":\r\n          value[i] = float16ToFloat32(imageData[offset] | (imageData[offset + 1] << 8));\r\n          offset += 2;\r\n          break;\r\n        case \"32uint\":\r\n          value[i] = imageData[offset] | (imageData[offset + 1] << 8) | (imageData[offset + 2] << 16) | (imageData[offset + 3] << 24);\r\n          offset += 4;\r\n          break;\r\n        case \"32sint\":\r\n          value[i] = (imageData[offset] | (imageData[offset + 1] << 8) | (imageData[offset + 2] << 16) | (imageData[offset + 3] << 24)) | 0;\r\n          offset += 4;\r\n          break;\r\n        case \"32float\":\r\n          value[i] = new Float32Array(imageData.buffer, offset, 1)[0];\r\n          offset += 4;\r\n          break;\r\n      }\r\n    }\r\n    return value;\r\n}\r\n\r\nfunction setPixelValue(imageData: Uint8Array, offset: number, format: string, numChannels: number, value: number[]) {\r\n    for (let i = 0; i < numChannels; ++i) {\r\n      switch (format) {\r\n        case \"8unorm\":\r\n          imageData[offset] = value[i] * 255;\r\n          offset++;\r\n          break;\r\n        case \"8snorm\":\r\n          imageData[offset] = ((value[i] + 1.0) * 0.5) * 255;\r\n          offset++;\r\n          break;\r\n        case \"8uint\":\r\n          imageData[offset] = value[i];\r\n          offset++;\r\n          break;\r\n        case \"8sint\":\r\n          imageData[offset] = value[i] + 127;\r\n          offset++;\r\n          break;\r\n        case \"16uint\":\r\n          new Uint16Array(imageData.buffer, offset, 1)[0] = value[i];\r\n          offset += 2;\r\n          break;\r\n        case \"16sint\":\r\n          new Int16Array(imageData.buffer, offset, 1)[0] = value[i];\r\n          offset += 2;\r\n          break;\r\n        case \"16float\": {\r\n          const f16 = float32ToFloat16(value[i]);\r\n          new Uint16Array(imageData.buffer, offset, 1)[0] = f16;\r\n          offset += 2;\r\n          break;\r\n        }\r\n        case \"32uint\":\r\n          new Uint32Array(imageData.buffer, offset, 1)[0] = value[i];\r\n          offset += 4;\r\n          break;\r\n        case \"32sint\":\r\n          new Int32Array(imageData.buffer, offset, 1)[0] = value[i];\r\n          offset += 4;\r\n          break;\r\n        case \"32float\":\r\n          new Float32Array(imageData.buffer, offset, 1)[0] = value[i];\r\n          offset += 4;\r\n          break;\r\n      }\r\n    }\r\n    return value;\r\n}\r\n", "\r\nexport const TextureFormatInfo = {\r\n    \"r8unorm\": { \"bytesPerBlock\": 1, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 1 },\r\n    \"r8snorm\": { \"bytesPerBlock\": 1, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 1 },\r\n    \"r8uint\": { \"bytesPerBlock\": 1, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 1 },\r\n    \"r8sint\": { \"bytesPerBlock\": 1, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 1 },\r\n    \"rg8unorm\": { \"bytesPerBlock\": 2, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 2 },\r\n    \"rg8snorm\": { \"bytesPerBlock\": 2, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 2 },\r\n    \"rg8uint\": { \"bytesPerBlock\": 2, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 2 },\r\n    \"rg8sint\": { \"bytesPerBlock\": 2, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 2 },\r\n\r\n    \"rgba8unorm\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 4 },\r\n    \"rgba8unorm-srgb\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 4 },\r\n    \"rgba8snorm\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 4 },\r\n    \"rgba8uint\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 4 },\r\n    \"rgba8sint\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 4 },\r\n    \"bgra8unorm\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 4 },\r\n    \"bgra8unorm-srgb\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 4 },\r\n\r\n    \"r16uint\": { \"bytesPerBlock\": 2, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 1 },\r\n    \"r16sint\": { \"bytesPerBlock\": 2, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 1 },\r\n    \"r16float\": { \"bytesPerBlock\": 2, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 1 },\r\n\r\n    \"rg16uint\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 2 },\r\n    \"rg16sint\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 2 },\r\n    \"rg16float\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 2 },\r\n\r\n    \"rgba16uint\": { \"bytesPerBlock\": 8, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 4 },\r\n    \"rgba16sint\": { \"bytesPerBlock\": 8, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 4 },\r\n    \"rgba16float\": { \"bytesPerBlock\": 8, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 4 },\r\n\r\n    \"r32uint\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 1 },\r\n    \"r32sint\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 1 },\r\n    \"r32float\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 1 },\r\n\r\n    \"rg32uint\": { \"bytesPerBlock\": 8, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 2 },\r\n    \"rg32sint\": { \"bytesPerBlock\": 8, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 2 },\r\n    \"rg32float\": { \"bytesPerBlock\": 8, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 2 },\r\n\r\n    \"rgba32uint\": { \"bytesPerBlock\": 16, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 4 },\r\n    \"rgba32sint\": { \"bytesPerBlock\": 16, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 4 },\r\n    \"rgba32float\": { \"bytesPerBlock\": 16, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 4 },\r\n    \"rgb10a2uint\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 4 },\r\n    \"rgb10a2unorm\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 4 },\r\n    \"rg11b10ufloat\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 4 },\r\n\r\n    // Depth Stencil Formats\r\n    \"stencil8\": { \"bytesPerBlock\": 1, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"isDepthStencil\": true, \"hasDepth\": false, \"hasStencil\": true, \"channels\": 1 }, // bytesPerBlock is actually 1-4\r\n    \"depth16unorm\": { \"bytesPerBlock\": 2, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"isDepthStencil\": true, \"hasDepth\": true, \"hasStencil\": false, \"channels\": 1 },\r\n    \"depth24plus\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"isDepthStencil\": true, \"hasDepth\": true, \"hasStencil\": false, \"depthOnlyFormat\": \"depth32float\", \"channels\": 1 },\r\n    \"depth24plus-stencil8\": { \"bytesPerBlock\": 8, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"isDepthStencil\": true, \"hasDepth\": true, \"hasStencil\": true, \"depthOnlyFormat\": \"depth32float\", \"channels\": 1 }, // bytesPerBlock is actually 4-8\r\n    \"depth32float\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"isDepthStencil\": true, \"hasDepth\": true, \"hasStencil\": false, \"channels\": 1 },\r\n    \"depth32float-stencil8\": { \"bytesPerBlock\": 8, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"isDepthStencil\": true, \"hasDepth\": true, \"hasStencil\": true, \"stencilOnlyFormat\": \"depth32float\", \"channels\": 1 }, // bytesPerBlock is actually 5-8\r\n\r\n    // Packed Formats\r\n    \"rgb9e5ufloat\": { \"bytesPerBlock\": 4, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": false, \"channels\": 4 },\r\n\r\n    // Compressed Formats\r\n    \"bc1-rgba-unorm\": { \"bytesPerBlock\": 8, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \"bc1-rgba-unorm-srgb\": { \"bytesPerBlock\": 8, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \"bc2-rgba-unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \"bc2-rgba-unorm-srgb\": { \"bytesPerBlock\": 16, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \"bc3-rgba-unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \"bc3-rgba-unorm-srgb\": { \"bytesPerBlock\": 16, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n\r\n    \"bc4-r-unorm\": { \"bytesPerBlock\": 8, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 1 },\r\n    \"bc4-r-snorm\": { \"bytesPerBlock\": 8, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 1 },\r\n\r\n    \"bc5-rg-unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 2 },\r\n    \"bc5-rg-snorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 2 },\r\n\r\n    \"bc6h-rgb-ufloat\": { \"bytesPerBlock\": 16, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \"bc6h-rgb-float\": { \"bytesPerBlock\": 16, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \"bc7-rgba-unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \"bc7-rgba-unorm-srgb\": { \"bytesPerBlock\": 16, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \r\n    \"etc2-rgb8unorm\": { \"bytesPerBlock\": 8, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \"etc2-rgb8unorm-srgb\": { \"bytesPerBlock\": 8, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \"etc2-rgb8a1unorm\": { \"bytesPerBlock\": 8, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \"etc2-rgb8a1unorm-srgb\": { \"bytesPerBlock\": 8, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \"etc2-rgba8unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \"etc2-rgba8unorm-srgb\": { \"bytesPerBlock\": 16, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \r\n    \"eac-r11unorm\": { \"bytesPerBlock\": 8, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": true, \"channels\": 1 },\r\n    \"eac-r11snorm\": { \"bytesPerBlock\": 8, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": true, \"channels\": 1 },\r\n\r\n    \"eac-rg11unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": true, \"channels\": 2 },\r\n    \"eac-rg11snorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 1, \"blockHeight\": 1, \"isCompressed\": true, \"channels\": 2 },\r\n\r\n    \"astc-4x4-unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-4x4-unorm-srgb\": { \"bytesPerBlock\": 16, \"blockWidth\": 4, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-5x4-unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 5, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-5x4-unorm-srgb\": { \"bytesPerBlock\": 16, \"blockWidth\": 5, \"blockHeight\": 4, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-5x5-unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 5, \"blockHeight\": 5, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-5x5-unorm-srgb\": { \"bytesPerBlock\": 16, \"blockWidth\": 5, \"blockHeight\": 5, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-6x5-unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 6, \"blockHeight\": 5, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-6x5-unorm-srgb\": { \"bytesPerBlock\": 16, \"blockWidth\": 6, \"blockHeight\": 5, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-6x6-unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 6, \"blockHeight\": 6, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-6x6-unorm-srgb\": { \"bytesPerBlock\": 16, \"blockWidth\": 6, \"blockHeight\": 6, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-8x5-unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 8, \"blockHeight\": 5, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-8x5-unorm-srgb\": { \"bytesPerBlock\": 16, \"blockWidth\": 8, \"blockHeight\": 5, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-8x6-unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 8, \"blockHeight\": 6, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-8x6-unorm-srgb\": { \"bytesPerBlock\": 16, \"blockWidth\": 8, \"blockHeight\": 6, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-8x8-unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 8, \"blockHeight\": 8, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-8x8-unorm-srgb\": { \"bytesPerBlock\": 16, \"blockWidth\": 8, \"blockHeight\": 8, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-10x5-unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 10, \"blockHeight\": 5, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-10x5-unorm-srgb\": { \"bytesPerBlock\": 16, \"blockWidth\": 10, \"blockHeight\": 5, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-10x6-unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 10, \"blockHeight\": 6, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-10x6-unorm-srgb\": { \"bytesPerBlock\": 16, \"blockWidth\": 10, \"blockHeight\": 6, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-10x8-unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 10, \"blockHeight\": 8, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-10x8-unorm-srgb\": { \"bytesPerBlock\": 16, \"blockWidth\": 10, \"blockHeight\": 8, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-10x10-unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 10, \"blockHeight\": 10, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-10x10-unorm-srgb\": { \"bytesPerBlock\": 16, \"blockWidth\": 10, \"blockHeight\": 10, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-12x10-unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 12, \"blockHeight\": 10, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-12x10-unorm-srgb\": { \"bytesPerBlock\": 16, \"blockWidth\": 12, \"blockHeight\": 10, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-12x12-unorm\": { \"bytesPerBlock\": 16, \"blockWidth\": 12, \"blockHeight\": 12, \"isCompressed\": true, \"channels\": 4 },\r\n    \"astc-12x12-unorm-srgb\": { \"bytesPerBlock\": 16, \"blockWidth\": 12, \"blockHeight\": 12, \"isCompressed\": true, \"channels\": 4 },\r\n};\r\n", "import { WgslExec } from \"./wgsl_exec.js\";\r\nimport { TypeInfo, PointerInfo, TemplateInfo, ArrayInfo, StructInfo } from \"./reflect/info.js\";\r\nimport { ExecContext } from \"./exec/exec_context.js\";\r\nimport { ExecInterface } from \"./exec/exec_interface.js\";\r\nimport { setTexturePixel, getTexturePixel } from \"./utils/texture_sample.js\";\r\nimport { TextureFormatInfo } from \"./utils/texture_format_info.js\";\r\n\r\n/**\r\n * @class Node\r\n * @category AST\r\n * Base class for AST nodes parsed from a WGSL shader.\r\n */\r\nexport class Node {\r\n  static _id = 0;\r\n\r\n  id: number;\r\n  line: number;\r\n\r\n  constructor() {\r\n    this.id = Node._id++;\r\n    this.line = 0;\r\n  }\r\n\r\n  get isAstNode(): boolean {\r\n    return true;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    callback(this);\r\n  }\r\n\r\n  searchBlock(block: Node[] | null, callback: (node: Node) => void): void {\r\n    if (block) {\r\n      callback(_BlockStart.instance);\r\n      for (const node of block) {\r\n        if (node instanceof Array) {\r\n          this.searchBlock(node as Node[], callback);\r\n        } else {\r\n          node.search(callback);\r\n        }\r\n      }\r\n      callback(_BlockEnd.instance);\r\n    }\r\n  }\r\n\r\n  constEvaluate(context: WgslExec, type?: Type[]): Data | null {\r\n    throw new Error(\"Cannot evaluate node\");\r\n  }\r\n\r\n  constEvaluateString(context: WgslExec): string {\r\n    return this.constEvaluate(context).toString();\r\n  } \r\n}\r\n\r\n// For internal use only\r\nexport class _BlockStart extends Node {\r\n  static instance = new _BlockStart();\r\n}\r\n\r\n // For internal use only\r\nexport class _BlockEnd extends Node {\r\n  static instance = new _BlockEnd();\r\n}\r\n\r\nconst BuiltinFunctionNames = new Set([\r\n  \"all\",\r\n  \"all\",\r\n  \"any\",\r\n  \"select\",\r\n  \"arrayLength\",\r\n  \"abs\",\r\n  \"acos\",\r\n  \"acosh\",\r\n  \"asin\",\r\n  \"asinh\",\r\n  \"atan\",\r\n  \"atanh\",\r\n  \"atan2\",\r\n  \"ceil\",\r\n  \"clamp\",\r\n  \"cos\",\r\n  \"cosh\",\r\n  \"countLeadingZeros\",\r\n  \"countOneBits\",\r\n  \"countTrailingZeros\",\r\n  \"cross\",\r\n  \"degrees\",\r\n  \"determinant\",\r\n  \"distance\",\r\n  \"dot\",\r\n  \"dot4U8Packed\",\r\n  \"dot4I8Packed\",\r\n  \"exp\",\r\n  \"exp2\",\r\n  \"extractBits\",\r\n  \"faceForward\",\r\n  \"firstLeadingBit\",\r\n  \"firstTrailingBit\",\r\n  \"floor\",\r\n  \"fma\",\r\n  \"fract\",\r\n  \"frexp\",\r\n  \"insertBits\",\r\n  \"inverseSqrt\",\r\n  \"ldexp\",\r\n  \"length\",\r\n  \"log\",\r\n  \"log2\",\r\n  \"max\",\r\n  \"min\",\r\n  \"mix\",\r\n  \"modf\",\r\n  \"normalize\",\r\n  \"pow\",\r\n  \"quantizeToF16\",\r\n  \"radians\",\r\n  \"reflect\",\r\n  \"refract\",\r\n  \"reverseBits\",\r\n  \"round\",\r\n  \"saturate\",\r\n  \"sign\",\r\n  \"sin\",\r\n  \"sinh\",\r\n  \"smoothStep\",\r\n  \"sqrt\",\r\n  \"step\",\r\n  \"tan\",\r\n  \"tanh\",\r\n  \"transpose\",\r\n  \"trunc\",\r\n  \"dpdx\",\r\n  \"dpdxCoarse\",\r\n  \"dpdxFine\",\r\n  \"dpdy\",\r\n  \"dpdyCoarse\",\r\n  \"dpdyFine\",\r\n  \"fwidth\",\r\n  \"fwidthCoarse\",\r\n  \"fwidthFine\",\r\n  \"textureDimensions\",\r\n  \"textureGather\",\r\n  \"textureGatherCompare\",\r\n  \"textureLoad\",\r\n  \"textureNumLayers\",\r\n  \"textureNumLevels\",\r\n  \"textureNumSamples\",\r\n  \"textureSample\",\r\n  \"textureSampleBias\",\r\n  \"textureSampleCompare\",\r\n  \"textureSampleCompareLevel\",\r\n  \"textureSampleGrad\",\r\n  \"textureSampleLevel\",\r\n  \"textureSampleBaseClampToEdge\",\r\n  \"textureStore\",\r\n  \"atomicLoad\",\r\n  \"atomicStore\",\r\n  \"atomicAdd\",\r\n  \"atomicSub\",\r\n  \"atomicMax\",\r\n  \"atomicMin\",\r\n  \"atomicAnd\",\r\n  \"atomicOr\",\r\n  \"atomicXor\",\r\n  \"atomicExchange\",\r\n  \"atomicCompareExchangeWeak\",\r\n  \"pack4x8snorm\",\r\n  \"pack4x8unorm\",\r\n  \"pack4xI8\",\r\n  \"pack4xU8\",\r\n  \"pack4x8Clamp\",\r\n  \"pack4xU8Clamp\",\r\n  \"pack2x16snorm\",\r\n  \"pack2x16unorm\",\r\n  \"pack2x16float\",\r\n  \"unpack4x8snorm\",\r\n  \"unpack4x8unorm\",\r\n  \"unpack4xI8\",\r\n  \"unpack4xU8\",\r\n  \"unpack2x16snorm\",\r\n  \"unpack2x16unorm\",\r\n  \"unpack2x16float\",\r\n  \"storageBarrier\",\r\n  \"textureBarrier\",\r\n  \"workgroupBarrier\",\r\n  \"workgroupUniformLoad\",\r\n  \"subgroupAdd\",\r\n  \"subgroupExclusiveAdd\",\r\n  \"subgroupInclusiveAdd\",\r\n  \"subgroupAll\",\r\n  \"subgroupAnd\",\r\n  \"subgroupAny\",\r\n  \"subgroupBallot\",\r\n  \"subgroupBroadcast\",\r\n  \"subgroupBroadcastFirst\",\r\n  \"subgroupElect\",\r\n  \"subgroupMax\",\r\n  \"subgroupMin\",\r\n  \"subgroupMul\",\r\n  \"subgroupExclusiveMul\",\r\n  \"subgroupInclusiveMul\",\r\n  \"subgroupOr\",\r\n  \"subgroupShuffle\",\r\n  \"subgroupShuffleDown\",\r\n  \"subgroupShuffleUp\",\r\n  \"subgroupShuffleXor\",\r\n  \"subgroupXor\",\r\n  \"quadBroadcast\",\r\n  \"quadSwapDiagonal\",\r\n  \"quadSwapX\",\r\n  \"quadSwapY\",\r\n]);\r\n\r\n/**\r\n * @class Statement\r\n * @extends Node\r\n * @category AST\r\n */\r\nexport class Statement extends Node {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\n/**\r\n * @class Function\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Function extends Statement {\r\n  name: string;\r\n  args: Argument[];\r\n  returnType: Type | null;\r\n  body: Statement[];\r\n  attributes: Attribute[] | null;\r\n  startLine: number;\r\n  endLine: number;\r\n  calls: Set<Function> = new Set();\r\n\r\n  constructor(\r\n    name: string,\r\n    args: Argument[],\r\n    returnType: Type | null,\r\n    body: Statement[],\r\n    startLine: number,\r\n    endLine: number\r\n  ) {\r\n    super();\r\n    this.name = name;\r\n    this.args = args;\r\n    this.returnType = returnType;\r\n    this.body = body;\r\n    this.startLine = startLine;\r\n    this.endLine = endLine;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"function\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    if (this.attributes) {\r\n      for (const attr of this.attributes) {\r\n        callback(attr);\r\n      }\r\n    }\r\n    callback(this);\r\n    for (const arg of this.args) {\r\n      callback(arg);\r\n    }\r\n    this.searchBlock(this.body, callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class StaticAssert\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class StaticAssert extends Statement {\r\n  expression: Expression;\r\n\r\n  constructor(expression: Expression) {\r\n    super();\r\n    this.expression = expression;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"staticAssert\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.expression.search(callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class While\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class While extends Statement {\r\n  condition: Expression;\r\n  body: Statement[];\r\n\r\n  constructor(condition: Expression, body: Statement[]) {\r\n    super();\r\n    this.condition = condition;\r\n    this.body = body;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"while\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.condition.search(callback);\r\n    this.searchBlock(this.body, callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class Continuing\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Continuing extends Statement {\r\n  body: Statement[];\r\n  loopId: number;\r\n\r\n  constructor(body: Statement[], loopId: number) {\r\n    super();\r\n    this.body = body;\r\n    this.loopId = loopId;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"continuing\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.searchBlock(this.body, callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class For\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class For extends Statement {\r\n  init: Statement | null;\r\n  condition: Expression | null;\r\n  increment: Statement | null;\r\n  body: Statement[];\r\n\r\n  constructor(\r\n    init: Statement | null,\r\n    condition: Expression | null,\r\n    increment: Statement | null,\r\n    body: Statement[]\r\n  ) {\r\n    super();\r\n    this.init = init;\r\n    this.condition = condition;\r\n    this.increment = increment;\r\n    this.body = body;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"for\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.init?.search(callback);\r\n    this.condition?.search(callback);\r\n    this.increment?.search(callback);\r\n    this.searchBlock(this.body, callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class Var\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Var extends Statement {\r\n  name: string;\r\n  type: Type | null;\r\n  storage: string | null;\r\n  access: string | null;\r\n  value: Expression | null;\r\n  attributes: Attribute[] | null = null;\r\n\r\n  constructor(\r\n    name: string,\r\n    type: Type | null,\r\n    storage: string | null,\r\n    access: string | null,\r\n    value: Expression | null\r\n  ) {\r\n    super();\r\n    this.name = name;\r\n    this.type = type;\r\n    this.storage = storage;\r\n    this.access = access;\r\n    this.value = value;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"var\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    callback(this);\r\n    this.value?.search(callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class Override\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Override extends Statement {\r\n  name: string;\r\n  type: Type | null;\r\n  value: Expression | null;\r\n  attributes: Attribute[] | null = null;\r\n\r\n  constructor(name: string, type: Type | null, value: Expression | null) {\r\n    super();\r\n    this.name = name;\r\n    this.type = type;\r\n    this.value = value;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"override\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.value?.search(callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class Let\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Let extends Statement {\r\n  name: string;\r\n  type: Type | null;\r\n  storage: string | null;\r\n  access: string | null;\r\n  value: Expression | null;\r\n  attributes: Attribute[] | null = null;\r\n\r\n  constructor(\r\n    name: string,\r\n    type: Type | null,\r\n    storage: string | null,\r\n    access: string | null,\r\n    value: Expression | null\r\n  ) {\r\n    super();\r\n    this.name = name;\r\n    this.type = type;\r\n    this.storage = storage;\r\n    this.access = access;\r\n    this.value = value;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"let\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    callback(this);\r\n    this.value?.search(callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class Const\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Const extends Statement {\r\n  name: string;\r\n  type: Type | null;\r\n  storage: string | null;\r\n  access: string | null;\r\n  value: Expression;\r\n  attributes: Attribute[] | null = null;\r\n\r\n  constructor(\r\n    name: string,\r\n    type: Type | null,\r\n    storage: string | null,\r\n    access: string | null,\r\n    value: Expression\r\n  ) {\r\n    super();\r\n    this.name = name;\r\n    this.type = type;\r\n    this.storage = storage;\r\n    this.access = access;\r\n    this.value = value;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"const\";\r\n  }\r\n\r\n  constEvaluate(context: WgslExec, type?: Type[]): Data | null {\r\n    return this.value.constEvaluate(context, type);\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    callback(this);\r\n    this.value?.search(callback);\r\n  }\r\n}\r\n\r\nexport enum IncrementOperator {\r\n  increment = \"++\",\r\n  decrement = \"--\",\r\n}\r\n\r\nexport namespace IncrementOperator {\r\n  export function parse(val: string): IncrementOperator {\r\n    const key = val as keyof typeof IncrementOperator;\r\n    if (key == \"parse\") throw new Error(\"Invalid value for IncrementOperator\");\r\n    return IncrementOperator[key];\r\n  }\r\n}\r\n\r\n/**\r\n * @class Increment\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Increment extends Statement {\r\n  operator: IncrementOperator;\r\n  variable: Expression;\r\n\r\n  constructor(operator: IncrementOperator, variable: Expression) {\r\n    super();\r\n    this.operator = operator;\r\n    this.variable = variable;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"increment\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.variable.search(callback);\r\n  }\r\n}\r\n\r\nexport enum AssignOperator {\r\n  assign = \"=\",\r\n  addAssign = \"+=\",\r\n  subtractAssin = \"-=\",\r\n  multiplyAssign = \"*=\",\r\n  divideAssign = \"/=\",\r\n  moduloAssign = \"%=\",\r\n  andAssign = \"&=\",\r\n  orAssign = \"|=\",\r\n  xorAssign = \"^=\",\r\n  shiftLeftAssign = \"<<=\",\r\n  shiftRightAssign = \">>=\",\r\n}\r\n\r\nexport namespace AssignOperator {\r\n  export function parse(val: string): AssignOperator {\r\n    const key = val as keyof typeof AssignOperator;\r\n    if (key == \"parse\") {\r\n      throw new Error(\"Invalid value for AssignOperator\");\r\n    }\r\n    //return AssignOperator[key];\r\n    return key as AssignOperator;\r\n  }\r\n}\r\n\r\n/**\r\n * @class Assign\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Assign extends Statement {\r\n  operator: AssignOperator;\r\n  variable: Expression;\r\n  value: Expression;\r\n\r\n  constructor(\r\n    operator: AssignOperator,\r\n    variable: Expression,\r\n    value: Expression\r\n  ) {\r\n    super();\r\n    this.operator = operator;\r\n    this.variable = variable;\r\n    this.value = value;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"assign\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.variable.search(callback);\r\n    this.value.search(callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class Call\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Call extends Statement {\r\n  name: string;\r\n  args: Expression[];\r\n\r\n  constructor(name: string, args: Expression[]) {\r\n    super();\r\n    this.name = name;\r\n    this.args = args;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"call\";\r\n  }\r\n\r\n  isBuiltin(): boolean {\r\n    return BuiltinFunctionNames.has(this.name);\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    for (const node of this.args) {\r\n      node.search(callback);\r\n    }\r\n    callback(this);\r\n  }\r\n}\r\n\r\n/**\r\n * @class Loop\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Loop extends Statement {\r\n  body: Statement[];\r\n  continuing: Continuing | null;\r\n\r\n  constructor(body: Statement[], continuing: Continuing | null) {\r\n    super();\r\n    this.body = body;\r\n    this.continuing = continuing;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"loop\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.searchBlock(this.body, callback);\r\n    this.continuing?.search(callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class Switch\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Switch extends Statement {\r\n  condition: Expression;\r\n  cases: SwitchCase[];\r\n\r\n  constructor(condition: Expression, cases: SwitchCase[]) {\r\n    super();\r\n    this.condition = condition;\r\n    this.cases = cases;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"switch\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    callback(this);\r\n    for (const node of this.cases) {\r\n      node.search(callback);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @class If\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class If extends Statement {\r\n  condition: Expression;\r\n  body: Statement[];\r\n  elseif: ElseIf[] | null;\r\n  else: Statement[] | null;\r\n\r\n  constructor(\r\n    condition: Expression,\r\n    body: Statement[],\r\n    elseif: ElseIf[] | null,\r\n    _else: Statement[] | null\r\n  ) {\r\n    super();\r\n    this.condition = condition;\r\n    this.body = body;\r\n    this.elseif = elseif;\r\n    this.else = _else;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"if\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.condition.search(callback);\r\n    this.searchBlock(this.body, callback);\r\n    this.searchBlock(this.elseif, callback);\r\n    this.searchBlock(this.else, callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class Return\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Return extends Statement {\r\n  value: Expression;\r\n\r\n  constructor(value: Expression) {\r\n    super();\r\n    this.value = value;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"return\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.value?.search(callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class Enable\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Enable extends Statement {\r\n  name: string;\r\n\r\n  constructor(name: string) {\r\n    super();\r\n    this.name = name;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"enable\";\r\n  }\r\n}\r\n\r\n/**\r\n * @class Requires\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Requires extends Statement {\r\n  extensions: string[];\r\n\r\n  constructor(extensions: string[]) {\r\n    super();\r\n    this.extensions = extensions;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"requires\";\r\n  }\r\n}\r\n\r\n/**\r\n * @class Diagnostic\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Diagnostic extends Statement {\r\n  severity: string;\r\n  rule: string;\r\n\r\n  constructor(severity: string, rule: string) {\r\n    super();\r\n    this.severity = severity;\r\n    this.rule = rule;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"diagnostic\";\r\n  }\r\n}\r\n\r\n/**\r\n * @class Alias\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Alias extends Statement {\r\n  name: string;\r\n  type: Type;\r\n\r\n  constructor(name: string, type: Type) {\r\n    super();\r\n    this.name = name;\r\n    this.type = type;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"alias\";\r\n  }\r\n}\r\n\r\n/**\r\n * @class Discard\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Discard extends Statement {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"discard\";\r\n  }\r\n}\r\n\r\n/**\r\n * @class Break\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Break extends Statement {\r\n  condition: Expression | null = null;\r\n  loopId: number = -1;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"break\";\r\n  }\r\n}\r\n\r\n/**\r\n * @class Continue\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Continue extends Statement {\r\n  loopId: number = -1;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"continue\";\r\n  }\r\n}\r\n\r\n/**\r\n * @class Type\r\n * @extends Statement\r\n * @category AST\r\n */\r\nexport class Type extends Statement {\r\n  name: string;\r\n  attributes: Attribute[] | null = null;\r\n\r\n  constructor(name: string) {\r\n    super();\r\n    this.name = name;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"type\";\r\n  }\r\n\r\n  get isStruct(): boolean {\r\n    return false;\r\n  }\r\n\r\n  get isArray(): boolean {\r\n    return false;\r\n  }\r\n\r\n  static x32 = new Type(\"x32\");\r\n  static f32 = new Type(\"f32\");\r\n  static i32 = new Type(\"i32\");\r\n  static u32 = new Type(\"u32\");\r\n  static f16 = new Type(\"f16\");\r\n  static bool = new Type(\"bool\");\r\n  static void = new Type(\"void\");\r\n\r\n  static _priority = new Map<string, number>([[\"f32\", 0], [\"f16\", 1], [\"u32\", 2], [\"i32\", 3], [\"x32\", 3]]);\r\n\r\n  static maxFormatType(x: Type[]): Type {\r\n    let t = x[0];\r\n    if (t.name === \"f32\") {\r\n      return t;\r\n    }\r\n    for (let i = 1; i < x.length; ++i) {\r\n      const tv = Type._priority.get(t.name);\r\n      const xv = Type._priority.get(x[i].name);\r\n      if (xv < tv) {\r\n        t = x[i];\r\n      }\r\n    }\r\n\r\n    if (t.name === \"x32\") {\r\n      return Type.i32;\r\n    }\r\n\r\n    return t;\r\n  }\r\n\r\n  getTypeName(): string {\r\n    return this.name;\r\n  }\r\n}\r\n\r\n/**\r\n * @class ForwardType\r\n * @extends Type\r\n * @category AST\r\n * Internal type used as a placeholder for a type being used before it has been defined.\r\n */\r\nexport class ForwardType extends Type {\r\n  constructor(name: string) {\r\n    super(name);\r\n  }\r\n}\r\n\r\n/**\r\n * @class StructType\r\n * @extends Type\r\n * @category AST\r\n */\r\nexport class Struct extends Type {\r\n  members: Member[];\r\n  startLine: number;\r\n  endLine: number;\r\n\r\n  constructor(name: string, members: Member[], startLine: number, endLine: number) {\r\n    super(name);\r\n    this.members = members;\r\n    this.startLine = startLine;\r\n    this.endLine = endLine;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"struct\";\r\n  }\r\n\r\n  get isStruct(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /// Return the index of the member with the given name, or -1 if not found.\r\n  getMemberIndex(name: string): number {\r\n    for (let i = 0; i < this.members.length; i++) {\r\n      if (this.members[i].name == name) return i;\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    for (const member of this.members) {\r\n      callback(member);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @class TemplateType\r\n * @extends Type\r\n * @category AST\r\n */\r\nexport class TemplateType extends Type {\r\n  format: Type | null;\r\n  access: string | null;\r\n\r\n  constructor(name: string, format: Type | null, access: string | null) {\r\n    super(name);\r\n    this.format = format;\r\n    this.access = access;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"template\";\r\n  }\r\n\r\n  getTypeName(): string {\r\n    let name = this.name;\r\n    if (this.format !== null) {\r\n      if (name === \"vec2\" || name === \"vec3\" || name === \"vec4\" ||\r\n          name === \"mat2x2\" || name === \"mat2x3\" || name === \"mat2x4\" ||\r\n          name === \"mat3x2\" || name === \"mat3x3\" || name === \"mat3x4\" ||\r\n          name === \"mat4x2\" || name === \"mat4x3\" || name === \"mat4x4\") {\r\n        if (this.format.name === \"f32\") {\r\n          name += \"f\";\r\n          return name;\r\n        } else if (this.format.name === \"i32\") {\r\n          name += \"i\";\r\n          return name;\r\n        } else if (this.format.name === \"u32\") {\r\n          name += \"u\";\r\n          return name;\r\n        } else if (this.format.name === \"bool\") {\r\n          name += \"b\";\r\n          return name;\r\n        } else if (this.format.name === \"f16\") {\r\n          name += \"h\";\r\n          return name;\r\n        }\r\n      }\r\n      name += `<${this.format.name}>`;\r\n    } else {\r\n      if (name === \"vec2\" || name === \"vec3\" || name === \"vec4\") {\r\n        return name;\r\n      }\r\n      //console.error(\"Template format is null.\");\r\n    }\r\n    return name;\r\n  }\r\n\r\n  static vec2f = new TemplateType(\"vec2\", Type.f32, null);\r\n  static vec3f = new TemplateType(\"vec3\", Type.f32, null);\r\n  static vec4f = new TemplateType(\"vec4\", Type.f32, null);\r\n  static vec2i = new TemplateType(\"vec2\", Type.i32, null);\r\n  static vec3i = new TemplateType(\"vec3\", Type.i32, null);\r\n  static vec4i = new TemplateType(\"vec4\", Type.i32, null);\r\n  static vec2u = new TemplateType(\"vec2\", Type.u32, null);\r\n  static vec3u = new TemplateType(\"vec3\", Type.u32, null);\r\n  static vec4u = new TemplateType(\"vec4\", Type.u32, null);\r\n  static vec2h = new TemplateType(\"vec2\", Type.f16, null);\r\n  static vec3h = new TemplateType(\"vec3\", Type.f16, null);\r\n  static vec4h = new TemplateType(\"vec4\", Type.f16, null);\r\n  static vec2b = new TemplateType(\"vec2\", Type.bool, null);\r\n  static vec3b = new TemplateType(\"vec3\", Type.bool, null);\r\n  static vec4b = new TemplateType(\"vec4\", Type.bool, null);\r\n\r\n  static mat2x2f = new TemplateType(\"mat2x2\", Type.f32, null);\r\n  static mat2x3f = new TemplateType(\"mat2x3\", Type.f32, null);\r\n  static mat2x4f = new TemplateType(\"mat2x4\", Type.f32, null);\r\n  static mat3x2f = new TemplateType(\"mat3x2\", Type.f32, null);\r\n  static mat3x3f = new TemplateType(\"mat3x3\", Type.f32, null);\r\n  static mat3x4f = new TemplateType(\"mat3x4\", Type.f32, null);\r\n  static mat4x2f = new TemplateType(\"mat4x2\", Type.f32, null);\r\n  static mat4x3f = new TemplateType(\"mat4x3\", Type.f32, null);\r\n  static mat4x4f = new TemplateType(\"mat4x4\", Type.f32, null);\r\n\r\n  static mat2x2h = new TemplateType(\"mat2x2\", Type.f16, null);\r\n  static mat2x3h = new TemplateType(\"mat2x3\", Type.f16, null);\r\n  static mat2x4h = new TemplateType(\"mat2x4\", Type.f16, null);\r\n  static mat3x2h = new TemplateType(\"mat3x2\", Type.f16, null);\r\n  static mat3x3h = new TemplateType(\"mat3x3\", Type.f16, null);\r\n  static mat3x4h = new TemplateType(\"mat3x4\", Type.f16, null);\r\n  static mat4x2h = new TemplateType(\"mat4x2\", Type.f16, null);\r\n  static mat4x3h = new TemplateType(\"mat4x3\", Type.f16, null);\r\n  static mat4x4h = new TemplateType(\"mat4x4\", Type.f16, null);\r\n\r\n  static mat2x2i = new TemplateType(\"mat2x2\", Type.i32, null);\r\n  static mat2x3i = new TemplateType(\"mat2x3\", Type.i32, null);\r\n  static mat2x4i = new TemplateType(\"mat2x4\", Type.i32, null);\r\n  static mat3x2i = new TemplateType(\"mat3x2\", Type.i32, null);\r\n  static mat3x3i = new TemplateType(\"mat3x3\", Type.i32, null);\r\n  static mat3x4i = new TemplateType(\"mat3x4\", Type.i32, null);\r\n  static mat4x2i = new TemplateType(\"mat4x2\", Type.i32, null);\r\n  static mat4x3i = new TemplateType(\"mat4x3\", Type.i32, null);\r\n  static mat4x4i = new TemplateType(\"mat4x4\", Type.i32, null);\r\n\r\n  static mat2x2u = new TemplateType(\"mat2x2\", Type.u32, null);\r\n  static mat2x3u = new TemplateType(\"mat2x3\", Type.u32, null);\r\n  static mat2x4u = new TemplateType(\"mat2x4\", Type.u32, null);\r\n  static mat3x2u = new TemplateType(\"mat3x2\", Type.u32, null);\r\n  static mat3x3u = new TemplateType(\"mat3x3\", Type.u32, null);\r\n  static mat3x4u = new TemplateType(\"mat3x4\", Type.u32, null);\r\n  static mat4x2u = new TemplateType(\"mat4x2\", Type.u32, null);\r\n  static mat4x3u = new TemplateType(\"mat4x3\", Type.u32, null);\r\n  static mat4x4u = new TemplateType(\"mat4x4\", Type.u32, null);\r\n}\r\n\r\n/**\r\n * @class PointerType\r\n * @extends Type\r\n * @category AST\r\n */\r\nexport class PointerType extends Type {\r\n  storage: string;\r\n  type: Type | null;\r\n  access: string | null;\r\n\r\n  constructor(\r\n    name: string,\r\n    storage: string,\r\n    type: Type | null,\r\n    access: string | null\r\n  ) {\r\n    super(name);\r\n    this.storage = storage;\r\n    this.type = type;\r\n    this.access = access;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"pointer\";\r\n  }\r\n}\r\n\r\n/**\r\n * @class ArrayType\r\n * @extends Type\r\n * @category AST\r\n */\r\nexport class ArrayType extends Type {\r\n  attributes: Attribute[] | null;\r\n  format: Type | null;\r\n  count: number;\r\n\r\n  constructor(\r\n    name: string,\r\n    attributes: Attribute[] | null,\r\n    format: Type | null,\r\n    count: number\r\n  ) {\r\n    super(name);\r\n    this.attributes = attributes;\r\n    this.format = format;\r\n    this.count = count;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"array\";\r\n  }\r\n\r\n  get isArray(): boolean {\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * @class SamplerType\r\n * @extends Type\r\n * @category AST\r\n */\r\nexport class SamplerType extends Type {\r\n  format: Type | string | null;\r\n  access: string | null;\r\n\r\n  constructor(\r\n    name: string,\r\n    format: Type | string | null,\r\n    access: string | null\r\n  ) {\r\n    super(name);\r\n    this.format = format;\r\n    this.access = access;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"sampler\";\r\n  }\r\n}\r\n\r\n/**\r\n * @class Expression\r\n * @extends Node\r\n * @category AST\r\n */\r\nexport class Expression extends Node {\r\n  postfix: Expression | null = null;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\n/**\r\n * @class StringExpr\r\n * @extends Expression\r\n * @category AST\r\n */\r\nexport class StringExpr extends Expression {\r\n  value: string;\r\n\r\n  constructor(value: string) {\r\n    super();\r\n    this.value = value;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"stringExpr\";\r\n  }\r\n\r\n  toString(): string {\r\n    return this.value;\r\n  }\r\n\r\n  constEvaluateString(): string {\r\n    return this.value;\r\n  }\r\n}\r\n\r\n/**\r\n * @class CreateExpr\r\n * @extends Expression\r\n * @category AST\r\n */\r\nexport class CreateExpr extends Expression {\r\n  type: Type | null;\r\n  args: Expression[] | null;\r\n\r\n  constructor(type: Type | null, args: Expression[] | null) {\r\n    super();\r\n    this.type = type;\r\n    this.args = args;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"createExpr\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    callback(this);\r\n    if (this.args) {\r\n      for (const node of this.args) {\r\n        node.search(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  constEvaluate(context: WgslExec, type?: Type[]): Data | null {\r\n    if (type) {\r\n      type[0] = this.type;\r\n    }\r\n    return context.evalExpression(this, context.context);\r\n  }\r\n}\r\n\r\n/**\r\n * @class CallExpr\r\n * @extends Expression\r\n * @category AST\r\n */\r\nexport class CallExpr extends Expression {\r\n  name: string;\r\n  args: Expression[] | null;\r\n  cachedReturnValue: any = null;\r\n\r\n  constructor(name: string, args: Expression[] | null) {\r\n    super();\r\n    this.name = name;\r\n    this.args = args;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"callExpr\";\r\n  }\r\n\r\n  setCachedReturnValue(value: any): void {\r\n    this.cachedReturnValue = value;\r\n  }\r\n\r\n  get isBuiltin(): boolean {\r\n    return BuiltinFunctionNames.has(this.name);\r\n  }\r\n\r\n  constEvaluate(context: WgslExec, type?: Type[]): Data {\r\n    return context.evalExpression(this, context.context);\r\n  }\r\n\r\n  search(callback: (node: Node) => void) {\r\n    for (const node of this.args) {\r\n      node.search(callback);\r\n    }\r\n    callback(this);\r\n  }\r\n}\r\n\r\n/**\r\n * @class VariableExpr\r\n * @extends Expression\r\n * @category AST\r\n */\r\nexport class VariableExpr extends Expression {\r\n  name: string;\r\n\r\n  constructor(name: string) {\r\n    super();\r\n    this.name = name;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"varExpr\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void) {\r\n    callback(this);\r\n    if (this.postfix) {\r\n      this.postfix.search(callback);\r\n    }\r\n  }\r\n\r\n  constEvaluate(context: WgslExec, type?: Type[]): Data {\r\n    return context.evalExpression(this, context.context);\r\n  }\r\n}\r\n\r\n/**\r\n * @class ConstExpr\r\n * @extends Expression\r\n * @category AST\r\n */\r\nexport class ConstExpr extends Expression {\r\n  name: string;\r\n  initializer: Expression;\r\n\r\n  constructor(name: string, initializer: Expression) {\r\n    super();\r\n    this.name = name;\r\n    this.initializer = initializer;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"constExpr\";\r\n  }\r\n\r\n  constEvaluate(context: WgslExec, type?: Type[]): Data | null {\r\n    if (this.initializer) {\r\n      const data = context.evalExpression(this.initializer, context.context);\r\n      if (data !== null && this.postfix) {\r\n        return data.getSubData(context, this.postfix, context.context);\r\n      }\r\n      return data;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.initializer.search(callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class LiteralExpr\r\n * @extends Expression\r\n * @category AST\r\n */\r\nexport class LiteralExpr extends Expression {\r\n  value: Data\r\n  type: Type;\r\n\r\n  constructor(value: Data, type: Type) {\r\n    super();\r\n    this.value = value;\r\n    this.type = type;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"literalExpr\";\r\n  }\r\n\r\n  constEvaluate(context: WgslExec, type?: Type[]): Data | null {\r\n    if (type !== undefined) {\r\n      type[0] = this.type;\r\n    }\r\n    return this.value;\r\n  }\r\n\r\n  get isScalar(): boolean {\r\n    return this.value instanceof ScalarData;\r\n  }\r\n\r\n  get isVector(): boolean {\r\n    return this.value instanceof VectorData || this.value instanceof MatrixData;\r\n  }\r\n\r\n  get scalarValue(): number {\r\n    if (this.value instanceof ScalarData) {\r\n      return this.value.value;\r\n    }\r\n    console.error(\"Value is not scalar.\");\r\n    return 0.0;\r\n  }\r\n\r\n  get vectorValue(): Float32Array | Int32Array | Uint32Array {\r\n    if (this.value instanceof VectorData) {\r\n      return this.value.data;\r\n    }\r\n    if (this.value instanceof MatrixData) {\r\n      return this.value.data;\r\n    }\r\n    console.error(\"Value is not a vector or matrix.\");\r\n    return new Float32Array(0);\r\n  }\r\n}\r\n\r\n/**\r\n * @class BitcastExpr\r\n * @extends Expression\r\n * @category AST\r\n */\r\nexport class BitcastExpr extends Expression {\r\n  type: Type | null;\r\n  value: Expression;\r\n\r\n  constructor(type: Type | null, value: Expression) {\r\n    super();\r\n    this.type = type;\r\n    this.value = value;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"bitcastExpr\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.value.search(callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class TypecastExpr\r\n * @extends Expression\r\n * @category AST\r\n */\r\nexport class TypecastExpr extends Expression {\r\n  type: Type | null;\r\n  args: Expression[] | null;\r\n\r\n  constructor(type: Type | null, args: Expression[] | null) {\r\n    super();\r\n    this.type = type;\r\n    this.args = args;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"typecastExpr\";\r\n  }\r\n\r\n  constEvaluate(context: WgslExec, type?: Type[]): Data | null {\r\n    return context.evalExpression(this, context.context);\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.searchBlock(this.args, callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class ArrayIndex\r\n * @extends Expression\r\n * @category AST\r\n */\r\nexport class ArrayIndex extends Expression {\r\n  index: Expression;\r\n  constructor(index: Expression) {\r\n    super();\r\n    this.index = index;\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.index.search(callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class Operator\r\n * @extends Expression\r\n * @category AST\r\n */\r\nexport class Operator extends Expression {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\n/**\r\n * @class UnaryOperator\r\n * @extends Operator\r\n * @category AST\r\n * @property {string} operator +, -, !, ~\r\n */\r\nexport class UnaryOperator extends Operator {\r\n  operator: string;\r\n  right: Expression;\r\n\r\n  constructor(operator: string, right: Expression) {\r\n    super();\r\n    this.operator = operator;\r\n    this.right = right;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"unaryOp\";\r\n  }\r\n\r\n  constEvaluate(context: WgslExec, type?: Type[]): Data | null {\r\n    return context.evalExpression(this, context.context);\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.right.search(callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class BinaryOperator\r\n * @extends Operator\r\n * @category AST\r\n * @property {string} operator +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||\r\n */\r\nexport class BinaryOperator extends Operator {\r\n  operator: string;\r\n  left: Expression;\r\n  right: Expression;\r\n\r\n  constructor(operator: string, left: Expression, right: Expression) {\r\n    super();\r\n    this.operator = operator;\r\n    this.left = left;\r\n    this.right = right;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"binaryOp\";\r\n  }\r\n\r\n  _getPromotedType(t1: Type, t2: Type): Type {\r\n    if (t1.name === t2.name) {\r\n      return t1;\r\n    }\r\n    if (t1.name === \"f32\" || t2.name === \"f32\") {\r\n      return Type.f32;\r\n    }\r\n    if (t1.name === \"u32\" || t2.name === \"u32\") {\r\n      return Type.u32;\r\n    }\r\n    return Type.i32;\r\n  }\r\n\r\n  constEvaluate(context: WgslExec, type?: Type[]): Data | null {\r\n    return context.evalExpression(this, context.context);\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.left.search(callback);\r\n    this.right.search(callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class SwitchCase\r\n * @extends Node\r\n * @category AST\r\n */\r\nexport class SwitchCase extends Node {\r\n  body: Statement[];\r\n\r\n  constructor(body: Statement[]) {\r\n    super();\r\n    this.body = body;\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    callback(this);\r\n    this.searchBlock(this.body, callback);\r\n  }\r\n}\r\n\r\nexport class DefaultSelector extends Expression {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"default\";\r\n  }\r\n}\r\n\r\n/**\r\n * @class Case\r\n * @extends SwitchCase\r\n * @category AST\r\n */\r\nexport class Case extends SwitchCase {\r\n  selectors: Expression[];\r\n\r\n  constructor(selectors: Expression[], body: Statement[]) {\r\n    super(body);\r\n    this.selectors = selectors;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"case\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.searchBlock(this.body, callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class Default\r\n * @extends SwitchCase\r\n * @category AST\r\n */\r\nexport class Default extends SwitchCase {\r\n  constructor(body: Statement[]) {\r\n    super(body);\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"default\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.searchBlock(this.body, callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class Argument\r\n * @extends Node\r\n * @category AST\r\n */\r\nexport class Argument extends Node {\r\n  name: string;\r\n  type: Type;\r\n  attributes: Attribute[] | null;\r\n\r\n  constructor(name: string, type: Type, attributes: Attribute[] | null) {\r\n    super();\r\n    this.name = name;\r\n    this.type = type;\r\n    this.attributes = attributes;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"argument\";\r\n  }\r\n}\r\n\r\n/**\r\n * @class ElseIf\r\n * @extends Node\r\n * @category AST\r\n */\r\nexport class ElseIf extends Node {\r\n  condition: Expression;\r\n  body: Statement[];\r\n\r\n  constructor(condition: Expression, body: Statement[]) {\r\n    super();\r\n    this.condition = condition;\r\n    this.body = body;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"elseif\";\r\n  }\r\n\r\n  search(callback: (node: Node) => void): void {\r\n    this.condition.search(callback);\r\n    this.searchBlock(this.body, callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @class Member\r\n * @extends Node\r\n * @category AST\r\n */\r\nexport class Member extends Node {\r\n  name: string;\r\n  type: Type | null;\r\n  attributes: Attribute[] | null;\r\n\r\n  constructor(\r\n    name: string,\r\n    type: Type | null,\r\n    attributes: Attribute[] | null\r\n  ) {\r\n    super();\r\n    this.name = name;\r\n    this.type = type;\r\n    this.attributes = attributes;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"member\";\r\n  }\r\n}\r\n\r\n/**\r\n * @class Attribute\r\n * @extends Node\r\n * @category AST\r\n */\r\nexport class Attribute extends Node {\r\n  name: string;\r\n  value: string | string[] | null;\r\n\r\n  constructor(name: string, value: string | string[] | null) {\r\n    super();\r\n    this.name = name;\r\n    this.value = value;\r\n  }\r\n\r\n  get astNodeType(): string {\r\n    return \"attribute\";\r\n  }\r\n}\r\n\r\n\r\n\r\nexport class Data {\r\n  static _id = 0;\r\n\r\n  typeInfo: TypeInfo;\r\n  parent: Data | null = null;\r\n  id: number;\r\n\r\n  constructor(typeInfo: TypeInfo, parent: Data | null) {\r\n      this.typeInfo = typeInfo;\r\n      this.parent = parent;\r\n      this.id = Data._id++;\r\n  }\r\n\r\n  clone(): Data {\r\n    throw `Clone: Not implemented for ${this.constructor.name}`;\r\n  }\r\n\r\n  setDataValue(exec: ExecInterface, value: Data, postfix: Expression | null, context: ExecContext): void {\r\n      console.error(`SetDataValue: Not implemented for ${this.constructor.name}`);\r\n  }\r\n\r\n  getSubData(exec: ExecInterface, postfix: Expression | null, context: ExecContext): Data | null {\r\n      console.error(`GetDataValue: Not implemented for ${this.constructor.name}`);\r\n      return null;\r\n  }\r\n\r\n  toString(): string {\r\n      return `<${this.typeInfo.getTypeName()}>`;\r\n  }\r\n}\r\n\r\nexport class VoidData extends Data {\r\n  constructor() {\r\n      super(new TypeInfo(\"void\", null), null);\r\n  }\r\n\r\n  static void = new VoidData();\r\n\r\n  toString(): string {\r\n      return \"void\";\r\n  }\r\n}\r\n\r\nexport class PointerData extends Data {\r\n  reference: Data;\r\n\r\n  constructor(reference: Data) {\r\n    super(new PointerInfo(\"pointer\", reference.typeInfo, null), null);\r\n    this.reference = reference;\r\n  }\r\n\r\n  clone(): Data {\r\n    return this;\r\n  }\r\n\r\n  setDataValue(exec: ExecInterface, value: Data, postfix: Expression | null, context: ExecContext): void {\r\n    this.reference.setDataValue(exec, value, postfix, context);\r\n  }\r\n\r\n  getSubData(exec: ExecInterface, postfix: Expression | null, context: ExecContext): Data | null {\r\n    if (postfix) {\r\n      return this.reference.getSubData(exec, postfix, context);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  toString() {\r\n    return `&${this.reference.toString()}`;\r\n  }\r\n}\r\n\r\nexport class ScalarData extends Data {\r\n  data: Int32Array | Uint32Array | Float32Array;\r\n\r\n  constructor(value: number | Int32Array | Uint32Array | Float32Array, typeInfo: TypeInfo, parent: Data | null = null) {\r\n    super(typeInfo, parent);\r\n    if (value instanceof Int32Array || value instanceof Uint32Array || value instanceof Float32Array) {\r\n        this.data = value;\r\n    } else {\r\n      if (this.typeInfo.name === \"x32\") {\r\n        if (value - Math.floor(value) !== 0) {\r\n          this.data = new Float32Array([value]);\r\n        } else if (value >= 0) {\r\n            this.data = new Uint32Array([value]);\r\n        } else {\r\n            this.data = new Int32Array([value]);\r\n        } \r\n      } else if (this.typeInfo.name === \"i32\" || this.typeInfo.name === \"bool\") {\r\n          this.data = new Int32Array([value]);\r\n      } else if (this.typeInfo.name === \"u32\") {\r\n          this.data = new Uint32Array([value]);\r\n      } else if (this.typeInfo.name === \"f32\" || this.typeInfo.name === \"f16\") {\r\n          this.data = new Float32Array([value]);\r\n      } else {\r\n          console.error(`ScalarData2: Invalid type`, typeInfo);\r\n      }\r\n    }\r\n  }\r\n\r\n  clone(): Data {\r\n    if (this.data instanceof Float32Array) {\r\n        return new ScalarData(new Float32Array(this.data), this.typeInfo, null);\r\n    } else if (this.data instanceof Int32Array) {\r\n        return new ScalarData(new Int32Array(this.data), this.typeInfo, null);\r\n    } else if (this.data instanceof Uint32Array) {\r\n        return new ScalarData(new Uint32Array(this.data), this.typeInfo, null);\r\n    }\r\n    throw `ScalarData: Invalid data type`;\r\n  }\r\n\r\n  get value(): number {\r\n    return this.data[0];\r\n  }\r\n\r\n  set value(v: number) {\r\n    this.data[0] = v;\r\n  }\r\n\r\n  setDataValue(exec: ExecInterface, value: Data, postfix: Expression | null, context: ExecContext): void {\r\n    if (postfix) {\r\n      console.error(`SetDataValue: Scalar data does not support postfix`, postfix);\r\n      return;\r\n    }\r\n\r\n    if (!(value instanceof ScalarData)) {\r\n      console.error(`SetDataValue: Invalid value`, value);\r\n      return;\r\n    }\r\n\r\n    let v = value.data[0];\r\n\r\n    if (this.typeInfo.name === \"i32\" || this.typeInfo.name === \"u32\") {\r\n      v = Math.floor(v);\r\n    } else if (this.typeInfo.name === \"bool\") {\r\n      v = v ? 1 : 0;\r\n    }\r\n\r\n    this.data[0] = v;\r\n  }\r\n\r\n  getSubData(exec: ExecInterface, postfix: Expression | null, context: ExecContext): Data | null {\r\n    if (postfix) {\r\n      console.error(`getSubData: Scalar data does not support postfix`, postfix);\r\n      return null;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  toString(): string {\r\n    return `${this.value}`;\r\n  }\r\n}\r\n\r\nfunction _getVectorData(exec: ExecInterface, values: number[], formatName: string): VectorData | null {\r\n  const size = values.length;\r\n  if (size === 2) {\r\n      if (formatName === \"f32\") {\r\n          return new VectorData(new Float32Array(values), exec.getTypeInfo(\"vec2f\")!);\r\n      } else if (formatName === \"i32\" || formatName === \"bool\") {\r\n          return new VectorData(new Int32Array(values), exec.getTypeInfo(\"vec2i\")!);\r\n      } else if (formatName === \"u32\") {\r\n          return new VectorData(new Uint32Array(values), exec.getTypeInfo(\"vec2u\")!);\r\n      } else if (formatName === \"f16\") {\r\n          return new VectorData(new Float32Array(values), exec.getTypeInfo(\"vec2h\")!);\r\n      } else {\r\n          console.error(`getSubData: Unknown format ${formatName}`);\r\n      }\r\n      return null;\r\n  }\r\n\r\n  if (size === 3) {\r\n      if (formatName === \"f32\") {\r\n          return new VectorData(new Float32Array(values), exec.getTypeInfo(\"vec3f\")!);\r\n      } else if (formatName === \"i32\" || formatName === \"bool\") {\r\n          return new VectorData(new Int32Array(values), exec.getTypeInfo(\"vec3i\")!);\r\n      } else if (formatName === \"u32\") {\r\n          return new VectorData(new Uint32Array(values), exec.getTypeInfo(\"vec3u\")!);\r\n      } else if (formatName === \"f16\") {\r\n          return new VectorData(new Float32Array(values), exec.getTypeInfo(\"vec3h\")!);\r\n      } else {\r\n          console.error(`getSubData: Unknown format ${formatName}`);\r\n      }\r\n      return null;\r\n  }\r\n\r\n  if (size === 4) {\r\n      if (formatName === \"f32\") {\r\n          return new VectorData(new Float32Array(values), exec.getTypeInfo(\"vec4f\")!);\r\n      } else if (formatName === \"i32\" || formatName === \"bool\") {\r\n          return new VectorData(new Int32Array(values), exec.getTypeInfo(\"vec4i\")!);\r\n      } else if (formatName === \"u32\") {\r\n          return new VectorData(new Uint32Array(values), exec.getTypeInfo(\"vec4u\")!);\r\n      } else if (formatName === \"f16\") {\r\n          return new VectorData(new Float32Array(values), exec.getTypeInfo(\"vec4h\")!);\r\n      }\r\n      console.error(`getSubData: Unknown format ${formatName}`);\r\n      return null;\r\n  }\r\n\r\n  console.error(`getSubData: Invalid vector size ${values.length}`);\r\n  return null;\r\n}\r\n\r\nexport class VectorData extends Data {\r\n  data: Int32Array | Uint32Array | Float32Array;\r\n\r\n  constructor(value: number[] | Float32Array | Uint32Array | Int32Array, typeInfo: TypeInfo, parent: Data | null = null) {\r\n    super(typeInfo, parent);\r\n    if (value instanceof Float32Array || value instanceof Uint32Array || value instanceof Int32Array) {\r\n      this.data = value;\r\n    } else {\r\n      const typename = this.typeInfo.name;\r\n      if (typename === \"vec2f\" || typename === \"vec3f\" || typename === \"vec4f\") {\r\n        this.data = new Float32Array(value);\r\n      } else if (typename === \"vec2i\" || typename === \"vec3i\" || typename === \"vec4i\") {\r\n        this.data = new Int32Array(value);\r\n      } else if (typename === \"vec2u\" || typename === \"vec3u\" || typename === \"vec4u\") {\r\n        this.data = new Uint32Array(value);\r\n      } else if (typename === \"vec2h\" || typename === \"vec3h\" || typename === \"vec4h\") {\r\n        this.data = new Float32Array(value);\r\n      } else if (typename === \"vec2b\" || typename === \"vec3b\" || typename === \"vec4b\") {\r\n        this.data = new Int32Array(value);\r\n      } else if (typename === \"vec2\" || typename === \"vec3\" || typename === \"vec4\") {\r\n        this.data = new Float32Array(value);\r\n      } else {\r\n        console.error(`VectorData: Invalid type ${typename}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  clone(): Data {\r\n    if (this.data instanceof Float32Array) {\r\n      return new VectorData(new Float32Array(this.data), this.typeInfo, null);\r\n    } else if (this.data instanceof Int32Array) {\r\n      return new VectorData(new Int32Array(this.data), this.typeInfo, null);\r\n    } else if (this.data instanceof Uint32Array) {\r\n      return new VectorData(new Uint32Array(this.data), this.typeInfo, null);\r\n    }\r\n    throw `VectorData: Invalid data type`;\r\n  }\r\n\r\n  setDataValue(exec: ExecInterface, value: Data, postfix: Expression | null, context: ExecContext): void {\r\n    if (postfix instanceof StringExpr) {\r\n      console.error(\"TODO: Set vector postfix\");\r\n      return;\r\n    }\r\n\r\n    if (!(value instanceof VectorData)) {\r\n      console.error(`SetDataValue: Invalid value`, value);\r\n      return\r\n    }\r\n\r\n    this.data = value.data;\r\n  }\r\n\r\n  getSubData(exec: ExecInterface, postfix: Expression | null, context: ExecContext): Data | null {\r\n    if (postfix === null) {\r\n      return this;\r\n    }\r\n\r\n    let format = exec.getTypeInfo(\"f32\");\r\n    if (this.typeInfo instanceof TemplateInfo) {\r\n        format = this.typeInfo.format || format;\r\n    } else {\r\n        const typeName = this.typeInfo.name;\r\n        if (typeName === \"vec2f\" || typeName === \"vec3f\" || typeName === \"vec4f\") {\r\n          format = exec.getTypeInfo(\"f32\");\r\n        } else if (typeName === \"vec2i\" || typeName === \"vec3i\" || typeName === \"vec4i\") {\r\n          format = exec.getTypeInfo(\"i32\");\r\n        } else if (typeName === \"vec2b\" || typeName === \"vec3b\" || typeName === \"vec4b\") {\r\n          format = exec.getTypeInfo(\"bool\");\r\n        } else if (typeName === \"vec2u\" || typeName === \"vec3u\" || typeName === \"vec4u\") {\r\n          format = exec.getTypeInfo(\"u32\");\r\n        } else if ( typeName === \"vec2h\" || typeName === \"vec3h\" || typeName === \"vec4h\") {\r\n          format = exec.getTypeInfo(\"f16\");\r\n        } else {\r\n          console.error(`GetSubData: Unknown type ${typeName}`);\r\n        }\r\n    }\r\n\r\n    let self: VectorData | null = this;\r\n    while (postfix !== null && self !== null) {\r\n      if (postfix instanceof ArrayIndex) {\r\n        const idx = postfix.index;\r\n        let i = -1;\r\n        if (idx instanceof LiteralExpr) {\r\n          if (idx.value instanceof ScalarData) {\r\n            i = idx.value.value;\r\n          } else {\r\n            console.error(`GetSubData: Invalid array index ${idx.value}`);\r\n            return null;\r\n          }\r\n        } else {\r\n          const d = exec.evalExpression(idx, context);\r\n          if (d instanceof ScalarData) {\r\n            i = d.value;\r\n          } else {\r\n            console.error(`GetSubData: Unknown index type`, idx);\r\n            return null;\r\n          }\r\n        }\r\n        if (i < 0 || i >= self.data.length) {\r\n          console.error(`GetSubData: Index out of range`, i);\r\n          return null;\r\n        }\r\n\r\n        if (self.data instanceof Float32Array) {\r\n          const d = new Float32Array(self.data.buffer, self.data.byteOffset + i * 4, 1);\r\n          return new ScalarData(d, format!);\r\n        } else if (self.data instanceof Int32Array) {\r\n          const d = new Int32Array(self.data.buffer, self.data.byteOffset + i * 4, 1);\r\n          return new ScalarData(d, format!);\r\n        } else if (self.data instanceof Uint32Array) {\r\n          const d = new Uint32Array(self.data.buffer, self.data.byteOffset + i * 4, 1);\r\n          return new ScalarData(d, format!);\r\n        }\r\n\r\n        throw `GetSubData: Invalid data type`;\r\n      } else if (postfix instanceof StringExpr) {\r\n        const member = postfix.value.toLowerCase();\r\n        if (member.length === 1) {\r\n          let i = 0;\r\n          if (member === \"x\" || member === \"r\") {\r\n            i = 0;\r\n          } else if (member === \"y\" || member === \"g\") {\r\n            i = 1;\r\n          } else if (member === \"z\" || member === \"b\") {\r\n            i = 2;\r\n          } else if (member === \"w\" || member === \"a\") {\r\n            i = 3;\r\n          } else {\r\n            console.error(`GetSubData: Unknown member ${member}`);\r\n            return null;\r\n          }\r\n\r\n          if (this.data instanceof Float32Array) {\r\n            let d = new Float32Array(this.data.buffer, this.data.byteOffset + i * 4, 1);\r\n            return new ScalarData(d, format!, this);\r\n          } else if (this.data instanceof Int32Array) {\r\n            let d = new Int32Array(this.data.buffer, this.data.byteOffset + i * 4, 1);\r\n            return new ScalarData(d, format!, this);\r\n          } else if (this.data instanceof Uint32Array) {\r\n            let d = new Uint32Array(this.data.buffer, this.data.byteOffset + i * 4, 1);\r\n            return new ScalarData(d, format!, this);\r\n          }\r\n        }\r\n\r\n        const values: number[] = [];\r\n        for (const m of member) {\r\n          if (m === \"x\" || m === \"r\") {\r\n            values.push(this.data[0]);\r\n          } else if (m === \"y\" || m === \"g\") {\r\n            values.push(this.data[1]);\r\n          } else if (m === \"z\" || m === \"b\") {\r\n            values.push(this.data[2]);\r\n          } else if (m === \"w\" || m === \"a\") {\r\n            values.push(this.data[3]);\r\n          } else {\r\n            console.error(`GetDataValue: Unknown member ${m}`);\r\n          }\r\n        }\r\n\r\n        self = _getVectorData(exec, values, format.name);\r\n      } else {\r\n        console.error(`GetSubData: Unknown postfix`, postfix);\r\n        return null;\r\n      }\r\n\r\n      postfix = postfix.postfix;\r\n    }\r\n\r\n    return self;\r\n  }\r\n\r\n  toString(): string {\r\n    let s = `${this.data[0]}`;\r\n    for (let i = 1; i < this.data.length; ++i) {\r\n      s += `, ${this.data[i]}`;\r\n    }\r\n    return s;\r\n  }\r\n}\r\n\r\nexport class MatrixData extends Data {\r\n  data: Float32Array;\r\n\r\n  constructor(value: number[] | Float32Array, typeInfo: TypeInfo, parent: Data | null = null) {\r\n    super(typeInfo, parent);\r\n    if (value instanceof Float32Array) {\r\n      this.data = value;\r\n    } else {\r\n      this.data = new Float32Array(value);\r\n    }\r\n  }\r\n\r\n  clone(): Data {\r\n    return new MatrixData(new Float32Array(this.data), this.typeInfo, null);\r\n  }\r\n\r\n  setDataValue(exec: ExecInterface, value: Data, postfix: Expression | null, context: ExecContext): void {\r\n    if (postfix instanceof StringExpr) {\r\n      console.error(\"TODO: Set matrix postfix\");\r\n      return;\r\n    }\r\n\r\n    if (!(value instanceof MatrixData)) {\r\n      console.error(`SetDataValue: Invalid value`, value);\r\n      return\r\n    }\r\n\r\n    this.data = value.data;\r\n  }\r\n\r\n  getSubData(exec: ExecInterface, postfix: Expression | null, context: ExecContext): Data | null {\r\n    if (postfix === null) {\r\n      return this;\r\n    }\r\n\r\n    const typeName = this.typeInfo.name;\r\n    let format = exec.getTypeInfo(\"f32\");\r\n    if (this.typeInfo instanceof TemplateInfo) {\r\n      format = this.typeInfo.format;\r\n    } else {\r\n      if (typeName.endsWith(\"f\")) {\r\n        format = exec.getTypeInfo(\"f32\");\r\n      } else if (typeName.endsWith(\"i\")) {\r\n        format = exec.getTypeInfo(\"i32\");\r\n      } else if (typeName.endsWith(\"u\")) {\r\n        format = exec.getTypeInfo(\"u32\");\r\n      } else if ( typeName.endsWith(\"h\")) {\r\n        format = exec.getTypeInfo(\"f16\");\r\n      } else {\r\n        console.error(`GetDataValue: Unknown type ${typeName}`);\r\n        return null;\r\n      }\r\n    }\r\n\r\n    if (postfix instanceof ArrayIndex) {\r\n      const idx = postfix.index;\r\n      let i = -1;\r\n      if (idx instanceof LiteralExpr) {\r\n        if (idx.value instanceof ScalarData) {\r\n          i = idx.value.value;\r\n        } else {\r\n          console.error(`GetDataValue: Invalid array index ${idx.value}`);\r\n          return null;\r\n        }\r\n      } else {\r\n        const d = exec.evalExpression(idx, context);\r\n        if (d instanceof ScalarData) {\r\n          i = d.value;\r\n        } else {\r\n          console.error(`GetDataValue: Unknown index type`, idx);\r\n          return null;\r\n        }\r\n      }\r\n      if (i < 0 || i >= this.data.length) {\r\n        console.error(`GetDataValue: Index out of range`, i);\r\n        return null;\r\n      }\r\n\r\n      const formatSuffix = typeName.endsWith(\"h\") ? \"h\" : \"f\";\r\n\r\n      let vectorData: VectorData;\r\n      if (typeName === \"mat2x2\" || typeName === \"mat2x2f\" || typeName === \"mat2x2h\" ||\r\n          typeName === \"mat3x2\" || typeName === \"mat3x2f\" || typeName === \"mat3x2h\" ||\r\n          typeName === \"mat4x2\" || typeName === \"mat4x2f\" || typeName === \"mat4x2h\") {\r\n        vectorData = new VectorData(new Float32Array(this.data.buffer, this.data.byteOffset + i * 2 * 4, 2), exec.getTypeInfo(`vec2${formatSuffix}`)!);\r\n      } else if (typeName === \"mat2x3\" || typeName === \"mat2x3f\" || typeName === \"mat2x3h\" ||\r\n                typeName === \"mat3x3\" || typeName === \"mat3x3f\" || typeName === \"mat3x3h\" ||\r\n                typeName === \"mat4x3\" || typeName === \"mat4x3f\" || typeName === \"mat4x3h\") {\r\n        vectorData = new VectorData(new Float32Array(this.data.buffer, this.data.byteOffset + i * 3 * 4, 3), exec.getTypeInfo(`vec3${formatSuffix}`)!);\r\n      } else if (typeName === \"mat2x4\" || typeName === \"mat2x4f\" || typeName === \"mat2x4h\" ||\r\n                typeName === \"mat3x4\" || typeName === \"mat3x4f\" || typeName === \"mat3x4h\" ||\r\n                typeName === \"mat4x4\" || typeName === \"mat4x4f\" || typeName === \"mat4x4h\") {\r\n        vectorData = new VectorData(new Float32Array(this.data.buffer, this.data.byteOffset + i * 4 * 4, 4), exec.getTypeInfo(`vec4${formatSuffix}`)!);\r\n      } else {\r\n        console.error(`GetDataValue: Unknown type ${typeName}`);\r\n        return null;\r\n      }\r\n\r\n      if (postfix.postfix) {\r\n        return vectorData.getSubData(exec, postfix.postfix, context);\r\n      }\r\n\r\n      return vectorData;\r\n    } else {\r\n      console.error(`GetDataValue: Invalid postfix`, postfix);\r\n      return null;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  toString(): string {\r\n    let s = `${this.data[0]}`;\r\n    for (let i = 1; i < this.data.length; ++i) {\r\n      s += `, ${this.data[i]}`;\r\n    }\r\n    return s;\r\n  }\r\n}\r\n\r\n// Used to store array and struct data\r\nexport class TypedData extends Data {\r\n  buffer: ArrayBuffer;\r\n  offset: number;\r\n\r\n  constructor(data: ArrayBuffer | Float32Array | Uint32Array | Int32Array | Uint8Array | Int8Array,\r\n      typeInfo: TypeInfo, offset: number = 0, parent: Data | null = null) {\r\n    super(typeInfo, parent);\r\n    this.buffer = data instanceof ArrayBuffer ? data : data.buffer;\r\n    this.offset = offset;\r\n  }\r\n\r\n  clone(): Data {\r\n    const cloned = new Uint8Array(new Uint8Array(this.buffer, this.offset, this.typeInfo.size));\r\n    return new TypedData(cloned.buffer, this.typeInfo, 0, null);\r\n  }\r\n\r\n  setDataValue(exec: ExecInterface, value: Data, postfix: Expression | null, context: ExecContext): void {\r\n    if (value === null) {\r\n      console.log(`setDataValue: NULL data.`);\r\n      return;\r\n    }\r\n\r\n    let offset = this.offset;\r\n    let typeInfo = this.typeInfo;\r\n    while (postfix) {\r\n      if (postfix instanceof ArrayIndex) {\r\n        if (typeInfo instanceof ArrayInfo) {\r\n          const idx = postfix.index;\r\n          if (idx instanceof LiteralExpr) {\r\n            if (idx.value instanceof ScalarData) {\r\n              offset += idx.value.value * typeInfo.stride;\r\n            } else {\r\n              console.error(`SetDataValue: Invalid index type ${idx.value}`);\r\n              return;\r\n            }\r\n          } else {\r\n            const i = exec.evalExpression(idx, context);\r\n            if (i instanceof ScalarData) {\r\n              offset += i.value * typeInfo.stride;\r\n            } else {\r\n              console.error(`SetDataValue: Unknown index type`, idx);\r\n              return;\r\n            }\r\n          }\r\n          typeInfo = typeInfo.format;\r\n        } else {\r\n          console.error(`SetDataValue: Type ${typeInfo.getTypeName()} is not an array`);\r\n        }\r\n      } else if (postfix instanceof StringExpr) {\r\n        const member = postfix.value;\r\n        if (typeInfo instanceof StructInfo) {\r\n          let found = false;\r\n          for (const m of typeInfo.members) {\r\n            if (m.name === member) {\r\n              offset += m.offset;\r\n              typeInfo = m.type;\r\n              found = true;\r\n              break;\r\n            }\r\n          }\r\n          if (!found) {\r\n            console.error(`SetDataValue: Member ${member} not found`);\r\n            return;\r\n          }\r\n        } else if (typeInfo instanceof TypeInfo) {\r\n          const typeName = typeInfo.getTypeName();\r\n          let element = 0;\r\n          if (member === \"x\" || member === \"r\") {\r\n            element = 0;\r\n          } else if (member === \"y\" || member === \"g\") {\r\n            element = 1;\r\n          } else if (member === \"z\" || member === \"b\") {\r\n            element = 2;\r\n          } else if (member === \"w\" || member === \"a\") {\r\n            element = 3;\r\n          } else {\r\n            console.error(`SetDataValue: Unknown member ${member}`);\r\n            return;\r\n          }\r\n          if (!(value instanceof ScalarData)) {\r\n            console.error(`SetDataValue: Invalid value`, value);\r\n            return;\r\n          }\r\n          const v = value.value;\r\n          if (typeName === \"vec2f\") {\r\n            new Float32Array(this.buffer, offset, 2)[element] = v;\r\n            return;\r\n          } else if (typeName === \"vec3f\") {\r\n            new Float32Array(this.buffer, offset, 3)[element] = v;\r\n            return;\r\n          } else if (typeName === \"vec4f\") {\r\n            new Float32Array(this.buffer, offset, 4)[element] = v;\r\n            return;\r\n          } else if (typeName === \"vec2i\") {\r\n            new Int32Array(this.buffer, offset, 2)[element] = v;\r\n            return;\r\n          } else if (typeName === \"vec3i\") {\r\n            new Int32Array(this.buffer, offset, 3)[element] = v;\r\n            return;\r\n          } else if (typeName === \"vec4i\") {\r\n            new Int32Array(this.buffer, offset, 4)[element] = v;\r\n            return;\r\n          } else if (typeName === \"vec2u\") {\r\n            new Uint32Array(this.buffer, offset, 2)[element] = v;\r\n            return;\r\n          } else if (typeName === \"vec3u\") {\r\n            new Uint32Array(this.buffer, offset, 3)[element] = v;\r\n            return;\r\n          } else if (typeName === \"vec4u\") {\r\n            new Uint32Array(this.buffer, offset, 4)[element] = v;\r\n            return;\r\n          }\r\n          console.error(`SetDataValue: Type ${typeName} is not a struct`);\r\n          return;\r\n        }\r\n      } else {\r\n        console.error(`SetDataValue: Unknown postfix type`, postfix);\r\n        return;\r\n      }\r\n      postfix = postfix.postfix;\r\n    }\r\n\r\n    this.setData(exec, value, typeInfo, offset, context);\r\n  }\r\n\r\n  setData(exec: ExecInterface, value: Data, typeInfo: TypeInfo, offset: number, context: ExecContext): void {\r\n    const typeName = typeInfo.getTypeName();\r\n\r\n    if (typeName === \"f32\" || typeName === \"f16\") {\r\n      if (value instanceof ScalarData) {\r\n        new Float32Array(this.buffer, offset, 1)[0] = value.value;\r\n      }\r\n      return;\r\n    } else if (typeName === \"i32\" || typeName === \"atomic<i32>\" || typeName === \"x32\") {\r\n      if (value instanceof ScalarData) {\r\n        new Int32Array(this.buffer, offset, 1)[0] = value.value;\r\n      }\r\n      return;\r\n    } else if (typeName === \"u32\" || typeName === \"atomic<u32>\") {\r\n      if (value instanceof ScalarData) {\r\n        new Uint32Array(this.buffer, offset, 1)[0] = value.value;\r\n      }\r\n      return;\r\n    } else if (typeName === \"bool\") {\r\n      if (value instanceof ScalarData) {\r\n        new Int32Array(this.buffer, offset, 1)[0] = value.value;\r\n      }\r\n      return;\r\n    } else if (typeName === \"vec2f\" || typeName === \"vec2h\") {\r\n      const x = new Float32Array(this.buffer, offset, 2);\r\n      if (value instanceof VectorData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n      }\r\n      return;\r\n    } else if (typeName === \"vec3f\" || typeName === \"vec3h\") {\r\n      const x = new Float32Array(this.buffer, offset, 3);\r\n      if (value instanceof VectorData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n        x[2] = value.data[2];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n        x[2] = value[2];\r\n      }\r\n      return;\r\n    } else if (typeName === \"vec4f\" || typeName === \"vec4h\") {\r\n      const x = new Float32Array(this.buffer, offset, 4);\r\n      if (value instanceof VectorData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n        x[2] = value.data[2];\r\n        x[3] = value.data[3];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n        x[2] = value[2];\r\n        x[3] = value[3];\r\n      }\r\n      return;\r\n    } else if (typeName === \"vec2i\") {\r\n      const x = new Int32Array(this.buffer, offset, 2);\r\n      if (value instanceof VectorData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n      }\r\n      return;\r\n    } else if (typeName === \"vec3i\") {\r\n      const x = new Int32Array(this.buffer, offset, 3);\r\n      if (value instanceof VectorData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n        x[2] = value.data[2];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n        x[2] = value[2];\r\n      }\r\n      return;\r\n    } else if (typeName === \"vec4i\") {\r\n      const x = new Int32Array(this.buffer, offset, 4);\r\n      if (value instanceof VectorData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n        x[2] = value.data[2];\r\n        x[3] = value.data[3];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n        x[2] = value[2];\r\n        x[3] = value[3];\r\n      }\r\n      return;\r\n    } else if (typeName === \"vec2u\") {\r\n      const x = new Uint32Array(this.buffer, offset, 2);\r\n      if (value instanceof VectorData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n      }\r\n      return;\r\n    } else if (typeName === \"vec3u\") {\r\n      const x = new Uint32Array(this.buffer, offset, 3);\r\n      if (value instanceof VectorData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n        x[2] = value.data[2];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n        x[2] = value[2];\r\n      }\r\n      return;\r\n    } else if (typeName === \"vec4u\") {\r\n      const x = new Uint32Array(this.buffer, offset, 4);\r\n      if (value instanceof VectorData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n        x[2] = value.data[2];\r\n        x[3] = value.data[3];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n        x[2] = value[2];\r\n        x[3] = value[3];\r\n      }\r\n      return;\r\n    } else if (typeName === \"vec2b\") {\r\n      const x = new Uint32Array(this.buffer, offset, 2);\r\n      if (value instanceof VectorData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n      }\r\n      return;\r\n    } else if (typeName === \"vec3b\") {\r\n      const x = new Uint32Array(this.buffer, offset, 3);\r\n      if (value instanceof VectorData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n        x[2] = value.data[2];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n        x[2] = value[2];\r\n      }\r\n      return;\r\n    } else if (typeName === \"vec4b\") {\r\n      const x = new Uint32Array(this.buffer, offset, 4);\r\n      if (value instanceof VectorData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n        x[2] = value.data[2];\r\n        x[3] = value.data[3];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n        x[2] = value[2];\r\n        x[3] = value[3];\r\n      }\r\n      return;\r\n    } else if (typeName === \"mat2x2f\" || typeName === \"mat2x2h\") {\r\n      const x = new Float32Array(this.buffer, offset, 4);\r\n      if (value instanceof MatrixData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n        x[2] = value.data[2];\r\n        x[3] = value.data[3];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n        x[2] = value[2];\r\n        x[3] = value[3];\r\n      }\r\n      return;\r\n    } else if (typeName === \"mat2x3f\" || typeName === \"mat2x3h\") {\r\n      const x = new Float32Array(this.buffer, offset, 6);\r\n      if (value instanceof MatrixData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n        x[2] = value.data[2];\r\n        x[3] = value.data[3];\r\n        x[4] = value.data[4];\r\n        x[5] = value.data[5];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n        x[2] = value[2];\r\n        x[3] = value[3];\r\n        x[4] = value[4];\r\n        x[5] = value[5];\r\n      }\r\n      return;\r\n    } else if (typeName === \"mat2x4f\" || typeName === \"mat2x4h\") {\r\n      const x = new Float32Array(this.buffer, offset, 8);\r\n      if (value instanceof MatrixData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n        x[2] = value.data[2];\r\n        x[3] = value.data[3];\r\n        x[4] = value.data[4];\r\n        x[5] = value.data[5];\r\n        x[6] = value.data[6];\r\n        x[7] = value.data[7];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n        x[2] = value[2];\r\n        x[3] = value[3];\r\n        x[4] = value[4];\r\n        x[5] = value[5];\r\n        x[6] = value[6];\r\n        x[7] = value[7];\r\n      }\r\n      return;\r\n    } else if (typeName === \"mat3x2f\" || typeName === \"mat3x2h\") {\r\n      const x = new Float32Array(this.buffer, offset, 6);\r\n      if (value instanceof MatrixData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n        x[2] = value.data[2];\r\n        x[3] = value.data[3];\r\n        x[4] = value.data[4];\r\n        x[5] = value.data[5];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n        x[2] = value[2];\r\n        x[3] = value[3];\r\n        x[4] = value[4];\r\n        x[5] = value[5];\r\n      }\r\n      return;\r\n    } else if (typeName === \"mat3x3f\" || typeName === \"mat3x3h\") {\r\n      const x = new Float32Array(this.buffer, offset, 9);\r\n      if (value instanceof MatrixData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n        x[2] = value.data[2];\r\n        x[3] = value.data[3];\r\n        x[4] = value.data[4];\r\n        x[5] = value.data[5];\r\n        x[6] = value.data[6];\r\n        x[7] = value.data[7];\r\n        x[8] = value.data[8];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n        x[2] = value[2];\r\n        x[3] = value[3];\r\n        x[4] = value[4];\r\n        x[5] = value[5];\r\n        x[6] = value[6];\r\n        x[7] = value[7];\r\n        x[8] = value[8];\r\n      }\r\n      return;\r\n    } else if (typeName === \"mat3x4f\" || typeName === \"mat3x4h\") {\r\n      const x = new Float32Array(this.buffer, offset, 12);\r\n      if (value instanceof MatrixData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n        x[2] = value.data[2];\r\n        x[3] = value.data[3];\r\n        x[4] = value.data[4];\r\n        x[5] = value.data[5];\r\n        x[6] = value.data[6];\r\n        x[7] = value.data[7];\r\n        x[8] = value.data[8];\r\n        x[9] = value.data[9];\r\n        x[10] = value.data[10];\r\n        x[11] = value.data[11];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n        x[2] = value[2];\r\n        x[3] = value[3];\r\n        x[4] = value[4];\r\n        x[5] = value[5];\r\n        x[6] = value[6];\r\n        x[7] = value[7];\r\n        x[8] = value[8];\r\n        x[9] = value[9];\r\n        x[10] = value[10];\r\n        x[11] = value[11];\r\n      }\r\n      return;\r\n    } else if (typeName === \"mat4x2f\" || typeName === \"mat4x2h\") {\r\n      const x = new Float32Array(this.buffer, offset, 8);\r\n      if (value instanceof MatrixData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n        x[2] = value.data[2];\r\n        x[3] = value.data[3];\r\n        x[4] = value.data[4];\r\n        x[5] = value.data[5];\r\n        x[6] = value.data[6];\r\n        x[7] = value.data[7];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n        x[2] = value[2];\r\n        x[3] = value[3];\r\n        x[4] = value[4];\r\n        x[5] = value[5];\r\n        x[6] = value[6];\r\n        x[7] = value[7];\r\n      }\r\n      return;\r\n    } else if (typeName === \"mat4x3f\" || typeName === \"mat4x3h\") {\r\n      const x = new Float32Array(this.buffer, offset, 12);\r\n      if (value instanceof MatrixData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n        x[2] = value.data[2];\r\n        x[3] = value.data[3];\r\n        x[4] = value.data[4];\r\n        x[5] = value.data[5];\r\n        x[6] = value.data[6];\r\n        x[7] = value.data[7];\r\n        x[8] = value.data[8];\r\n        x[9] = value.data[9];\r\n        x[10] = value.data[10];\r\n        x[11] = value.data[11];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n        x[2] = value[2];\r\n        x[3] = value[3];\r\n        x[4] = value[4];\r\n        x[5] = value[5];\r\n        x[6] = value[6];\r\n        x[7] = value[7];\r\n        x[8] = value[8];\r\n        x[9] = value[9];\r\n        x[10] = value[10];\r\n        x[11] = value[11];\r\n      }\r\n      return;\r\n    } else if (typeName === \"mat4x4f\" || typeName === \"mat4x4h\") {\r\n      const x = new Float32Array(this.buffer, offset, 16);\r\n      if (value instanceof MatrixData) {\r\n        x[0] = value.data[0];\r\n        x[1] = value.data[1];\r\n        x[2] = value.data[2];\r\n        x[3] = value.data[3];\r\n        x[4] = value.data[4];\r\n        x[5] = value.data[5];\r\n        x[6] = value.data[6];\r\n        x[7] = value.data[7];\r\n        x[8] = value.data[8];\r\n        x[9] = value.data[9];\r\n        x[10] = value.data[10];\r\n        x[11] = value.data[11];\r\n        x[12] = value.data[12];\r\n        x[13] = value.data[13];\r\n        x[14] = value.data[14];\r\n        x[15] = value.data[15];\r\n      } else {\r\n        x[0] = value[0];\r\n        x[1] = value[1];\r\n        x[2] = value[2];\r\n        x[3] = value[3];\r\n        x[4] = value[4];\r\n        x[5] = value[5];\r\n        x[6] = value[6];\r\n        x[7] = value[7];\r\n        x[8] = value[8];\r\n        x[9] = value[9];\r\n        x[10] = value[10];\r\n        x[11] = value[11];\r\n        x[12] = value[12];\r\n        x[13] = value[13];\r\n        x[14] = value[14];\r\n        x[15] = value[15];\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (value instanceof TypedData) {\r\n      if (typeInfo === value.typeInfo) {\r\n        const x = new Uint8Array(this.buffer, offset, value.buffer.byteLength);\r\n        x.set(new Uint8Array(value.buffer));\r\n        return;\r\n      } else {\r\n        console.error(`SetDataValue: Type mismatch`, typeName, value.typeInfo.getTypeName());\r\n        return;\r\n      }\r\n    }\r\n\r\n    console.error(`SetData: Unknown type ${typeName}`);\r\n  }\r\n\r\n  getSubData(exec: ExecInterface, postfix: Expression | null, context: ExecContext): Data | null {\r\n    if (postfix === null) {\r\n      return this;\r\n    }\r\n\r\n    let offset = this.offset;\r\n    let typeInfo = this.typeInfo;\r\n    while (postfix) {\r\n      if (postfix instanceof ArrayIndex) {\r\n        const idx = postfix.index;\r\n        const _i = idx instanceof Expression ? exec.evalExpression(idx, context) : idx;\r\n        let i = 0;\r\n        if (_i instanceof ScalarData) {\r\n          i = _i.value;\r\n        } else if (typeof _i === \"number\") {\r\n          i = _i;\r\n        } else {\r\n          console.error(`GetDataValue: Invalid index type`, idx);\r\n        }\r\n        if (typeInfo instanceof ArrayInfo) {\r\n          offset += i * typeInfo.stride;\r\n          typeInfo = typeInfo.format;\r\n        } else {\r\n          const typeName = typeInfo.getTypeName();\r\n          if (typeName === \"mat4x4\" || typeName === \"mat4x4f\" || typeName === \"mat4x4h\") {\r\n            offset += i * 16;\r\n            typeInfo = exec.getTypeInfo(\"vec4f\")!;\r\n          } else {\r\n            console.error(`getDataValue: Type ${typeInfo.getTypeName()} is not an array`);\r\n          }\r\n        }\r\n      } else if (postfix instanceof StringExpr) {\r\n        const member = postfix.value;\r\n        if (typeInfo instanceof StructInfo) {\r\n          let found = false;\r\n          for (const m of typeInfo.members) {\r\n            if (m.name === member) {\r\n              offset += m.offset;\r\n              typeInfo = m.type;\r\n              found = true;\r\n              break;\r\n            }\r\n          }\r\n          if (!found) {\r\n            console.error(`GetDataValue: Member ${member} not found`);\r\n            return null;\r\n          }\r\n        } else if (typeInfo instanceof TypeInfo) {\r\n          const typeName = typeInfo.getTypeName();\r\n          if (typeName === \"vec2f\" || typeName === \"vec3f\" || typeName === \"vec4f\" ||\r\n              typeName === \"vec2i\" || typeName === \"vec3i\" || typeName === \"vec4i\" ||\r\n              typeName === \"vec2u\" || typeName === \"vec3u\" || typeName === \"vec4u\" ||\r\n              typeName === \"vec2b\" || typeName === \"vec3b\" || typeName === \"vec4b\" ||\r\n              typeName === \"vec2h\" || typeName === \"vec3h\" || typeName === \"vec4h\" ||\r\n              typeName === \"vec2\" || typeName === \"vec3\" || typeName === \"vec4\") {\r\n\r\n            if (member.length > 0 && member.length < 5) {\r\n              let formatName = \"f32\";\r\n              let formatSuffix = \"f\";\r\n              const value: number[] = [];\r\n              for (let i = 0; i < member.length; ++i) {\r\n                const m = member[i].toLowerCase();\r\n                let element = 0;\r\n                if (m === \"x\" || m === \"r\") {\r\n                  element = 0;\r\n                } else if (m === \"y\" || m === \"g\") {\r\n                  element = 1;\r\n                } else if (m === \"z\" || m === \"b\") {\r\n                  element = 2;\r\n                } else if (m === \"w\" || m === \"a\") {\r\n                  element = 3;\r\n                } else {\r\n                  console.error(`Unknown member ${member}`);\r\n                  return null;\r\n                }\r\n\r\n                if (member.length === 1) {\r\n                  if (typeName.endsWith(\"f\")) {\r\n                    if (this.buffer.byteLength < (offset + element * 4 + 4)) {\r\n                      console.log(\"Insufficient buffer data\");\r\n                      return null;\r\n                    }\r\n                    return new ScalarData(new Float32Array(this.buffer, offset + element * 4, 1), exec.getTypeInfo(\"f32\")!, this);\r\n                  } else if (typeName.endsWith(\"h\")) {\r\n                    return new ScalarData(new Float32Array(this.buffer, offset + element * 4, 1), exec.getTypeInfo(\"f16\")!, this);\r\n                  } else if (typeName.endsWith(\"i\")) {\r\n                    return new ScalarData(new Int32Array(this.buffer, offset + element * 4, 1), exec.getTypeInfo(\"i32\")!, this);\r\n                  } else if (typeName.endsWith(\"b\")) {\r\n                    return new ScalarData(new Int32Array(this.buffer, offset + element * 4, 1), exec.getTypeInfo(\"bool\")!, this);\r\n                  } else if (typeName.endsWith(\"u\")) {\r\n                    return new ScalarData(new Uint32Array(this.buffer, offset + element * 4, 1), exec.getTypeInfo(\"i32\")!, this);\r\n                  }\r\n                }\r\n\r\n                if (typeName === \"vec2f\") {\r\n                  value.push(new Float32Array(this.buffer, offset, 2)[element]);\r\n                } else if (typeName === \"vec3f\") {\r\n                  if ((offset + 12) >= this.buffer.byteLength) {\r\n                    console.log(\"Insufficient buffer data\");\r\n                    return null;\r\n                  }\r\n                  const fa = new Float32Array(this.buffer, offset, 3);\r\n                  value.push(fa[element]);\r\n                } else if (typeName === \"vec4f\") {\r\n                  value.push(new Float32Array(this.buffer, offset, 4)[element]);\r\n                } else if (typeName === \"vec2i\") {\r\n                  formatName = \"i32\";\r\n                  formatSuffix = \"i\";\r\n                  value.push(new Int32Array(this.buffer, offset, 2)[element]);\r\n                } else if (typeName === \"vec3i\") {\r\n                  formatName = \"i32\";\r\n                  formatSuffix = \"i\";\r\n                  value.push(new Int32Array(this.buffer, offset, 3)[element]);\r\n                } else if (typeName === \"vec4i\") {\r\n                  formatName = \"i32\";\r\n                  formatSuffix = \"i\";\r\n                  value.push(new Int32Array(this.buffer, offset, 4)[element]);\r\n                } else if (typeName === \"vec2u\") {\r\n                  formatName = \"u32\";\r\n                  formatSuffix = \"u\";\r\n                  const ua = new Uint32Array(this.buffer, offset, 2);\r\n                  value.push(ua[element]);\r\n                } else if (typeName === \"vec3u\") {\r\n                  formatName = \"u32\";\r\n                  formatSuffix = \"u\";\r\n                  value.push(new Uint32Array(this.buffer, offset, 3)[element]);\r\n                } else if (typeName === \"vec4u\") {\r\n                  formatName = \"u32\";\r\n                  formatSuffix = \"u\";\r\n                  value.push(new Uint32Array(this.buffer, offset, 4)[element]);\r\n                }\r\n              }\r\n\r\n              if (value.length === 2) {\r\n                typeInfo = exec.getTypeInfo(`vec2${formatSuffix}`)!;\r\n              } else if (value.length === 3) {\r\n                typeInfo = exec.getTypeInfo(`vec3${formatSuffix}`)!;\r\n              } else if (value.length === 4) {\r\n                typeInfo = exec.getTypeInfo(`vec4${formatSuffix}`)!;\r\n              } else {\r\n                console.error(`GetDataValue: Invalid vector length ${value.length}`);\r\n              }\r\n\r\n              return new VectorData(value, typeInfo, null);\r\n            } else {\r\n              console.error(`GetDataValue: Unknown member ${member}`);\r\n              return null;\r\n            }\r\n          }\r\n\r\n          console.error(`GetDataValue: Type ${typeName} is not a struct`);\r\n          return null;\r\n        }\r\n      } else {\r\n        console.error(`GetDataValue: Unknown postfix type`, postfix);\r\n        return null;\r\n      }\r\n\r\n      postfix = postfix.postfix;\r\n    }\r\n\r\n    const typeName = typeInfo.getTypeName();\r\n\r\n    if (typeName === \"f32\") {\r\n      return new ScalarData(new Float32Array(this.buffer, offset, 1), typeInfo, this);\r\n    } else if (typeName === \"i32\") {\r\n      return new ScalarData(new Int32Array(this.buffer, offset, 1), typeInfo, this);\r\n    } else if (typeName === \"u32\") {\r\n      return new ScalarData(new Uint32Array(this.buffer, offset, 1), typeInfo, this);\r\n    } else if (typeName === \"vec2f\") {\r\n      return new VectorData(new Float32Array(this.buffer, offset, 2), typeInfo, this);\r\n    } else if (typeName === \"vec3f\") {\r\n      return new VectorData(new Float32Array(this.buffer, offset, 3), typeInfo, this);\r\n    } else if (typeName === \"vec4f\") {\r\n      return new VectorData(new Float32Array(this.buffer, offset, 4), typeInfo, this);\r\n    } else if (typeName === \"vec2i\") {\r\n      return new VectorData(new Int32Array(this.buffer, offset, 2), typeInfo, this);\r\n    } else if (typeName === \"vec3i\") {\r\n      return new VectorData(new Int32Array(this.buffer, offset, 3), typeInfo, this);\r\n    } else if (typeName === \"vec4i\") {\r\n      return new VectorData(new Int32Array(this.buffer, offset, 4), typeInfo, this);\r\n    } else if (typeName === \"vec2u\") {\r\n      return new VectorData(new Uint32Array(this.buffer, offset, 2), typeInfo, this);\r\n    } else if (typeName === \"vec3u\") {\r\n      return new VectorData(new Uint32Array(this.buffer, offset, 3), typeInfo, this);\r\n    } else if (typeName === \"vec4u\") {\r\n      return new VectorData(new Uint32Array(this.buffer, offset, 4), typeInfo, this);\r\n    }\r\n\r\n    if (typeInfo instanceof TemplateInfo && typeInfo.name === \"atomic\") {\r\n      if (typeInfo.format?.name === \"u32\") {\r\n        return new ScalarData(new Uint32Array(this.buffer, offset, 1)[0], typeInfo.format, this);\r\n      } else if (typeInfo.format?.name === \"i32\") {\r\n        return new ScalarData(new Int32Array(this.buffer, offset, 1)[0], typeInfo.format, this);\r\n      } else {\r\n        console.error(`GetDataValue: Invalid atomic format ${typeInfo.format?.name}`);\r\n        return null;\r\n      }\r\n    }\r\n\r\n    return new TypedData(this.buffer, typeInfo, offset, this);\r\n  }\r\n\r\n  toString(): string {\r\n    let s = \"\";\r\n    if (this.typeInfo instanceof ArrayInfo) {\r\n      if (this.typeInfo.format.name === \"f32\") {\r\n        const fa = new Float32Array(this.buffer, this.offset);\r\n        s = `[${fa[0]}`;\r\n        for (let i = 1; i < fa.length; ++i) {\r\n          s += `, ${fa[i]}`;\r\n        }\r\n      } else if (this.typeInfo.format.name === \"i32\") {\r\n        const fa = new Int32Array(this.buffer, this.offset);\r\n        s = `[${fa[0]}`;\r\n        for (let i = 1; i < fa.length; ++i) {\r\n          s += `, ${fa[i]}`;\r\n        }\r\n      } else if (this.typeInfo.format.name === \"u32\") {\r\n        const fa = new Uint32Array(this.buffer, this.offset);\r\n        s = `[${fa[0]}`;\r\n        for (let i = 1; i < fa.length; ++i) {\r\n          s += `, ${fa[i]}`;\r\n        }\r\n      } else if (this.typeInfo.format.name === \"vec2f\") {\r\n        const fa = new Float32Array(this.buffer, this.offset);\r\n        s = `[${fa[0]}, ${fa[1]}]`;\r\n        for (let i = 1; i < fa.length / 2; ++i) {\r\n          s += `, [${fa[i * 2]}, ${fa[i * 2 + 1]}]`;\r\n        }\r\n      } else if (this.typeInfo.format.name === \"vec3f\") {\r\n        const fa = new Float32Array(this.buffer, this.offset);\r\n        s = `[${fa[0]}, ${fa[1]}, ${fa[2]}]`;\r\n        for (let i = 4; i < fa.length; i += 4) {\r\n          s += `, [${fa[i]}, ${fa[i + 1]}, ${fa[i + 2]}]`;\r\n        }\r\n      } else if (this.typeInfo.format.name === \"vec4f\") {\r\n        const fa = new Float32Array(this.buffer, this.offset);\r\n        s = `[${fa[0]}, ${fa[1]}, ${fa[2]}, ${fa[3]}]`;\r\n        for (let i = 4; i < fa.length; i += 4) {\r\n          s += `, [${fa[i]}, ${fa[i + 1]}, ${fa[i + 2]}, ${fa[i + 3]}]`;\r\n        }\r\n      } else {\r\n        s = `[...]`;\r\n      }\r\n    } else if (this.typeInfo instanceof StructInfo) {\r\n      s += `{...}`;\r\n    } else {\r\n      s = `[...]`;\r\n    }\r\n    return s;\r\n  }\r\n}\r\n\r\nexport class TextureData extends Data {\r\n  data: Array<ArrayBuffer>;\r\n  descriptor: Object;\r\n  view: Object | null;\r\n\r\n  constructor(data: Array<ArrayBuffer | Float32Array | Uint32Array | Int32Array | Uint8Array | Int8Array>,\r\n      typeInfo: TypeInfo, descriptor: Object, view: Object | null) {\r\n      super(typeInfo, null);\r\n      this.data = data;\r\n      this.descriptor = descriptor;\r\n      this.view = view;\r\n  }\r\n\r\n  clone(): Data {\r\n    return new TextureData(this.data, this.typeInfo, this.descriptor, this.view);\r\n  }\r\n\r\n  get width(): number {\r\n    const size = this.descriptor[\"size\"];\r\n    if (size instanceof Array && size.length > 0) {\r\n      return size[0] ?? 0;\r\n    } else if (size instanceof Object) {\r\n      return size[\"width\"] ?? 0;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  get height(): number {\r\n    const size = this.descriptor[\"size\"];\r\n    if (size instanceof Array && size.length > 1) {\r\n      return size[1] ?? 0;\r\n    } else if (size instanceof Object) {\r\n      return size[\"height\"] ?? 0;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  get depthOrArrayLayers(): number {\r\n    const size = this.descriptor[\"size\"];\r\n    if (size instanceof Array && size.length > 2) {\r\n      return size[2] ?? 0;\r\n    } else if (size instanceof Object) {\r\n      return size[\"depthOrArrayLayers\"] ?? 0;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  get format(): string {\r\n    if (this.descriptor) {\r\n      return this.descriptor[\"format\"] ?? \"rgba8unorm\";\r\n    }\r\n    return \"rgba8unorm\";\r\n  }\r\n\r\n  get sampleCount(): number {\r\n    if (this.descriptor) {\r\n      return this.descriptor[\"sampleCount\"] ?? 1;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  get mipLevelCount(): number {\r\n    if (this.descriptor) {\r\n      return this.descriptor[\"mipLevelCount\"] ?? 1;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  get dimension(): string {\r\n    if (this.descriptor) {\r\n      return this.descriptor[\"dimension\"] ?? \"2d\";\r\n    }\r\n    return \"2d\";\r\n  }\r\n\r\n  getMipLevelSize(level: number): number[] {\r\n    if (level >= this.mipLevelCount) {\r\n      return [0, 0, 0];\r\n    }\r\n\r\n    const size = [this.width, this.height, this.depthOrArrayLayers];\r\n    for (let i = 0; i < size.length; ++i) {\r\n      size[i] = Math.max(1, size[i] >> level);\r\n    }\r\n\r\n    return size;\r\n  }\r\n\r\n  get texelByteSize(): number {\r\n    const format = this.format;\r\n    const formatInfo = TextureFormatInfo[format];\r\n    if (!formatInfo) {\r\n      return 0;\r\n    }\r\n    if (formatInfo.isDepthStencil) {\r\n      return 4; // depth textures have r32float imageData\r\n    }\r\n    return formatInfo.bytesPerBlock;\r\n  }\r\n\r\n  get bytesPerRow(): number {\r\n    const width = this.width;\r\n    const texelByteSize = this.texelByteSize;\r\n    //return (width * texelByteSize + 255) & ~0xff; // bytesPerRow is aligned to a multiple of 256 bytes\r\n    return width * texelByteSize;\r\n  }\r\n\r\n  get isDepthStencil(): boolean {\r\n    const format = this.format;\r\n    const formatInfo = TextureFormatInfo[format];\r\n    if (!formatInfo) {\r\n      return false;\r\n    }\r\n    return formatInfo.isDepthStencil;\r\n  }\r\n\r\n  getGpuSize(): number {\r\n    const format = this.format;\r\n    const formatInfo = TextureFormatInfo[format];\r\n    const width = this.width;\r\n    if (!format || width <= 0 || !formatInfo) {\r\n      return -1;\r\n    }\r\n\r\n    const height = this.height;\r\n    const depthOrArrayLayers = this.depthOrArrayLayers;\r\n    const dimension = this.dimension;\r\n    const blockWidth = width / formatInfo.blockWidth;\r\n    const blockHeight = dimension === \"1d\" ? 1 : height / formatInfo.blockHeight;\r\n    const bytesPerBlock = formatInfo.bytesPerBlock;\r\n\r\n    return blockWidth * blockHeight * bytesPerBlock * depthOrArrayLayers;\r\n  }\r\n\r\n  getPixel(x: number, y: number, z: number = 0, mipLevel: number = 0): number[] | null {\r\n    const texelByteSize = this.texelByteSize;\r\n    const bytesPerRow = this.bytesPerRow;\r\n    const height = this.height;\r\n    const buffer = this.data[mipLevel];\r\n    const imageData = new Uint8Array(buffer);\r\n    return getTexturePixel(imageData, x, y, z, mipLevel, height, bytesPerRow, texelByteSize, this.format);\r\n  }\r\n\r\n  setPixel(x: number, y: number, z: number, mipLevel: number, value: number[]): void {\r\n    const texelByteSize = this.texelByteSize;\r\n    const bytesPerRow = this.bytesPerRow;\r\n    const height = this.height;\r\n    const buffer = this.data[mipLevel];\r\n    const imageData = new Uint8Array(buffer);\r\n    setTexturePixel(imageData, x, y, z, mipLevel, height, bytesPerRow, texelByteSize, this.format, value);\r\n  }\r\n}\r\n", "export enum TokenClass {\r\n  token,\r\n  keyword,\r\n  reserved,\r\n}\r\n\r\nexport class TokenType {\r\n  name: string;\r\n  type: TokenClass;\r\n  rule: RegExp | string;\r\n\r\n  constructor(name: string, type: TokenClass, rule: RegExp | string) {\r\n    this.name = name;\r\n    this.type = type;\r\n    this.rule = rule;\r\n  }\r\n\r\n  toString(): string {\r\n    return this.name;\r\n  }\r\n}\r\n\r\n/// Catalog of defined token types, keywords, and reserved words.\r\nexport class TokenTypes {\r\n  static readonly none = new TokenType(\"\", TokenClass.reserved, \"\");\r\n  static readonly eof = new TokenType(\"EOF\", TokenClass.token, \"\");\r\n\r\n  static readonly reserved = {\r\n    asm: new TokenType(\"asm\", TokenClass.reserved, \"asm\"),\r\n    bf16: new TokenType(\"bf16\", TokenClass.reserved, \"bf16\"),\r\n    do: new TokenType(\"do\", TokenClass.reserved, \"do\"),\r\n    enum: new TokenType(\"enum\", TokenClass.reserved, \"enum\"),\r\n    f16: new TokenType(\"f16\", TokenClass.reserved, \"f16\"),\r\n    f64: new TokenType(\"f64\", TokenClass.reserved, \"f64\"),\r\n    handle: new TokenType(\"handle\", TokenClass.reserved, \"handle\"),\r\n    i8: new TokenType(\"i8\", TokenClass.reserved, \"i8\"),\r\n    i16: new TokenType(\"i16\", TokenClass.reserved, \"i16\"),\r\n    i64: new TokenType(\"i64\", TokenClass.reserved, \"i64\"),\r\n    mat: new TokenType(\"mat\", TokenClass.reserved, \"mat\"),\r\n    premerge: new TokenType(\"premerge\", TokenClass.reserved, \"premerge\"),\r\n    regardless: new TokenType(\"regardless\", TokenClass.reserved, \"regardless\"),\r\n    typedef: new TokenType(\"typedef\", TokenClass.reserved, \"typedef\"),\r\n    u8: new TokenType(\"u8\", TokenClass.reserved, \"u8\"),\r\n    u16: new TokenType(\"u16\", TokenClass.reserved, \"u16\"),\r\n    u64: new TokenType(\"u64\", TokenClass.reserved, \"u64\"),\r\n    unless: new TokenType(\"unless\", TokenClass.reserved, \"unless\"),\r\n    using: new TokenType(\"using\", TokenClass.reserved, \"using\"),\r\n    vec: new TokenType(\"vec\", TokenClass.reserved, \"vec\"),\r\n    void: new TokenType(\"void\", TokenClass.reserved, \"void\"),\r\n  };\r\n\r\n  static readonly keywords = {\r\n    array: new TokenType(\"array\", TokenClass.keyword, \"array\"),\r\n    atomic: new TokenType(\"atomic\", TokenClass.keyword, \"atomic\"),\r\n    bool: new TokenType(\"bool\", TokenClass.keyword, \"bool\"),\r\n    f32: new TokenType(\"f32\", TokenClass.keyword, \"f32\"),\r\n    i32: new TokenType(\"i32\", TokenClass.keyword, \"i32\"),\r\n    mat2x2: new TokenType(\"mat2x2\", TokenClass.keyword, \"mat2x2\"),\r\n    mat2x3: new TokenType(\"mat2x3\", TokenClass.keyword, \"mat2x3\"),\r\n    mat2x4: new TokenType(\"mat2x4\", TokenClass.keyword, \"mat2x4\"),\r\n    mat3x2: new TokenType(\"mat3x2\", TokenClass.keyword, \"mat3x2\"),\r\n    mat3x3: new TokenType(\"mat3x3\", TokenClass.keyword, \"mat3x3\"),\r\n    mat3x4: new TokenType(\"mat3x4\", TokenClass.keyword, \"mat3x4\"),\r\n    mat4x2: new TokenType(\"mat4x2\", TokenClass.keyword, \"mat4x2\"),\r\n    mat4x3: new TokenType(\"mat4x3\", TokenClass.keyword, \"mat4x3\"),\r\n    mat4x4: new TokenType(\"mat4x4\", TokenClass.keyword, \"mat4x4\"),\r\n    ptr: new TokenType(\"ptr\", TokenClass.keyword, \"ptr\"),\r\n    sampler: new TokenType(\"sampler\", TokenClass.keyword, \"sampler\"),\r\n    sampler_comparison: new TokenType(\r\n      \"sampler_comparison\",\r\n      TokenClass.keyword,\r\n      \"sampler_comparison\"\r\n    ),\r\n    struct: new TokenType(\"struct\", TokenClass.keyword, \"struct\"),\r\n    texture_1d: new TokenType(\"texture_1d\", TokenClass.keyword, \"texture_1d\"),\r\n    texture_2d: new TokenType(\"texture_2d\", TokenClass.keyword, \"texture_2d\"),\r\n    texture_2d_array: new TokenType(\r\n      \"texture_2d_array\",\r\n      TokenClass.keyword,\r\n      \"texture_2d_array\"\r\n    ),\r\n    texture_3d: new TokenType(\"texture_3d\", TokenClass.keyword, \"texture_3d\"),\r\n    texture_cube: new TokenType(\r\n      \"texture_cube\",\r\n      TokenClass.keyword,\r\n      \"texture_cube\"\r\n    ),\r\n    texture_cube_array: new TokenType(\r\n      \"texture_cube_array\",\r\n      TokenClass.keyword,\r\n      \"texture_cube_array\"\r\n    ),\r\n    texture_multisampled_2d: new TokenType(\r\n      \"texture_multisampled_2d\",\r\n      TokenClass.keyword,\r\n      \"texture_multisampled_2d\"\r\n    ),\r\n    texture_storage_1d: new TokenType(\r\n      \"texture_storage_1d\",\r\n      TokenClass.keyword,\r\n      \"texture_storage_1d\"\r\n    ),\r\n    texture_storage_2d: new TokenType(\r\n      \"texture_storage_2d\",\r\n      TokenClass.keyword,\r\n      \"texture_storage_2d\"\r\n    ),\r\n    texture_storage_2d_array: new TokenType(\r\n      \"texture_storage_2d_array\",\r\n      TokenClass.keyword,\r\n      \"texture_storage_2d_array\"\r\n    ),\r\n    texture_storage_3d: new TokenType(\r\n      \"texture_storage_3d\",\r\n      TokenClass.keyword,\r\n      \"texture_storage_3d\"\r\n    ),\r\n    texture_depth_2d: new TokenType(\r\n      \"texture_depth_2d\",\r\n      TokenClass.keyword,\r\n      \"texture_depth_2d\"\r\n    ),\r\n    texture_depth_2d_array: new TokenType(\r\n      \"texture_depth_2d_array\",\r\n      TokenClass.keyword,\r\n      \"texture_depth_2d_array\"\r\n    ),\r\n    texture_depth_cube: new TokenType(\r\n      \"texture_depth_cube\",\r\n      TokenClass.keyword,\r\n      \"texture_depth_cube\"\r\n    ),\r\n    texture_depth_cube_array: new TokenType(\r\n      \"texture_depth_cube_array\",\r\n      TokenClass.keyword,\r\n      \"texture_depth_cube_array\"\r\n    ),\r\n    texture_depth_multisampled_2d: new TokenType(\r\n      \"texture_depth_multisampled_2d\",\r\n      TokenClass.keyword,\r\n      \"texture_depth_multisampled_2d\"\r\n    ),\r\n    texture_external: new TokenType(\r\n      \"texture_external\",\r\n      TokenClass.keyword,\r\n      \"texture_external\"\r\n    ),\r\n    u32: new TokenType(\"u32\", TokenClass.keyword, \"u32\"),\r\n    vec2: new TokenType(\"vec2\", TokenClass.keyword, \"vec2\"),\r\n    vec3: new TokenType(\"vec3\", TokenClass.keyword, \"vec3\"),\r\n    vec4: new TokenType(\"vec4\", TokenClass.keyword, \"vec4\"),\r\n    bitcast: new TokenType(\"bitcast\", TokenClass.keyword, \"bitcast\"),\r\n    block: new TokenType(\"block\", TokenClass.keyword, \"block\"),\r\n    break: new TokenType(\"break\", TokenClass.keyword, \"break\"),\r\n    case: new TokenType(\"case\", TokenClass.keyword, \"case\"),\r\n    continue: new TokenType(\"continue\", TokenClass.keyword, \"continue\"),\r\n    continuing: new TokenType(\"continuing\", TokenClass.keyword, \"continuing\"),\r\n    default: new TokenType(\"default\", TokenClass.keyword, \"default\"),\r\n    diagnostic: new TokenType(\"diagnostic\", TokenClass.keyword, \"diagnostic\"),\r\n    discard: new TokenType(\"discard\", TokenClass.keyword, \"discard\"),\r\n    else: new TokenType(\"else\", TokenClass.keyword, \"else\"),\r\n    enable: new TokenType(\"enable\", TokenClass.keyword, \"enable\"),\r\n    fallthrough: new TokenType(\r\n      \"fallthrough\",\r\n      TokenClass.keyword,\r\n      \"fallthrough\"\r\n    ),\r\n    false: new TokenType(\"false\", TokenClass.keyword, \"false\"),\r\n    fn: new TokenType(\"fn\", TokenClass.keyword, \"fn\"),\r\n    for: new TokenType(\"for\", TokenClass.keyword, \"for\"),\r\n    function: new TokenType(\"function\", TokenClass.keyword, \"function\"),\r\n    if: new TokenType(\"if\", TokenClass.keyword, \"if\"),\r\n    let: new TokenType(\"let\", TokenClass.keyword, \"let\"),\r\n    const: new TokenType(\"const\", TokenClass.keyword, \"const\"),\r\n    loop: new TokenType(\"loop\", TokenClass.keyword, \"loop\"),\r\n    while: new TokenType(\"while\", TokenClass.keyword, \"while\"),\r\n    private: new TokenType(\"private\", TokenClass.keyword, \"private\"),\r\n    read: new TokenType(\"read\", TokenClass.keyword, \"read\"),\r\n    read_write: new TokenType(\"read_write\", TokenClass.keyword, \"read_write\"),\r\n    return: new TokenType(\"return\", TokenClass.keyword, \"return\"),\r\n    requires: new TokenType(\"requires\", TokenClass.keyword, \"requires\"),\r\n    storage: new TokenType(\"storage\", TokenClass.keyword, \"storage\"),\r\n    switch: new TokenType(\"switch\", TokenClass.keyword, \"switch\"),\r\n    true: new TokenType(\"true\", TokenClass.keyword, \"true\"),\r\n    alias: new TokenType(\"alias\", TokenClass.keyword, \"alias\"),\r\n    type: new TokenType(\"type\", TokenClass.keyword, \"type\"),\r\n    uniform: new TokenType(\"uniform\", TokenClass.keyword, \"uniform\"),\r\n    var: new TokenType(\"var\", TokenClass.keyword, \"var\"),\r\n    override: new TokenType(\"override\", TokenClass.keyword, \"override\"),\r\n    workgroup: new TokenType(\"workgroup\", TokenClass.keyword, \"workgroup\"),\r\n    write: new TokenType(\"write\", TokenClass.keyword, \"write\"),\r\n    r8unorm: new TokenType(\"r8unorm\", TokenClass.keyword, \"r8unorm\"),\r\n    r8snorm: new TokenType(\"r8snorm\", TokenClass.keyword, \"r8snorm\"),\r\n    r8uint: new TokenType(\"r8uint\", TokenClass.keyword, \"r8uint\"),\r\n    r8sint: new TokenType(\"r8sint\", TokenClass.keyword, \"r8sint\"),\r\n    r16uint: new TokenType(\"r16uint\", TokenClass.keyword, \"r16uint\"),\r\n    r16sint: new TokenType(\"r16sint\", TokenClass.keyword, \"r16sint\"),\r\n    r16float: new TokenType(\"r16float\", TokenClass.keyword, \"r16float\"),\r\n    rg8unorm: new TokenType(\"rg8unorm\", TokenClass.keyword, \"rg8unorm\"),\r\n    rg8snorm: new TokenType(\"rg8snorm\", TokenClass.keyword, \"rg8snorm\"),\r\n    rg8uint: new TokenType(\"rg8uint\", TokenClass.keyword, \"rg8uint\"),\r\n    rg8sint: new TokenType(\"rg8sint\", TokenClass.keyword, \"rg8sint\"),\r\n    r32uint: new TokenType(\"r32uint\", TokenClass.keyword, \"r32uint\"),\r\n    r32sint: new TokenType(\"r32sint\", TokenClass.keyword, \"r32sint\"),\r\n    r32float: new TokenType(\"r32float\", TokenClass.keyword, \"r32float\"),\r\n    rg16uint: new TokenType(\"rg16uint\", TokenClass.keyword, \"rg16uint\"),\r\n    rg16sint: new TokenType(\"rg16sint\", TokenClass.keyword, \"rg16sint\"),\r\n    rg16float: new TokenType(\"rg16float\", TokenClass.keyword, \"rg16float\"),\r\n    rgba8unorm: new TokenType(\"rgba8unorm\", TokenClass.keyword, \"rgba8unorm\"),\r\n    rgba8unorm_srgb: new TokenType(\r\n      \"rgba8unorm_srgb\",\r\n      TokenClass.keyword,\r\n      \"rgba8unorm_srgb\"\r\n    ),\r\n    rgba8snorm: new TokenType(\"rgba8snorm\", TokenClass.keyword, \"rgba8snorm\"),\r\n    rgba8uint: new TokenType(\"rgba8uint\", TokenClass.keyword, \"rgba8uint\"),\r\n    rgba8sint: new TokenType(\"rgba8sint\", TokenClass.keyword, \"rgba8sint\"),\r\n    bgra8unorm: new TokenType(\"bgra8unorm\", TokenClass.keyword, \"bgra8unorm\"),\r\n    bgra8unorm_srgb: new TokenType(\r\n      \"bgra8unorm_srgb\",\r\n      TokenClass.keyword,\r\n      \"bgra8unorm_srgb\"\r\n    ),\r\n    rgb10a2unorm: new TokenType(\r\n      \"rgb10a2unorm\",\r\n      TokenClass.keyword,\r\n      \"rgb10a2unorm\"\r\n    ),\r\n    rg11b10float: new TokenType(\r\n      \"rg11b10float\",\r\n      TokenClass.keyword,\r\n      \"rg11b10float\"\r\n    ),\r\n    rg32uint: new TokenType(\"rg32uint\", TokenClass.keyword, \"rg32uint\"),\r\n    rg32sint: new TokenType(\"rg32sint\", TokenClass.keyword, \"rg32sint\"),\r\n    rg32float: new TokenType(\"rg32float\", TokenClass.keyword, \"rg32float\"),\r\n    rgba16uint: new TokenType(\"rgba16uint\", TokenClass.keyword, \"rgba16uint\"),\r\n    rgba16sint: new TokenType(\"rgba16sint\", TokenClass.keyword, \"rgba16sint\"),\r\n    rgba16float: new TokenType(\r\n      \"rgba16float\",\r\n      TokenClass.keyword,\r\n      \"rgba16float\"\r\n    ),\r\n    rgba32uint: new TokenType(\"rgba32uint\", TokenClass.keyword, \"rgba32uint\"),\r\n    rgba32sint: new TokenType(\"rgba32sint\", TokenClass.keyword, \"rgba32sint\"),\r\n    rgba32float: new TokenType(\r\n      \"rgba32float\",\r\n      TokenClass.keyword,\r\n      \"rgba32float\"\r\n    ),\r\n    static_assert: new TokenType(\r\n      \"static_assert\",\r\n      TokenClass.keyword,\r\n      \"static_assert\"\r\n    ),\r\n\r\n    // WGSL grammar has a few keywords that have different token names than the strings they\r\n    // represent. Aliasing them here.\r\n    /*int32: new TokenType(\"i32\", TokenClass.keyword, \"i32\"),\r\n        uint32: new TokenType(\"u32\", TokenClass.keyword, \"u32\"),\r\n        float32: new TokenType(\"f32\", TokenClass.keyword, \"f32\"),\r\n        pointer: new TokenType(\"ptr\", TokenClass.keyword, \"ptr\"),*/\r\n  };\r\n\r\n  static readonly tokens = {\r\n    decimal_float_literal: new TokenType(\r\n      \"decimal_float_literal\",\r\n      TokenClass.token,\r\n      /((-?[0-9]*\\.[0-9]+|-?[0-9]+\\.[0-9]*)((e|E)(\\+|-)?[0-9]+)?[fh]?)|(-?[0-9]+(e|E)(\\+|-)?[0-9]+[fh]?)|(-?[0-9]+[fh])/\r\n    ),\r\n    hex_float_literal: new TokenType(\r\n      \"hex_float_literal\",\r\n      TokenClass.token,\r\n      /-?0x((([0-9a-fA-F]*\\.[0-9a-fA-F]+|[0-9a-fA-F]+\\.[0-9a-fA-F]*)((p|P)(\\+|-)?[0-9]+[fh]?)?)|([0-9a-fA-F]+(p|P)(\\+|-)?[0-9]+[fh]?))/\r\n    ),\r\n    int_literal: new TokenType(\r\n      \"int_literal\",\r\n      TokenClass.token,\r\n      /-?0x[0-9a-fA-F]+|0i?|-?[1-9][0-9]*i?/\r\n    ),\r\n    uint_literal: new TokenType(\r\n      \"uint_literal\",\r\n      TokenClass.token,\r\n      /0x[0-9a-fA-F]+u|0u|[1-9][0-9]*u/\r\n    ),\r\n    name: new TokenType(\"name\", TokenClass.token,  /([_\\p{XID_Start}][\\p{XID_Continue}]+)|([\\p{XID_Start}])/u),\r\n    //name: new TokenType(\"name\", TokenClass.token, /[_a-zA-Z][0-9a-zA-Z_]*/),\r\n    ident: new TokenType(\"ident\", TokenClass.token, /[_a-zA-Z][0-9a-zA-Z_]*/),\r\n    and: new TokenType(\"and\", TokenClass.token, \"&\"),\r\n    and_and: new TokenType(\"and_and\", TokenClass.token, \"&&\"),\r\n    arrow: new TokenType(\"arrow \", TokenClass.token, \"->\"),\r\n    attr: new TokenType(\"attr\", TokenClass.token, \"@\"),\r\n    forward_slash: new TokenType(\"forward_slash\", TokenClass.token, \"/\"),\r\n    bang: new TokenType(\"bang\", TokenClass.token, \"!\"),\r\n    bracket_left: new TokenType(\"bracket_left\", TokenClass.token, \"[\"),\r\n    bracket_right: new TokenType(\"bracket_right\", TokenClass.token, \"]\"),\r\n    brace_left: new TokenType(\"brace_left\", TokenClass.token, \"{\"),\r\n    brace_right: new TokenType(\"brace_right\", TokenClass.token, \"}\"),\r\n    colon: new TokenType(\"colon\", TokenClass.token, \":\"),\r\n    comma: new TokenType(\"comma\", TokenClass.token, \",\"),\r\n    equal: new TokenType(\"equal\", TokenClass.token, \"=\"),\r\n    equal_equal: new TokenType(\"equal_equal\", TokenClass.token, \"==\"),\r\n    not_equal: new TokenType(\"not_equal\", TokenClass.token, \"!=\"),\r\n    greater_than: new TokenType(\"greater_than\", TokenClass.token, \">\"),\r\n    greater_than_equal: new TokenType(\r\n      \"greater_than_equal\",\r\n      TokenClass.token,\r\n      \">=\"\r\n    ),\r\n    shift_right: new TokenType(\"shift_right\", TokenClass.token, \">>\"),\r\n    less_than: new TokenType(\"less_than\", TokenClass.token, \"<\"),\r\n    less_than_equal: new TokenType(\"less_than_equal\", TokenClass.token, \"<=\"),\r\n    shift_left: new TokenType(\"shift_left\", TokenClass.token, \"<<\"),\r\n    modulo: new TokenType(\"modulo\", TokenClass.token, \"%\"),\r\n    minus: new TokenType(\"minus\", TokenClass.token, \"-\"),\r\n    minus_minus: new TokenType(\"minus_minus\", TokenClass.token, \"--\"),\r\n    period: new TokenType(\"period\", TokenClass.token, \".\"),\r\n    plus: new TokenType(\"plus\", TokenClass.token, \"+\"),\r\n    plus_plus: new TokenType(\"plus_plus\", TokenClass.token, \"++\"),\r\n    or: new TokenType(\"or\", TokenClass.token, \"|\"),\r\n    or_or: new TokenType(\"or_or\", TokenClass.token, \"||\"),\r\n    paren_left: new TokenType(\"paren_left\", TokenClass.token, \"(\"),\r\n    paren_right: new TokenType(\"paren_right\", TokenClass.token, \")\"),\r\n    semicolon: new TokenType(\"semicolon\", TokenClass.token, \";\"),\r\n    star: new TokenType(\"star\", TokenClass.token, \"*\"),\r\n    tilde: new TokenType(\"tilde\", TokenClass.token, \"~\"),\r\n    underscore: new TokenType(\"underscore\", TokenClass.token, \"_\"),\r\n    xor: new TokenType(\"xor\", TokenClass.token, \"^\"),\r\n    plus_equal: new TokenType(\"plus_equal\", TokenClass.token, \"+=\"),\r\n    minus_equal: new TokenType(\"minus_equal\", TokenClass.token, \"-=\"),\r\n    times_equal: new TokenType(\"times_equal\", TokenClass.token, \"*=\"),\r\n    division_equal: new TokenType(\"division_equal\", TokenClass.token, \"/=\"),\r\n    modulo_equal: new TokenType(\"modulo_equal\", TokenClass.token, \"%=\"),\r\n    and_equal: new TokenType(\"and_equal\", TokenClass.token, \"&=\"),\r\n    or_equal: new TokenType(\"or_equal\", TokenClass.token, \"|=\"),\r\n    xor_equal: new TokenType(\"xor_equal\", TokenClass.token, \"^=\"),\r\n    shift_right_equal: new TokenType(\r\n      \"shift_right_equal\",\r\n      TokenClass.token,\r\n      \">>=\"\r\n    ),\r\n    shift_left_equal: new TokenType(\r\n      \"shift_left_equal\",\r\n      TokenClass.token,\r\n      \"<<=\"\r\n    ),\r\n  };\r\n\r\n  static readonly simpleTokens = {\r\n    \"@\": this.tokens.attr,\r\n    \"{\": this.tokens.brace_left,\r\n    \"}\": this.tokens.brace_right,\r\n    \":\": this.tokens.colon,\r\n    \",\": this.tokens.comma,\r\n    \"(\": this.tokens.paren_left,\r\n    \")\": this.tokens.paren_right,\r\n    \";\": this.tokens.semicolon,\r\n  };\r\n\r\n  static readonly literalTokens = {\r\n    \"&\": this.tokens.and,\r\n    \"&&\": this.tokens.and_and,\r\n    \"->\": this.tokens.arrow ,\r\n    \"/\": this.tokens.forward_slash,\r\n    \"!\": this.tokens.bang,\r\n    \"[\": this.tokens.bracket_left,\r\n    \"]\": this.tokens.bracket_right,\r\n    \"=\": this.tokens.equal,\r\n    \"==\": this.tokens.equal_equal,\r\n    \"!=\": this.tokens.not_equal,\r\n    \">\": this.tokens.greater_than,\r\n    \">=\": this.tokens.greater_than_equal,\r\n    \">>\": this.tokens.shift_right,\r\n    \"<\": this.tokens.less_than,\r\n    \"<=\": this.tokens.less_than_equal,\r\n    \"<<\": this.tokens.shift_left,\r\n    \"%\": this.tokens.modulo,\r\n    \"-\": this.tokens.minus,\r\n    \"--\": this.tokens.minus_minus,\r\n    \".\": this.tokens.period,\r\n    \"+\": this.tokens.plus,\r\n    \"++\": this.tokens.plus_plus,\r\n    \"|\": this.tokens.or,\r\n    \"||\": this.tokens.or_or,\r\n    \"*\": this.tokens.star,\r\n    \"~\": this.tokens.tilde,\r\n    \"_\": this.tokens.underscore,\r\n    \"^\": this.tokens.xor,\r\n    \"+=\": this.tokens.plus_equal,\r\n    \"-=\": this.tokens.minus_equal,\r\n    \"*=\": this.tokens.times_equal,\r\n    \"/=\": this.tokens.division_equal,\r\n    \"%=\": this.tokens.modulo_equal,\r\n    \"&=\": this.tokens.and_equal,\r\n    \"|=\": this.tokens.or_equal,\r\n    \"^=\": this.tokens.xor_equal,\r\n    \">>=\": this.tokens.shift_right_equal,\r\n    \"<<=\": this.tokens.shift_left_equal,\r\n  };\r\n\r\n  static readonly regexTokens = {\r\n    decimal_float_literal: this.tokens.decimal_float_literal,\r\n    hex_float_literal: this.tokens.hex_float_literal,\r\n    int_literal: this.tokens.int_literal,\r\n    uint_literal: this.tokens.uint_literal,\r\n    ident: this.tokens.ident,\r\n  };\r\n\r\n  static readonly storage_class = [\r\n    this.keywords.function,\r\n    this.keywords.private,\r\n    this.keywords.workgroup,\r\n    this.keywords.uniform,\r\n    this.keywords.storage,\r\n  ];\r\n\r\n  static readonly access_mode = [\r\n    this.keywords.read,\r\n    this.keywords.write,\r\n    this.keywords.read_write,\r\n  ];\r\n\r\n  static readonly sampler_type = [\r\n    this.keywords.sampler,\r\n    this.keywords.sampler_comparison,\r\n  ];\r\n\r\n  static readonly sampled_texture_type = [\r\n    this.keywords.texture_1d,\r\n    this.keywords.texture_2d,\r\n    this.keywords.texture_2d_array,\r\n    this.keywords.texture_3d,\r\n    this.keywords.texture_cube,\r\n    this.keywords.texture_cube_array,\r\n  ];\r\n\r\n  static readonly multisampled_texture_type = [\r\n    this.keywords.texture_multisampled_2d,\r\n  ];\r\n\r\n  static readonly storage_texture_type = [\r\n    this.keywords.texture_storage_1d,\r\n    this.keywords.texture_storage_2d,\r\n    this.keywords.texture_storage_2d_array,\r\n    this.keywords.texture_storage_3d,\r\n  ];\r\n\r\n  static readonly depth_texture_type = [\r\n    this.keywords.texture_depth_2d,\r\n    this.keywords.texture_depth_2d_array,\r\n    this.keywords.texture_depth_cube,\r\n    this.keywords.texture_depth_cube_array,\r\n    this.keywords.texture_depth_multisampled_2d,\r\n  ];\r\n\r\n  static readonly texture_external_type = [this.keywords.texture_external];\r\n\r\n  static readonly any_texture_type = [\r\n    ...this.sampled_texture_type,\r\n    ...this.multisampled_texture_type,\r\n    ...this.storage_texture_type,\r\n    ...this.depth_texture_type,\r\n    ...this.texture_external_type,\r\n  ];\r\n\r\n  static readonly texel_format = [\r\n    this.keywords.r8unorm,\r\n    this.keywords.r8snorm,\r\n    this.keywords.r8uint,\r\n    this.keywords.r8sint,\r\n    this.keywords.r16uint,\r\n    this.keywords.r16sint,\r\n    this.keywords.r16float,\r\n    this.keywords.rg8unorm,\r\n    this.keywords.rg8snorm,\r\n    this.keywords.rg8uint,\r\n    this.keywords.rg8sint,\r\n    this.keywords.r32uint,\r\n    this.keywords.r32sint,\r\n    this.keywords.r32float,\r\n    this.keywords.rg16uint,\r\n    this.keywords.rg16sint,\r\n    this.keywords.rg16float,\r\n    this.keywords.rgba8unorm,\r\n    this.keywords.rgba8unorm_srgb,\r\n    this.keywords.rgba8snorm,\r\n    this.keywords.rgba8uint,\r\n    this.keywords.rgba8sint,\r\n    this.keywords.bgra8unorm,\r\n    this.keywords.bgra8unorm_srgb,\r\n    this.keywords.rgb10a2unorm,\r\n    this.keywords.rg11b10float,\r\n    this.keywords.rg32uint,\r\n    this.keywords.rg32sint,\r\n    this.keywords.rg32float,\r\n    this.keywords.rgba16uint,\r\n    this.keywords.rgba16sint,\r\n    this.keywords.rgba16float,\r\n    this.keywords.rgba32uint,\r\n    this.keywords.rgba32sint,\r\n    this.keywords.rgba32float,\r\n  ];\r\n\r\n  static readonly const_literal = [\r\n    this.tokens.int_literal,\r\n    this.tokens.uint_literal,\r\n    this.tokens.decimal_float_literal,\r\n    this.tokens.hex_float_literal,\r\n    this.keywords.true,\r\n    this.keywords.false,\r\n  ];\r\n\r\n  static readonly literal_or_ident = [\r\n    this.tokens.ident,\r\n    this.tokens.int_literal,\r\n    this.tokens.uint_literal,\r\n    this.tokens.decimal_float_literal,\r\n    this.tokens.hex_float_literal,\r\n    this.tokens.name\r\n  ];\r\n\r\n  static readonly element_count_expression = [\r\n    this.tokens.int_literal,\r\n    this.tokens.uint_literal,\r\n    this.tokens.ident,\r\n  ];\r\n\r\n  static readonly template_types = [\r\n    this.keywords.vec2,\r\n    this.keywords.vec3,\r\n    this.keywords.vec4,\r\n    this.keywords.mat2x2,\r\n    this.keywords.mat2x3,\r\n    this.keywords.mat2x4,\r\n    this.keywords.mat3x2,\r\n    this.keywords.mat3x3,\r\n    this.keywords.mat3x4,\r\n    this.keywords.mat4x2,\r\n    this.keywords.mat4x3,\r\n    this.keywords.mat4x4,\r\n    this.keywords.atomic,\r\n    this.keywords.bitcast,\r\n    ...this.any_texture_type,\r\n  ];\r\n\r\n  // The grammar calls out 'block', but attribute grammar is defined to use a 'ident'.\r\n  // The attribute grammar should be ident | block.\r\n  static readonly attribute_name = [this.tokens.ident, this.keywords.block, this.keywords.diagnostic];\r\n\r\n  static readonly assignment_operators = [\r\n    this.tokens.equal,\r\n    this.tokens.plus_equal,\r\n    this.tokens.minus_equal,\r\n    this.tokens.times_equal,\r\n    this.tokens.division_equal,\r\n    this.tokens.modulo_equal,\r\n    this.tokens.and_equal,\r\n    this.tokens.or_equal,\r\n    this.tokens.xor_equal,\r\n    this.tokens.shift_right_equal,\r\n    this.tokens.shift_left_equal,\r\n  ];\r\n\r\n  static readonly increment_operators = [\r\n    this.tokens.plus_plus,\r\n    this.tokens.minus_minus,\r\n  ];\r\n}\r\n\r\n/// A token parsed by the WgslScanner.\r\nexport class Token {\r\n  readonly type: TokenType; // The type of the token.\r\n  readonly lexeme: string; // The string of the token, as parsed from the source text.\r\n  readonly line: number; // The line number of the token in the source text.\r\n  readonly start: number; // The start position of the token in the source text.\r\n  readonly end: number; // The end position of the token in the source text.\r\n\r\n  constructor(type: TokenType, lexeme: string, line: number, start: number, end: number) {\r\n    this.type = type;\r\n    this.lexeme = lexeme;\r\n    this.line = line;\r\n    this.start = start;\r\n    this.end = end;\r\n  }\r\n\r\n  toString(): string {\r\n    return this.lexeme;\r\n  }\r\n\r\n  isTemplateType(): boolean {\r\n    return TokenTypes.template_types.indexOf(this.type) != -1;\r\n  }\r\n\r\n  isArrayType(): boolean {\r\n    return this.type == TokenTypes.keywords.array;\r\n  }\r\n\r\n  isArrayOrTemplateType(): boolean {\r\n    return this.isArrayType() || this.isTemplateType();\r\n  }\r\n}\r\n\r\n/// Lexical scanner for the WGSL language. This takes an input source text and generates a list\r\n/// of Token objects, which can then be fed into the WgslParser to generate an AST.\r\nexport class WgslScanner {\r\n  private _source: string;\r\n  private _tokens: Token[] = [];\r\n  private _start = 0;\r\n  private _current = 0;\r\n  private _line = 1;\r\n\r\n  constructor(source?: string) {\r\n    this._source = source ?? \"\";\r\n  }\r\n\r\n  /// Scan all tokens from the source.\r\n  scanTokens(): Token[] {\r\n    while (!this._isAtEnd()) {\r\n      this._start = this._current;\r\n      if (!this.scanToken()) {\r\n        throw `Invalid syntax at line ${this._line}`;\r\n      }\r\n    }\r\n\r\n    this._tokens.push(new Token(TokenTypes.eof, \"\", this._line, this._current, this._current));\r\n\r\n    return this._tokens;\r\n  }\r\n\r\n  /// Scan a single token from the source.\r\n  scanToken(): boolean {\r\n    // Find the longest consecutive set of characters that match a rule.\r\n    let lexeme = this._advance();\r\n\r\n    // Skip line-feed, adding to the line counter.\r\n    if (lexeme == \"\\n\") {\r\n      this._line++;\r\n      return true;\r\n    }\r\n\r\n    // Skip whitespace\r\n    if (this._isWhitespace(lexeme)) {\r\n      return true;\r\n    }\r\n\r\n    if (lexeme == \"/\") {\r\n      // If it's a // comment, skip everything until the next line-feed.\r\n      if (this._peekAhead() == \"/\") {\r\n        while (lexeme != \"\\n\") {\r\n          if (this._isAtEnd()) {\r\n            return true;\r\n          }\r\n          lexeme = this._advance();\r\n        }\r\n        // skip the linefeed\r\n        this._line++;\r\n        return true;\r\n      } else if (this._peekAhead() == \"*\") {\r\n        // If it's a / * block comment, skip everything until the matching * /,\r\n        // allowing for nested block comments.\r\n        this._advance();\r\n        let commentLevel = 1;\r\n        while (commentLevel > 0) {\r\n          if (this._isAtEnd()) {\r\n            return true;\r\n          }\r\n          lexeme = this._advance();\r\n          if (lexeme == \"\\n\") {\r\n            this._line++;\r\n          } else if (lexeme == \"*\") {\r\n            if (this._peekAhead() == \"/\") {\r\n              this._advance();\r\n              commentLevel--;\r\n              if (commentLevel == 0) {\r\n                return true;\r\n              }\r\n            }\r\n          } else if (lexeme == \"/\") {\r\n            if (this._peekAhead() == \"*\") {\r\n              this._advance();\r\n              commentLevel++;\r\n            }\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n\r\n    // Shortcut single character tokens\r\n    const simpleToken = TokenTypes.simpleTokens[lexeme];\r\n    if (simpleToken) {\r\n      this._addToken(simpleToken);\r\n      return true;\r\n    }\r\n\r\n    // Shortcut keywords and identifiers\r\n    let matchType = TokenTypes.none;\r\n    const isAlpha = this._isAlpha(lexeme);\r\n    const isUnderscore = lexeme === \"_\";\r\n\r\n    if (this._isAlphaNumeric(lexeme)) {\r\n      let nextChar = this._peekAhead();\r\n      while (this._isAlphaNumeric(nextChar)) {\r\n        lexeme += this._advance();\r\n        nextChar = this._peekAhead();\r\n      }\r\n    }\r\n\r\n    if (isAlpha) {\r\n      const matchedType = TokenTypes.keywords[lexeme];\r\n      if (matchedType) {\r\n        this._addToken(matchedType);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (isAlpha || isUnderscore) {\r\n      this._addToken(TokenTypes.tokens.ident);\r\n      return true;\r\n    }\r\n\r\n    // Scan for the next valid token type\r\n    for (;;) {\r\n      let matchedType = this._findType(lexeme);\r\n\r\n      // An exception to \"longest lexeme\" rule is '>>'. In the case of 1>>2, it's a\r\n      // shift_right.\r\n      // In the case of array<vec4<f32>>, it's two greater_than's (one to close the vec4,\r\n      // and one to close the array).\r\n      // Another ambiguity is '>='. In the case of vec2<i32>=vec2(1,2),\r\n      // it's a greather_than and an equal, not a greater_than_equal.\r\n      // Another ambiguity is '-'. In the case of a-2, it's a minus; in the case of a*-2, it's a -2;\r\n      // in the case of foo()->int, it's a ->; in the case of foo-- or --foo, it's a -- decrement.\r\n\r\n      // WGSL requires context sensitive parsing to resolve these ambiguities. Both of these cases\r\n      // are predicated on it the > either closing a template, or being part of an operator.\r\n      // The solution here is to check if there was a less_than up to some number of tokens\r\n      // previously, and the token prior to that is a keyword that requires a '<', then it will be\r\n      // split into two operators; otherwise it's a single operator.\r\n      const nextLexeme = this._peekAhead();\r\n      if (lexeme == \"-\" && this._tokens.length > 0) {\r\n        if (nextLexeme == \"=\") {\r\n          this._current++;\r\n          lexeme += nextLexeme;\r\n          this._addToken(TokenTypes.tokens.minus_equal);\r\n          return true;\r\n        }\r\n        if (nextLexeme == \"-\") {\r\n          this._current++;\r\n          lexeme += nextLexeme;\r\n          this._addToken(TokenTypes.tokens.minus_minus);\r\n          return true;\r\n        }\r\n        const ti = this._tokens.length - 1;\r\n        const isIdentOrLiteral = TokenTypes.literal_or_ident.indexOf(this._tokens[ti].type) != -1;\r\n        if ((isIdentOrLiteral || this._tokens[ti].type == TokenTypes.tokens.paren_right) && nextLexeme != \">\") {\r\n          this._addToken(matchedType);\r\n          return true;\r\n        }\r\n      }\r\n      if (lexeme == \">\" && (nextLexeme == \">\" || nextLexeme == \"=\")) {\r\n        let foundLessThan = false;\r\n        let ti = this._tokens.length - 1;\r\n        for (let count = 0; count < 5 && ti >= 0; ++count, --ti) {\r\n          if (TokenTypes.assignment_operators.indexOf(this._tokens[ti].type) !== -1) {\r\n            break;\r\n          }\r\n          if (this._tokens[ti].type === TokenTypes.tokens.less_than) {\r\n            if (ti > 0 && this._tokens[ti - 1].isArrayOrTemplateType()) {\r\n              foundLessThan = true;\r\n            }\r\n            break;\r\n          }\r\n        }\r\n        // If there was a less_than in the recent token history, then this is probably a\r\n        // greater_than.\r\n        if (foundLessThan) {\r\n          this._addToken(matchedType);\r\n          return true;\r\n        }\r\n      }\r\n\r\n      // The current lexeme may not match any rule, but some token types may be invalid for\r\n      // part of the string but valid after a few more characters.\r\n      // For example, 0x.5 is a hex_float_literal. But as it's being scanned,\r\n      // \"0\" is a int_literal, then \"0x\" is invalid. If we stopped there, it would return\r\n      // the int_literal \"0\", but that's incorrect. So if we look forward a few characters,\r\n      // we'd get \"0x.\", which is still invalid, followed by \"0x.5\" which is the correct\r\n      // hex_float_literal. So that means if we hit an non-matching string, we should look\r\n      // ahead up to two characters to see if the string starts matching a valid rule again.\r\n      if (matchedType === TokenTypes.none) {\r\n        let lookAheadLexeme = lexeme;\r\n        let lookAhead = 0;\r\n        const maxLookAhead = 2;\r\n        for (let li = 0; li < maxLookAhead; ++li) {\r\n          lookAheadLexeme += this._peekAhead(li);\r\n          matchedType = this._findType(lookAheadLexeme);\r\n          if (matchedType !== TokenTypes.none) {\r\n            lookAhead = li;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (matchedType === TokenTypes.none) {\r\n          if (matchType === TokenTypes.none) {\r\n            return false;\r\n          }\r\n          this._current--;\r\n          this._addToken(matchType);\r\n          return true;\r\n        }\r\n\r\n        lexeme = lookAheadLexeme;\r\n        this._current += lookAhead + 1;\r\n      }\r\n\r\n      matchType = matchedType;\r\n\r\n      if (this._isAtEnd()) {\r\n        break;\r\n      }\r\n\r\n      lexeme += this._advance();\r\n    }\r\n\r\n    // We got to the end of the input stream. Then the token we've ready so far is it.\r\n    if (matchType === TokenTypes.none) {\r\n      return false;\r\n    }\r\n\r\n    this._addToken(matchType);\r\n    return true;\r\n  }\r\n\r\n  _findType(lexeme: string): TokenType {\r\n    for (const name in TokenTypes.regexTokens) {\r\n      const type = TokenTypes.regexTokens[name];\r\n      if (this._match(lexeme, type.rule)) {\r\n        return type;\r\n      }\r\n    }\r\n\r\n    const type = TokenTypes.literalTokens[lexeme];\r\n    if (type) {\r\n      return type;\r\n    }\r\n\r\n    return TokenTypes.none;\r\n  }\r\n\r\n  _match(lexeme: string, rule: RegExp): boolean {\r\n    const match = rule.exec(lexeme);\r\n    return match && match.index == 0 && match[0] == lexeme;\r\n  }\r\n\r\n  _isAtEnd(): boolean {\r\n    return this._current >= this._source.length;\r\n  }\r\n\r\n  _isAlpha(c: string): boolean {\r\n    // To support UTF-8 characters, allow anything other than whitespace, numbers, or operators\r\n    return !this._isNumeric(c) && !this._isWhitespace(c) && c !== \"_\" && c !== \".\" && c !== \"(\" && c !== \")\" &&\r\n      c !== \"[\" && c !== \"]\" && c !== \"{\" && c !== \"}\" && c !== \",\" && c !== \";\" && c !== \":\" && c !== \"=\" &&\r\n      c !== \"!\" && c !== \"<\" && c !== \">\" && c !== \"+\" && c !== \"-\" && c !== \"*\" && c !== \"/\" && c !== \"%\" &&\r\n      c !== \"&\" && c !== \"|\" && c !== \"^\" && c !== \"~\" && c !== \"@\" && c !== \"#\" && c !== \"?\" && c !== \"'\" &&\r\n      c !== \"`\" && c !== \"\\\"\" && c !== \"\\\\\" && c !== \"\\n\" && c !== \"\\r\" && c !== \"\\t\" && c !== \"\\0\";\r\n  }\r\n\r\n  _isNumeric(c: string): boolean {\r\n    return c >= \"0\" && c <= \"9\";\r\n  }\r\n\r\n  _isAlphaNumeric(c: string): boolean {\r\n    return this._isAlpha(c) || this._isNumeric(c) || c === \"_\";\r\n  }\r\n\r\n  _isWhitespace(c: string): boolean {\r\n    return c == \" \" || c == \"\\t\" || c == \"\\r\";\r\n  }\r\n\r\n  _advance(amount: number = 0): string {\r\n    let c = this._source[this._current];\r\n    amount = amount || 0;\r\n    amount++;\r\n    this._current += amount;\r\n    return c;\r\n  }\r\n\r\n  _peekAhead(offset: number = 0): string {\r\n    offset = offset || 0;\r\n    if (this._current + offset >= this._source.length) {\r\n      return \"\\0\";\r\n    }\r\n    return this._source[this._current + offset];\r\n  }\r\n\r\n  _addToken(type: TokenType) {\r\n    const text = this._source.substring(this._start, this._current);\r\n    this._tokens.push(new Token(type, text, this._line, this._start, this._current));\r\n  }\r\n}\r\n", "export function isArray(value: any): boolean {\r\n    return Array.isArray(value) || value?.buffer instanceof ArrayBuffer;\r\n}\r\n\r\nexport function isNumber(value: any): boolean {\r\n    return typeof value === \"number\";\r\n}\r\n\r\nconst _f32 = new Float32Array(1);\r\nconst _f32_i32 = new Uint32Array(_f32.buffer);\r\nconst _f32_u32 = new Uint32Array(_f32.buffer);\r\nconst _i32 = new Int32Array(1);\r\nconst _i32_f32 = new Float32Array(_i32.buffer);\r\nconst _i32_u32 = new Uint32Array(_i32.buffer);\r\nconst _u32 = new Uint32Array(1);\r\nconst _u32_f32 = new Float32Array(_u32.buffer);\r\nconst _u32_i32 = new Int32Array(_u32.buffer);\r\n\r\nexport function castScalar(v: number, from: string, to: string): number {\r\n    if (from === to) {\r\n        return v;\r\n    }\r\n\r\n    if (from === \"f32\") {\r\n        if (to === \"i32\" || to === \"x32\") {\r\n            _f32[0] = v;\r\n            return _f32_i32[0];\r\n        } else if (to === \"u32\") {\r\n            _f32[0] = v;\r\n            return _f32_u32[0];\r\n        }\r\n    } else if (from === \"i32\" || from === \"x32\") {\r\n        if (to === \"f32\") {\r\n            _i32[0] = v;\r\n            return _i32_f32[0];\r\n        } else if (to === \"u32\") {\r\n            _i32[0] = v;\r\n            return _i32_u32[0];\r\n        }\r\n    } else if (from === \"u32\") {\r\n        if (to === \"f32\") {\r\n            _u32[0] = v;\r\n            return _u32_f32[0];\r\n        } else if (to === \"i32\" || to === \"x32\") {\r\n            _u32[0] = v;\r\n            return _u32_i32[0];\r\n        }\r\n    }\r\n\r\n    console.error(`Unsupported cast from ${from} to ${to}`);\r\n    return v;\r\n}\r\n\r\nexport function castVector(v: number[], from: string, to: string): number[] {\r\n    if (from === to) {\r\n        return v;\r\n    }\r\n\r\n    const cast = new Array<number>(v.length);\r\n    for (let i = 0; i < v.length; i++) {\r\n        cast[i] = castScalar(v[i], from, to);\r\n    }\r\n\r\n    return cast;\r\n}\r\n", "/**\r\n * @author Brendan Duncan / https://github.com/brendan-duncan\r\n */\r\nimport { TokenTypes } from \"../wgsl_scanner.js\";\r\nimport { Type, Struct, Alias, Override, Var, Node, Function, VariableExpr, CreateExpr,\r\n    Let, CallExpr, Call, Argument, Member, Attribute, ArrayType, SamplerType, TemplateType, \r\n    PointerType } from \"../wgsl_ast.js\";\r\nimport { _BlockStart, _BlockEnd } from \"../wgsl_ast.js\";\r\nimport { FunctionInfo, VariableInfo, AliasInfo, OverrideInfo, PointerInfo,\r\n  StructInfo, TypeInfo, MemberInfo, ArrayInfo, TemplateInfo, OutputInfo,\r\n  InputInfo, ArgumentInfo, ResourceType, EntryFunctions } from \"./info.js\";\r\nimport { isArray } from \"../utils/cast.js\";\r\n \r\nclass _FunctionResources {\r\n  node: Function;\r\n  resources: VariableInfo[] | null = null;\r\n  inUse: boolean = false;\r\n  info: FunctionInfo | null = null;\r\n  constructor(node: Function) {\r\n    this.node = node;\r\n  }\r\n}\r\n\r\nclass _TypeSize {\r\n  align: number;\r\n  size: number;\r\n\r\n  constructor(align: number, size: number) {\r\n    this.align = align;\r\n    this.size = size;\r\n  }\r\n}\r\n\r\nexport class Reflect {\r\n  /// All top-level uniform vars in the shader.\r\n  uniforms: VariableInfo[] = [];\r\n  /// All top-level storage vars in the shader.\r\n  storage: VariableInfo[] = [];\r\n  /// All top-level texture vars in the shader;\r\n  textures: VariableInfo[] = [];\r\n  // All top-level sampler vars in the shader.\r\n  samplers: VariableInfo[] = [];\r\n  /// All top-level type aliases in the shader.\r\n  aliases: AliasInfo[] = [];\r\n  /// All top-level overrides in the shader.\r\n  overrides: OverrideInfo[] = [];\r\n  /// All top-level structs in the shader.\r\n  structs: StructInfo[] = [];\r\n  /// All entry functions in the shader: vertex, fragment, and/or compute.\r\n  entry: EntryFunctions = new EntryFunctions();\r\n  /// All functions in the shader, including entry functions.\r\n  functions: FunctionInfo[] = [];\r\n\r\n  _types: Map<Type, TypeInfo> = new Map();\r\n  _functions: Map<string, _FunctionResources> = new Map();\r\n\r\n  _isStorageTexture(type: TypeInfo): boolean {\r\n    return (\r\n      type.name == \"texture_storage_1d\" ||\r\n      type.name == \"texture_storage_2d\" ||\r\n      type.name == \"texture_storage_2d_array\" ||\r\n      type.name == \"texture_storage_3d\"\r\n    );\r\n  }\r\n\r\n  updateAST(ast: Node[]): void {\r\n    for (const node of ast) {\r\n      if (node instanceof Function) {\r\n        this._functions.set(node.name, new _FunctionResources(node as Function));\r\n      }\r\n    }\r\n\r\n    for (const node of ast) {\r\n      if (node instanceof Struct) {\r\n        const info = this.getTypeInfo(node as Struct, null);\r\n        if (info instanceof StructInfo) {\r\n          this.structs.push(info as StructInfo);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const node of ast) {\r\n      if (node instanceof Alias) {\r\n        this.aliases.push(this._getAliasInfo(node as Alias));\r\n        continue;\r\n      }\r\n\r\n      if (node instanceof Override) {\r\n        const v = node as Override;\r\n        const id = this._getAttributeNum(v.attributes, \"id\", 0);\r\n        const type = v.type != null ? this.getTypeInfo(v.type, v.attributes) : null;\r\n        this.overrides.push(new OverrideInfo(v.name, type, v.attributes, id));\r\n        continue;\r\n      }\r\n\r\n      if (this._isUniformVar(node)) {\r\n        const v = node as Var;\r\n        const g = this._getAttributeNum(v.attributes, \"group\", 0);\r\n        const b = this._getAttributeNum(v.attributes, \"binding\", 0);\r\n        const type = this.getTypeInfo(v.type!, v.attributes);\r\n        const varInfo = new VariableInfo(v.name, type, g, b, v.attributes, ResourceType.Uniform, v.access);\r\n        if (!varInfo.access) {\r\n          varInfo.access = \"read\";\r\n        }\r\n        this.uniforms.push(varInfo);\r\n        continue;\r\n      }\r\n\r\n      if (this._isStorageVar(node)) {\r\n        const v = node as Var;\r\n        const g = this._getAttributeNum(v.attributes, \"group\", 0);\r\n        const b = this._getAttributeNum(v.attributes, \"binding\", 0);\r\n        const type = this.getTypeInfo(v.type!, v.attributes);\r\n        const isStorageTexture = this._isStorageTexture(type);\r\n        const varInfo = new VariableInfo(v.name, type, g, b, v.attributes, isStorageTexture ? ResourceType.StorageTexture : ResourceType.Storage, v.access);\r\n        if (!varInfo.access) {\r\n          varInfo.access = \"read\";\r\n        }\r\n        this.storage.push(varInfo);\r\n        continue;\r\n      }\r\n\r\n      if (this._isTextureVar(node)) {\r\n        const v = node as Var;\r\n        const g = this._getAttributeNum(v.attributes, \"group\", 0);\r\n        const b = this._getAttributeNum(v.attributes, \"binding\", 0);\r\n        const type = this.getTypeInfo(v.type!, v.attributes);\r\n        const isStorageTexture = this._isStorageTexture(type);\r\n        const varInfo = new VariableInfo(v.name, type, g, b, v.attributes, \r\n            isStorageTexture ? ResourceType.StorageTexture : ResourceType.Texture, v.access);\r\n        if (!varInfo.access) {\r\n          varInfo.access = \"read\";\r\n        }\r\n        if (isStorageTexture) {\r\n          this.storage.push(varInfo);\r\n        } else {\r\n          this.textures.push(varInfo);\r\n        }\r\n        continue;\r\n      }\r\n\r\n      if (this._isSamplerVar(node)) {\r\n        const v = node as Var;\r\n        const g = this._getAttributeNum(v.attributes, \"group\", 0);\r\n        const b = this._getAttributeNum(v.attributes, \"binding\", 0);\r\n        const type = this.getTypeInfo(v.type!, v.attributes);\r\n        const varInfo = new VariableInfo(v.name, type, g, b, v.attributes, ResourceType.Sampler, v.access);\r\n        this.samplers.push(varInfo);\r\n        continue;\r\n      }\r\n    }\r\n\r\n    for (const node of ast) {\r\n      if (node instanceof Function) {\r\n        const vertexStage = this._getAttribute(node, \"vertex\");\r\n        const fragmentStage = this._getAttribute(node, \"fragment\");\r\n        const computeStage = this._getAttribute(node, \"compute\");\r\n        const stage = vertexStage || fragmentStage || computeStage;\r\n\r\n        const fn = new FunctionInfo(node.name, stage?.name, node.attributes);\r\n        fn.attributes = node.attributes;\r\n        fn.startLine = node.startLine;\r\n        fn.endLine = node.endLine;\r\n        this.functions.push(fn);\r\n        this._functions.get(node.name)!.info = fn;\r\n\r\n        if (stage) {\r\n          this._functions.get(node.name)!.inUse = true;\r\n          fn.inUse = true;\r\n          fn.resources = this._findResources(node, !!stage);\r\n          fn.inputs = this._getInputs(node.args);\r\n          fn.outputs = this._getOutputs(node.returnType);\r\n          this.entry[stage.name].push(fn);\r\n        }\r\n\r\n        fn.arguments = node.args.map(\r\n          (arg) => new ArgumentInfo(arg.name, this.getTypeInfo(arg.type, arg.attributes), arg.attributes)\r\n        );\r\n\r\n        fn.returnType = node.returnType ? this.getTypeInfo(node.returnType, node.attributes) : null;\r\n\r\n        continue;\r\n      }\r\n    }\r\n\r\n    for (const fn of this._functions.values()) {\r\n      if (fn.info) {\r\n        fn.info.inUse = fn.inUse;\r\n        this._addCalls(fn.node, fn.info.calls);\r\n      }\r\n    }\r\n\r\n    for (const fn of this._functions.values()) {\r\n      fn.node.search((node) => {\r\n        if (node instanceof Attribute) {\r\n          if (node.value) {\r\n            if (isArray(node.value)) {\r\n              for (const value of node.value) {\r\n                for (const override of this.overrides) {\r\n                  if (value === override.name) {\r\n                    fn.info?.overrides.push(override);\r\n                  }\r\n                }\r\n              }\r\n            } else {\r\n              for (const override of this.overrides) {\r\n                if (node.value === override.name) {\r\n                  fn.info?.overrides.push(override);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else if (node instanceof VariableExpr) {\r\n          for (const override of this.overrides) {\r\n            if (node.name === override.name) {\r\n              fn.info?.overrides.push(override);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    for (const u of this.uniforms) {\r\n      this._markStructsInUse(u.type);\r\n    }\r\n    for (const s of this.storage) {\r\n      this._markStructsInUse(s.type);\r\n    }\r\n  }\r\n\r\n  getFunctionInfo(name: string): FunctionInfo | null {\r\n    for (const fn of this.functions) {\r\n      if (fn.name == name) {\r\n        return fn;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getStructInfo(name: string): StructInfo | null {\r\n    for (const s of this.structs) {\r\n      if (s.name == name) {\r\n        return s;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getOverrideInfo(name: string): OverrideInfo | null {\r\n    for (const o of this.overrides) {\r\n      if (o.name == name) {\r\n        return o;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  _markStructsInUse(type: TypeInfo) {\r\n    if (!type) {\r\n      return;\r\n    }\r\n    if (type.isStruct) {\r\n      (type as StructInfo).inUse = true;\r\n      if ((type as StructInfo).members) {\r\n        for (const m of (type as StructInfo).members) {\r\n          this._markStructsInUse(m.type);\r\n        }\r\n      }\r\n    } else if (type.isArray) {\r\n      this._markStructsInUse((type as ArrayInfo).format);\r\n    } else if (type.isTemplate) {\r\n      if ((type as TemplateInfo).format) {\r\n        this._markStructsInUse((type as TemplateInfo).format!);\r\n      }\r\n    } else {\r\n      const alias = this._getAlias(type.name);\r\n      if (alias) {\r\n        this._markStructsInUse(alias);\r\n      }\r\n    }\r\n  }\r\n\r\n  _addCalls(fn: Function, calls: Set<FunctionInfo>, ) {\r\n    for (const call of fn.calls) {\r\n      const info = this._functions.get(call.name)?.info;\r\n      if (info) {\r\n        calls.add(info);\r\n      }\r\n    }\r\n  }\r\n\r\n  /// Find a resource by its group and binding.\r\n  findResource(group: number, binding: number, entry?: string) {\r\n    if (entry) {\r\n      for (const fn of this.entry.compute) {\r\n        if (fn.name === entry) {\r\n          for (const r of fn.resources) {\r\n            if (r.group == group && r.binding == binding) {\r\n              return r;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      for (const fn of this.entry.vertex) {\r\n        if (fn.name === entry) {\r\n          for (const r of fn.resources) {\r\n            if (r.group == group && r.binding == binding) {\r\n              return r;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      for (const fn of this.entry.fragment) {\r\n        if (fn.name === entry) {\r\n          for (const r of fn.resources) {\r\n            if (r.group == group && r.binding == binding) {\r\n              return r;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const u of this.uniforms) {\r\n      if (u.group == group && u.binding == binding) {\r\n        return u;\r\n      }\r\n    }\r\n    for (const s of this.storage) {\r\n      if (s.group == group && s.binding == binding) {\r\n        return s;\r\n      }\r\n    }\r\n    for (const t of this.textures) {\r\n      if (t.group == group && t.binding == binding) {\r\n        return t;\r\n      }\r\n    }\r\n    for (const s of this.samplers) {\r\n      if (s.group == group && s.binding == binding) {\r\n        return s;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  _findResource(name: string): VariableInfo | null {\r\n    for (const u of this.uniforms) {\r\n      if (u.name == name) {\r\n        return u;\r\n      }\r\n    }\r\n    for (const s of this.storage) {\r\n      if (s.name == name) {\r\n        return s;\r\n      }\r\n    }\r\n    for (const t of this.textures) {\r\n      if (t.name == name) {\r\n        return t;\r\n      }\r\n    }\r\n    for (const s of this.samplers) {\r\n      if (s.name == name) {\r\n        return s;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  \r\n  _markStructsFromAST(type: Type) {\r\n    const info = this.getTypeInfo(type, null);\r\n    this._markStructsInUse(info);\r\n  }\r\n\r\n  _findResources(fn: Node, isEntry: boolean): VariableInfo[] {\r\n    const resources: any[] = [];\r\n    const self = this;\r\n    const varStack: any[] = [];\r\n    fn.search((node) => {\r\n      if (node instanceof _BlockStart) {\r\n        varStack.push({});\r\n      } else if (node instanceof _BlockEnd) {\r\n        varStack.pop();\r\n      } else if (node instanceof Var) {\r\n        const v = node as Var;\r\n        if (isEntry && v.type !== null) {\r\n          this._markStructsFromAST(v.type);\r\n        }\r\n        if (varStack.length > 0) {\r\n          varStack[varStack.length - 1][v.name] = v;\r\n        }\r\n      } else if (node instanceof CreateExpr) {\r\n        const c = node as CreateExpr;\r\n        if (isEntry && c.type !== null) {\r\n          this._markStructsFromAST(c.type);\r\n        }\r\n      } else if (node instanceof Let) {\r\n        const v = node as Let;\r\n        if (isEntry && v.type !== null) {\r\n          this._markStructsFromAST(v.type);\r\n        }\r\n        if (varStack.length > 0) {\r\n          varStack[varStack.length - 1][v.name] = v;\r\n        }\r\n      } else if (node instanceof VariableExpr) {\r\n        const v = node as VariableExpr;\r\n        // Check to see if the variable is a local variable before checking to see if it's\r\n        // a resource.\r\n        if (varStack.length > 0) {\r\n          const varInfo = varStack[varStack.length - 1][v.name];\r\n          if (varInfo) {\r\n            return;\r\n          }\r\n        }\r\n        const varInfo = self._findResource(v.name);\r\n        if (varInfo) {\r\n          resources.push(varInfo);\r\n        }\r\n      } else if (node instanceof CallExpr) {\r\n        const c = node as CallExpr;\r\n        const callFn = self._functions.get(c.name);\r\n        if (callFn) {\r\n          if (isEntry) {\r\n            callFn.inUse = true;\r\n          }\r\n          (fn as Function).calls.add(callFn.node);\r\n          if (callFn.resources === null) {\r\n            callFn.resources = self._findResources(callFn.node, isEntry);\r\n          }\r\n          resources.push(...callFn.resources);\r\n        }\r\n      } else if (node instanceof Call) {\r\n        const c = node as Call;\r\n        const callFn = self._functions.get(c.name);\r\n        if (callFn) {\r\n          if (isEntry) {\r\n            callFn.inUse = true;\r\n          }\r\n          (fn as Function).calls.add(callFn.node);\r\n          if (callFn.resources === null) {\r\n            callFn.resources = self._findResources(callFn.node, isEntry);\r\n          }\r\n          resources.push(...callFn.resources);\r\n        }\r\n      }\r\n    });\r\n    return [...new Map(resources.map(r => [r.name, r])).values()];\r\n  }\r\n\r\n  getBindGroups(): Array<VariableInfo[]> {\r\n    const groups: Array<VariableInfo[]> = [];\r\n\r\n    function _makeRoom(group: number, binding: number) {\r\n      if (group >= groups.length) {\r\n        groups.length = group + 1;\r\n      }\r\n\r\n      if (groups[group] === undefined) {\r\n        groups[group] = [];\r\n      }\r\n\r\n      if (binding >= groups[group].length) {\r\n        groups[group].length = binding + 1;\r\n      }\r\n    }\r\n\r\n    for (const u of this.uniforms) {\r\n      _makeRoom(u.group, u.binding);\r\n      const group = groups[u.group];\r\n      group[u.binding] = u;\r\n    }\r\n\r\n    for (const u of this.storage) {\r\n      _makeRoom(u.group, u.binding);\r\n      const group = groups[u.group];\r\n      group[u.binding] = u;\r\n    }\r\n\r\n    for (const t of this.textures) {\r\n      _makeRoom(t.group, t.binding);\r\n      const group = groups[t.group];\r\n      group[t.binding] = t;\r\n    }\r\n\r\n    for (const t of this.samplers) {\r\n      _makeRoom(t.group, t.binding);\r\n      const group = groups[t.group];\r\n      group[t.binding] = t;\r\n    }\r\n\r\n    return groups;\r\n  }\r\n\r\n  _getOutputs(\r\n    type: Type,\r\n    outputs: OutputInfo[] | undefined = undefined\r\n  ): OutputInfo[] {\r\n    if (outputs === undefined) {\r\n      outputs = [];\r\n    }\r\n\r\n    if (type instanceof Struct) {\r\n      this._getStructOutputs(type, outputs);\r\n    } else {\r\n      const output = this._getOutputInfo(type);\r\n      if (output !== null) {\r\n        outputs.push(output);\r\n      }\r\n    }\r\n\r\n    return outputs;\r\n  }\r\n\r\n  _getStructOutputs(struct: Struct, outputs: OutputInfo[]) {\r\n    for (const m of struct.members) {\r\n      if (m.type instanceof Struct) {\r\n        this._getStructOutputs(m.type, outputs);\r\n      } else {\r\n        const location =\r\n          this._getAttribute(m, \"location\") || this._getAttribute(m, \"builtin\");\r\n        if (location !== null) {\r\n          const typeInfo = this.getTypeInfo(m.type, m.type.attributes);\r\n          const locationValue = this._parseInt(location.value);\r\n          const info = new OutputInfo(\r\n            m.name,\r\n            typeInfo,\r\n            location.name,\r\n            locationValue\r\n          );\r\n          outputs.push(info);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _getOutputInfo(type: Type): OutputInfo | null {\r\n    const location =\r\n      this._getAttribute(type, \"location\") ||\r\n      this._getAttribute(type, \"builtin\");\r\n    if (location !== null) {\r\n      const typeInfo = this.getTypeInfo(type, type.attributes);\r\n      const locationValue = this._parseInt(location.value);\r\n      const info = new OutputInfo(\"\", typeInfo, location.name, locationValue);\r\n      return info;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  _getInputs(\r\n    args: Argument[],\r\n    inputs: InputInfo[] | undefined = undefined\r\n  ): InputInfo[] {\r\n    if (inputs === undefined) {\r\n      inputs = [];\r\n    }\r\n\r\n    for (const arg of args) {\r\n      if (arg.type instanceof Struct) {\r\n        this._getStructInputs(arg.type, inputs);\r\n      } else {\r\n        const input = this._getInputInfo(arg);\r\n        if (input !== null) {\r\n          inputs.push(input);\r\n        }\r\n      }\r\n    }\r\n\r\n    return inputs;\r\n  }\r\n\r\n  _getStructInputs(struct: Struct, inputs: InputInfo[]) {\r\n    for (const m of struct.members) {\r\n      if (m.type instanceof Struct) {\r\n        this._getStructInputs(m.type, inputs);\r\n      } else {\r\n        const input = this._getInputInfo(m);\r\n        if (input !== null) {\r\n          inputs.push(input);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _getInputInfo(node: Member | Argument): InputInfo | null {\r\n    const location =\r\n      this._getAttribute(node, \"location\") ||\r\n      this._getAttribute(node, \"builtin\");\r\n    if (location !== null) {\r\n      const interpolation = this._getAttribute(node, \"interpolation\");\r\n      const type = this.getTypeInfo(node.type, node.attributes);\r\n      const locationValue = this._parseInt(location.value);\r\n      const info = new InputInfo(node.name, type, location.name, locationValue);\r\n      if (interpolation !== null) {\r\n        info.interpolation = this._parseString(interpolation.value);\r\n      }\r\n      return info;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  _parseString(s: string | string[]): string {\r\n    if (s instanceof Array) {\r\n      s = s[0];\r\n    }\r\n    return s;\r\n  }\r\n\r\n  _parseInt(s: string | string[]): number | string {\r\n    if (s instanceof Array) {\r\n      s = s[0];\r\n    }\r\n    const n = parseInt(s);\r\n    return isNaN(n) ? s : n;\r\n  }\r\n\r\n  _getAlias(name: string): TypeInfo | null {\r\n    for (const a of this.aliases) {\r\n      if (a.name == name) {\r\n        return a.type;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  _getAliasInfo(node: Alias): AliasInfo {\r\n    return new AliasInfo(node.name, this.getTypeInfo(node.type!, null));\r\n  }\r\n\r\n  getTypeInfoByName(name: string): TypeInfo | null {\r\n    for (const s of this.structs) {\r\n      if (s.name == name) {\r\n        return s;\r\n      }\r\n    }\r\n    for (const a of this.aliases) {\r\n      if (a.name == name) {\r\n        return a.type;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getTypeInfo(type: Type, attributes: Attribute[] | null = null): TypeInfo {\r\n    if (this._types.has(type)) {\r\n      return this._types.get(type)!;\r\n    }\r\n\r\n    if (type instanceof PointerType) {\r\n      const t = type.type ? this.getTypeInfo(type.type!, type.attributes) : null;\r\n      const info = new PointerInfo(type.name, t, attributes);\r\n      this._types.set(type, info);\r\n      this._updateTypeInfo(info);\r\n      return info;\r\n    }\r\n\r\n    if (type instanceof ArrayType) {\r\n      const a = type as ArrayType;\r\n      const t = a.format ? this.getTypeInfo(a.format!, a.attributes) : null;\r\n      const info = new ArrayInfo(a.name, attributes);\r\n      info.format = t;\r\n      info.count = a.count;\r\n      this._types.set(type, info);\r\n      this._updateTypeInfo(info);\r\n      return info;\r\n    }\r\n\r\n    if (type instanceof Struct) {\r\n      const s = type as Struct;\r\n      const info = new StructInfo(s.name, attributes);\r\n      info.startLine = s.startLine;\r\n      info.endLine = s.endLine;\r\n      for (const m of s.members) {\r\n        const t = this.getTypeInfo(m.type!, m.attributes);\r\n        info.members.push(new MemberInfo(m.name, t, m.attributes));\r\n      }\r\n      this._types.set(type, info);\r\n      this._updateTypeInfo(info);\r\n      return info;\r\n    }\r\n\r\n    if (type instanceof SamplerType) {\r\n      const s = type as SamplerType;\r\n      const formatIsType = s.format instanceof Type;\r\n      const format = s.format\r\n        ? formatIsType\r\n          ? this.getTypeInfo(s.format! as Type, null)\r\n          : new TypeInfo(s.format! as string, null)\r\n        : null;\r\n      const info = new TemplateInfo(s.name, format, attributes, s.access);\r\n      this._types.set(type, info);\r\n      this._updateTypeInfo(info);\r\n      return info;\r\n    }\r\n\r\n    if (type instanceof TemplateType) {\r\n      const t = type as TemplateType;\r\n      const format = t.format ? this.getTypeInfo(t.format!, null) : null;\r\n      const info = new TemplateInfo(t.name, format, attributes, t.access);\r\n      this._types.set(type, info);\r\n      this._updateTypeInfo(info);\r\n      return info;\r\n    }\r\n\r\n    const info = new TypeInfo(type.name, attributes);\r\n    this._types.set(type, info);\r\n    this._updateTypeInfo(info);\r\n    return info;\r\n  }\r\n\r\n  _updateTypeInfo(type: TypeInfo) {\r\n    const typeSize = this._getTypeSize(type);\r\n    type.size = typeSize?.size ?? 0;\r\n\r\n    if (type instanceof ArrayInfo) {\r\n      if (type[\"format\"]) {\r\n        const formatInfo = this._getTypeSize(type[\"format\"]);\r\n        // Array stride is the maximum of the format size and alignment.\r\n        // In the case of a vec3f, the size is 12 bytes, but the alignment is 16 bytes.\r\n        // Buffer alignment is therefore 16 bytes.\r\n        type.stride = Math.max(formatInfo?.size ?? 0, formatInfo?.align ?? 0);\r\n        this._updateTypeInfo(type[\"format\"]);\r\n      }\r\n    }\r\n\r\n    if (type instanceof PointerInfo) {\r\n      this._updateTypeInfo(type[\"format\"]);\r\n    }\r\n\r\n    if (type instanceof StructInfo) {\r\n      this._updateStructInfo(type);\r\n    }\r\n  }\r\n\r\n  _updateStructInfo(struct: StructInfo) {\r\n    let offset = 0;\r\n    let lastSize = 0;\r\n    let lastOffset = 0;\r\n    let structAlign = 0;\r\n\r\n    for (let mi = 0, ml = struct.members.length; mi < ml; ++mi) {\r\n      const member = struct.members[mi];\r\n\r\n      const sizeInfo = this._getTypeSize(member);\r\n      if (!sizeInfo) {\r\n        continue;\r\n      }\r\n\r\n      const type = this._getAlias(member.type.name) ?? member.type;\r\n      const align = sizeInfo.align;\r\n      const size = sizeInfo.size;\r\n      offset = this._roundUp(align, offset + lastSize);\r\n      lastSize = size;\r\n      lastOffset = offset;\r\n      structAlign = Math.max(structAlign, align);\r\n\r\n      member.offset = offset;\r\n      member.size = size;\r\n\r\n      this._updateTypeInfo(member.type);\r\n    }\r\n\r\n    struct.size = this._roundUp(structAlign, lastOffset + lastSize);\r\n    struct.align = structAlign;\r\n  }\r\n\r\n  _getTypeSize(\r\n    type: TypeInfo | MemberInfo | null | undefined\r\n  ): _TypeSize | null {\r\n    if (type === null || type === undefined) {\r\n      return null;\r\n    }\r\n\r\n    const explicitSize = this._getAttributeNum(type.attributes, \"size\", 0);\r\n    const explicitAlign = this._getAttributeNum(type.attributes, \"align\", 0);\r\n\r\n    if (type instanceof MemberInfo) {\r\n      type = type.type;\r\n    }\r\n\r\n    if (type instanceof TypeInfo) {\r\n      const alias = this._getAlias(type.name);\r\n      if (alias !== null) {\r\n        type = alias;\r\n      }\r\n    }\r\n\r\n    {\r\n      const info = Reflect._typeInfo[type.name];\r\n      if (info !== undefined) {\r\n        const divisor = type[\"format\"]?.name === \"f16\" ? 2 : 1;\r\n        return new _TypeSize(\r\n          Math.max(explicitAlign, info.align / divisor),\r\n          Math.max(explicitSize, info.size / divisor)\r\n        );\r\n      }\r\n    }\r\n\r\n    {\r\n      const info =\r\n        Reflect._typeInfo[type.name.substring(0, type.name.length - 1)];\r\n      if (info) {\r\n        const divisor = type.name[type.name.length - 1] === \"h\" ? 2 : 1;\r\n        return new _TypeSize(\r\n          Math.max(explicitAlign, info.align / divisor),\r\n          Math.max(explicitSize, info.size / divisor)\r\n        );\r\n      }\r\n    }\r\n\r\n    if (type instanceof ArrayInfo) {\r\n      let arrayType = type as ArrayInfo;\r\n      let align = 8;\r\n      let size = 8;\r\n      // Type                 AlignOf(T)          Sizeof(T)\r\n      // array<E, N>          AlignOf(E)          N * roundUp(AlignOf(E), SizeOf(E))\r\n      // array<E>             AlignOf(E)          N * roundUp(AlignOf(E), SizeOf(E))  (N determined at runtime)\r\n      //\r\n      // @stride(Q)\r\n      // array<E, N>          AlignOf(E)          N * Q\r\n      //\r\n      // @stride(Q)\r\n      // array<E>             AlignOf(E)          Nruntime * Q\r\n      //const E = type.format.name;\r\n      const E = this._getTypeSize(arrayType.format);\r\n      if (E !== null) {\r\n        size = E.size;\r\n        align = E.align;\r\n      }\r\n\r\n      const N = arrayType.count;\r\n\r\n      const stride = this._getAttributeNum(\r\n        type?.attributes ?? null,\r\n        \"stride\",\r\n        this._roundUp(align, size)\r\n      );\r\n      size = N * stride;\r\n\r\n      if (explicitSize) {\r\n        size = explicitSize;\r\n      }\r\n\r\n      return new _TypeSize(\r\n        Math.max(explicitAlign, align),\r\n        Math.max(explicitSize, size)\r\n      );\r\n    }\r\n\r\n    if (type instanceof StructInfo) {\r\n      let align = 0;\r\n      let size = 0;\r\n      // struct S     AlignOf:    max(AlignOfMember(S, M1), ... , AlignOfMember(S, MN))\r\n      //              SizeOf:     roundUp(AlignOf(S), OffsetOfMember(S, L) + SizeOfMember(S, L))\r\n      //                          Where L is the last member of the structure\r\n      let offset = 0;\r\n      let lastSize = 0;\r\n      let lastOffset = 0;\r\n      for (const m of type.members) {\r\n        const mi = this._getTypeSize(m.type);\r\n        if (mi !== null) {\r\n          align = Math.max(mi.align, align);\r\n          offset = this._roundUp(mi.align, offset + lastSize);\r\n          lastSize = mi.size;\r\n          lastOffset = offset;\r\n        }\r\n      }\r\n      size = this._roundUp(align, lastOffset + lastSize);\r\n\r\n      return new _TypeSize(\r\n        Math.max(explicitAlign, align),\r\n        Math.max(explicitSize, size)\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  _isUniformVar(node: Node): boolean {\r\n    return node instanceof Var && node.storage == \"uniform\";\r\n  }\r\n\r\n  _isStorageVar(node: Node): boolean {\r\n    return node instanceof Var && node.storage == \"storage\";\r\n  }\r\n\r\n  _isTextureVar(node: Node): boolean {\r\n    return (\r\n      node instanceof Var &&\r\n      node.type !== null &&\r\n      Reflect._textureTypes.indexOf(node.type.name) != -1\r\n    );\r\n  }\r\n\r\n  _isSamplerVar(node: Node): boolean {\r\n    return (\r\n      node instanceof Var &&\r\n      node.type !== null &&\r\n      Reflect._samplerTypes.indexOf(node.type.name) != -1\r\n    );\r\n  }\r\n\r\n  _getAttribute(node: Node, name: string): Attribute | null {\r\n    const obj = node as Object;\r\n    if (!obj || !obj[\"attributes\"]) {\r\n      return null;\r\n    }\r\n    const attrs = obj[\"attributes\"];\r\n    for (let a of attrs) {\r\n      if (a.name == name) {\r\n        return a;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  _getAttributeNum(\r\n    attributes: Attribute[] | null,\r\n    name: string,\r\n    defaultValue: number\r\n  ): number {\r\n    if (attributes === null) {\r\n      return defaultValue;\r\n    }\r\n    for (let a of attributes) {\r\n      if (a.name == name) {\r\n        let v = a !== null && a.value !== null ? a.value : defaultValue;\r\n        if (v instanceof Array) {\r\n          v = v[0];\r\n        }\r\n        if (typeof v === \"number\") {\r\n          return v;\r\n        }\r\n        if (typeof v === \"string\") {\r\n          return parseInt(v);\r\n        }\r\n        return defaultValue;\r\n      }\r\n    }\r\n    return defaultValue;\r\n  }\r\n\r\n  _roundUp(k: number, n: number): number {\r\n    return Math.ceil(n / k) * k;\r\n  }\r\n\r\n  // Type                 AlignOf(T)          Sizeof(T)\r\n  // i32, u32, or f32     4                   4\r\n  // atomic<T>            4                   4\r\n  // vec2<T>              8                   8\r\n  // vec3<T>              16                  12\r\n  // vec4<T>              16                  16\r\n  // mat2x2<f32>          8                   16\r\n  // mat3x2<f32>          8                   24\r\n  // mat4x2<f32>          8                   32\r\n  // mat2x3<f32>          16                  32\r\n  // mat3x3<f32>          16                  48\r\n  // mat4x3<f32>          16                  64\r\n  // mat2x4<f32>          16                  32\r\n  // mat3x4<f32>          16                  48\r\n  // mat4x4<f32>          16                  64\r\n  static readonly _typeInfo = {\r\n    f16: { align: 2, size: 2 },\r\n    i32: { align: 4, size: 4 },\r\n    u32: { align: 4, size: 4 },\r\n    f32: { align: 4, size: 4 },\r\n    atomic: { align: 4, size: 4 },\r\n    vec2: { align: 8, size: 8 },\r\n    vec3: { align: 16, size: 12 },\r\n    vec4: { align: 16, size: 16 },\r\n    mat2x2: { align: 8, size: 16 },\r\n    mat3x2: { align: 8, size: 24 },\r\n    mat4x2: { align: 8, size: 32 },\r\n    mat2x3: { align: 16, size: 32 },\r\n    mat3x3: { align: 16, size: 48 },\r\n    mat4x3: { align: 16, size: 64 },\r\n    mat2x4: { align: 16, size: 32 },\r\n    mat3x4: { align: 16, size: 48 },\r\n    mat4x4: { align: 16, size: 64 },\r\n  };\r\n\r\n  static readonly _textureTypes = TokenTypes.any_texture_type.map((t) => {\r\n    return t.name;\r\n  });\r\n\r\n  static readonly _samplerTypes = TokenTypes.sampler_type.map((t) => {\r\n    return t.name;\r\n  });\r\n}\r\n", "import { Let, Var, Argument, Function } from \"../wgsl_ast.js\";\r\nimport { Data } from \"../wgsl_ast.js\";\r\n\r\ntype ASTVarNode = Let | Var | Argument;\r\n\r\nlet _id = 0;\r\n\r\nexport class VarRef {\r\n    name: string;\r\n    value: Data;\r\n    node: ASTVarNode | null;\r\n    readonly id: number = _id++;\r\n\r\n    constructor(n: string, v: Data, node: ASTVarNode | null) {\r\n        this.name = n;\r\n        this.value = v;\r\n        this.node = node;\r\n    }\r\n\r\n    clone(): VarRef {\r\n        return new VarRef(this.name, this.value, this.node);\r\n    }\r\n};\r\n\r\nexport class FunctionRef {\r\n    name: string;\r\n    node: Function;\r\n    readonly id: number = _id++;\r\n\r\n    constructor(node: Function) {\r\n        this.name = node.name;\r\n        this.node = node;\r\n    }\r\n\r\n    clone(): FunctionRef {\r\n        return new FunctionRef(this.node);\r\n    }\r\n};\r\n\r\nexport class ExecContext {\r\n    parent: ExecContext | null = null;\r\n    variables = new Map<string, VarRef>();\r\n    functions = new Map<string, FunctionRef>();\r\n    currentFunctionName = \"\";\r\n    readonly id: number = _id++;\r\n\r\n    constructor(parent?: ExecContext) {\r\n        if (parent) {\r\n            this.parent = parent;\r\n            this.currentFunctionName = parent.currentFunctionName;\r\n        }\r\n    }\r\n\r\n    getVariable(name: string): VarRef | null {\r\n        if (this.variables.has(name)) {\r\n            return this.variables.get(name) ?? null;\r\n        }\r\n        if (this.parent) {\r\n            return this.parent.getVariable(name);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getFunction(name: string): FunctionRef | null {\r\n        if (this.functions.has(name)) {\r\n            return this.functions.get(name) ?? null;\r\n        }\r\n        if (this.parent) {\r\n            return this.parent.getFunction(name);\r\n        }\r\n        return null\r\n    }\r\n\r\n    createVariable(name: string, value: Data, node?: ASTVarNode) {\r\n        this.variables.set(name, new VarRef(name, value, node ?? null));\r\n    }\r\n\r\n    setVariable(name: string, value: Data, node?: ASTVarNode) {\r\n        const v = this.getVariable(name);\r\n        if (v !== null) {\r\n            v.value = value;\r\n        } else {\r\n            this.createVariable(name, value, node);\r\n        }\r\n    }\r\n\r\n    getVariableValue(name: string): Data | null {\r\n        const v = this.getVariable(name);\r\n        return v?.value ?? null;\r\n    }\r\n\r\n    clone(): ExecContext {\r\n        return new ExecContext(this);\r\n    }\r\n};\r\n", "import { Node, Type } from \"../wgsl_ast.js\";\r\nimport { ExecContext } from \"./exec_context.js\";\r\nimport { TypeInfo } from \"../wgsl_reflect.js\";\r\nimport { Data } from \"../wgsl_ast.js\";\r\n\r\nexport class ExecInterface {\r\n    evalExpression(node: Node, context: ExecContext): Data | null {\r\n        return null;\r\n    }\r\n\r\n    getTypeInfo(type: Type | string): TypeInfo | null {\r\n        return null; \r\n    }\r\n\r\n    getVariableName(node: Node, context: ExecContext): string | null {\r\n        return \"\";\r\n    }\r\n}\r\n", "import { CallExpr, Call, UnaryOperator, VariableExpr } from \"../wgsl_ast.js\";\r\nimport { Data, TypedData, TextureData, ScalarData, VectorData, MatrixData } from \"../wgsl_ast.js\";\r\nimport { ExecContext } from \"./exec_context.js\";\r\nimport { ExecInterface } from \"./exec_interface.js\";\r\nimport { ArrayInfo, TypeInfo } from \"../reflect/info.js\";\r\n\r\nexport class BuiltinFunctions {\r\n    exec: ExecInterface;\r\n\r\n    constructor(exec: ExecInterface) {\r\n        this.exec = exec;\r\n    }\r\n\r\n    getTypeInfo(type: string): TypeInfo | null {\r\n        return this.exec.getTypeInfo(type);\r\n    }\r\n\r\n    // Logical Built-in Functions\r\n    All(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        let isTrue = true;\r\n        if (value instanceof VectorData) {\r\n            value.data.forEach((x: any) => { if (!x) isTrue = false; });\r\n            return new ScalarData(isTrue ? 1 : 0, this.getTypeInfo(\"bool\"));\r\n        }\r\n        throw new Error(`All() expects a vector argument. Line ${node.line}`);\r\n    }\r\n\r\n    Any(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            const res = value.data.some((v: any) => v);\r\n            return new ScalarData(res ? 1 : 0, this.getTypeInfo(\"bool\"));\r\n        }\r\n        throw new Error(`Any() expects a vector argument. Line ${node.line}`);\r\n    }\r\n\r\n    Select(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        // select(false, true, condition)\r\n        const condition = this.exec.evalExpression(node.args[2], context);\r\n        if (!(condition instanceof ScalarData)) {\r\n            throw new Error(`Select() expects a bool condition. Line ${node.line}`);\r\n        }\r\n        if (!condition.value) {\r\n            return this.exec.evalExpression(node.args[0], context);\r\n        } else {\r\n            return this.exec.evalExpression(node.args[1], context);\r\n        }\r\n    }\r\n\r\n    // Array Built-in Functions\r\n    ArrayLength(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        let arrayArg = node.args[0];\r\n        // TODO: handle \"&\" operator\r\n        if (arrayArg instanceof UnaryOperator) {\r\n            arrayArg = (arrayArg as UnaryOperator).right;\r\n        }\r\n        const arrayData = this.exec.evalExpression(arrayArg, context);\r\n        if (arrayData instanceof TypedData && arrayData.typeInfo.size === 0) {\r\n            const ta = arrayData.typeInfo as ArrayInfo;\r\n            const count = arrayData.buffer.byteLength / ta.stride;\r\n            return new ScalarData(count, this.getTypeInfo(\"u32\"));\r\n        }\r\n        return new ScalarData(arrayData.typeInfo.size, this.getTypeInfo(\"u32\"));\r\n    }\r\n\r\n    // Numeric Built-in Functions\r\n    Abs(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.abs(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.abs(s.value), s.typeInfo);\r\n    }\r\n\r\n    Acos(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.acos(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.acos(s.value), value.typeInfo);\r\n    }\r\n\r\n    Acosh(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.acosh(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.acosh(s.value), value.typeInfo);\r\n    }\r\n\r\n    Asin(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.asin(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.asin(s.value), value.typeInfo);\r\n    }\r\n\r\n    Asinh(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.asinh(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.asinh(s.value), value.typeInfo);\r\n    }\r\n\r\n    Atan(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.atan(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.atan(s.value), value.typeInfo);\r\n    }\r\n\r\n    Atanh(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.atanh(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.atanh(s.value), value.typeInfo);\r\n    }\r\n\r\n    Atan2(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const y = this.exec.evalExpression(node.args[0], context);\r\n        const x = this.exec.evalExpression(node.args[1], context);\r\n        if (y instanceof VectorData && x instanceof VectorData) {\r\n            return new VectorData(y.data.map((v: number, i: number) => Math.atan2(v, x.data[i])), y.typeInfo);\r\n        }\r\n        const ys = y as ScalarData;\r\n        const xs = x as ScalarData;\r\n        return new ScalarData(Math.atan2(ys.value, xs.value), y.typeInfo);\r\n    }\r\n\r\n    Ceil(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.ceil(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.ceil(s.value), value.typeInfo);\r\n    }\r\n\r\n    _clamp(value: number, min: number, max: number): number {\r\n        return Math.min(Math.max(value, min), max);\r\n    }\r\n\r\n    Clamp(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        const min = this.exec.evalExpression(node.args[1], context);\r\n        const max = this.exec.evalExpression(node.args[2], context);\r\n        if (value instanceof VectorData && min instanceof VectorData && max instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number, i: number) => this._clamp(v, min.data[i], max.data[i])), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        const minS = min as ScalarData;\r\n        const maxS = max as ScalarData\r\n        return new ScalarData(this._clamp(s.value, minS.value, maxS.value), value.typeInfo);\r\n    }\r\n\r\n    Cos(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.cos(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.cos(s.value), value.typeInfo);\r\n    }\r\n\r\n    Cosh(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.cosh(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.cos(s.value), value.typeInfo);\r\n    }\r\n\r\n    CountLeadingZeros(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.clz32(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.clz32(s.value), value.typeInfo);\r\n    }\r\n\r\n    _countOneBits(value: number): number {\r\n        let count = 0;\r\n        while (value !== 0) {\r\n            if (value & 1) {\r\n                count++;\r\n            }\r\n            value >>= 1;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    CountOneBits(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => this._countOneBits(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(this._countOneBits(s.value), value.typeInfo);\r\n    }\r\n\r\n    _countTrailingZeros(value: number): number {\r\n        if (value === 0) {\r\n            return 32; // Special case for 0\r\n        }\r\n        let count = 0;\r\n        while ((value & 1) === 0) {\r\n            value >>= 1;\r\n            count++;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    CountTrailingZeros(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => this._countTrailingZeros(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(this._countTrailingZeros(s.value), value.typeInfo);\r\n    }\r\n\r\n    Cross(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const l = this.exec.evalExpression(node.args[0], context);\r\n        const r = this.exec.evalExpression(node.args[1], context);\r\n        if (l instanceof VectorData && r instanceof VectorData) {\r\n            if (l.data.length !== 3 || r.data.length !== 3) {\r\n                console.error(`Cross() expects 3D vectors. Line ${node.line}`);\r\n                return null;\r\n            }\r\n            const lv = l.data;\r\n            const rv = r.data;\r\n            return new VectorData([\r\n                lv[1] * rv[2] - rv[1] * lv[2],\r\n                lv[2] * rv[0] - rv[2] * lv[0],\r\n                lv[0] * rv[1] - rv[0] * lv[1],\r\n            ], l.typeInfo);\r\n        }\r\n        console.error(`Cross() expects vector arguments. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    Degrees(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        const radToDeg = 180.0 / Math.PI;\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => v * radToDeg), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(s.value * radToDeg, this.getTypeInfo(\"f32\"));\r\n    }\r\n\r\n    Determinant(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const m = this.exec.evalExpression(node.args[0], context);\r\n        if (m instanceof MatrixData) {\r\n            const mv = m.data;\r\n            const mt = m.typeInfo.getTypeName();\r\n            const isHalf = mt.endsWith(\"h\");\r\n            const formatType = isHalf ? this.getTypeInfo(\"f16\") : this.getTypeInfo(\"f32\");\r\n            if (mt === \"mat2x2\" || mt === \"mat2x2f\" || mt === \"mat2x2h\") {\r\n                return new ScalarData(mv[0] * mv[3] - mv[1] * mv[2], formatType);\r\n            } else if (mt === \"mat2x3\" || mt === \"mat2x3f\" || mt === \"mat2x3h\") {\r\n                return new ScalarData(mv[0] * (mv[4] * mv[8] - mv[5] * mv[7]) -\r\n                        mv[1] * (mv[3] * mv[8] - mv[5] * mv[6]) + mv[2] * (mv[3] * mv[7] - mv[4] * mv[6]), formatType);\r\n            } else if (mt === \"mat2x4\" || mt === \"mat2x4f\" || mt === \"mat2x4h\") {\r\n                console.error(`TODO: Determinant for ${mt}`);\r\n            } else if (mt === \"mat3x2\" || mt === \"mat3x2f\" || mt === \"mat3x2h\") {\r\n                console.error(`TODO: Determinant for ${mt}`);\r\n            } else if (mt === \"mat3x3\" || mt === \"mat3x3f\" || mt === \"mat3x3h\") {\r\n                return new ScalarData(mv[0] * (mv[4] * mv[8] - mv[5] * mv[7]) -\r\n                        mv[1] * (mv[3] * mv[8] - mv[5] * mv[6]) + mv[2] * (mv[3] * mv[7] - mv[4] * mv[6]), formatType);\r\n            } else if (mt === \"mat3x4\" || mt === \"mat3x4f\" || mt === \"mat3x4h\") {\r\n                console.error(`TODO: Determinant for ${mt}`);\r\n            } else if (mt === \"mat4x2\" || mt === \"mat4x2f\" || mt === \"mat4x2h\") {\r\n                console.error(`TODO: Determinant for ${mt}`);\r\n            } else if (mt === \"mat4x3\" || mt === \"mat4x3f\" || mt === \"mat4x3h\") {\r\n                console.error(`TODO: Determinant for ${mt}`);\r\n            } else if (mt === \"mat4x4\" || mt === \"mat4x4f\" || mt === \"mat4x4h\") {\r\n                console.error(`TODO: Determinant for ${mt}`);\r\n            }\r\n        }\r\n        console.error(`Determinant expects a matrix argument. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    Distance(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const l = this.exec.evalExpression(node.args[0], context);\r\n        const r = this.exec.evalExpression(node.args[1], context);\r\n        if (l instanceof VectorData && r instanceof VectorData) {\r\n            let sum = 0;\r\n            for (let i = 0; i < l.data.length; ++i) {\r\n                sum += (l.data[i] - r.data[i]) * (l.data[i] - r.data[i]);\r\n            }\r\n            return new ScalarData(Math.sqrt(sum), this.getTypeInfo(\"f32\"));\r\n        }\r\n        const ls = l as ScalarData;\r\n        const rs = r as ScalarData;\r\n        return new ScalarData(Math.abs(ls.value - rs.value), l.typeInfo);\r\n    }\r\n\r\n    _dot(e1: Int32Array | Uint32Array | Float32Array, e2: Int32Array | Uint32Array | Float32Array) {\r\n        let dot = 0;\r\n        for (let i = 0; i < e1.length; ++i) {\r\n            dot += e2[i] * e1[i];\r\n        }\r\n        return dot;\r\n    }\r\n\r\n    Dot(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const l = this.exec.evalExpression(node.args[0], context);\r\n        const r = this.exec.evalExpression(node.args[1], context);\r\n        if (l instanceof VectorData && r instanceof VectorData) {\r\n            return new ScalarData(this._dot(l.data, r.data), this.getTypeInfo(\"f32\"));\r\n        }\r\n        console.error(`Dot() expects vector arguments. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    Dot4U8Packed(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(`TODO: dot4U8Packed. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    Dot4I8Packed(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(`TODO: dot4I8Packed. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    Exp(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.exp(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.exp(s.value), value.typeInfo);\r\n    }\r\n\r\n    Exp2(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.pow(2, v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.pow(2, s.value), value.typeInfo);\r\n    }\r\n\r\n    ExtractBits(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        const offset = this.exec.evalExpression(node.args[1], context);\r\n        const count = this.exec.evalExpression(node.args[2], context);\r\n        if (offset.typeInfo.name !== \"u32\" && offset.typeInfo.name !== \"x32\") {\r\n            console.error(`ExtractBits() expects an i32 offset argument. Line ${node.line}`);\r\n            return null;\r\n        }\r\n        if (count.typeInfo.name !== \"u32\" && count.typeInfo.name !== \"x32\") {\r\n            console.error(`ExtractBits() expects an i32 count argument. Line ${node.line}`);\r\n            return null;\r\n        }\r\n\r\n        const o = (offset as ScalarData).value;\r\n        const c = (count as ScalarData).value;\r\n\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => (v >> o) & ((1 << c) - 1)), value.typeInfo);\r\n        }\r\n\r\n        if (value.typeInfo.name !== \"i32\" && value.typeInfo.name !== \"x32\") {\r\n            console.error(`ExtractBits() expects an i32 argument. Line ${node.line}`);\r\n            return null;\r\n        }\r\n        const v = (value as ScalarData).value;\r\n        return new ScalarData((v >> o) & ((1 << c) - 1), this.getTypeInfo(\"i32\"));\r\n    }\r\n\r\n    FaceForward(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const e1 = this.exec.evalExpression(node.args[0], context);\r\n        const e2 = this.exec.evalExpression(node.args[1], context);\r\n        const n = this.exec.evalExpression(node.args[2], context);\r\n        if (e1 instanceof VectorData && e2 instanceof VectorData && n instanceof VectorData) {\r\n            const dot = this._dot(e2.data, n.data);\r\n            if (dot < 0) {\r\n                return new VectorData(Array.from(e1.data), e1.typeInfo);\r\n            }\r\n            return new VectorData(e1.data.map((v: number) => -v), e1.typeInfo);\r\n        }\r\n        console.error(`FaceForward() expects vector arguments. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    _firstLeadingBit(s: number): number {\r\n        if (s === 0) {\r\n            return -1;\r\n        }\r\n        return 31 - Math.clz32(s);  // clz32: count leading zeros\r\n    }\r\n\r\n    FirstLeadingBit(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => this._firstLeadingBit(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(this._firstLeadingBit(s.value), value.typeInfo);\r\n    }\r\n\r\n    _firstTrailingBit(s: number): number {\r\n        if (s === 0) {\r\n            return -1;\r\n        }\r\n        return Math.log2(s & -s); // n & -n isolates the lowest set bit.  Math.log2 gives its position.\r\n    }\r\n\r\n    FirstTrailingBit(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => this._firstTrailingBit(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(this._firstTrailingBit(s.value), value.typeInfo);\r\n    }\r\n\r\n    Floor(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.floor(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.floor(s.value), value.typeInfo);\r\n    }\r\n\r\n    Fma(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const a = this.exec.evalExpression(node.args[0], context);\r\n        const b = this.exec.evalExpression(node.args[1], context);\r\n        const c = this.exec.evalExpression(node.args[2], context);\r\n        if (a instanceof VectorData && b instanceof VectorData && c instanceof VectorData) {\r\n            if (a.data.length !== b.data.length || a.data.length !== c.data.length) {\r\n                console.error(`Fma() expects vectors of the same length. Line ${node.line}`);\r\n                return null;\r\n            }\r\n            return new VectorData(a.data.map((v: number, i: number) => v * b.data[i] + c.data[i]), a.typeInfo);\r\n        }\r\n        const av = a as ScalarData;\r\n        const bv = b as ScalarData;\r\n        const cv = c as ScalarData;\r\n        return new ScalarData(av.value * bv.value + cv.value, av.typeInfo);\r\n    }\r\n\r\n    Fract(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => v - Math.floor(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(s.value - Math.floor(s.value), value.typeInfo);\r\n    }\r\n\r\n    Frexp(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(`TODO: frexp. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    InsertBits(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        const insert = this.exec.evalExpression(node.args[1], context);\r\n        const offset = this.exec.evalExpression(node.args[2], context);\r\n        const count = this.exec.evalExpression(node.args[3], context);\r\n\r\n        if (offset.typeInfo.name !== \"u32\" && offset.typeInfo.name !== \"x32\") {\r\n            console.error(`InsertBits() expects an i32 offset argument. Line ${node.line}`);\r\n            return null;\r\n        }\r\n\r\n        const o = (offset as ScalarData).value;\r\n        const c = (count as ScalarData).value;\r\n        const mask = ((1 << c) - 1) << o;\r\n        const invMask = ~mask;\r\n\r\n        if (value instanceof VectorData && insert instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number, i: number) => {\r\n                return (v & invMask) | ((insert.data[i] << o) & mask);\r\n            }), value.typeInfo);\r\n        }\r\n        const v = (value as ScalarData).value;\r\n        const i = (insert as ScalarData).value;\r\n        return new ScalarData((v & invMask) | ((i << o) & mask), value.typeInfo);\r\n    }\r\n\r\n    InverseSqrt(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => 1 / Math.sqrt(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(1 / Math.sqrt(s.value), value.typeInfo);\r\n    }\r\n\r\n    Ldexp(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(`TODO: ldexp. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    Length(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            let sum = 0;\r\n            value.data.forEach((v: number) => { sum += v * v; });\r\n            return new ScalarData(Math.sqrt(sum), this.getTypeInfo(\"f32\"));\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.abs(s.value), value.typeInfo);\r\n    }\r\n\r\n    Log(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.log(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.log(s.value), value.typeInfo);\r\n    }\r\n\r\n    Log2(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.log2(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData\r\n        return new ScalarData(Math.log2(s.value), value.typeInfo);\r\n    }\r\n\r\n    Max(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const l = this.exec.evalExpression(node.args[0], context);\r\n        const r = this.exec.evalExpression(node.args[1], context);\r\n        if (l instanceof VectorData && r instanceof VectorData) {\r\n            return new VectorData(l.data.map((v: number, i: number) => Math.max(v, r.data[i])), l.typeInfo);\r\n        }\r\n        const ls = l as ScalarData;\r\n        const rs = r as ScalarData;\r\n        return new ScalarData(Math.max(ls.value, rs.value), l.typeInfo);\r\n    }\r\n\r\n    Min(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const l = this.exec.evalExpression(node.args[0], context);\r\n        const r = this.exec.evalExpression(node.args[1], context);\r\n        if (l instanceof VectorData && r instanceof VectorData) {\r\n            return new VectorData(l.data.map((v: number, i: number) => Math.min(v, r.data[i])), l.typeInfo);\r\n        }\r\n        const ls = l as ScalarData;\r\n        const rs = r as ScalarData;\r\n        return new ScalarData(Math.min(ls.value, rs.value), l.typeInfo);\r\n    }\r\n\r\n    Mix(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const x = this.exec.evalExpression(node.args[0], context);\r\n        const y = this.exec.evalExpression(node.args[1], context);\r\n        const a = this.exec.evalExpression(node.args[2], context);\r\n        if (x instanceof VectorData && y instanceof VectorData && a instanceof VectorData) {\r\n            return new VectorData(x.data.map((v: number, i: number) => x.data[i] * (1 - a.data[i]) + y.data[i] * a.data[i]), x.typeInfo);\r\n        }\r\n        const xs = x as ScalarData;\r\n        const ys = y as ScalarData;\r\n        const as = a as ScalarData;\r\n        return new ScalarData(xs.value * (1 - as.value) + ys.value * as.value, x.typeInfo);\r\n    }\r\n\r\n    Modf(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const x = this.exec.evalExpression(node.args[0], context);\r\n        const y = this.exec.evalExpression(node.args[1], context);\r\n        if (x instanceof VectorData && y instanceof VectorData) {\r\n            return new VectorData(x.data.map((v: number, i: number) => v % y.data[i]), x.typeInfo);\r\n        }\r\n        const xs = x as ScalarData;\r\n        const ys = y as ScalarData;\r\n        return new ScalarData(xs.value % ys.value, x.typeInfo);\r\n    }\r\n\r\n    Normalize(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            const length = (this.Length(node, context) as ScalarData).value;\r\n            return new VectorData(value.data.map((v: number) => v / length), value.typeInfo);\r\n        }\r\n        console.error(`Normalize() expects a vector argument. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    Pow(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const x = this.exec.evalExpression(node.args[0], context);\r\n        const y = this.exec.evalExpression(node.args[1], context);\r\n        if (x instanceof VectorData && y instanceof VectorData) {\r\n            return new VectorData(x.data.map((v: number, i: number) => Math.pow(v, y.data[i])), x.typeInfo);\r\n        }\r\n        const xs = x as ScalarData;\r\n        const ys = y as ScalarData;\r\n        return new ScalarData(Math.pow(xs.value, ys.value), x.typeInfo);\r\n    }\r\n\r\n    QuantizeToF16(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        // TODO: actually quantize the f32 to f16\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => v), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(s.value, value.typeInfo);\r\n    }\r\n\r\n    Radians(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => v * Math.PI / 180), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(s.value * Math.PI / 180, this.getTypeInfo(\"f32\"));\r\n    }\r\n\r\n    Reflect(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        // e1 - 2 * dot(e2, e1) * e2\r\n        let e1 = this.exec.evalExpression(node.args[0], context);\r\n        let e2 = this.exec.evalExpression(node.args[1], context);\r\n        if (e1 instanceof VectorData && e2 instanceof VectorData) {\r\n            const dot = this._dot(e1.data, e2.data);\r\n            return new VectorData(e1.data.map((v: number, i: number) => v - 2 * dot * e2.data[i]), e1.typeInfo);\r\n        }\r\n        console.error(`Reflect() expects vector arguments. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    Refract(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        let e1 = this.exec.evalExpression(node.args[0], context);\r\n        let e2 = this.exec.evalExpression(node.args[1], context);\r\n        let e3 = this.exec.evalExpression(node.args[2], context);\r\n        if (e1 instanceof VectorData && e2 instanceof VectorData && e3 instanceof ScalarData) {\r\n            const dot = this._dot(e2.data, e1.data);\r\n            return new VectorData(e1.data.map((v: number, i: number) => {\r\n                const k = 1.0 - e3.value * e3.value * (1.0 - dot * dot);\r\n                if (k < 0) {\r\n                    return 0;\r\n                }\r\n                const sqrtK = Math.sqrt(k);\r\n                return e3.value * v - (e3.value * dot + sqrtK) * e2.data[i];\r\n            }), e1.typeInfo);\r\n        }\r\n\r\n        console.error(`Refract() expects vector arguments and a scalar argument. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    ReverseBits(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(`TODO: reverseBits. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    Round(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.round(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.round(s.value), value.typeInfo);\r\n    }\r\n\r\n    Saturate(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.min(Math.max(v, 0), 1)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.min(Math.max(s.value, 0), 1), value.typeInfo);\r\n    }\r\n\r\n    Sign(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.sign(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.sign(s.value), value.typeInfo);\r\n    }\r\n\r\n    Sin(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.sin(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.sin(s.value), value.typeInfo);\r\n    }\r\n\r\n    Sinh(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.sinh(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.sinh(s.value), value.typeInfo);\r\n    }\r\n\r\n    _smoothstep(edge0: number, edge1: number, x: number): number {\r\n        const t = Math.min(Math.max((x - edge0) / (edge1 - edge0), 0), 1);\r\n        return t * t * (3 - 2 * t);\r\n    }\r\n\r\n    SmoothStep(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const edge0 = this.exec.evalExpression(node.args[0], context);\r\n        const edge1 = this.exec.evalExpression(node.args[1], context);\r\n        const x = this.exec.evalExpression(node.args[2], context);\r\n        if (x instanceof VectorData && edge0 instanceof VectorData && edge1 instanceof VectorData) {\r\n            return new VectorData(x.data.map((v: number, i: number) => this._smoothstep(edge0.data[i], edge1.data[i], v)), x.typeInfo);\r\n        }\r\n        const e0 = edge0 as ScalarData;\r\n        const e1 = edge1 as ScalarData;\r\n        const xS = x as ScalarData;\r\n        return new ScalarData(this._smoothstep(e0.value, e1.value, xS.value), x.typeInfo);\r\n    }\r\n\r\n    Sqrt(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.sqrt(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.sqrt(s.value), value.typeInfo);\r\n    }\r\n\r\n    Step(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const edge = this.exec.evalExpression(node.args[0], context);\r\n        const x = this.exec.evalExpression(node.args[1], context);\r\n        if (x instanceof VectorData && edge instanceof VectorData) {\r\n            return new VectorData(x.data.map((v: number, i: number) => v < edge.data[i] ? 0 : 1), x.typeInfo);\r\n        }\r\n        const e = edge as ScalarData;\r\n        const s = x as ScalarData;\r\n        return new ScalarData(s.value < e.value ? 0 : 1, e.typeInfo);\r\n    }\r\n\r\n    Tan(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.tan(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.tan(s.value), value.typeInfo);\r\n    }\r\n\r\n    Tanh(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.tanh(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData;\r\n        return new ScalarData(Math.tanh(s.value), value.typeInfo);\r\n    }\r\n\r\n    _getTransposeType(t: TypeInfo): TypeInfo {\r\n        const tname = t.getTypeName();\r\n        if (tname === \"mat2x2f\" || tname === \"mat2x2h\") {\r\n            return t;\r\n        } else if (tname === \"mat2x3f\") {\r\n            return this.getTypeInfo(\"mat3x2f\");\r\n        } else if (tname === \"mat2x3h\") {\r\n            return this.getTypeInfo(\"mat3x2h\");\r\n        } else if (tname === \"mat2x4f\") {\r\n            return this.getTypeInfo(\"mat4x2f\");\r\n        } else if (tname === \"mat2x4h\") {\r\n            return this.getTypeInfo(\"mat4x2h\");\r\n        } else if (tname === \"mat3x2f\") {\r\n            return this.getTypeInfo(\"mat2x3f\");\r\n        } else if (tname === \"mat3x2h\") {\r\n            return this.getTypeInfo(\"mat2x3h\");\r\n        } else if (tname === \"mat3x3f\" || tname === \"mat3x3h\") {\r\n            return t;\r\n        } else if (tname === \"mat3x4f\") {\r\n            return this.getTypeInfo(\"mat4x3f\");\r\n        } else if (tname === \"mat3x4h\") {\r\n            return this.getTypeInfo(\"mat4x3h\");\r\n        } else if (tname === \"mat4x2f\") {\r\n            return this.getTypeInfo(\"mat2x4f\");\r\n        } else if (tname === \"mat4x2h\") {\r\n            return this.getTypeInfo(\"mat2x4h\");\r\n        } else if (tname === \"mat4x3f\") {\r\n            return this.getTypeInfo(\"mat3x4f\");\r\n        } else if (tname === \"mat4x3h\") {\r\n            return this.getTypeInfo(\"mat3x4h\");\r\n        } else if (tname === \"mat4x4f\" || tname === \"mat4x4h\") {\r\n            return t;\r\n        }\r\n\r\n        console.error(`Invalid matrix type ${tname}`);\r\n        return t;\r\n    }\r\n\r\n    Transpose(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const m = this.exec.evalExpression(node.args[0], context);\r\n        if (!(m instanceof MatrixData)) {\r\n            console.error(`Transpose() expects a matrix argument. Line ${node.line}`);\r\n            return null;\r\n        }\r\n\r\n        const ttype = this._getTransposeType(m.typeInfo);\r\n\r\n        if (m.typeInfo.name === \"mat2x2\" || m.typeInfo.name === \"mat2x2f\" || m.typeInfo.name === \"mat2x2h\") {\r\n            const mv = m.data;\r\n            return new MatrixData([mv[0], mv[2], mv[1], mv[3]], ttype);\r\n        } else if (m.typeInfo.name === \"mat2x3\" || m.typeInfo.name === \"mat2x3f\" || m.typeInfo.name === \"mat2x3h\") {\r\n            const mv = m.data;\r\n            return new MatrixData([mv[0], mv[3], mv[6], mv[1], mv[4], mv[7]], ttype);\r\n        } else if (m.typeInfo.name === \"mat2x4\" || m.typeInfo.name === \"mat2x4f\" || m.typeInfo.name === \"mat2x4h\") {\r\n            const mv = m.data;\r\n            return new MatrixData([mv[0], mv[4], mv[8], mv[12], mv[1], mv[5], mv[9], mv[13]], ttype);\r\n        } else if (m.typeInfo.name === \"mat3x2\" || m.typeInfo.name === \"mat3x2f\" || m.typeInfo.name === \"mat3x2h\") {\r\n            const mv = m.data;\r\n            return new MatrixData([mv[0], mv[3], mv[1], mv[4], mv[2], mv[5]], ttype);\r\n        } else if (m.typeInfo.name === \"mat3x3\" || m.typeInfo.name === \"mat3x3f\" || m.typeInfo.name === \"mat3x3h\") {\r\n            const mv = m.data;\r\n            return new MatrixData([mv[0], mv[3], mv[6], mv[1], mv[4], mv[7], mv[2], mv[5], mv[8]], ttype);\r\n        } else if (m.typeInfo.name === \"mat3x4\" || m.typeInfo.name === \"mat3x4f\" || m.typeInfo.name === \"mat3x4h\") {\r\n            const mv = m.data;\r\n            return new MatrixData([mv[0], mv[4], mv[8], mv[12], mv[1], mv[5], mv[9], mv[13], mv[2], mv[6], mv[10], mv[14]], ttype);\r\n        } else if (m.typeInfo.name === \"mat4x2\" || m.typeInfo.name === \"mat4x2f\" || m.typeInfo.name === \"mat4x2h\") {\r\n            const mv = m.data;\r\n            return new MatrixData([mv[0], mv[4], mv[1], mv[5], mv[2], mv[6]], ttype);\r\n        } else if (m.typeInfo.name === \"mat4x3\" || m.typeInfo.name === \"mat4x3f\" || m.typeInfo.name === \"mat4x3h\") {\r\n            const mv = m.data;\r\n            return new MatrixData([mv[0], mv[4], mv[8], mv[1], mv[5], mv[9], mv[2], mv[6], mv[10]], ttype);\r\n        } else if (m.typeInfo.name === \"mat4x4\" || m.typeInfo.name === \"mat4x4f\" || m.typeInfo.name === \"mat4x4h\") {\r\n            const mv = m.data;\r\n            return new MatrixData([mv[0], mv[4], mv[8], mv[12],\r\n                                   mv[1], mv[5], mv[9], mv[13],\r\n                                   mv[2], mv[6], mv[10], mv[14],\r\n                                   mv[3], mv[7], mv[11], mv[15]], ttype);\r\n        }\r\n\r\n        console.error(`Invalid matrix type ${m.typeInfo.name}`);\r\n        return null;\r\n    }\r\n\r\n    Trunc(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const value = this.exec.evalExpression(node.args[0], context);\r\n        if (value instanceof VectorData) {\r\n            return new VectorData(value.data.map((v: number) => Math.trunc(v)), value.typeInfo);\r\n        }\r\n        const s = value as ScalarData\r\n        return new ScalarData(Math.trunc(s.value), value.typeInfo);\r\n    }\r\n\r\n    // Derivative Built-in Functions\r\n    Dpdx(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(`TODO: dpdx. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    DpdxCoarse(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(`TODO: dpdxCoarse. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    DpdxFine(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: dpdxFine\");\r\n        return null;\r\n    }\r\n\r\n    Dpdy(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: dpdy\");\r\n        return null;\r\n    }\r\n\r\n    DpdyCoarse(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: dpdyCoarse\");\r\n        return null;\r\n    }\r\n\r\n    DpdyFine(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: dpdyFine\");\r\n        return null;\r\n    }\r\n\r\n    Fwidth(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: fwidth\");\r\n        return null;\r\n    }\r\n\r\n    FwidthCoarse(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: fwidthCoarse\");\r\n        return null;\r\n    }\r\n\r\n    FwidthFine(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: fwidthFine\");\r\n        return null;\r\n    }\r\n\r\n    // Texture Built-in Functions\r\n    TextureDimensions(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const textureArg = node.args[0];\r\n        const level = node.args.length > 1 ? (this.exec.evalExpression(node.args[1], context) as ScalarData).value : 0;\r\n        if (textureArg instanceof VariableExpr) {\r\n            const textureName = (textureArg as VariableExpr).name;\r\n            const texture = context.getVariableValue(textureName);\r\n            if (texture instanceof TextureData) {\r\n                if (level < 0 || level >= texture.mipLevelCount) {\r\n                    console.error(`Invalid mip level for textureDimensions. Line ${node.line}`);\r\n                    return null;\r\n                }\r\n\r\n                const textureSize = texture.getMipLevelSize(level);\r\n\r\n                const dimension = texture.dimension;\r\n\r\n                if (dimension === \"1d\") {\r\n                    return new ScalarData(textureSize[0], this.getTypeInfo(\"u32\"));\r\n                } else if (dimension === \"3d\") {\r\n                    return new VectorData(textureSize, this.getTypeInfo(\"vec3u\"));\r\n                } else if (dimension === \"2d\") {\r\n                    return new VectorData(textureSize.slice(0, 2), this.getTypeInfo(\"vec2u\"));\r\n                } else {\r\n                    console.error(`Invalid texture dimension ${dimension} not found. Line ${node.line}`);\r\n                    return null;\r\n                }\r\n            } else {\r\n                console.error(`Texture ${textureName} not found. Line ${node.line}`);\r\n                return null;\r\n            }\r\n        }\r\n        console.error(`Invalid texture argument for textureDimensions. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    TextureGather(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: textureGather\");\r\n        return null;\r\n    }\r\n\r\n    TextureGatherCompare(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: textureGatherCompare\");\r\n        return null;\r\n    }\r\n\r\n    TextureLoad(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const textureArg = node.args[0];\r\n        const uv = this.exec.evalExpression(node.args[1], context);\r\n        const level = node.args.length > 2 ? (this.exec.evalExpression(node.args[2], context) as ScalarData).value : 0;\r\n\r\n        // TODO: non-vec2 UVs, for non-2D textures\r\n        if (!(uv instanceof VectorData) || uv.data.length !== 2) {\r\n            console.error(`Invalid UV argument for textureLoad. Line ${node.line}`);\r\n            return null;\r\n        }\r\n\r\n        if (textureArg instanceof VariableExpr) {\r\n            const textureName = (textureArg as VariableExpr).name;\r\n            const texture = context.getVariableValue(textureName);\r\n            if (texture instanceof TextureData) {\r\n                const x = Math.floor(uv.data[0]);\r\n                const y = Math.floor(uv.data[1]);\r\n                if (x < 0 || x >= texture.width || y < 0 || y >= texture.height) {\r\n                    console.error(`Texture ${textureName} out of bounds. Line ${node.line}`);\r\n                    return null;\r\n                }\r\n\r\n                const texel = texture.getPixel(x, y, 0, level);\r\n                if (texel === null) {\r\n                    console.error(`Invalid texture format for textureLoad. Line ${node.line}`);\r\n                    return null;\r\n                }\r\n\r\n                return new VectorData(texel, this.getTypeInfo(\"vec4f\"));\r\n            } else {\r\n                console.error(`Texture ${textureName} not found. Line ${node.line}`);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        console.error(`Invalid texture argument for textureLoad. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    TextureNumLayers(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const textureArg = node.args[0];\r\n        if (textureArg instanceof VariableExpr) {\r\n            const textureName = (textureArg as VariableExpr).name;\r\n            const texture = context.getVariableValue(textureName);\r\n            if (texture instanceof TextureData) {\r\n                return new ScalarData(texture.depthOrArrayLayers, this.getTypeInfo(\"u32\"));\r\n            } else {\r\n                console.error(`Texture ${textureName} not found. Line ${node.line}`);\r\n                return null;\r\n            }\r\n        }\r\n        console.error(`Invalid texture argument for textureNumLayers. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    TextureNumLevels(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const textureArg = node.args[0];\r\n        if (textureArg instanceof VariableExpr) {\r\n            const textureName = (textureArg as VariableExpr).name;\r\n            const texture = context.getVariableValue(textureName);\r\n            if (texture instanceof TextureData) {\r\n                return new ScalarData(texture.mipLevelCount, this.getTypeInfo(\"u32\"));\r\n            } else {\r\n                console.error(`Texture ${textureName} not found. Line ${node.line}`);\r\n                return null;\r\n            }\r\n        }\r\n        console.error(`Invalid texture argument for textureNumLevels. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    TextureNumSamples(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const textureArg = node.args[0];\r\n        if (textureArg instanceof VariableExpr) {\r\n            const textureName = (textureArg as VariableExpr).name;\r\n            const texture = context.getVariableValue(textureName);\r\n            if (texture instanceof TextureData) {\r\n                return new ScalarData(texture.sampleCount, this.getTypeInfo(\"u32\"));\r\n            } else {\r\n                console.error(`Texture ${textureName} not found. Line ${node.line}`);\r\n                return null;\r\n            }\r\n        }\r\n        console.error(`Invalid texture argument for textureNumSamples. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    TextureSample(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: textureSample\");\r\n        return null;\r\n    }\r\n\r\n    TextureSampleBias(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: textureSampleBias\");\r\n        return null;\r\n    }\r\n\r\n    TextureSampleCompare(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: textureSampleCompare\");\r\n        return null;\r\n    }\r\n\r\n    TextureSampleCompareLevel(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: textureSampleCompareLevel\");\r\n        return null;\r\n    }\r\n\r\n    TextureSampleGrad(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: textureSampleGrad\");\r\n        return null;\r\n    }\r\n\r\n    TextureSampleLevel(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: textureSampleLevel\");\r\n        return null;\r\n    }\r\n\r\n    TextureSampleBaseClampToEdge(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: textureSampleBaseClampToEdge\");\r\n        return null;\r\n    }\r\n\r\n    TextureStore(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        const textureArg = node.args[0];\r\n        const uv = this.exec.evalExpression(node.args[1], context);\r\n        const index = (node.args.length === 4) ? (this.exec.evalExpression(node.args[2], context) as ScalarData).value : 0;\r\n        const value = (node.args.length === 4) ? (this.exec.evalExpression(node.args[3], context) as VectorData).data :\r\n            (this.exec.evalExpression(node.args[2], context) as VectorData).data;\r\n\r\n        if (value.length !== 4) {\r\n            console.error(`Invalid value argument for textureStore. Line ${node.line}`);\r\n            return null;\r\n        }\r\n\r\n        // TODO: non-vec2 UVs, for non-2D textures\r\n        if (!(uv instanceof VectorData) || uv.data.length !== 2) {\r\n            console.error(`Invalid UV argument for textureStore. Line ${node.line}`);\r\n            return null;\r\n        }\r\n\r\n        if (textureArg instanceof VariableExpr) {\r\n            const textureName = (textureArg as VariableExpr).name;\r\n            const texture = context.getVariableValue(textureName);\r\n            if (texture instanceof TextureData) {\r\n                const textureSize = texture.getMipLevelSize(0);\r\n                const x = Math.floor(uv.data[0]);\r\n                const y = Math.floor(uv.data[1]);\r\n                if (x < 0 || x >= textureSize[0] || y < 0 || y >= textureSize[1]) {\r\n                    console.error(`Texture ${textureName} out of bounds. Line ${node.line}`);\r\n                    return null;\r\n                }\r\n\r\n                texture.setPixel(x, y, 0, index, Array.from(value));\r\n\r\n                return null;\r\n            } else {\r\n                console.error(`Texture ${textureName} not found. Line ${node.line}`);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        console.error(`Invalid texture argument for textureStore. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    // Atomic Built-in Functions\r\n    AtomicLoad(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        let l = node.args[0];\r\n        if (l instanceof UnaryOperator) {\r\n            l = l.right;\r\n        }\r\n\r\n        const name = this.exec.getVariableName(l, context);\r\n        const v = context.getVariable(name);\r\n\r\n        const currentValue = v.value.getSubData(this.exec, l.postfix, context);\r\n        return currentValue;\r\n    }\r\n\r\n    AtomicStore(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        let l = node.args[0];\r\n        if (l instanceof UnaryOperator) {\r\n            l = l.right;\r\n        }\r\n\r\n        const name = this.exec.getVariableName(l, context);\r\n        const v = context.getVariable(name);\r\n\r\n        let r = node.args[1];\r\n        const value = this.exec.evalExpression(r, context);\r\n\r\n        const currentValue = v.value.getSubData(this.exec, l.postfix, context);\r\n\r\n        if (currentValue instanceof ScalarData && value instanceof ScalarData) {\r\n            currentValue.value = value.value;\r\n        }\r\n\r\n        if (v.value instanceof TypedData) {\r\n            v.value.setDataValue(this.exec, currentValue, l.postfix, context);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    AtomicAdd(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        let l = node.args[0];\r\n        if (l instanceof UnaryOperator) {\r\n            l = l.right;\r\n        }\r\n\r\n        const name = this.exec.getVariableName(l, context);\r\n        const v = context.getVariable(name);\r\n\r\n        let r = node.args[1];\r\n        const value = this.exec.evalExpression(r, context);\r\n\r\n        const currentValue = v.value.getSubData(this.exec, l.postfix, context);\r\n        const originalValue = new ScalarData((currentValue as ScalarData).value, currentValue.typeInfo);\r\n\r\n        if (currentValue instanceof ScalarData && value instanceof ScalarData) {\r\n            currentValue.value += value.value;\r\n        }\r\n\r\n        if (v.value instanceof TypedData) {\r\n            v.value.setDataValue(this.exec, currentValue, l.postfix, context);\r\n        }\r\n\r\n        return originalValue;\r\n    }\r\n\r\n    AtomicSub(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        let l = node.args[0];\r\n        if (l instanceof UnaryOperator) {\r\n            l = l.right;\r\n        }\r\n\r\n        const name = this.exec.getVariableName(l, context);\r\n        const v = context.getVariable(name);\r\n\r\n        let r = node.args[1];\r\n        const value = this.exec.evalExpression(r, context);\r\n\r\n        const currentValue = v.value.getSubData(this.exec, l.postfix, context);\r\n        const originalValue = new ScalarData((currentValue as ScalarData).value, currentValue.typeInfo);\r\n\r\n        if (currentValue instanceof ScalarData && value instanceof ScalarData) {\r\n            currentValue.value -= value.value;\r\n        }\r\n\r\n        if (v.value instanceof TypedData) {\r\n            v.value.setDataValue(this.exec, currentValue, l.postfix, context);\r\n        }\r\n\r\n        return originalValue;\r\n    }\r\n\r\n    AtomicMax(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        let l = node.args[0];\r\n        if (l instanceof UnaryOperator) {\r\n            l = l.right;\r\n        }\r\n\r\n        const name = this.exec.getVariableName(l, context);\r\n        const v = context.getVariable(name);\r\n\r\n        let r = node.args[1];\r\n        const value = this.exec.evalExpression(r, context);\r\n\r\n        const currentValue = v.value.getSubData(this.exec, l.postfix, context);\r\n\r\n        const originalValue = new ScalarData((currentValue as ScalarData).value, currentValue.typeInfo);\r\n\r\n        if (currentValue instanceof ScalarData && value instanceof ScalarData) {\r\n            currentValue.value = Math.max(currentValue.value, value.value);\r\n        }\r\n\r\n        if (v.value instanceof TypedData) {\r\n            v.value.setDataValue(this.exec, currentValue, l.postfix, context);\r\n        }\r\n\r\n        return originalValue;\r\n    }\r\n\r\n    AtomicMin(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        let l = node.args[0];\r\n        if (l instanceof UnaryOperator) {\r\n            l = l.right;\r\n        }\r\n\r\n        const name = this.exec.getVariableName(l, context);\r\n        const v = context.getVariable(name);\r\n\r\n        let r = node.args[1];\r\n        const value = this.exec.evalExpression(r, context);\r\n\r\n        const currentValue = v.value.getSubData(this.exec, l.postfix, context);\r\n\r\n        const originalValue = new ScalarData((currentValue as ScalarData).value, currentValue.typeInfo);\r\n\r\n        if (currentValue instanceof ScalarData && value instanceof ScalarData) {\r\n            currentValue.value = Math.min(currentValue.value, value.value);\r\n        }\r\n\r\n        if (v.value instanceof TypedData) {\r\n            v.value.setDataValue(this.exec, currentValue, l.postfix, context);\r\n        }\r\n\r\n        return originalValue;\r\n    }\r\n\r\n    AtomicAnd(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        let l = node.args[0];\r\n        if (l instanceof UnaryOperator) {\r\n            l = l.right;\r\n        }\r\n\r\n        const name = this.exec.getVariableName(l, context);\r\n        const v = context.getVariable(name);\r\n\r\n        let r = node.args[1];\r\n        const value = this.exec.evalExpression(r, context);\r\n\r\n        const currentValue = v.value.getSubData(this.exec, l.postfix, context);\r\n\r\n        const originalValue = new ScalarData((currentValue as ScalarData).value, currentValue.typeInfo);\r\n\r\n        if (currentValue instanceof ScalarData && value instanceof ScalarData) {\r\n            currentValue.value = currentValue.value & value.value;\r\n        }\r\n\r\n        if (v.value instanceof TypedData) {\r\n            v.value.setDataValue(this.exec, currentValue, l.postfix, context);\r\n        }\r\n\r\n        return originalValue;\r\n    }\r\n\r\n    AtomicOr(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        let l = node.args[0];\r\n        if (l instanceof UnaryOperator) {\r\n            l = l.right;\r\n        }\r\n\r\n        const name = this.exec.getVariableName(l, context);\r\n        const v = context.getVariable(name);\r\n\r\n        let r = node.args[1];\r\n        const value = this.exec.evalExpression(r, context);\r\n\r\n        const currentValue = v.value.getSubData(this.exec, l.postfix, context);\r\n\r\n        const originalValue = new ScalarData((currentValue as ScalarData).value, currentValue.typeInfo);\r\n\r\n        if (currentValue instanceof ScalarData && value instanceof ScalarData) {\r\n            currentValue.value = currentValue.value | value.value;\r\n        }\r\n\r\n        if (v.value instanceof TypedData) {\r\n            v.value.setDataValue(this.exec, currentValue, l.postfix, context);\r\n        }\r\n\r\n        return originalValue;\r\n    }\r\n\r\n    AtomicXor(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        let l = node.args[0];\r\n        if (l instanceof UnaryOperator) {\r\n            l = l.right;\r\n        }\r\n\r\n        const name = this.exec.getVariableName(l, context);\r\n        const v = context.getVariable(name);\r\n\r\n        let r = node.args[1];\r\n        const value = this.exec.evalExpression(r, context);\r\n\r\n        const currentValue = v.value.getSubData(this.exec, l.postfix, context);\r\n\r\n        const originalValue = new ScalarData((currentValue as ScalarData).value, currentValue.typeInfo);\r\n\r\n        if (currentValue instanceof ScalarData && value instanceof ScalarData) {\r\n            currentValue.value = currentValue.value ^ value.value;\r\n        }\r\n\r\n        if (v.value instanceof TypedData) {\r\n            v.value.setDataValue(this.exec, currentValue, l.postfix, context);\r\n        }\r\n\r\n        return originalValue;\r\n    }\r\n\r\n    AtomicExchange(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        let l = node.args[0];\r\n        if (l instanceof UnaryOperator) {\r\n            l = l.right;\r\n        }\r\n\r\n        const name = this.exec.getVariableName(l, context);\r\n        const v = context.getVariable(name);\r\n\r\n        let r = node.args[1];\r\n        const value = this.exec.evalExpression(r, context);\r\n\r\n        const currentValue = v.value.getSubData(this.exec, l.postfix, context);\r\n\r\n        const originalValue = new ScalarData((currentValue as ScalarData).value, currentValue.typeInfo);\r\n\r\n        if (currentValue instanceof ScalarData && value instanceof ScalarData) {\r\n            currentValue.value = value.value;\r\n        }\r\n\r\n        if (v.value instanceof TypedData) {\r\n            v.value.setDataValue(this.exec, currentValue, l.postfix, context);\r\n        }\r\n\r\n        return originalValue;\r\n    }\r\n\r\n    AtomicCompareExchangeWeak(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: atomicCompareExchangeWeak\");\r\n        return null;\r\n    }\r\n\r\n    // Data Packing Built-in Functions\r\n    Pack4x8snorm(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: pack4x8snorm\");\r\n        return null;\r\n    }\r\n\r\n    Pack4x8unorm(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: pack4x8unorm\");\r\n        return null;\r\n    }\r\n\r\n    Pack4xI8(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: pack4xI8\");\r\n        return null;\r\n    }\r\n\r\n    Pack4xU8(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: pack4xU8\");\r\n        return null;\r\n    }\r\n\r\n    Pack4x8Clamp(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: pack4x8Clamp\");\r\n        return null;\r\n    }\r\n\r\n    Pack4xU8Clamp(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: pack4xU8Clamp\");\r\n        return null;\r\n    }\r\n\r\n    Pack2x16snorm(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: pack2x16snorm\");\r\n        return null;\r\n    }\r\n\r\n    Pack2x16unorm(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: pack2x16unorm\");\r\n        return null;\r\n    }\r\n\r\n    Pack2x16float(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: pack2x16float\");\r\n        return null;\r\n    }\r\n\r\n    // Data Unpacking Built-in Functions\r\n    Unpack4x8snorm(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: unpack4x8snorm\");\r\n        return null;\r\n    }\r\n\r\n    Unpack4x8unorm(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: unpack4x8unorm\");\r\n        return null;\r\n    }\r\n\r\n    Unpack4xI8(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: unpack4xI8\");\r\n        return null;\r\n    }\r\n\r\n    Unpack4xU8(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: unpack4xU8\");\r\n        return null;\r\n    }\r\n\r\n    Unpack2x16snorm(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: unpack2x16snorm\");\r\n        return null;\r\n    }\r\n\r\n    Unpack2x16unorm(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: unpack2x16unorm\");\r\n        return null;\r\n    }\r\n\r\n    Unpack2x16float(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: unpack2x16float\");\r\n        return null;\r\n    }\r\n\r\n    // Synchronization Functions\r\n    StorageBarrier(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        // Execution is single threaded, barriers not necessary.\r\n        return null;\r\n    }\r\n\r\n    TextureBarrier(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        // Execution is single threaded, barriers not necessary.\r\n        return null;\r\n    }\r\n\r\n    WorkgroupBarrier(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        // Execution is single threaded, barriers not necessary.\r\n        return null;\r\n    }\r\n\r\n    WorkgroupUniformLoad(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        // Execution is single threaded, barriers not necessary.\r\n        return null;\r\n    }\r\n\r\n    // Subgroup Functions\r\n    SubgroupAdd(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupAdd\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupExclusiveAdd(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupExclusiveAdd\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupInclusiveAdd(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupInclusiveAdd\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupAll(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupAll\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupAnd(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupAnd\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupAny(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupAny\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupBallot(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupBallot\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupBroadcast(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupBroadcast\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupBroadcastFirst(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupBroadcastFirst\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupElect(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupElect\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupMax(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupMax\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupMin(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupMin\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupMul(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupMul\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupExclusiveMul(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupExclusiveMul\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupInclusiveMul(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupInclusiveMul\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupOr(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupOr\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupShuffle(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupShuffle\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupShuffleDown(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupShuffleDown\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupShuffleUp(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupShuffleUp\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupShuffleXor(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupShuffleXor\");\r\n        return null;\r\n    }\r\n\r\n    SubgroupXor(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: subgroupXor\");\r\n        return null;\r\n    }\r\n\r\n    // Quad Functions\r\n    QuadBroadcast(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: quadBroadcast\");\r\n        return null;\r\n    }\r\n\r\n    QuadSwapDiagonal(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: quadSwapDiagonal\");\r\n        return null;\r\n    }\r\n\r\n    QuadSwapX(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: quadSwapX\");\r\n        return null;\r\n    }\r\n\r\n    QuadSwapY(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        console.error(\"TODO: quadSwapY\");\r\n        return null;\r\n    }\r\n}\r\n", "import { TypeInfo } from '../reflect/info';\r\n\r\nexport const VectorTypeSize = {\r\n    \"vec2\": 2, \"vec2f\": 2, \"vec2i\": 2, \"vec2u\": 2, \"vec2b\": 2, \"vec2h\": 2,\r\n    \"vec3\": 3, \"vec3f\": 3, \"vec3i\": 3, \"vec3u\": 3, \"vec3b\": 3, \"vec3h\": 3,\r\n    \"vec4\": 4, \"vec4f\": 4, \"vec4i\": 4, \"vec4u\": 4, \"vec4b\": 4, \"vec4h\": 4\r\n};\r\n\r\nexport const MatrixTypeSize = {\r\n    \"mat2x2\": [2, 2, 4], \"mat2x2f\": [2, 2, 4], \"mat2x2h\": [2, 2, 4],\r\n    \"mat2x3\": [2, 3, 6], \"mat2x3f\": [2, 3, 6], \"mat2x3h\": [2, 3, 6],\r\n    \"mat2x4\": [2, 4, 8], \"mat2x4f\": [2, 4, 8], \"mat2x4h\": [2, 4, 8],\r\n    \"mat3x2\": [3, 2, 6], \"mat3x2f\": [3, 2, 6], \"mat3x2h\": [3, 2, 6],\r\n    \"mat3x3\": [3, 3, 9], \"mat3x3f\": [3, 3, 9], \"mat3x3h\": [3, 3, 9],\r\n    \"mat3x4\": [3, 4, 12], \"mat3x4f\": [3, 4, 12], \"mat3x4h\": [3, 4, 12],\r\n    \"mat4x2\": [4, 2, 8], \"mat4x2f\": [4, 2, 8], \"mat4x2h\": [4, 2, 8],\r\n    \"mat4x3\": [4, 3, 12], \"mat4x3f\": [4, 3, 12], \"mat4x3h\": [4, 3, 12],\r\n    \"mat4x4\": [4, 4, 16], \"mat4x4f\": [4, 4, 16], \"mat4x4h\": [4, 4, 16]\r\n};\r\n\r\nexport const MatrixTransposeType = {\r\n    \"mat2x2\": \"mat2x2\", \"mat2x2f\": \"mat2x2f\", \"mat2x2h\": \"mat2x2h\",\r\n    \"mat2x3\": \"mat3x2\", \"mat2x3f\": \"mat3x2f\", \"mat2x3h\": \"mat3x2h\",\r\n    \"mat2x4\": \"mat4x2\", \"mat2x4f\": \"mat4x2f\", \"mat2x4h\": \"mat4x2h\",\r\n    \"mat3x2\": \"mat2x3\", \"mat3x2f\": \"mat2x3f\", \"mat3x2h\": \"mat2x3h\",\r\n    \"mat3x3\": \"mat3x3\", \"mat3x3f\": \"mat3x3f\", \"mat3x3h\": \"mat3x3h\",\r\n    \"mat3x4\": \"mat4x3\", \"mat3x4f\": \"mat4x3f\", \"mat3x4h\": \"mat4x3h\",\r\n    \"mat4x2\": \"mat2x4\", \"mat4x2f\": \"mat2x4f\", \"mat4x2h\": \"mat2x4h\",\r\n    \"mat4x3\": \"mat4x3\", \"mat4x3f\": \"mat4x3f\", \"mat4x3h\": \"mat4x3h\",\r\n    \"mat4x4\": \"mat4x4\", \"mat4x4f\": \"mat4x4f\", \"mat4x4h\": \"mat4x4h\"\r\n};\r\n\r\nexport function matrixTranspose(matrix: number[], t: TypeInfo) {\r\n    if (MatrixTypeSize[t.name] === undefined) {\r\n        return null;\r\n    }\r\n\r\n    const cols = MatrixTypeSize[t.name][0];\r\n    const rows = MatrixTypeSize[t.name][1];\r\n    const result: number[] = [];\r\n\r\n    for (let i = 0; i < cols; i++) {\r\n        for (let j = 0; j < rows; j++) {\r\n            result[i * rows + j] = matrix[j * cols + i];\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function matrixMultiply(matrixA: number[], t1: TypeInfo, matrixB: number[], t2: TypeInfo): number[] | null {\r\n  if (MatrixTypeSize[t1.name] === undefined || MatrixTypeSize[t2.name] === undefined) {\r\n    return null;\r\n  }\r\n\r\n  const k = MatrixTypeSize[t1.name][0];\r\n  const r = MatrixTypeSize[t1.name][1];\r\n  const c = MatrixTypeSize[t2.name][0];\r\n  const k2 = MatrixTypeSize[t2.name][1];\r\n\r\n  if (k !== k2) {\r\n    return null;\r\n  }\r\n\r\n  const result: number[] = new Array(c * r);\r\n\r\n  for (let j = 0; j < r; j++) { // Iterate through columns of result\r\n    for (let i = 0; i < c; i++) { // Iterate through rows of result\r\n      let sum = 0;\r\n      for (let l = 0; l < k; l++) {\r\n        sum += matrixA[l * r + j] * matrixB[i * k + l]; // Access column-major elements\r\n      }\r\n      result[j * c + i] = sum; // Store in column-major order\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function matrixVectorMultiply(matrix: number[], t1: TypeInfo, vector: number[], t2: TypeInfo): number[] | null {\r\n  if (MatrixTypeSize[t1.name] === undefined || VectorTypeSize[t2.name] === undefined) {\r\n    return null;\r\n  }\r\n\r\n  const cols = MatrixTypeSize[t1.name][0];\r\n  const rows = MatrixTypeSize[t1.name][1];\r\n  \r\n  if (cols !== vector.length) {\r\n    return null;\r\n  }\r\n\r\n  const resultVec = new Array(rows);\r\n  // Perform matrix-vector multiplication (column-major)\r\n  for (let i = 0; i < rows; i++) {\r\n    let sum = 0;\r\n    for (let j = 0; j < cols; j++) {\r\n      sum += matrix[j * rows + i] * vector[j]; // Access column-major element\r\n    }\r\n    resultVec[i] = sum;\r\n  }\r\n\r\n  return resultVec;\r\n}\r\n\r\nexport function vectorMatrixMultiply(vector: number[], t1: TypeInfo, matrix: number[], t2: TypeInfo): number[] | null {\r\n  if (VectorTypeSize[t1.name] === undefined || MatrixTypeSize[t2.name] === undefined) {\r\n    return null;\r\n  }\r\n\r\n  const cols = MatrixTypeSize[t2.name][0];\r\n  const rows = MatrixTypeSize[t2.name][1];\r\n\r\n  if (rows !== vector.length) {\r\n    return null;\r\n  }\r\n\r\n  const result: number[] = [];\r\n  for (let j = 0; j < cols; j++) {\r\n    let sum = 0;\r\n    for (let i = 0; i < rows; i++) {\r\n      sum += vector[i] * matrix[i * cols + j];\r\n    }\r\n    result[j] = sum;\r\n  }\r\n\r\n  return result;\r\n}\r\n", "import { Node, Type, TemplateType, Return, Break, Continue, Let, Var, Const,\r\n    If, For, While, Loop, Continuing, Assign, Increment, Struct, Override, ArrayType,\r\n    Call, Diagnostic, Alias, BinaryOperator, LiteralExpr, Expression,\r\n    VariableExpr, CallExpr, CreateExpr, ConstExpr, BitcastExpr, UnaryOperator,\r\n    ArrayIndex, StringExpr, Function, Switch, SwitchCase, Case, Default, DefaultSelector } from \"./wgsl_ast.js\";\r\nimport { Data, TypedData, TextureData, ScalarData, VectorData, MatrixData, PointerData, VoidData } from \"./wgsl_ast.js\";\r\nimport { Reflect } from \"./reflect/reflect.js\";\r\nimport { TypeInfo, StructInfo, ArrayInfo, TemplateInfo } from \"./reflect/info.js\";\r\nimport { ExecContext, FunctionRef } from \"./exec/exec_context.js\";\r\nimport { ExecInterface } from \"./exec/exec_interface.js\";\r\nimport { BuiltinFunctions } from \"./exec/builtin_functions.js\";\r\nimport { isArray, castScalar, castVector } from \"./utils/cast.js\";\r\nimport { matrixMultiply, matrixVectorMultiply, vectorMatrixMultiply, MatrixTypeSize, VectorTypeSize } from \"./utils/matrix.js\";\r\n\r\nexport class WgslExec extends ExecInterface {\r\n    ast: Node[];\r\n    context: ExecContext;\r\n    reflection: Reflect;\r\n    builtins: BuiltinFunctions;\r\n    typeInfo: Object;\r\n\r\n    constructor(ast?: Node[], context?: ExecContext) {\r\n        super();\r\n        this.ast = ast ?? [];\r\n        this.reflection = new Reflect();\r\n        this.reflection.updateAST(this.ast);\r\n\r\n        this.context = context?.clone() ?? new ExecContext();\r\n        this.builtins = new BuiltinFunctions(this);\r\n\r\n        this.typeInfo = {\r\n            \"bool\": this.getTypeInfo(Type.bool),\r\n            \"i32\": this.getTypeInfo(Type.i32),\r\n            \"u32\": this.getTypeInfo(Type.u32),\r\n            \"f32\": this.getTypeInfo(Type.f32),\r\n            \"f16\": this.getTypeInfo(Type.f16),\r\n            \"vec2f\": this.getTypeInfo(TemplateType.vec2f),\r\n            \"vec2u\": this.getTypeInfo(TemplateType.vec2u),\r\n            \"vec2i\": this.getTypeInfo(TemplateType.vec2i),\r\n            \"vec2h\": this.getTypeInfo(TemplateType.vec2h),\r\n            \"vec3f\": this.getTypeInfo(TemplateType.vec3f),\r\n            \"vec3u\": this.getTypeInfo(TemplateType.vec3u),\r\n            \"vec3i\": this.getTypeInfo(TemplateType.vec3i),\r\n            \"vec3h\": this.getTypeInfo(TemplateType.vec3h),\r\n            \"vec4f\": this.getTypeInfo(TemplateType.vec4f),\r\n            \"vec4u\": this.getTypeInfo(TemplateType.vec4u),\r\n            \"vec4i\": this.getTypeInfo(TemplateType.vec4i),\r\n            \"vec4h\": this.getTypeInfo(TemplateType.vec4h),\r\n            \"mat2x2f\": this.getTypeInfo(TemplateType.mat2x2f),\r\n            \"mat2x3f\": this.getTypeInfo(TemplateType.mat2x3f),\r\n            \"mat2x4f\": this.getTypeInfo(TemplateType.mat2x4f),\r\n            \"mat3x2f\": this.getTypeInfo(TemplateType.mat3x2f),\r\n            \"mat3x3f\": this.getTypeInfo(TemplateType.mat3x3f),\r\n            \"mat3x4f\": this.getTypeInfo(TemplateType.mat3x4f),\r\n            \"mat4x2f\": this.getTypeInfo(TemplateType.mat4x2f),\r\n            \"mat4x3f\": this.getTypeInfo(TemplateType.mat4x3f),\r\n            \"mat4x4f\": this.getTypeInfo(TemplateType.mat4x4f),\r\n        };\r\n    }\r\n\r\n    getVariableValue(name: string): number | number[] | null {\r\n        const v = this.context.getVariable(name)?.value ?? null;\r\n        if (v === null) {\r\n            return null;\r\n        }\r\n        if (v instanceof ScalarData) {\r\n            return v.value;\r\n        }\r\n        if (v instanceof VectorData) {\r\n            return Array.from(v.data);\r\n        }\r\n        if (v instanceof MatrixData) {\r\n            return Array.from(v.data);\r\n        }\r\n        if (v instanceof TypedData) {\r\n            if (v.typeInfo instanceof ArrayInfo) {\r\n                if (v.typeInfo.format.name === \"u32\") {\r\n                    return Array.from(new Uint32Array(v.buffer, v.offset, v.typeInfo.count));\r\n                } else if (v.typeInfo.format.name === \"i32\") {\r\n                    return Array.from(new Int32Array(v.buffer, v.offset, v.typeInfo.count));\r\n                } else if (v.typeInfo.format.name === \"f32\") {\r\n                    return Array.from(new Float32Array(v.buffer, v.offset, v.typeInfo.count));\r\n                }\r\n            }\r\n        }\r\n        console.error(`Unsupported return variable type ${v.typeInfo.name}`);\r\n        return null;\r\n    }\r\n\r\n    execute(config?: Object): void {\r\n        config = config ?? {};\r\n        if (config[\"constants\"]) {\r\n            this._setOverrides(config[\"constants\"], this.context);\r\n        }\r\n\r\n        this._execStatements(this.ast, this.context);\r\n    }\r\n\r\n    dispatchWorkgroups(kernel: string, dispatchCount: number | number[], bindGroups: Object, config?: Object): void {\r\n        const context = this.context.clone();\r\n\r\n        config = config ?? {};\r\n        if (config[\"constants\"]) {\r\n            this._setOverrides(config[\"constants\"], context);\r\n        }\r\n\r\n        this._execStatements(this.ast, context);\r\n\r\n        const f = context.getFunction(kernel);\r\n        if (!f) {\r\n            console.error(`Function ${kernel} not found`);\r\n            return;\r\n        }\r\n\r\n        if (typeof dispatchCount === \"number\") {\r\n            dispatchCount = [dispatchCount, 1, 1];\r\n        } else if (dispatchCount.length === 0) {\r\n            console.error(`Invalid dispatch count`);\r\n            return;\r\n        } else if (dispatchCount.length === 1) {\r\n            dispatchCount = [dispatchCount[0], 1, 1];\r\n        } else if (dispatchCount.length === 2) {\r\n            dispatchCount = [dispatchCount[0], dispatchCount[1], 1];\r\n        } else if (dispatchCount.length > 3) {\r\n            dispatchCount = [dispatchCount[0], dispatchCount[1], dispatchCount[2]];\r\n        }\r\n\r\n        const width = dispatchCount[0];\r\n        const height = dispatchCount[1];\r\n        const depth = dispatchCount[2];\r\n\r\n        const vec3u = this.getTypeInfo(\"vec3u\");\r\n        context.setVariable(\"@num_workgroups\", new VectorData(dispatchCount, vec3u));\r\n\r\n        const kernelRefl = this.reflection.getFunctionInfo(kernel);\r\n        if (kernelRefl === null) {\r\n            console.error(`Function ${kernel} not found in reflection data`);\r\n        }\r\n\r\n        for (const set in bindGroups) {\r\n            for (const binding in bindGroups[set]) {\r\n                const entry = bindGroups[set][binding];\r\n\r\n                context.variables.forEach((v) => {\r\n                    const node = v.node;\r\n                    if (node?.attributes) {\r\n                        let b = null;\r\n                        let s = null;\r\n                        for (const attr of node.attributes) {\r\n                            if (attr.name === \"binding\") {\r\n                                b = attr.value;\r\n                            } else if (attr.name === \"group\") {\r\n                                s = attr.value;\r\n                            }\r\n                        }\r\n                        if (binding == b && set == s) {\r\n                            let found = false;\r\n                            for (const resource of kernelRefl.resources) {\r\n                                if (resource.name === v.name && resource.group === parseInt(set) && resource.binding === parseInt(binding)) {\r\n                                    found = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            if (found) {\r\n                                if (entry.texture !== undefined && entry.descriptor !== undefined) {\r\n                                    // Texture\r\n                                    const textureData = new TextureData(entry.texture, this.getTypeInfo(node.type), entry.descriptor,\r\n                                            entry.texture.view ?? null);\r\n                                    v.value = textureData;\r\n                                } else if (entry.uniform !== undefined) {\r\n                                    // Uniform buffer\r\n                                    v.value = new TypedData(entry.uniform, this.getTypeInfo(node.type));\r\n                                } else {\r\n                                    // Storage buffer\r\n                                    v.value = new TypedData(entry, this.getTypeInfo(node.type));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        for (let z = 0; z < depth; ++z) {\r\n            for (let y = 0; y < height; ++y) {\r\n                for (let x = 0; x < width; ++x) {\r\n                    context.setVariable(\"@workgroup_id\", new VectorData([x, y, z], this.getTypeInfo(\"vec3u\")));\r\n                    this._dispatchWorkgroup(f, [x, y, z], context);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static _breakObj = new Data(new TypeInfo(\"BREAK\", null), null);\r\n    static _continueObj = new Data(new TypeInfo(\"CONTINUE\", null), null);\r\n\r\n    execStatement(stmt: Node, context: ExecContext): Data | null {\r\n        if (stmt instanceof Return) {\r\n            return this.evalExpression(stmt.value, context);\r\n        } else if (stmt instanceof Break) {\r\n            if (stmt.condition) {\r\n                const c = this.evalExpression(stmt.condition, context);\r\n                if (!(c instanceof ScalarData)) {\r\n                    throw new Error(`Invalid break-if condition`);\r\n                }\r\n                if (!c.value) {\r\n                    return null;\r\n                }\r\n            }\r\n            return WgslExec._breakObj;\r\n        } else if (stmt instanceof Continue) {\r\n            return WgslExec._continueObj;\r\n        } else if (stmt instanceof Let) {\r\n            this._let(stmt, context);\r\n        } else if (stmt instanceof Var) {\r\n            this._var(stmt, context);\r\n        } else if (stmt instanceof Const) {\r\n            this._const(stmt, context);\r\n        } else if (stmt instanceof Function) {\r\n            this._function(stmt, context);\r\n        } else if (stmt instanceof If) {\r\n            return this._if(stmt, context);\r\n        } else if (stmt instanceof Switch) {\r\n            return this._switch(stmt, context);\r\n        } else if (stmt instanceof For) {\r\n            return this._for(stmt, context);\r\n        } else if (stmt instanceof While) {\r\n            return this._while(stmt, context);\r\n        } else if (stmt instanceof Loop) {\r\n            return this._loop(stmt, context);\r\n        } else if (stmt instanceof Continuing) {\r\n            const subContext = context.clone();\r\n            subContext.currentFunctionName = context.currentFunctionName;\r\n            return this._execStatements(stmt.body, subContext);\r\n        } else if (stmt instanceof Assign) {\r\n            this._assign(stmt, context);\r\n        } else if (stmt instanceof Increment) {\r\n            this._increment(stmt, context);\r\n        } else if (stmt instanceof Struct) {\r\n            return null;\r\n        } else if (stmt instanceof Override) {\r\n            const name = stmt.name;\r\n            if (context.getVariable(name) === null) {\r\n                context.setVariable(name, new ScalarData(0, this.getTypeInfo(\"u32\")));\r\n                //console.error(`Override constant ${name} not found. Line ${stmt.line}`);\r\n            }\r\n        } else if (stmt instanceof Call) {\r\n            this._call(stmt, context);\r\n        } else if (stmt instanceof Diagnostic) {\r\n            return null; // Nothing to do here.\r\n        } else if (stmt instanceof Alias) {\r\n            return null; // Nothing to do here.\r\n        } else {\r\n            console.error(`Invalid statement type.`, stmt, `Line ${stmt.line}`);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    evalExpression(node: Node, context: ExecContext): Data | null {\r\n        if (node instanceof BinaryOperator) {\r\n            return this._evalBinaryOp(node, context);\r\n        } else if (node instanceof LiteralExpr) {\r\n            return this._evalLiteral(node, context);\r\n        } else if (node instanceof VariableExpr) {\r\n            return this._evalVariable(node, context);\r\n        } else if (node instanceof CallExpr) {\r\n            return this._evalCall(node, context);\r\n        } else if (node instanceof CreateExpr) {\r\n            return this._evalCreate(node, context);\r\n        } else if (node instanceof ConstExpr) {\r\n            return this._evalConst(node, context);\r\n        } else if (node instanceof BitcastExpr) {\r\n            return this._evalBitcast(node, context);\r\n        } else if (node instanceof UnaryOperator) {\r\n            return this._evalUnaryOp(node, context);\r\n        }\r\n        console.error(`Invalid expression type`, node, `Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    getTypeInfo(type: Type | string): TypeInfo | null {\r\n        if (type instanceof Type) {\r\n            const t = this.reflection.getTypeInfo(type as Type);\r\n            if (t !== null) {\r\n                return t;\r\n            }\r\n        }\r\n\r\n        let t = this.typeInfo[type as string] ?? null;\r\n        if (t !== null) {\r\n            return t;\r\n        }\r\n\r\n        t = this.reflection.getTypeInfoByName(type as string);\r\n        return t;\r\n    }\r\n\r\n    _setOverrides(constants: Object, context: ExecContext): void {\r\n        for (const k in constants) {\r\n            const v = constants[k];\r\n            const override = this.reflection.getOverrideInfo(k);\r\n            if (override !== null) {\r\n                if (override.type === null) {\r\n                    override.type = this.getTypeInfo(\"u32\");\r\n                }\r\n                if (override.type.name === \"u32\" || override.type.name === \"i32\" || override.type.name === \"f32\" || override.type.name === \"f16\") {\r\n                    context.setVariable(k, new ScalarData(v, override.type));\r\n                } else if (override.type.name === \"bool\") {\r\n                    context.setVariable(k, new ScalarData(v ? 1 : 0, override.type));\r\n                } else if (override.type.name === \"vec2\" || override.type.name === \"vec3\" || override.type.name === \"vec4\" ||\r\n                    override.type.name === \"vec2f\" || override.type.name === \"vec3f\" || override.type.name === \"vec4f\" ||\r\n                    override.type.name === \"vec2i\" || override.type.name === \"vec3i\" || override.type.name === \"vec4i\" ||\r\n                    override.type.name === \"vec2u\" || override.type.name === \"vec3u\" || override.type.name === \"vec4u\" ||\r\n                    override.type.name === \"vec2h\" || override.type.name === \"vec3h\" || override.type.name === \"vec4h\") {\r\n                    context.setVariable(k, new VectorData(v, override.type));\r\n                } else {\r\n                    console.error(`Invalid constant type for ${k}`);\r\n                }\r\n            } else {\r\n                console.error(`Override ${k} does not exist in the shader.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    _dispatchWorkgroup(f: FunctionRef, workgroup_id: number[], context: ExecContext): void {\r\n        const workgroupSize = [1, 1, 1];\r\n        for (const attr of f.node.attributes) {\r\n            if (attr.name === \"workgroup_size\") {\r\n                if (attr.value.length > 0) {\r\n                    // The value could be an override constant\r\n                    const v = context.getVariableValue(attr.value[0]);\r\n                    if (v instanceof ScalarData) {\r\n                        workgroupSize[0] = v.value;\r\n                    } else {\r\n                        workgroupSize[0] = parseInt(attr.value[0]);\r\n                    }\r\n                }\r\n                if (attr.value.length > 1) {\r\n                    const v = context.getVariableValue(attr.value[1]);\r\n                    if (v instanceof ScalarData) {\r\n                        workgroupSize[1] = v.value;\r\n                    } else {\r\n                        workgroupSize[1] = parseInt(attr.value[1]);\r\n                    }\r\n                }\r\n                if (attr.value.length > 2) {\r\n                    const v = context.getVariableValue(attr.value[2]);\r\n                    if (v instanceof ScalarData) {\r\n                        workgroupSize[2] = v.value;\r\n                    } else {\r\n                        workgroupSize[2] = parseInt(attr.value[2]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const vec3u = this.getTypeInfo(\"vec3u\");\r\n        const u32 = this.getTypeInfo(\"u32\");\r\n        context.setVariable(\"@workgroup_size\", new VectorData(workgroupSize, vec3u));\r\n\r\n        const width = workgroupSize[0];\r\n        const height = workgroupSize[1];\r\n        const depth = workgroupSize[2];\r\n\r\n        for (let z = 0, li = 0; z < depth; ++z) {\r\n            for (let y = 0; y < height; ++y) {\r\n                for (let x = 0; x < width; ++x, ++li) {\r\n                    const local_invocation_id = [x, y, z];\r\n                    const global_invocation_id = [\r\n                        x + workgroup_id[0] * workgroupSize[0],\r\n                        y + workgroup_id[1] * workgroupSize[1],\r\n                        z + workgroup_id[2] * workgroupSize[2]];\r\n\r\n                    context.setVariable(\"@local_invocation_id\", new VectorData(local_invocation_id, vec3u));\r\n                    context.setVariable(\"@global_invocation_id\", new VectorData(global_invocation_id, vec3u));\r\n                    context.setVariable(\"@local_invocation_index\", new ScalarData(li, u32));\r\n\r\n                    this._dispatchExec(f, context);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _dispatchExec(f: FunctionRef, context: ExecContext): void {\r\n        // Update any built-in input args.\r\n        // TODO: handle input structs.\r\n        for (const arg of f.node.args) {\r\n            for (const attr of arg.attributes) {\r\n                if (attr.name === \"builtin\") {\r\n                    const globalName = `@${attr.value}`;\r\n                    const globalVar = context.getVariable(globalName);\r\n                    if (globalVar !== undefined) {\r\n                        context.variables.set(arg.name, globalVar);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this._execStatements(f.node.body, context);\r\n    }\r\n\r\n    getVariableName(node: Node, context: ExecContext): string | null {\r\n        while (node instanceof UnaryOperator) {\r\n            node = node.right;\r\n        }\r\n\r\n        if (node instanceof VariableExpr) {\r\n            return (node as VariableExpr).name;\r\n        } else {\r\n            console.error(`Unknown variable type`, node, 'Line', node.line);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    _execStatements(statements: Node[], context: ExecContext): Data | null {\r\n        for (const stmt of statements) {\r\n            // Block statements are declared as arrays of statements.\r\n            if (stmt instanceof Array) {\r\n                const subContext = context.clone();\r\n                const res = this._execStatements(stmt, subContext);\r\n                if (res) {\r\n                    return res;\r\n                }\r\n                continue;\r\n            }\r\n\r\n            const res = this.execStatement(stmt, context);\r\n            if (res) {\r\n                return res;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    _call(node: Call, context: ExecContext): void {\r\n        const subContext = context.clone();\r\n        subContext.currentFunctionName = node.name;\r\n\r\n        const f = context.getFunction(node.name);\r\n        if (!f) {\r\n            if (node.isBuiltin) {\r\n                this._callBuiltinFunction(node, subContext);\r\n            } else {\r\n                const typeInfo = this.getTypeInfo(node.name);\r\n                if (typeInfo) {\r\n                    this._evalCreate(node, context);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        for (let ai = 0; ai < f.node.args.length; ++ai) {\r\n            const arg = f.node.args[ai];\r\n            const value = this.evalExpression(node.args[ai], subContext);\r\n            subContext.setVariable(arg.name, value, arg);\r\n        }\r\n\r\n        this._execStatements(f.node.body, subContext);\r\n    }\r\n\r\n    _increment(node: Increment, context: ExecContext): void {\r\n        const name = this.getVariableName(node.variable, context);\r\n        const v = context.getVariable(name);\r\n        if (!v) {\r\n            console.error(`Variable ${name} not found. Line ${node.line}`);\r\n            return;\r\n        }\r\n        if (node.operator === \"++\") {\r\n            if (v.value instanceof ScalarData) {\r\n                v.value.value++;\r\n            } else {\r\n                console.error(`Variable ${name} is not a scalar. Line ${node.line}`);\r\n            }\r\n        } else if (node.operator === \"--\") {\r\n            if (v.value instanceof ScalarData) {\r\n                v.value.value--;\r\n            } else {\r\n                console.error(`Variable ${name} is not a scalar. Line ${node.line}`);\r\n            }\r\n        } else {\r\n            console.error(`Unknown increment operator ${node.operator}. Line ${node.line}`);\r\n        }\r\n    }\r\n\r\n    _getVariableData(node: Node, context: ExecContext): Data | null {\r\n        if (node instanceof VariableExpr) {\r\n            const name = this.getVariableName(node, context);\r\n            const _var = context.getVariable(name);\r\n            if (_var === null) {\r\n                console.error(`Variable ${name} not found. Line ${node.line}`);\r\n                return null;\r\n            }\r\n            return _var.value.getSubData(this, node.postfix, context);\r\n        }\r\n\r\n        if (node instanceof UnaryOperator) {\r\n            if (node.operator === \"*\") {\r\n                const refData = this._getVariableData(node.right, context);\r\n                if (!(refData instanceof PointerData)) {\r\n                    console.error(`Variable ${node.right} is not a pointer. Line ${node.line}`);\r\n                    return null;\r\n                }\r\n\r\n                return refData.reference.getSubData(this, node.postfix, context);\r\n            } else if (node.operator === \"&\") {\r\n                const refData = this._getVariableData(node.right, context);\r\n                return new PointerData(refData);\r\n            } \r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    _assign(node: Assign, context: ExecContext): void {\r\n        let v: Data | null = null;\r\n        let name: string = \"<var>\";\r\n\r\n        let postfix: Expression | null = null;\r\n\r\n        if (node.variable instanceof UnaryOperator) {\r\n            const varData = this._getVariableData(node.variable, context);\r\n            const assignValue = this.evalExpression(node.value, context);\r\n            const op = node.operator;\r\n\r\n            if (op === \"=\") {\r\n                if (varData instanceof ScalarData || varData instanceof VectorData || varData instanceof MatrixData) {\r\n                    if (assignValue instanceof ScalarData || assignValue instanceof VectorData || assignValue instanceof MatrixData &&\r\n                        varData.data.length === assignValue.data.length) {\r\n                        varData.data.set(assignValue.data);\r\n                        return;\r\n                    } else {\r\n                        console.error(`Invalid assignment. Line ${node.line}`);\r\n                    }\r\n                } else if (varData instanceof TypedData && assignValue instanceof TypedData) {\r\n                    if ((varData.buffer.byteLength - varData.offset) >= (assignValue.buffer.byteLength - assignValue.offset)) {\r\n                        if (varData.buffer.byteLength % 4 === 0) {\r\n                            new Uint32Array(varData.buffer, varData.offset, varData.typeInfo.size / 4).set(new Uint32Array(assignValue.buffer, assignValue.offset, assignValue.typeInfo.size / 4));\r\n                        } else {\r\n                            new Uint8Array(varData.buffer, varData.offset, varData.typeInfo.size).set(new Uint8Array(assignValue.buffer, assignValue.offset, assignValue.typeInfo.size));\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n                console.error(`Invalid assignment. Line ${node.line}`);\r\n                return null;\r\n            } else if (op === \"+=\") {\r\n                if (varData instanceof ScalarData || varData instanceof VectorData || varData instanceof MatrixData) {\r\n                    if (assignValue instanceof ScalarData || assignValue instanceof VectorData || assignValue instanceof MatrixData) {\r\n                        varData.data.set(assignValue.data.map((v: number, i: number) => varData.data[i] + v));\r\n                        return;\r\n                    } else {\r\n                        console.error(`Invalid assignment . Line ${node.line}`);\r\n                        return;\r\n                    }\r\n                } else {\r\n                    console.error(`Invalid assignment. Line ${node.line}`);\r\n                    return;\r\n                }\r\n            } else if (op === \"-=\") {\r\n                if (varData instanceof ScalarData || varData instanceof VectorData || varData instanceof MatrixData) {\r\n                    if (assignValue instanceof ScalarData || assignValue instanceof VectorData || assignValue instanceof MatrixData) {\r\n                        varData.data.set(assignValue.data.map((v: number, i: number) => varData.data[i] - v));\r\n                        return;\r\n                    } else {\r\n                        console.error(`Invalid assignment. Line ${node.line}`);\r\n                        return;\r\n                    }\r\n                } else {\r\n                    console.error(`Invalid assignment. Line ${node.line}`);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (node.variable instanceof UnaryOperator) {\r\n            if (node.variable.operator === \"*\") {\r\n                name = this.getVariableName(node.variable.right, context);\r\n                const _var = context.getVariable(name);\r\n                if (_var && _var.value instanceof PointerData) {\r\n                    v = _var.value.reference;\r\n                } else {\r\n                    console.error(`Variable ${name} is not a pointer. Line ${node.line}`);\r\n                    return;\r\n                }\r\n\r\n                let postfix = node.variable.postfix;\r\n                if (!postfix) {\r\n                    let rNode = node.variable.right;\r\n                    while (rNode instanceof UnaryOperator) {\r\n                        if (rNode.postfix) {\r\n                            postfix = rNode.postfix;\r\n                            break;\r\n                        }\r\n                        rNode = rNode.right;\r\n                    }\r\n                }\r\n                if (postfix) {\r\n                    v = v.getSubData(this, postfix, context);\r\n                }\r\n            }\r\n        } else {\r\n            postfix = node.variable.postfix;\r\n            name = this.getVariableName(node.variable, context);\r\n            const _var = context.getVariable(name);\r\n            if (_var === null) {\r\n                console.error(`Variable ${name} not found. Line ${node.line}`);\r\n                return;\r\n            }\r\n            v = _var.value;\r\n        }\r\n\r\n        if (v instanceof PointerData) {\r\n            v = v.reference;\r\n        }\r\n\r\n        if (v === null) {\r\n            console.error(`Variable ${name} not found. Line ${node.line}`);\r\n            return;\r\n        }\r\n\r\n        const value = this.evalExpression(node.value, context);\r\n\r\n        const op = node.operator;\r\n        if (op !== \"=\") {\r\n            const currentValue = v.getSubData(this, postfix, context);\r\n\r\n            if (currentValue instanceof VectorData && value instanceof ScalarData) {\r\n                const cv = currentValue.data;\r\n                const v = value.value;\r\n\r\n                if (op === \"+=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] += v;\r\n                    }\r\n                } else if (op === \"-=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] -= v;\r\n                    }\r\n                } else if (op === \"*=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] *= v;\r\n                    }\r\n                } else if (op === \"/=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] /= v;\r\n                    }\r\n                } else if (op === \"%=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] %= v;\r\n                    }\r\n                } else if (op === \"&=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] &= v;\r\n                    }\r\n                } else if (op === \"|=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] |= v;\r\n                    }\r\n                } else if (op === \"^=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] ^= v;\r\n                    }\r\n                } else if (op === \"<<=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] <<= v;\r\n                    }\r\n                } else if (op === \">>=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] >>= v;\r\n                    }\r\n                } else {\r\n                    console.error(`Invalid operator ${op}. Line ${node.line}`);\r\n                }\r\n            } else if (currentValue instanceof VectorData && value instanceof VectorData) {\r\n                const cv = currentValue.data;\r\n                const v = value.data;\r\n                if (cv.length !== v.length) {\r\n                    console.error(`Vector length mismatch. Line ${node.line}`);\r\n                    return;\r\n                }\r\n\r\n                if (op === \"+=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] += v[i];\r\n                    }\r\n                } else if (op === \"-=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] -= v[i];\r\n                    }\r\n                } else if (op === \"*=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] *= v[i];\r\n                    }\r\n                } else if (op === \"/=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] /= v[i];\r\n                    }\r\n                } else if (op === \"%=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] %= v[i];\r\n                    }\r\n                } else if (op === \"&=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] &= v[i];\r\n                    }\r\n                } else if (op === \"|=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] |= v[i];\r\n                    }\r\n                } else if (op === \"^=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] ^= v[i];\r\n                    }\r\n                } else if (op === \"<<=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] <<= v[i];\r\n                    }\r\n                } else if (op === \">>=\") {\r\n                    for (let i = 0; i < cv.length; ++i) {\r\n                        cv[i] >>= v[i];\r\n                    }\r\n                } else {\r\n                    console.error(`Invalid operator ${op}. Line ${node.line}`);\r\n                }\r\n            } else if (currentValue instanceof ScalarData && value instanceof ScalarData) {\r\n                if (op === \"+=\") {\r\n                    currentValue.value += value.value;\r\n                } else if (op === \"-=\") {\r\n                    currentValue.value -= value.value;\r\n                } else if (op === \"*=\") {\r\n                    currentValue.value *= value.value;\r\n                } else if (op === \"/=\") {\r\n                    currentValue.value /= value.value;\r\n                } else if (op === \"%=\") {\r\n                    currentValue.value %= value.value;\r\n                } else if (op === \"&=\") {\r\n                    currentValue.value &= value.value;\r\n                } else if (op === \"|=\") {\r\n                    currentValue.value |= value.value;\r\n                } else if (op === \"^=\") {\r\n                    currentValue.value ^= value.value;\r\n                } else if (op === \"<<=\") {\r\n                    currentValue.value <<= value.value;\r\n                } else if (op === \">>=\") {\r\n                    currentValue.value >>= value.value;\r\n                } else {\r\n                    console.error(`Invalid operator ${op}. Line ${node.line}`);\r\n                }\r\n            } else {\r\n                console.error(`Invalid type for ${node.operator} operator. Line ${node.line}`);\r\n                return;\r\n            }\r\n\r\n            // If the variable is a TypedData, as in a struct or array, and we're assigning a\r\n            // sub portion of it, set the data in the original buffer.\r\n            if (v instanceof TypedData) {\r\n                v.setDataValue(this, currentValue, postfix, context);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (v instanceof TypedData) {\r\n            v.setDataValue(this, value, postfix, context);\r\n        } else if (postfix) {\r\n            if (!(v instanceof VectorData) && !(v instanceof MatrixData)) {\r\n                console.error(`Variable ${name} is not a vector or matrix. Line ${node.line}`);\r\n                return;\r\n            }\r\n\r\n            if (postfix instanceof ArrayIndex) {\r\n                const idx = (this.evalExpression(postfix.index, context) as ScalarData).value;\r\n\r\n                if (v instanceof VectorData) {\r\n                    if (value instanceof ScalarData) {\r\n                        v.data[idx] = value.value;\r\n                    } else {\r\n                        console.error(`Invalid assignment to ${name}. Line ${node.line}`);\r\n                        return;\r\n                    }\r\n                } else if (v instanceof MatrixData) {\r\n                    const idx = (this.evalExpression(postfix.index, context) as ScalarData).value;\r\n                    if (idx < 0) {\r\n                        console.error(`Invalid assignment to ${name}. Line ${node.line}`);\r\n                        return;\r\n                    }\r\n                    if (value instanceof VectorData) {\r\n                        const typeName = v.typeInfo.getTypeName();\r\n                        if (typeName === \"mat2x2\" || typeName === \"mat2x2f\" || typeName === \"mat2x2h\") {\r\n                            if (idx < 2 && value.data.length === 2) {\r\n                                v.data[idx * 2] = value.data[0];\r\n                                v.data[idx * 2 + 1] = value.data[1];\r\n                            } else {\r\n                                console.error(`Invalid assignment to ${name}. Line ${node.line}`);\r\n                                return;\r\n                            }\r\n                        } else if (typeName === \"mat2x3\" || typeName === \"mat2x3f\" || typeName === \"mat2x3h\") {\r\n                            if (idx < 2 && value.data.length === 3) {\r\n                                v.data[idx * 3] = value.data[0];\r\n                                v.data[idx * 3 + 1] = value.data[1];\r\n                                v.data[idx * 3 + 2] = value.data[2];\r\n                            } else {\r\n                                console.error(`Invalid assignment to ${name}. Line ${node.line}`);\r\n                                return;\r\n                            }\r\n                        } else if (typeName === \"mat2x4\" || typeName === \"mat2x4f\" || typeName === \"mat2x4h\") {\r\n                            if (idx < 2 && value.data.length === 4) {\r\n                                v.data[idx * 4] = value.data[0];\r\n                                v.data[idx * 4 + 1] = value.data[1];\r\n                                v.data[idx * 4 + 2] = value.data[2];\r\n                                v.data[idx * 4 + 3] = value.data[3];\r\n                            } else {\r\n                                console.error(`Invalid assignment to ${name}. Line ${node.line}`);\r\n                                return;\r\n                            }\r\n                        } else if (typeName === \"mat3x2\" || typeName === \"mat3x2f\" || typeName === \"mat3x2h\") {\r\n                            if (idx < 3 && value.data.length === 2) {\r\n                                v.data[idx * 2] = value.data[0];\r\n                                v.data[idx * 2 + 1] = value.data[1];\r\n                            } else {\r\n                                console.error(`Invalid assignment to ${name}. Line ${node.line}`);\r\n                                return;\r\n                            }\r\n                        } else if (typeName === \"mat3x3\" || typeName === \"mat3x3f\" || typeName === \"mat3x3h\") {\r\n                            if (idx < 3 && value.data.length === 3) {\r\n                                v.data[idx * 3] = value.data[0];\r\n                                v.data[idx * 3 + 1] = value.data[1];\r\n                                v.data[idx * 3 + 2] = value.data[2];\r\n                            } else {\r\n                                console.error(`Invalid assignment to ${name}. Line ${node.line}`);\r\n                                return;\r\n                            }\r\n                        } else if (typeName === \"mat3x4\" || typeName === \"mat3x4f\" || typeName === \"mat3x4h\") {\r\n                            if (idx < 3 && value.data.length === 4) {\r\n                                v.data[idx * 4] = value.data[0];\r\n                                v.data[idx * 4 + 1] = value.data[1];\r\n                                v.data[idx * 4 + 2] = value.data[2];\r\n                                v.data[idx * 4 + 3] = value.data[3];\r\n                            } else {\r\n                                console.error(`Invalid assignment to ${name}. Line ${node.line}`);\r\n                                return;\r\n                            }\r\n                        } else if (typeName === \"mat4x2\" || typeName === \"mat4x2f\" || typeName === \"mat4x2h\") {\r\n                            if (idx < 4 && value.data.length === 2) {\r\n                                v.data[idx * 2] = value.data[0];\r\n                                v.data[idx * 2 + 1] = value.data[1];\r\n                            } else {\r\n                                console.error(`Invalid assignment to ${name}. Line ${node.line}`);\r\n                                return;\r\n                            }\r\n                        } else if (typeName === \"mat4x3\" || typeName === \"mat4x3f\" || typeName === \"mat4x3h\") {\r\n                            if (idx < 4 && value.data.length === 3) {\r\n                                v.data[idx * 3] = value.data[0];\r\n                                v.data[idx * 3 + 1] = value.data[1];\r\n                                v.data[idx * 3 + 2] = value.data[2];\r\n                            } else {\r\n                                console.error(`Invalid assignment to ${name}. Line ${node.line}`);\r\n                                return;\r\n                            }\r\n                        } else if (typeName === \"mat4x4\" || typeName === \"mat4x4f\" || typeName === \"mat4x4h\") {\r\n                            if (idx < 4 && value.data.length === 4) {\r\n                                v.data[idx * 4] = value.data[0];\r\n                                v.data[idx * 4 + 1] = value.data[1];\r\n                                v.data[idx * 4 + 2] = value.data[2];\r\n                                v.data[idx * 4 + 3] = value.data[3];\r\n                            } else {\r\n                                console.error(`Invalid assignment to ${name}. Line ${node.line}`);\r\n                                return;\r\n                            }\r\n                        } else {\r\n                            console.error(`Invalid assignment to ${name}. Line ${node.line}`);\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        console.error(`Invalid assignment to ${name}. Line ${node.line}`);\r\n                        return;\r\n                    }\r\n                } else {\r\n                    console.error(`Invalid assignment to ${name}. Line ${node.line}`);\r\n                    return;\r\n                }\r\n            } else if (postfix instanceof StringExpr) {\r\n                const member = postfix.value;\r\n                if (!(v instanceof VectorData)) {\r\n                    console.error(`Invalid assignment to ${member}. Variable ${name} is not a vector. Line ${node.line}`);\r\n                    return;\r\n                }\r\n                if (value instanceof ScalarData) {\r\n                    if (member.length > 1) {\r\n                        console.error(`Invalid assignment to ${member} for variable ${name}. Line ${node.line}`);\r\n                        return;\r\n                    }\r\n                    if (member === \"x\") {\r\n                        v.data[0] = value.value;\r\n                    } else if (member === \"y\") {\r\n                        if (v.data.length < 2) {\r\n                            console.error(`Invalid assignment to ${member} for variable ${name}. Line ${node.line}`);\r\n                            return;\r\n                        }\r\n                        v.data[1] = value.value;\r\n                    } else if (member === \"z\") {\r\n                        if (v.data.length < 3) {\r\n                            console.error(`Invalid assignment to ${member} for variable ${name}. Line ${node.line}`);\r\n                            return;\r\n                        }\r\n                        v.data[2] = value.value;\r\n                    } else if (member === \"w\") {\r\n                        if (v.data.length < 4) {\r\n                            console.error(`Invalid assignment to ${member} for variable ${name}. Line ${node.line}`);\r\n                            return;\r\n                        }\r\n                        v.data[3] = value.value;\r\n                    }\r\n                } else if (value instanceof VectorData) {\r\n                    if (member.length !== value.data.length) {\r\n                        console.error(`Invalid assignment to ${member} for variable ${name}. Line ${node.line}`);\r\n                        return;\r\n                    }\r\n                    for (let i = 0; i < member.length; ++i) {\r\n                        const m = member[i];\r\n                        if (m === \"x\" || m === \"r\") {\r\n                            v.data[0] = value.data[i];\r\n                        } else if (m === \"y\" || m === \"g\") {\r\n                            if (value.data.length < 2) {\r\n                                console.error(`Invalid assignment to ${m} for variable ${name}. Line ${node.line}`);\r\n                                return;\r\n                            }\r\n                            v.data[1] = value.data[i];\r\n                        } else if (m === \"z\" || m === \"b\") {\r\n                            if (value.data.length < 3) {\r\n                                console.error(`Invalid assignment to ${m} for variable ${name}. Line ${node.line}`);\r\n                                return;\r\n                            }\r\n                            v.data[2] = value.data[i];\r\n                        } else if (m === \"w\" || m === \"a\") {\r\n                            if (value.data.length < 4) {\r\n                                console.error(`Invalid assignment to ${m} for variable ${name}. Line ${node.line}`);\r\n                                return;\r\n                            }\r\n                            v.data[3] = value.data[i];\r\n                        } else {\r\n                            console.error(`Invalid assignment to ${m} for variable ${name}. Line ${node.line}`);\r\n                            return;\r\n                        }\r\n                    }\r\n                } else {\r\n                    console.error(`Invalid assignment to ${name}. Line ${node.line}`);\r\n                    return;\r\n                }\r\n            }\r\n        } else {\r\n            if (v instanceof ScalarData && value instanceof ScalarData) {\r\n                v.value = value.value;\r\n            } else if (v instanceof VectorData && value instanceof VectorData) {\r\n                v.data.set(value.data);\r\n            } else if (v instanceof MatrixData && value instanceof MatrixData) {\r\n                v.data.set(value.data);\r\n            } else {\r\n                console.error(`Invalid assignment to ${name}. Line ${node.line}`);\r\n            }\r\n            //v.value = value;\r\n        }\r\n        return;\r\n    }\r\n\r\n    _function(node: Function, context: ExecContext): void {\r\n        const f = new FunctionRef(node);\r\n        context.functions.set(node.name, f);\r\n    }\r\n\r\n    _const(node: Const, context: ExecContext): void {\r\n        let value = null;\r\n        if (node.value !== null) {\r\n            value = this.evalExpression(node.value, context);\r\n        }\r\n        context.createVariable(node.name, value, node);\r\n    }\r\n\r\n    _let(node: Let, context: ExecContext): void {\r\n        let value: Data | null = null;\r\n        if (node.value !== null) {\r\n            value = this.evalExpression(node.value, context);\r\n            if (value === null) {\r\n                console.error(`Invalid value for variable ${node.name}. Line ${node.line}`);\r\n                return;\r\n            }\r\n            if (!(node.value instanceof UnaryOperator)) {\r\n                value = value.clone();\r\n            }\r\n        } else {\r\n            const typeName = node.type.name;\r\n            if (typeName === \"f32\" || typeName === \"i32\" || typeName === \"u32\" ||\r\n                typeName === \"bool\" || typeName === \"f16\" ||\r\n                typeName === \"vec2\" || typeName === \"vec3\" || typeName === \"vec4\" ||\r\n                typeName === \"vec2f\" || typeName === \"vec3f\" || typeName === \"vec4f\" ||\r\n                typeName === \"vec2i\" || typeName === \"vec3i\" || typeName === \"vec4i\" ||\r\n                typeName === \"vec2u\" || typeName === \"vec3u\" || typeName === \"vec4u\" ||\r\n                typeName === \"vec2h\" || typeName === \"vec3h\" || typeName === \"vec4h\" ||\r\n                typeName === \"vec2b\" || typeName === \"vec3b\" || typeName === \"vec4b\" ||\r\n                typeName === \"mat2x2\" || typeName === \"mat2x3\" || typeName === \"mat2x4\" ||\r\n                typeName === \"mat3x2\" || typeName === \"mat3x3\" || typeName === \"mat3x4\" ||\r\n                typeName === \"mat4x2\" || typeName === \"mat4x3\" || typeName === \"mat4x4\" ||\r\n                typeName === \"mat2x2f\" || typeName === \"mat2x3f\" || typeName === \"mat2x4f\" ||\r\n                typeName === \"mat3x2f\" || typeName === \"mat3x3f\" || typeName === \"mat3x4f\" ||\r\n                typeName === \"mat4x2f\" || typeName === \"mat4x3f\" || typeName === \"mat4x4f\" ||\r\n                typeName === \"mat2x2h\" || typeName === \"mat2x3h\" || typeName === \"mat2x4h\" ||\r\n                typeName === \"mat3x2h\" || typeName === \"mat3x3h\" || typeName === \"mat3x4h\" ||\r\n                typeName === \"mat4x2h\" || typeName === \"mat4x3h\" || typeName === \"mat4x4h\" ||\r\n                typeName === \"array\") {\r\n                const defType = new CreateExpr(node.type, []);\r\n                value = this._evalCreate(defType, context);\r\n            }\r\n        }\r\n        context.createVariable(node.name, value, node);\r\n    }\r\n\r\n    _var(node: Var, context: ExecContext): void {\r\n        let value = null;\r\n        if (node.value !== null) {\r\n            value = this.evalExpression(node.value, context);\r\n            if (value === null) {\r\n                console.error(`Invalid value for variable ${node.name}. Line ${node.line}`);\r\n                return;\r\n            }\r\n            if (!(node.value instanceof UnaryOperator)) {\r\n                value = value.clone();\r\n            }\r\n        } else {\r\n            if (node.type === null) {\r\n                console.error(`Variable ${node.name} has no type. Line ${node.line}`);\r\n                return;\r\n            }\r\n\r\n            const typeName = node.type.name;\r\n            if (typeName === \"f32\" || typeName === \"i32\" || typeName === \"u32\" ||\r\n                typeName === \"bool\" || typeName === \"f16\" ||\r\n                typeName === \"vec2\" || typeName === \"vec3\" || typeName === \"vec4\" ||\r\n                typeName === \"vec2f\" || typeName === \"vec3f\" || typeName === \"vec4f\" ||\r\n                typeName === \"vec2i\" || typeName === \"vec3i\" || typeName === \"vec4i\" ||\r\n                typeName === \"vec2u\" || typeName === \"vec3u\" || typeName === \"vec4u\" ||\r\n                typeName === \"vec2h\" || typeName === \"vec3h\" || typeName === \"vec4h\" ||\r\n                typeName === \"vec2b\" || typeName === \"vec3b\" || typeName === \"vec4b\" ||\r\n                typeName === \"mat2x2\" || typeName === \"mat2x3\" || typeName === \"mat2x4\" ||\r\n                typeName === \"mat3x2\" || typeName === \"mat3x3\" || typeName === \"mat3x4\" ||\r\n                typeName === \"mat4x2\" || typeName === \"mat4x3\" || typeName === \"mat4x4\" ||\r\n                typeName === \"mat2x2f\" || typeName === \"mat2x3f\" || typeName === \"mat2x4f\" ||\r\n                typeName === \"mat3x2f\" || typeName === \"mat3x3f\" || typeName === \"mat3x4f\" ||\r\n                typeName === \"mat4x2f\" || typeName === \"mat4x3f\" || typeName === \"mat4x4f\" ||\r\n                typeName === \"mat2x2h\" || typeName === \"mat2x3h\" || typeName === \"mat2x4h\" ||\r\n                typeName === \"mat3x2h\" || typeName === \"mat3x3h\" || typeName === \"mat3x4h\" ||\r\n                typeName === \"mat4x2h\" || typeName === \"mat4x3h\" || typeName === \"mat4x4h\" ||\r\n                node.type instanceof ArrayType || node.type instanceof Struct || node.type instanceof TemplateType) {\r\n                const defType = new CreateExpr(node.type, []);\r\n                value = this._evalCreate(defType, context);\r\n            }\r\n        }\r\n\r\n        context.createVariable(node.name, value, node);\r\n    }\r\n\r\n    _switch(node: Switch, context: ExecContext) : Data | null {\r\n        context = context.clone();\r\n        const condition = this.evalExpression(node.condition, context);\r\n        if (!(condition instanceof ScalarData)) {\r\n            console.error(`Invalid if condition. Line ${node.line}`);\r\n            return null;\r\n        }\r\n\r\n        let defaultCase: SwitchCase | null = null;\r\n\r\n        for (const c of node.cases) {\r\n            if (c instanceof Case) {\r\n                for (const selector of c.selectors) {\r\n                    if (selector instanceof DefaultSelector) {\r\n                        defaultCase = c;\r\n                        continue;\r\n                    }\r\n\r\n                    const selectorValue = this.evalExpression(selector, context);\r\n                    if (!(selectorValue instanceof ScalarData)) {\r\n                        console.error(`Invalid case selector. Line ${node.line}`);\r\n                        return null;\r\n                    }\r\n\r\n                    if (selectorValue.value === condition.value) {\r\n                        return this._execStatements(c.body, context);\r\n                    }\r\n                }\r\n            } else if (c instanceof Default) {\r\n                defaultCase = c;\r\n            }\r\n        }\r\n\r\n        if (defaultCase) {\r\n            return this._execStatements(defaultCase.body, context);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    _if(node: If, context: ExecContext): Data | null {\r\n        context = context.clone();\r\n        const condition = this.evalExpression(node.condition, context);\r\n        if (!(condition instanceof ScalarData)) {\r\n            console.error(`Invalid if condition. Line ${node.line}`);\r\n            return null;\r\n        }\r\n\r\n        if (condition.value) {\r\n            return this._execStatements(node.body, context);\r\n        }\r\n\r\n        for (const e of node.elseif) {\r\n            const condition = this.evalExpression(e.condition, context);\r\n            if (!(condition instanceof ScalarData)) {\r\n                console.error(`Invalid if condition. Line ${node.line}`);\r\n                return null;\r\n            }\r\n            if (condition.value) {\r\n                return this._execStatements(e.body, context);\r\n            }\r\n        }\r\n\r\n        if (node.else) {\r\n            return this._execStatements(node.else, context);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    _getScalarValue(v: Data | null): number {\r\n        if (v instanceof ScalarData) {\r\n            return v.value;\r\n        }\r\n        console.error(`Expected scalar value.`, v);\r\n        return 0;\r\n    }\r\n\r\n    _for(node: For, context: ExecContext): Data | null {\r\n        context = context.clone();\r\n        this.execStatement(node.init, context);\r\n        while (this._getScalarValue(this.evalExpression(node.condition, context))) {\r\n            const res = this._execStatements(node.body, context);\r\n            if (res === WgslExec._breakObj) {\r\n                break;\r\n            }\r\n            if (res !== null && res !== WgslExec._continueObj) {\r\n                return res;\r\n            }\r\n            this.execStatement(node.increment, context);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    _loop(node: Loop, context: ExecContext): Data | null {\r\n        context = context.clone();\r\n\r\n        while (true) {\r\n            const res = this._execStatements(node.body, context);\r\n            if (res === WgslExec._breakObj) {\r\n                break;\r\n            } else if (res === WgslExec._continueObj) {\r\n                if (node.continuing) {\r\n                    const cres = this._execStatements(node.continuing.body, context);\r\n                    if (cres === WgslExec._breakObj) {\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (res !== null) {\r\n                return res;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    _while(node: While, context: ExecContext): Data | null {\r\n        context = context.clone();\r\n        while (this._getScalarValue(this.evalExpression(node.condition, context))) {\r\n            const res = this._execStatements(node.body, context);\r\n            if (res === WgslExec._breakObj) {\r\n                break;\r\n            } else if (res === WgslExec._continueObj) {\r\n                continue;\r\n            } else if (res !== null) {\r\n                return res;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    _evalBitcast(node: BitcastExpr, context: ExecContext): Data | null {\r\n        const value = this.evalExpression(node.value, context);\r\n        const type = node.type;\r\n\r\n        if (value instanceof ScalarData) {\r\n            const v = castScalar(value.value, value.typeInfo.name, type.name);\r\n            return new ScalarData(v, this.getTypeInfo(type));\r\n        }\r\n\r\n        if (value instanceof VectorData) {\r\n            const fromType = value.typeInfo.getTypeName();\r\n            let fromCast = \"\";\r\n            if (fromType.endsWith(\"f\")) {\r\n                fromCast = \"f32\";\r\n            } else if (fromType.endsWith(\"i\")) {\r\n                fromCast = \"i32\";\r\n            } else if (fromType.endsWith(\"u\")) {\r\n                fromCast = \"u32\";\r\n            } else if (fromType.endsWith(\"b\")) {\r\n                fromCast = \"bool\";\r\n            } else if (fromType.endsWith(\"h\")) {\r\n                fromCast = \"f16\";\r\n            } else {\r\n                console.error(`Unknown vector type ${fromType}. Line ${node.line}`);\r\n                return null;\r\n            }\r\n\r\n            const toType = type.getTypeName();\r\n            let toCast = \"\";\r\n            if (toType.endsWith(\"f\")) {\r\n                toCast = \"f32\";\r\n            } else if (toType.endsWith(\"i\")) {\r\n                toCast = \"i32\";\r\n            } else if (toType.endsWith(\"u\")) {\r\n                toCast = \"u32\";\r\n            } else if (toType.endsWith(\"b\")) {\r\n                toCast = \"bool\";\r\n            } else if (toType.endsWith(\"h\")) {\r\n                toCast = \"f16\";\r\n            } else {\r\n                console.error(`Unknown vector type ${toCast}. Line ${node.line}`);\r\n                return null;\r\n            }\r\n\r\n            const v = castVector(Array.from(value.data), fromCast, toCast);\r\n            return new VectorData(v, this.getTypeInfo(type));\r\n        }\r\n\r\n        console.error(`TODO: bitcast for ${value.typeInfo.name}. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    _evalConst(node: ConstExpr, context: ExecContext): Data | null {\r\n        const data = context.getVariableValue(node.name).clone();\r\n        return data.getSubData(this, node.postfix, context);\r\n    }\r\n\r\n    _evalCreate(node: CreateExpr | CallExpr | Call, context: ExecContext): Data | null {\r\n        if (node instanceof CreateExpr) {\r\n            if (node.type === null) {\r\n                return VoidData.void;\r\n            }\r\n\r\n            const typeName = node.type.getTypeName();\r\n\r\n            switch (typeName) {\r\n                // Constructor Built-in Functions\r\n                // Value Constructor Built-in Functions\r\n                case \"bool\":\r\n                case \"i32\":\r\n                case \"u32\":\r\n                case \"f32\":\r\n                case \"f16\":\r\n                    return this._callConstructorValue(node, context);\r\n                case \"vec2\":\r\n                case \"vec3\":\r\n                case \"vec4\":\r\n                case \"vec2f\":\r\n                case \"vec3f\":\r\n                case \"vec4f\":\r\n                case \"vec2h\":\r\n                case \"vec3h\":\r\n                case \"vec4h\":\r\n                case \"vec2i\":\r\n                case \"vec3i\":\r\n                case \"vec4i\":\r\n                case \"vec2u\":\r\n                case \"vec3u\":\r\n                case \"vec4u\":\r\n                case \"vec2b\":\r\n                case \"vec3b\":\r\n                case \"vec4b\":\r\n                    return this._callConstructorVec(node, context);\r\n                case \"mat2x2\":\r\n                case \"mat2x2f\":\r\n                case \"mat2x2h\":\r\n                case \"mat2x3\":\r\n                case \"mat2x3f\":\r\n                case \"mat2x3h\":\r\n                case \"mat2x4\":\r\n                case \"mat2x4f\":\r\n                case \"mat2x4h\":\r\n                case \"mat3x2\":\r\n                case \"mat3x2f\":\r\n                case \"mat3x2h\":\r\n                case \"mat3x3\":\r\n                case \"mat3x3f\":\r\n                case \"mat3x3h\":\r\n                case \"mat3x4\":\r\n                case \"mat3x4f\":\r\n                case \"mat3x4h\":\r\n                case \"mat4x2\":\r\n                case \"mat4x2f\":\r\n                case \"mat4x2h\":\r\n                case \"mat4x3\":\r\n                case \"mat4x3f\":\r\n                case \"mat4x3h\":\r\n                case \"mat4x4\":\r\n                case \"mat4x4f\":\r\n                case \"mat4x4h\":\r\n                    return this._callConstructorMatrix(node, context);\r\n            }\r\n        }\r\n\r\n        const typeName = (node instanceof CreateExpr) ? node.type.name : node.name;\r\n        const typeInfo = (node instanceof CreateExpr) ? this.getTypeInfo(node.type) : this.getTypeInfo(node.name);\r\n        if (typeInfo === null) {\r\n            console.error(`Unknown type ${typeName}. Line ${node.line}`);\r\n            return null;\r\n        }\r\n\r\n        if (typeInfo.size === 0) {\r\n            return null;\r\n        }\r\n\r\n        const data = new TypedData(new ArrayBuffer(typeInfo.size), typeInfo, 0);\r\n\r\n        // Assign the values in node.args to the data.\r\n        if (typeInfo instanceof StructInfo) {\r\n            if (node.args) {\r\n                for (let i = 0; i < node.args.length; ++i) {\r\n                    const memberInfo = typeInfo.members[i];\r\n                    const arg = node.args[i];\r\n                    const value = this.evalExpression(arg, context);\r\n                    data.setData(this, value, memberInfo.type, memberInfo.offset, context);\r\n                }\r\n            }\r\n        } else if (typeInfo instanceof ArrayInfo) {\r\n            let offset = 0;\r\n            if (node.args) {\r\n                for (let i = 0; i < node.args.length; ++i) {\r\n                    const arg = node.args[i];\r\n                    const value = this.evalExpression(arg, context);\r\n                    if (typeInfo.format === null) {\r\n                        if (value.typeInfo?.name === \"x32\") {\r\n                            typeInfo.format = this.getTypeInfo(\"i32\");\r\n                        } else {\r\n                            typeInfo.format = value.typeInfo;\r\n                        }\r\n                    }\r\n                    data.setData(this, value, typeInfo.format, offset, context);\r\n                    offset += typeInfo.stride;\r\n                }\r\n            }\r\n        } else {\r\n            console.error(`Unknown type \"${typeName}\". Line ${node.line}`);\r\n        }\r\n\r\n        if (node instanceof CreateExpr) {\r\n            return data.getSubData(this, node.postfix, context);\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    _evalLiteral(node: LiteralExpr, context: ExecContext): Data | null {\r\n        const typeInfo = this.getTypeInfo(node.type);\r\n        const typeName = typeInfo.name;\r\n        if (typeName === \"x32\" || typeName === \"u32\" || typeName === \"f32\" || typeName === \"f16\" ||\r\n            typeName === \"i32\" || typeName === \"bool\") {\r\n            const data = new ScalarData(node.scalarValue, typeInfo);\r\n            return data;\r\n        }\r\n        if (typeName === \"vec2\" || typeName === \"vec3\" || typeName === \"vec4\" ||\r\n            typeName === \"vec2f\" || typeName === \"vec3f\" || typeName === \"vec4f\" ||\r\n            typeName === \"vec2h\" || typeName === \"vec3h\" || typeName === \"vec4h\" ||\r\n            typeName === \"vec2i\" || typeName === \"vec3i\" || typeName === \"vec4i\" ||\r\n            typeName === \"vec2u\" || typeName === \"vec3u\" || typeName === \"vec4u\") {\r\n            return this._callConstructorVec(node, context);\r\n        }\r\n        if (typeName === \"mat2x2\" || typeName === \"mat2x3\" || typeName === \"mat2x4\" ||\r\n            typeName === \"mat3x2\" || typeName === \"mat3x3\" || typeName === \"mat3x4\" ||\r\n            typeName === \"mat4x2\" || typeName === \"mat4x3\" || typeName === \"mat4x4\" ||\r\n            typeName === \"mat2x2f\" || typeName === \"mat2x3f\" || typeName === \"mat2x4f\" ||\r\n            typeName === \"mat3x2f\" || typeName === \"mat3x3f\" || typeName === \"mat3x4f\" ||\r\n            typeName === \"mat4x2f\" || typeName === \"mat4x3f\" || typeName === \"mat4x4f\" ||\r\n            typeName === \"mat2x2h\" || typeName === \"mat2x3h\" || typeName === \"mat2x4h\" ||\r\n            typeName === \"mat3x2h\" || typeName === \"mat3x3h\" || typeName === \"mat3x4h\" ||\r\n            typeName === \"mat4x2h\" || typeName === \"mat4x3h\" || typeName === \"mat4x4h\") {\r\n            return this._callConstructorMatrix(node, context);\r\n        }\r\n        return node.value;\r\n    }\r\n\r\n    _evalVariable(node: VariableExpr, context: ExecContext): Data | null {\r\n        const value = context.getVariableValue(node.name);\r\n        if (value === null) {\r\n            return value;\r\n        }\r\n        return value.getSubData(this, node.postfix, context);\r\n    }\r\n\r\n    static _priority = new Map<string, number>([[\"f32\", 0], [\"f16\", 1], [\"u32\", 2], [\"i32\", 3], [\"x32\", 3]]);\r\n    _maxFormatTypeInfo(x: TypeInfo[]): TypeInfo | null {\r\n        let t = x[0];\r\n        if (t.name === \"f32\") {\r\n            return t;\r\n        }\r\n        for (let i = 1; i < x.length; ++i) {\r\n            const tv = WgslExec._priority.get(t.name);\r\n            const xv = WgslExec._priority.get(x[i].name);\r\n            if (xv < tv) {\r\n                t = x[i];\r\n            }\r\n        }\r\n\r\n        if (t.name === \"x32\") {\r\n            return this.getTypeInfo(\"i32\");\r\n        }\r\n\r\n        return t;\r\n    }\r\n\r\n    _evalUnaryOp(node: UnaryOperator, context: ExecContext): Data | null {\r\n        const _r = this.evalExpression(node.right, context);\r\n\r\n        if (node.operator === \"&\") { \r\n            return new PointerData(_r);\r\n        } else if (node.operator === \"*\") {\r\n            if (_r instanceof PointerData) {\r\n                return _r.reference.getSubData(this, node.postfix, context);\r\n            }\r\n            console.error(`Invalid dereference. Line ${node.line}`);\r\n            return null;\r\n        }\r\n\r\n        const r = _r instanceof ScalarData ? _r.value : \r\n            _r instanceof VectorData ? Array.from(_r.data) : null;\r\n\r\n        switch (node.operator) {\r\n            case \"+\": {\r\n                if (isArray(r)) {\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => +x);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const rn = r as number;\r\n                const t = this._maxFormatTypeInfo([_r.typeInfo, _r.typeInfo]);\r\n                return new ScalarData(+rn, t);\r\n            }\r\n            case \"-\": {\r\n                if (isArray(r)) {\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => -x);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const rn = r as number;\r\n                const t = this._maxFormatTypeInfo([_r.typeInfo, _r.typeInfo]);\r\n                return new ScalarData(-rn, t);\r\n            }\r\n            case \"!\": {\r\n                if (isArray(r)) {\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => !x ? 1 : 0);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const rn = r as number;\r\n                const t = this._maxFormatTypeInfo([_r.typeInfo, _r.typeInfo]);\r\n                return new ScalarData(!rn ? 1 : 0, t);\r\n            }\r\n            case \"~\": {\r\n                if (isArray(r)) {\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ~x);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const rn = r as number;\r\n                const t = this._maxFormatTypeInfo([_r.typeInfo, _r.typeInfo]);\r\n                return new ScalarData(~rn, t);\r\n            }\r\n        }\r\n        console.error(`Invalid unary operator ${node.operator}. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    _evalBinaryOp(node: BinaryOperator, context: ExecContext): Data | null {\r\n        const _l = this.evalExpression(node.left, context);\r\n        const _r = this.evalExpression(node.right, context);\r\n\r\n        const l = _l instanceof ScalarData ? _l.value : \r\n            _l instanceof VectorData ? Array.from(_l.data) :\r\n            _l instanceof MatrixData ? Array.from(_l.data) : null;\r\n        const r = _r instanceof ScalarData ? _r.value : \r\n            _r instanceof VectorData ? Array.from(_r.data) : \r\n            _r instanceof MatrixData ? Array.from(_r.data) :\r\n            null;\r\n\r\n        switch (node.operator) {\r\n            case \"+\": {\r\n                if (isArray(l) && isArray(r)) {\r\n                    const la = l as number[];\r\n                    const ra = r as number[];\r\n                    if (la.length !== ra.length) {\r\n                        console.error(`Vector length mismatch. Line ${node.line}.`);\r\n                        return null;\r\n                    }\r\n                    const result = la.map((x: number, i: number) => x + ra[i]);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(l)) {\r\n                    const la = l as number[];\r\n                    const rn = r as number;\r\n                    const result = la.map((x: number, i: number) => x + rn);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(r)) {\r\n                    const ln = l as number;\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ln + x);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const ln = l as number;\r\n                const rn = r as number;\r\n                const t = this._maxFormatTypeInfo([_l.typeInfo, _r.typeInfo]);\r\n                return new ScalarData(ln + rn, t);\r\n            }\r\n            case \"-\": {\r\n                if (isArray(l) && isArray(r)) {\r\n                    const la = l as number[];\r\n                    const ra = r as number[];\r\n                    if (la.length !== ra.length) {\r\n                        console.error(`Vector length mismatch. Line ${node.line}.`);\r\n                        return null;\r\n                    }\r\n                    const result = la.map((x: number, i: number) => x - ra[i]);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(l)) {\r\n                    const la = l as number[];\r\n                    const rn = r as number;\r\n                    const result = la.map((x: number, i: number) => x - rn);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(r)) {\r\n                    const ln = l as number;\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ln - x);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const ln = l as number;\r\n                const rn = r as number;\r\n                const t = this._maxFormatTypeInfo([_l.typeInfo, _r.typeInfo]);\r\n                return new ScalarData(ln - rn, t);\r\n            }\r\n            case \"*\": {\r\n                if (isArray(l) && isArray(r)) {\r\n                    const la = l as number[];\r\n                    const ra = r as number[];\r\n\r\n                    if (_l instanceof MatrixData && _r instanceof MatrixData) {\r\n                        const result = matrixMultiply(la, _l.typeInfo, ra, _r.typeInfo);\r\n                        if (result === null) {\r\n                            console.error(`Matrix multiplication failed. Line ${node.line}.`);\r\n                            return null;\r\n                        }\r\n                        const colsB = MatrixTypeSize[_r.typeInfo.name][0];\r\n                        const rowsA = MatrixTypeSize[_l.typeInfo.name][1];\r\n                        const type = this.getTypeInfo(`mat${colsB}x${rowsA}f`);\r\n                        return new MatrixData(result, type);\r\n                    } else if (_l instanceof MatrixData && _r instanceof VectorData) {\r\n                        const result = matrixVectorMultiply(la, _l.typeInfo, ra, _r.typeInfo);\r\n                        if (result === null) {\r\n                            console.error(`Matrix vector multiplication failed. Line ${node.line}.`);\r\n                            return null;\r\n                        }\r\n                        return new VectorData(result, _r.typeInfo);\r\n                    } else if (_l instanceof VectorData && _r instanceof MatrixData) {\r\n                        const result = vectorMatrixMultiply(la, _l.typeInfo, ra, _r.typeInfo);\r\n                        if (result === null) {\r\n                            console.error(`Matrix vector multiplication failed. Line ${node.line}.`);\r\n                            return null;\r\n                        }\r\n                        return new VectorData(result, _l.typeInfo);\r\n                    } else {\r\n                        if (la.length !== ra.length) {\r\n                            console.error(`Vector length mismatch. Line ${node.line}.`);\r\n                            return null;\r\n                        }\r\n                        const result = la.map((x: number, i: number) => x * ra[i]);\r\n                        return new VectorData(result, _l.typeInfo);\r\n                    }\r\n                } else if (isArray(l)) {\r\n                    const la = l as number[];\r\n                    const rn = r as number;\r\n                    const result = la.map((x: number, i: number) => x * rn);\r\n                    if (_l instanceof MatrixData) {\r\n                        return new MatrixData(result, _l.typeInfo);\r\n                    }\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(r)) {\r\n                    const ln = l as number;\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ln * x);\r\n                    if (_r instanceof MatrixData) {\r\n                        return new MatrixData(result, _r.typeInfo);\r\n                    }\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n\r\n                const ln = l as number;\r\n                const rn = r as number;\r\n                const t = this._maxFormatTypeInfo([_l.typeInfo, _r.typeInfo]);\r\n                return new ScalarData(ln * rn, t);\r\n            }\r\n            case \"%\": {\r\n                if (isArray(l) && isArray(r)) {\r\n                    const la = l as number[];\r\n                    const ra = r as number[];\r\n                    if (la.length !== ra.length) {\r\n                        console.error(`Vector length mismatch. Line ${node.line}.`);\r\n                        return null;\r\n                    }\r\n                    const result = la.map((x: number, i: number) => x % ra[i]);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(l)) {\r\n                    const la = l as number[];\r\n                    const rn = r as number;\r\n                    const result = la.map((x: number, i: number) => x % rn);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(r)) {\r\n                    const ln = l as number;\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ln % x);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const ln = l as number;\r\n                const rn = r as number;\r\n                const t = this._maxFormatTypeInfo([_l.typeInfo, _r.typeInfo]);\r\n                return new ScalarData(ln % rn, t);\r\n            }\r\n            case \"/\": {\r\n                if (isArray(l) && isArray(r)) {\r\n                    const la = l as number[];\r\n                    const ra = r as number[];\r\n                    if (la.length !== ra.length) {\r\n                        console.error(`Vector length mismatch. Line ${node.line}.`);\r\n                        return null;\r\n                    }\r\n                    const result = la.map((x: number, i: number) => x / ra[i]);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(l)) {\r\n                    const la = l as number[];\r\n                    const rn = r as number;\r\n                    const result = la.map((x: number, i: number) => x / rn);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(r)) {\r\n                    const ln = l as number;\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ln / x);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const ln = l as number;\r\n                const rn = r as number;\r\n                const t = this._maxFormatTypeInfo([_l.typeInfo, _r.typeInfo]);\r\n                return new ScalarData(ln / rn, t);\r\n            }\r\n            case \"&\": {\r\n                if (isArray(l) && isArray(r)) {\r\n                    const la = l as number[];\r\n                    const ra = r as number[];\r\n                    if (la.length !== ra.length) {\r\n                        console.error(`Vector length mismatch. Line ${node.line}.`);\r\n                        return null;\r\n                    }\r\n                    const result = la.map((x: number, i: number) => x & ra[i]);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(l)) {\r\n                    const la = l as number[];\r\n                    const rn = r as number;\r\n                    const result = la.map((x: number, i: number) => x & rn);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(r)) {\r\n                    const ln = l as number;\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ln & x);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const ln = l as number;\r\n                const rn = r as number;\r\n                const t = this._maxFormatTypeInfo([_l.typeInfo, _r.typeInfo]);\r\n                return new ScalarData(ln & rn, t);\r\n            }\r\n            case \"|\": {\r\n                if (isArray(l) && isArray(r)) {\r\n                    const la = l as number[];\r\n                    const ra = r as number[];\r\n                    if (la.length !== ra.length) {\r\n                        console.error(`Vector length mismatch. Line ${node.line}.`);\r\n                        return null;\r\n                    }\r\n                    const result = la.map((x: number, i: number) => x | ra[i]);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(l)) {\r\n                    const la = l as number[];\r\n                    const rn = r as number;\r\n                    const result = la.map((x: number, i: number) => x | rn);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(r)) {\r\n                    const ln = l as number;\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ln | x);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const ln = l as number;\r\n                const rn = r as number;\r\n                const t = this._maxFormatTypeInfo([_l.typeInfo, _r.typeInfo]);\r\n                return new ScalarData(ln | rn, t);\r\n            }\r\n            case \"^\": {\r\n                if (isArray(l) && isArray(r)) {\r\n                    const la = l as number[];\r\n                    const ra = r as number[];\r\n                    if (la.length !== ra.length) {\r\n                        console.error(`Vector length mismatch. Line ${node.line}.`);\r\n                        return null;\r\n                    }\r\n                    const result = la.map((x: number, i: number) => x ^ ra[i]);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(l)) {\r\n                    const la = l as number[];\r\n                    const rn = r as number;\r\n                    const result = la.map((x: number, i: number) => x ^ rn);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(r)) {\r\n                    const ln = l as number;\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ln ^ x);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const ln = l as number;\r\n                const rn = r as number;\r\n                const t = this._maxFormatTypeInfo([_l.typeInfo, _r.typeInfo]);\r\n                return new ScalarData(ln ^ rn, t);\r\n            }\r\n            case \"<<\": {\r\n                if (isArray(l) && isArray(r)) {\r\n                    const la = l as number[];\r\n                    const ra = r as number[];\r\n                    if (la.length !== ra.length) {\r\n                        console.error(`Vector length mismatch. Line ${node.line}.`);\r\n                        return null;\r\n                    }\r\n                    const result = la.map((x: number, i: number) => x << ra[i]);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(l)) {\r\n                    const la = l as number[];\r\n                    const rn = r as number;\r\n                    const result = la.map((x: number, i: number) => x << rn);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(r)) {\r\n                    const ln = l as number;\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ln << x);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const ln = l as number;\r\n                const rn = r as number;\r\n                const t = this._maxFormatTypeInfo([_l.typeInfo, _r.typeInfo]);\r\n                return new ScalarData(ln << rn, t);\r\n            }\r\n            case \">>\": {\r\n                if (isArray(l) && isArray(r)) {\r\n                    const la = l as number[];\r\n                    const ra = r as number[];\r\n                    if (la.length !== ra.length) {\r\n                        console.error(`Vector length mismatch. Line ${node.line}.`);\r\n                        return null;\r\n                    }\r\n                    const result = la.map((x: number, i: number) => x >> ra[i]);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(l)) {\r\n                    const la = l as number[];\r\n                    const rn = r as number;\r\n                    const result = la.map((x: number, i: number) => x >> rn);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(r)) {\r\n                    const ln = l as number;\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ln >> x);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const ln = l as number;\r\n                const rn = r as number;\r\n                const t = this._maxFormatTypeInfo([_l.typeInfo, _r.typeInfo]);\r\n                return new ScalarData(ln >> rn, t);\r\n            }\r\n            case \">\": {\r\n                if (isArray(l) && isArray(r)) {\r\n                    const la = l as number[];\r\n                    const ra = r as number[];\r\n                    if (la.length !== ra.length) {\r\n                        console.error(`Vector length mismatch. Line ${node.line}.`);\r\n                        return null;\r\n                    }\r\n                    const result = la.map((x: number, i: number) => x > ra[i] ? 1 : 0);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(l)) {\r\n                    const la = l as number[];\r\n                    const rn = r as number;\r\n                    const result = la.map((x: number, i: number) => x > rn ? 1 : 0);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(r)) {\r\n                    const ln = l as number;\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ln > x ? 1 : 0);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const ln = l as number;\r\n                const rn = r as number;\r\n                return new ScalarData(ln > rn ? 1 : 0, this.getTypeInfo(\"bool\"));\r\n            }\r\n            case \"<\":\r\n                if (isArray(l) && isArray(r)) {\r\n                    const la = l as number[];\r\n                    const ra = r as number[];\r\n                    if (la.length !== ra.length) {\r\n                        console.error(`Vector length mismatch. Line ${node.line}.`);\r\n                        return null;\r\n                    }\r\n                    const result = la.map((x: number, i: number) => x < ra[i] ? 1 : 0);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(l)) {\r\n                    const la = l as number[];\r\n                    const rn = r as number;\r\n                    const result = la.map((x: number, i: number) => x < rn ? 1 : 0);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(r)) {\r\n                    const ln = l as number;\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ln < x ? 1 : 0);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const ln = l as number;\r\n                const rn = r as number;\r\n                return new ScalarData(ln < rn ? 1 : 0, this.getTypeInfo(\"bool\"));\r\n            case \"==\": {\r\n                if (isArray(l) && isArray(r)) {\r\n                    const la = l as number[];\r\n                    const ra = r as number[];\r\n                    if (la.length !== ra.length) {\r\n                        console.error(`Vector length mismatch. Line ${node.line}.`);\r\n                        return null;\r\n                    }\r\n                    const result = la.map((x: number, i: number) => x === ra[i] ? 1 : 0);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(l)) {\r\n                    const la = l as number[];\r\n                    const rn = r as number;\r\n                    const result = la.map((x: number, i: number) => x == rn ? 1 : 0);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(r)) {\r\n                    const ln = l as number;\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ln == x ? 1 : 0);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const ln = l as number;\r\n                const rn = r as number;\r\n                return new ScalarData(ln === rn ? 1 : 0, this.getTypeInfo(\"bool\"));\r\n            }\r\n            case \"!=\": {\r\n                if (isArray(l) && isArray(r)) {\r\n                    const la = l as number[];\r\n                    const ra = r as number[];\r\n                    if (la.length !== ra.length) {\r\n                        console.error(`Vector length mismatch. Line ${node.line}.`);\r\n                        return null;\r\n                    }\r\n                    const result = la.map((x: number, i: number) => x !== ra[i] ? 1 : 0);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(l)) {\r\n                    const la = l as number[];\r\n                    const rn = r as number;\r\n                    const result = la.map((x: number, i: number) => x !== rn ? 1 : 0);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(r)) {\r\n                    const ln = l as number;\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ln !== x ? 1 : 0);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const ln = l as number;\r\n                const rn = r as number;\r\n                return new ScalarData(ln !== rn ? 1 : 0, this.getTypeInfo(\"bool\"));\r\n            }\r\n            case \">=\": {\r\n                if (isArray(l) && isArray(r)) {\r\n                    const la = l as number[];\r\n                    const ra = r as number[];\r\n                    if (la.length !== ra.length) {\r\n                        console.error(`Vector length mismatch. Line ${node.line}.`);\r\n                        return null;\r\n                    }\r\n                    const result = la.map((x: number, i: number) => x >= ra[i] ? 1 : 0);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(l)) {\r\n                    const la = l as number[];\r\n                    const rn = r as number;\r\n                    const result = la.map((x: number, i: number) => x >= rn ? 1 : 0);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(r)) {\r\n                    const ln = l as number;\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ln >= x ? 1 : 0);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const ln = l as number;\r\n                const rn = r as number;\r\n                return new ScalarData(ln >= rn ? 1 : 0, this.getTypeInfo(\"bool\"));\r\n            }\r\n            case \"<=\": {\r\n                if (isArray(l) && isArray(r)) {\r\n                    const la = l as number[];\r\n                    const ra = r as number[];\r\n                    if (la.length !== ra.length) {\r\n                        console.error(`Vector length mismatch. Line ${node.line}.`);\r\n                        return null;\r\n                    }\r\n                    const result = la.map((x: number, i: number) => x <= ra[i] ? 1 : 0);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(l)) {\r\n                    const la = l as number[];\r\n                    const rn = r as number;\r\n                    const result = la.map((x: number, i: number) => x <= rn ? 1 : 0);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(r)) {\r\n                    const ln = l as number;\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ln <= x ? 1 : 0);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const ln = l as number;\r\n                const rn = r as number;\r\n                return new ScalarData(ln <= rn ? 1 : 0, this.getTypeInfo(\"bool\"));\r\n            }\r\n            case \"&&\": {\r\n                if (isArray(l) && isArray(r)) {\r\n                    const la = l as number[];\r\n                    const ra = r as number[];\r\n                    if (la.length !== ra.length) {\r\n                        console.error(`Vector length mismatch. Line ${node.line}.`);\r\n                        return null;\r\n                    }\r\n                    const result = la.map((x: number, i: number) => x && ra[i] ? 1 : 0);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(l)) {\r\n                    const la = l as number[];\r\n                    const rn = r as number;\r\n                    const result = la.map((x: number, i: number) => x && rn ? 1 : 0);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(r)) {\r\n                    const ln = l as number;\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ln && x ? 1 : 0);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const ln = l as number;\r\n                const rn = r as number;\r\n                return new ScalarData(ln && rn ? 1 : 0, this.getTypeInfo(\"bool\"));\r\n            }\r\n            case \"||\": {\r\n                if (isArray(l) && isArray(r)) {\r\n                    const la = l as number[];\r\n                    const ra = r as number[];\r\n                    if (la.length !== ra.length) {\r\n                        console.error(`Vector length mismatch. Line ${node.line}.`);\r\n                        return null;\r\n                    }\r\n                    const result = la.map((x: number, i: number) => x || ra[i] ? 1 : 0);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(l)) {\r\n                    const la = l as number[];\r\n                    const rn = r as number;\r\n                    const result = la.map((x: number, i: number) => x || rn ? 1 : 0);\r\n                    return new VectorData(result, _l.typeInfo);\r\n                } else if (isArray(r)) {\r\n                    const ln = l as number;\r\n                    const ra = r as number[];\r\n                    const result = ra.map((x: number, i: number) => ln || x ? 1 : 0);\r\n                    return new VectorData(result, _r.typeInfo);\r\n                }\r\n                const ln = l as number;\r\n                const rn = r as number;\r\n                return new ScalarData(ln || rn ? 1 : 0, this.getTypeInfo(\"bool\"));\r\n            }\r\n        }\r\n        console.error(`Unknown operator ${node.operator}. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    _evalCall(node: CallExpr, context: ExecContext): Data | null {\r\n        if (node.cachedReturnValue !== null) {\r\n            return node.cachedReturnValue;\r\n        }\r\n\r\n        const subContext = context.clone();\r\n        subContext.currentFunctionName = node.name;\r\n\r\n        const f = context.getFunction(node.name);\r\n        if (!f) {\r\n            if (node.isBuiltin) {\r\n                return this._callBuiltinFunction(node, subContext);\r\n            }\r\n\r\n            const typeInfo = this.getTypeInfo(node.name);\r\n            if (typeInfo) {\r\n                return this._evalCreate(node, context);\r\n            }\r\n\r\n            console.error(`Unknown function \"${node.name}\". Line ${node.line}`);\r\n            return null;\r\n        }\r\n\r\n        for (let ai = 0; ai < f.node.args.length; ++ai) {\r\n            const arg = f.node.args[ai];\r\n            const value = this.evalExpression(node.args[ai], subContext);\r\n            subContext.createVariable(arg.name, value, arg);\r\n        }\r\n\r\n        return this._execStatements(f.node.body, subContext);\r\n    }\r\n\r\n    _callBuiltinFunction(node: CallExpr | Call, context: ExecContext): Data | null {\r\n        switch (node.name) {\r\n            // Logical Built-in Functions\r\n            case \"all\":\r\n                return this.builtins.All(node, context);\r\n            case \"any\":\r\n                return this.builtins.Any(node, context);\r\n            case \"select\":\r\n                return this.builtins.Select(node, context);\r\n\r\n            // Array Built-in Functions\r\n            case \"arrayLength\":\r\n                return this.builtins.ArrayLength(node, context);\r\n\r\n            // Numeric Built-in Functions\r\n            case \"abs\":\r\n                return this.builtins.Abs(node, context);\r\n            case \"acos\":\r\n                return this.builtins.Acos(node, context);\r\n            case \"acosh\":\r\n                return this.builtins.Acosh(node, context);\r\n            case \"asin\":\r\n                return this.builtins.Asin(node, context);\r\n            case \"asinh\":\r\n                return this.builtins.Asinh(node, context);\r\n            case \"atan\":\r\n                return this.builtins.Atan(node, context);\r\n            case \"atanh\":\r\n                return this.builtins.Atanh(node, context);\r\n            case \"atan2\":\r\n                return this.builtins.Atan2(node, context);\r\n            case \"ceil\":\r\n                return this.builtins.Ceil(node, context);\r\n            case \"clamp\":\r\n                return this.builtins.Clamp(node, context);\r\n            case \"cos\":\r\n                return this.builtins.Cos(node, context);\r\n            case \"cosh\":\r\n                return this.builtins.Cosh(node, context);\r\n            case \"countLeadingZeros\":\r\n                return this.builtins.CountLeadingZeros(node, context);\r\n            case \"countOneBits\":\r\n                return this.builtins.CountOneBits(node, context);\r\n            case \"countTrailingZeros\":\r\n                return this.builtins.CountTrailingZeros(node, context);\r\n            case \"cross\":\r\n                return this.builtins.Cross(node, context);\r\n            case \"degrees\":\r\n                return this.builtins.Degrees(node, context);\r\n            case \"determinant\":\r\n                return this.builtins.Determinant(node, context);\r\n            case \"distance\":\r\n                return this.builtins.Distance(node, context);\r\n            case \"dot\":\r\n                return this.builtins.Dot(node, context);\r\n            case \"dot4U8Packed\":\r\n                return this.builtins.Dot4U8Packed(node, context);\r\n            case \"dot4I8Packed\":\r\n                return this.builtins.Dot4I8Packed(node, context);\r\n            case \"exp\":\r\n                return this.builtins.Exp(node, context);\r\n            case \"exp2\":\r\n                return this.builtins.Exp2(node, context);\r\n            case \"extractBits\":\r\n                return this.builtins.ExtractBits(node, context);\r\n            case \"faceForward\":\r\n                return this.builtins.FaceForward(node, context);\r\n            case \"firstLeadingBit\":\r\n                return this.builtins.FirstLeadingBit(node, context);\r\n            case \"firstTrailingBit\":\r\n                return this.builtins.FirstTrailingBit(node, context);\r\n            case \"floor\":\r\n                return this.builtins.Floor(node, context);\r\n            case \"fma\":\r\n                return this.builtins.Fma(node, context);\r\n            case \"fract\":\r\n                return this.builtins.Fract(node, context);\r\n            case \"frexp\":\r\n                return this.builtins.Frexp(node, context);\r\n            case \"insertBits\":\r\n                return this.builtins.InsertBits(node, context);\r\n            case \"inverseSqrt\":\r\n                return this.builtins.InverseSqrt(node, context);\r\n            case \"ldexp\":\r\n                return this.builtins.Ldexp(node, context);\r\n            case \"length\":\r\n                return this.builtins.Length(node, context);\r\n            case \"log\":\r\n                return this.builtins.Log(node, context);\r\n            case \"log2\":\r\n                return this.builtins.Log2(node, context);\r\n            case \"max\":\r\n                return this.builtins.Max(node, context);\r\n            case \"min\":\r\n                return this.builtins.Min(node, context);\r\n            case \"mix\":\r\n                return this.builtins.Mix(node, context);\r\n            case \"modf\":\r\n                return this.builtins.Modf(node, context);\r\n            case \"normalize\":\r\n                return this.builtins.Normalize(node, context);\r\n            case \"pow\":\r\n                return this.builtins.Pow(node, context);\r\n            case \"quantizeToF16\":\r\n                return this.builtins.QuantizeToF16(node, context);\r\n            case \"radians\":\r\n                return this.builtins.Radians(node, context);\r\n            case \"reflect\":\r\n                return this.builtins.Reflect(node, context);\r\n            case \"refract\":\r\n                return this.builtins.Refract(node, context);\r\n            case \"reverseBits\":\r\n                return this.builtins.ReverseBits(node, context);\r\n            case \"round\":\r\n                return this.builtins.Round(node, context);\r\n            case \"saturate\":\r\n                return this.builtins.Saturate(node, context);\r\n            case \"sign\":\r\n                return this.builtins.Sign(node, context);\r\n            case \"sin\":\r\n                return this.builtins.Sin(node, context);\r\n            case \"sinh\":\r\n                return this.builtins.Sinh(node, context);\r\n            case \"smoothstep\":\r\n                return this.builtins.SmoothStep(node, context);\r\n            case \"sqrt\":\r\n                return this.builtins.Sqrt(node, context);\r\n            case \"step\":\r\n                return this.builtins.Step(node, context);\r\n            case \"tan\":\r\n                return this.builtins.Tan(node, context);\r\n            case \"tanh\":\r\n                return this.builtins.Tanh(node, context);\r\n            case \"transpose\":\r\n                return this.builtins.Transpose(node, context);\r\n            case \"trunc\":\r\n                return this.builtins.Trunc(node, context);\r\n\r\n            // Derivative Built-in Functions\r\n            case \"dpdx\":\r\n                return this.builtins.Dpdx(node, context);\r\n            case \"dpdxCoarse\":\r\n                return this.builtins.DpdxCoarse(node, context);\r\n            case \"dpdxFine\":\r\n                return this.builtins.DpdxFine(node, context);\r\n            case \"dpdy\":\r\n                return this.builtins.Dpdy(node, context);\r\n            case \"dpdyCoarse\":\r\n                return this.builtins.DpdyCoarse(node, context);\r\n            case \"dpdyFine\":\r\n                return this.builtins.DpdyFine(node, context);\r\n            case \"fwidth\":\r\n                return this.builtins.Fwidth(node, context);\r\n            case \"fwidthCoarse\":\r\n                return this.builtins.FwidthCoarse(node, context);\r\n            case \"fwidthFine\":\r\n                return this.builtins.FwidthFine(node, context);\r\n\r\n            // Texture Built-in Functions\r\n            case \"textureDimensions\":\r\n                return this.builtins.TextureDimensions(node, context);\r\n            case \"textureGather\":\r\n                return this.builtins.TextureGather(node, context);\r\n            case \"textureGatherCompare\":\r\n                return this.builtins.TextureGatherCompare(node, context);\r\n            case \"textureLoad\":\r\n                return this.builtins.TextureLoad(node, context);\r\n            case \"textureNumLayers\":\r\n                return this.builtins.TextureNumLayers(node, context);\r\n            case \"textureNumLevels\":\r\n                return this.builtins.TextureNumLevels(node, context);\r\n            case \"textureNumSamples\":\r\n                return this.builtins.TextureNumSamples(node, context);\r\n            case \"textureSample\":\r\n                return this.builtins.TextureSample(node, context);\r\n            case \"textureSampleBias\":\r\n                return this.builtins.TextureSampleBias(node, context);\r\n            case \"textureSampleCompare\":\r\n                return this.builtins.TextureSampleCompare(node, context);\r\n            case \"textureSampleCompareLevel\":\r\n                return this.builtins.TextureSampleCompareLevel(node, context);\r\n            case \"textureSampleGrad\":\r\n                return this.builtins.TextureSampleGrad(node, context);\r\n            case \"textureSampleLevel\":\r\n                return this.builtins.TextureSampleLevel(node, context);\r\n            case \"textureSampleBaseClampToEdge\":\r\n                return this.builtins.TextureSampleBaseClampToEdge(node, context);\r\n            case \"textureStore\":\r\n                return this.builtins.TextureStore(node, context);\r\n\r\n            // Atomic Built-in Functions\r\n            case \"atomicLoad\":\r\n                return this.builtins.AtomicLoad(node, context);\r\n            case \"atomicStore\":\r\n                return this.builtins.AtomicStore(node, context);\r\n            case \"atomicAdd\":\r\n                return this.builtins.AtomicAdd(node, context);\r\n            case \"atomicSub\":\r\n                return this.builtins.AtomicSub(node, context);\r\n            case \"atomicMax\":\r\n                return this.builtins.AtomicMax(node, context);\r\n            case \"atomicMin\":\r\n                return this.builtins.AtomicMin(node, context);\r\n            case \"atomicAnd\":\r\n                return this.builtins.AtomicAnd(node, context);\r\n            case \"atomicOr\":\r\n                return this.builtins.AtomicOr(node, context);\r\n            case \"atomicXor\":\r\n                return this.builtins.AtomicXor(node, context);\r\n            case \"atomicExchange\":\r\n                return this.builtins.AtomicExchange(node, context);\r\n            case \"atomicCompareExchangeWeak\":\r\n                return this.builtins.AtomicCompareExchangeWeak(node, context);\r\n\r\n            // Data Packing Built-in Functions\r\n            case \"pack4x8snorm\":\r\n                return this.builtins.Pack4x8snorm(node, context);\r\n            case \"pack4x8unorm\":\r\n                return this.builtins.Pack4x8unorm(node, context);\r\n            case \"pack4xI8\":\r\n                return this.builtins.Pack4xI8(node, context);\r\n            case \"pack4xU8\":\r\n                return this.builtins.Pack4xU8(node, context);\r\n            case \"pack4x8Clamp\":\r\n                return this.builtins.Pack4x8Clamp(node, context);\r\n            case \"pack4xU8Clamp\":\r\n                return this.builtins.Pack4xU8Clamp(node, context);\r\n            case \"pack2x16snorm\":\r\n                return this.builtins.Pack2x16snorm(node, context);\r\n            case \"pack2x16unorm\":\r\n                return this.builtins.Pack2x16unorm(node, context);\r\n            case \"pack2x16float\":\r\n                return this.builtins.Pack2x16float(node, context);\r\n\r\n            // Data Unpacking Built-in Functions\r\n            case \"unpack4x8snorm\":\r\n                return this.builtins.Unpack4x8snorm(node, context);\r\n            case \"unpack4x8unorm\":\r\n                return this.builtins.Unpack4x8unorm(node, context);\r\n            case \"unpack4xI8\":\r\n                return this.builtins.Unpack4xI8(node, context);\r\n            case \"unpack4xU8\":\r\n                return this.builtins.Unpack4xU8(node, context);\r\n            case \"unpack2x16snorm\":\r\n                return this.builtins.Unpack2x16snorm(node, context);\r\n            case \"unpack2x16unorm\":\r\n                return this.builtins.Unpack2x16unorm(node, context);\r\n            case \"unpack2x16float\":\r\n                return this.builtins.Unpack2x16float(node, context);\r\n\r\n            // Synchronization Built-in Functions\r\n            case \"storageBarrier\":\r\n                return this.builtins.StorageBarrier(node, context);\r\n            case \"textureBarrier\":\r\n                return this.builtins.TextureBarrier(node, context);\r\n            case \"workgroupBarrier\":\r\n                return this.builtins.WorkgroupBarrier(node, context);\r\n            case \"workgroupUniformLoad\":\r\n                return this.builtins.WorkgroupUniformLoad(node, context);\r\n\r\n            // Subgroup Built-in Functions\r\n            case \"subgroupAdd\":\r\n                return this.builtins.SubgroupAdd(node, context);\r\n            case \"subgroupExclusiveAdd\":\r\n                return this.builtins.SubgroupExclusiveAdd(node, context);\r\n            case \"subgroupInclusiveAdd\":\r\n                return this.builtins.SubgroupInclusiveAdd(node, context);\r\n            case \"subgroupAll\":\r\n                return this.builtins.SubgroupAll(node, context);\r\n            case \"subgroupAnd\":\r\n                return this.builtins.SubgroupAnd(node, context);\r\n            case \"subgroupAny\":\r\n                return this.builtins.SubgroupAny(node, context);\r\n            case \"subgroupBallot\":\r\n                return this.builtins.SubgroupBallot(node, context);\r\n            case \"subgroupBroadcast\":\r\n                return this.builtins.SubgroupBroadcast(node, context);\r\n            case \"subgroupBroadcastFirst\":\r\n                return this.builtins.SubgroupBroadcastFirst(node, context);\r\n            case \"subgroupElect\":\r\n                return this.builtins.SubgroupElect(node, context);\r\n            case \"subgroupMax\":\r\n                return this.builtins.SubgroupMax(node, context);\r\n            case \"subgroupMin\":\r\n                return this.builtins.SubgroupMin(node, context);\r\n            case \"subgroupMul\":\r\n                return this.builtins.SubgroupMul(node, context);\r\n            case \"subgroupExclusiveMul\":\r\n                return this.builtins.SubgroupExclusiveMul(node, context);\r\n            case \"subgroupInclusiveMul\":\r\n                return this.builtins.SubgroupInclusiveMul(node, context);\r\n            case \"subgroupOr\":\r\n                return this.builtins.SubgroupOr(node, context);\r\n            case \"subgroupShuffle\":\r\n                return this.builtins.SubgroupShuffle(node, context);\r\n            case \"subgroupShuffleDown\":\r\n                return this.builtins.SubgroupShuffleDown(node, context);\r\n            case \"subgroupShuffleUp\":\r\n                return this.builtins.SubgroupShuffleUp(node, context);\r\n            case \"subgroupShuffleXor\":\r\n                return this.builtins.SubgroupShuffleXor(node, context);\r\n            case \"subgroupXor\":\r\n                return this.builtins.SubgroupXor(node, context);\r\n\r\n            // Quad Operations\r\n            case \"quadBroadcast\":\r\n                return this.builtins.QuadBroadcast(node, context);\r\n            case \"quadSwapDiagonal\":\r\n                return this.builtins.QuadSwapDiagonal(node, context);\r\n            case \"quadSwapX\":\r\n                return this.builtins.QuadSwapX(node, context);\r\n            case \"quadSwapY\":\r\n                return this.builtins.QuadSwapY(node, context);\r\n        }\r\n\r\n        const f = context.getFunction(node.name);\r\n        if (f) {\r\n            const subContext = context.clone();\r\n            for (let ai = 0; ai < f.node.args.length; ++ai) {\r\n                const arg = f.node.args[ai];\r\n                const value = this.evalExpression(node.args[ai], subContext);\r\n                subContext.setVariable(arg.name, value, arg);\r\n            }\r\n            return this._execStatements(f.node.body, subContext);\r\n        }\r\n\r\n        //console.error(`Function ${node.name} not found. Line ${node.line}`);\r\n        return null;\r\n    }\r\n\r\n    _callConstructorValue(node: CreateExpr, context: ExecContext): Data | null {\r\n        if (!node.args || node.args.length === 0) {\r\n            return new ScalarData(0, this.getTypeInfo(node.type));\r\n        }\r\n        const v = this.evalExpression(node.args[0], context);\r\n        v.typeInfo = this.getTypeInfo(node.type);\r\n        return v.getSubData(this, node.postfix, context).clone();\r\n    }\r\n\r\n    _callConstructorVec(node: CreateExpr | LiteralExpr, context: ExecContext): Data | null {\r\n        const typeInfo = this.getTypeInfo(node.type);\r\n        const typeName = node.type.getTypeName();\r\n\r\n        const count = VectorTypeSize[typeName];\r\n        if (count === undefined) {\r\n            console.error(`Invalid vec constructor ${typeName}. Line ${node.line}`);\r\n            return null;\r\n        }\r\n\r\n        const values: number[] = [];\r\n        if (node instanceof LiteralExpr) {\r\n            if (node.isVector) {\r\n                const a = node.vectorValue;\r\n                for (const v of a) {\r\n                    values.push(v);\r\n                }\r\n            } else {\r\n                values.push(node.scalarValue);\r\n            }\r\n        } else {\r\n            if (node.args) {\r\n                for (const arg of node.args) {\r\n                    const argValue = this.evalExpression(arg, context) ;\r\n                    if (argValue instanceof VectorData) {\r\n                        const vd = argValue.data;\r\n                        for (let i = 0; i < vd.length; ++i) {\r\n                            let e = vd[i];\r\n                            values.push(e);\r\n                        }\r\n                    } else if (argValue instanceof ScalarData) {\r\n                        let v = argValue.value;\r\n                        values.push(v);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (node.type instanceof TemplateType && node.type.format === null) {\r\n            node.type.format = TemplateType.f32; // TODO: get the format from the type of the arg.\r\n        }\r\n\r\n        if (values.length === 0) {\r\n            const values = new Array(count).fill(0);\r\n            return new VectorData(values, typeInfo).getSubData(this, node.postfix, context);\r\n        }\r\n\r\n        if (values.length === 1) {\r\n            while (values.length < count) {\r\n                values.push(values[0]);\r\n            }\r\n        }\r\n\r\n        if (values.length < count) {\r\n            console.error(`Invalid vec constructor. Line ${node.line}`);\r\n            return null;\r\n        }\r\n\r\n        const data = new VectorData(values.length > count ? values.slice(0, count) : values, typeInfo);\r\n        return data.getSubData(this, node.postfix, context);\r\n    }\r\n\r\n    _callConstructorMatrix(node: CreateExpr | LiteralExpr, context: ExecContext): Data | null {\r\n        const typeInfo = this.getTypeInfo(node.type);\r\n        const typeName = node.type.getTypeName();\r\n\r\n        const count = MatrixTypeSize[typeName];\r\n        if (count === undefined) {\r\n            console.error(`Invalid matrix constructor ${typeName}. Line ${node.line}`);\r\n            return null;\r\n        }\r\n\r\n        const values = [];\r\n        if (node instanceof LiteralExpr) {\r\n            if (node.isVector) {\r\n                const a = node.vectorValue;\r\n                for (const v of a) {\r\n                    values.push(v);\r\n                }\r\n            } else {\r\n                values.push(node.scalarValue);\r\n            }\r\n        } else {\r\n            if (node.args) {\r\n                for (const arg of node.args) {\r\n                    const argValue = this.evalExpression(arg, context) ;\r\n                    if (argValue instanceof VectorData) {\r\n                        values.push(...argValue.data);\r\n                    } else if (argValue instanceof ScalarData) {\r\n                        values.push(argValue.value);\r\n                    } else if (argValue instanceof MatrixData) {\r\n                        values.push(...argValue.data);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if ((typeInfo instanceof TemplateInfo) && typeInfo.format === null) {\r\n            typeInfo.format = this.getTypeInfo(\"f32\");\r\n        }\r\n\r\n        if (values.length === 0) {\r\n            const values = new Array(count[2]).fill(0);\r\n            return new MatrixData(values, typeInfo).getSubData(this, node.postfix, context);\r\n        }\r\n\r\n        if (values.length !== count[2]) {\r\n            console.error(`Invalid matrix constructor. Line ${node.line}`);\r\n            return null;\r\n        }\r\n\r\n        return new MatrixData(values, typeInfo).getSubData(this, node.postfix, context);\r\n    }\r\n}\r\n", "import { Const, Alias, Struct } from \"../wgsl_ast.js\";\r\n\r\nexport class ParseContext {\r\n  constants: Map<string, Const> = new Map();\r\n  aliases: Map<string, Alias> = new Map();\r\n  structs: Map<string, Struct> = new Map();\r\n}\r\n", "import { WgslScanner, Token, TokenType, TokenTypes } from \"./wgsl_scanner.js\";\r\nimport * as AST from \"./wgsl_ast.js\";\r\nimport { WgslExec } from \"./wgsl_exec.js\";\r\nimport { TemplateInfo } from \"./reflect/info.js\";\r\nimport { ScalarData } from \"./wgsl_ast.js\";\r\nimport { ParseContext } from \"./ast/parse_context.js\";\r\n\r\n/// Parse a sequence of tokens from the WgslScanner into an Abstract Syntax Tree (AST).\r\nexport class WgslParser {\r\n  _tokens: Token[] = [];\r\n  _current: number = 0;\r\n  _currentLine: number = 1;\r\n  _deferArrayCountEval: Object[] = [];\r\n  _currentLoop: AST.Statement[] = [];\r\n  _context = new ParseContext();\r\n  _exec = new WgslExec();\r\n  _forwardTypeCount: number = 0;;\r\n\r\n  parse(tokensOrCode: Token[] | string): AST.Statement[] {\r\n    this._initialize(tokensOrCode);\r\n\r\n    this._deferArrayCountEval.length = 0;\r\n\r\n    const statements: AST.Statement[] = [];\r\n    while (!this._isAtEnd()) {\r\n      const statement = this._global_decl_or_directive();\r\n      if (!statement) {\r\n        break;\r\n      }\r\n      statements.push(statement);\r\n    }\r\n\r\n    // Since constants can be declared after they are used, and\r\n    // constants can be used to size arrays, defer calculating the\r\n    // size until after the shader has finished parsing.\r\n    if (this._deferArrayCountEval.length > 0) {\r\n      for (const arrayDecl of this._deferArrayCountEval) {\r\n        const arrayType = arrayDecl[\"arrayType\"];\r\n        const countNode = arrayDecl[\"countNode\"];\r\n\r\n        if (countNode instanceof AST.VariableExpr) {\r\n          const variable = countNode as AST.VariableExpr;\r\n          const name = variable.name;\r\n          const constant = this._context.constants.get(name);\r\n          if (constant) {\r\n            try {\r\n              const count = constant.constEvaluate(this._exec);\r\n              arrayType.count = count;\r\n            } catch (e) {\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this._deferArrayCountEval.length = 0;\r\n    }\r\n\r\n    if (this._forwardTypeCount > 0) {\r\n      for (const statement of statements) {\r\n        statement.search((node) => {\r\n          if (node instanceof AST.Member) {\r\n            node.type = this._forwardType(node.type);\r\n          } else if (node instanceof AST.PointerType) {\r\n            node.type = this._forwardType(node.type);\r\n          } else if (node instanceof AST.ArrayType) {\r\n            node.format = this._forwardType(node.format);\r\n          } else if (node instanceof AST.Var || node instanceof AST.Let || node instanceof AST.Const) {\r\n            node.type = this._forwardType(node.type);\r\n          } else if (node instanceof AST.Function) {\r\n            node.returnType = this._forwardType(node.returnType);\r\n          } else if (node instanceof AST.Argument) {\r\n            node.type = this._forwardType(node.type);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    return statements;\r\n  }\r\n\r\n  _forwardType(t: AST.Type | null): AST.Type | null {\r\n    if (t instanceof AST.ForwardType) {\r\n      const ft = this._getType(t.name);\r\n      if (ft) {\r\n        return ft;\r\n      }\r\n    } else if (t instanceof AST.PointerType) {\r\n      t.type = this._forwardType(t.type);\r\n    } else if (t instanceof AST.ArrayType) {\r\n      t.format = this._forwardType(t.format);\r\n    }\r\n    return t;\r\n  }\r\n\r\n  _initialize(tokensOrCode: Token[] | string) {\r\n    if (tokensOrCode) {\r\n      if (typeof tokensOrCode == \"string\") {\r\n        const scanner = new WgslScanner(tokensOrCode);\r\n        this._tokens = scanner.scanTokens();\r\n      } else {\r\n        this._tokens = tokensOrCode;\r\n      }\r\n    } else {\r\n      this._tokens = [];\r\n    }\r\n    this._current = 0;\r\n  }\r\n\r\n  _updateNode<T extends AST.Node>(n: T, l?: number): T {\r\n    n.line = l ?? this._currentLine;\r\n    return n;\r\n  }\r\n\r\n  _error(token: Token, message: string | null): Object {\r\n    return {\r\n      token,\r\n      message,\r\n      toString: function () {\r\n        return `${message}`;\r\n      },\r\n    };\r\n  }\r\n\r\n  _isAtEnd(): boolean {\r\n    return (\r\n      this._current >= this._tokens.length ||\r\n      this._peek().type == TokenTypes.eof\r\n    );\r\n  }\r\n\r\n  _match(types: TokenType | TokenType[]): boolean {\r\n    if (types instanceof TokenType) {\r\n      if (this._check(types)) {\r\n        this._advance();\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0, l = types.length; i < l; ++i) {\r\n      const type = types[i];\r\n      if (this._check(type)) {\r\n        this._advance();\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  _consume(types: TokenType | TokenType[], message: string | null): Token {\r\n    if (this._check(types)) {\r\n      return this._advance();\r\n    }\r\n    throw this._error(this._peek(), `${message}. Line:${this._currentLine}`);\r\n  }\r\n\r\n  _check(types: TokenType | TokenType[]): boolean {\r\n    if (this._isAtEnd()) {\r\n      return false;\r\n    }\r\n    const tk = this._peek();\r\n    if (types instanceof Array) {\r\n      const t = tk.type;\r\n      let hasNameType = false;\r\n      for (const type of types) {\r\n        if (t === type) {\r\n          return true;\r\n        }\r\n        if (type === TokenTypes.tokens.name) {\r\n          hasNameType =  true;\r\n        }\r\n      }\r\n      if (hasNameType) {\r\n        // ident can include any of the other keywords, so special case it.\r\n        const match = (TokenTypes.tokens.name.rule as RegExp).exec(tk.lexeme);\r\n        if (match && match.index == 0 && match[0] == tk.lexeme) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n    if (tk.type === types) {\r\n      return true;\r\n    }\r\n\r\n    // ident can include any of the other keywords, so special case it.\r\n    if (types === TokenTypes.tokens.name) {\r\n      const match = (TokenTypes.tokens.name.rule as RegExp).exec(tk.lexeme);\r\n      return match && match.index == 0 && match[0] == tk.lexeme;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  _advance(): Token {\r\n    this._currentLine = this._peek()?.line ?? -1;\r\n    if (!this._isAtEnd()) {\r\n      this._current++;\r\n    }\r\n    return this._previous();\r\n  }\r\n\r\n  _peek(): Token {\r\n    return this._tokens[this._current];\r\n  }\r\n\r\n  _previous(): Token {\r\n    return this._tokens[this._current - 1];\r\n  }\r\n\r\n  _global_decl_or_directive(): AST.Statement | null {\r\n    // semicolon\r\n    // global_variable_decl semicolon\r\n    // global_constant_decl semicolon\r\n    // type_alias semicolon\r\n    // struct_decl\r\n    // function_decl\r\n    // enable_directive\r\n\r\n    // Ignore any stand-alone semicolons\r\n    while (this._match(TokenTypes.tokens.semicolon) && !this._isAtEnd());\r\n\r\n    if (this._match(TokenTypes.keywords.alias)) {\r\n      const type = this._type_alias();\r\n      this._consume(TokenTypes.tokens.semicolon, \"Expected ';'\");\r\n      this._exec.reflection.updateAST([type]);\r\n      return type;\r\n    }\r\n\r\n    if (this._match(TokenTypes.keywords.diagnostic)) {\r\n      const directive = this._diagnostic();\r\n      this._consume(TokenTypes.tokens.semicolon, \"Expected ';'\");\r\n      this._exec.reflection.updateAST([directive]);\r\n      return directive;\r\n    }\r\n\r\n    if (this._match(TokenTypes.keywords.requires)) {\r\n      const requires = this._requires_directive();\r\n      this._consume(TokenTypes.tokens.semicolon, \"Expected ';'\");\r\n      this._exec.reflection.updateAST([requires]);\r\n      return requires;\r\n    }\r\n\r\n    if (this._match(TokenTypes.keywords.enable)) {\r\n      const enable = this._enable_directive();\r\n      this._consume(TokenTypes.tokens.semicolon, \"Expected ';'\");\r\n      this._exec.reflection.updateAST([enable]);\r\n      return enable;\r\n    }\r\n\r\n    // The following statements have an optional attribute*\r\n    const attrs = this._attribute();\r\n\r\n    if (this._check(TokenTypes.keywords.var)) {\r\n      const _var = this._global_variable_decl();\r\n      if (_var != null) {\r\n        _var.attributes = attrs;\r\n      }\r\n      this._consume(TokenTypes.tokens.semicolon, \"Expected ';'.\");\r\n      this._exec.reflection.updateAST([_var]);\r\n      return _var;\r\n    }\r\n\r\n    if (this._check(TokenTypes.keywords.override)) {\r\n      const _override = this._override_variable_decl();\r\n      if (_override != null) {\r\n        _override.attributes = attrs;\r\n      }\r\n      this._consume(TokenTypes.tokens.semicolon, \"Expected ';'.\");\r\n      this._exec.reflection.updateAST([_override]);\r\n      return _override;\r\n    }\r\n\r\n    if (this._check(TokenTypes.keywords.let)) {\r\n      const _let = this._global_let_decl();\r\n      if (_let != null) {\r\n        _let.attributes = attrs;\r\n      }\r\n      this._consume(TokenTypes.tokens.semicolon, \"Expected ';'.\");\r\n      this._exec.reflection.updateAST([_let]);\r\n      return _let;\r\n    }\r\n\r\n    if (this._check(TokenTypes.keywords.const)) {\r\n      const _const = this._global_const_decl();\r\n      if (_const != null) {\r\n        _const.attributes = attrs;\r\n      }\r\n      this._consume(TokenTypes.tokens.semicolon, \"Expected ';'.\");\r\n      this._exec.reflection.updateAST([_const]);\r\n      return _const;\r\n    }\r\n\r\n    if (this._check(TokenTypes.keywords.struct)) {\r\n      const _struct = this._struct_decl();\r\n      if (_struct != null) {\r\n        _struct.attributes = attrs;\r\n      }\r\n      this._exec.reflection.updateAST([_struct]);\r\n      return _struct;\r\n    }\r\n\r\n    if (this._check(TokenTypes.keywords.fn)) {\r\n      const _fn = this._function_decl();\r\n      if (_fn != null) {\r\n        _fn.attributes = attrs;\r\n      }\r\n      this._exec.reflection.updateAST([_fn]);\r\n      return _fn;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  _function_decl(): AST.Function | null {\r\n    // attribute* function_header compound_statement\r\n    // function_header: fn ident paren_left param_list? paren_right (arrow attribute* type_decl)?\r\n    if (!this._match(TokenTypes.keywords.fn)) {\r\n      return null;\r\n    }\r\n\r\n    const startLine = this._currentLine;\r\n\r\n    const name = this._consume(\r\n      TokenTypes.tokens.ident,\r\n      \"Expected function name.\"\r\n    ).toString();\r\n\r\n    this._consume(\r\n      TokenTypes.tokens.paren_left,\r\n      \"Expected '(' for function arguments.\"\r\n    );\r\n\r\n    const args: AST.Argument[] = [];\r\n    if (!this._check(TokenTypes.tokens.paren_right)) {\r\n      do {\r\n        if (this._check(TokenTypes.tokens.paren_right)) {\r\n          break;\r\n        }\r\n        const argAttrs = this._attribute();\r\n\r\n        const name = this._consume(\r\n          TokenTypes.tokens.name,\r\n          \"Expected argument name.\"\r\n        ).toString();\r\n\r\n        this._consume(\r\n          TokenTypes.tokens.colon,\r\n          \"Expected ':' for argument type.\"\r\n        );\r\n\r\n        const typeAttrs = this._attribute();\r\n        const type = this._type_decl();\r\n        if (type != null) {\r\n          type.attributes = typeAttrs;\r\n\r\n          args.push(this._updateNode(new AST.Argument(name, type, argAttrs)));\r\n        }\r\n      } while (this._match(TokenTypes.tokens.comma));\r\n    }\r\n\r\n    this._consume(\r\n      TokenTypes.tokens.paren_right,\r\n      \"Expected ')' after function arguments.\"\r\n    );\r\n\r\n    let _return: AST.Type | null = null;\r\n    if (this._match(TokenTypes.tokens.arrow)) {\r\n      const attrs = this._attribute();\r\n      _return = this._type_decl();\r\n      if (_return != null) {\r\n        _return.attributes = attrs;\r\n      }\r\n    }\r\n\r\n    const body = this._compound_statement();\r\n\r\n    const endLine = this._currentLine;\r\n\r\n    return this._updateNode(new AST.Function(name, args, _return, body, startLine, endLine), startLine);\r\n  }\r\n\r\n  _compound_statement(): AST.Statement[] {\r\n    // brace_left statement* brace_right\r\n    const statements: AST.Statement[] = [];\r\n\r\n    this._consume(TokenTypes.tokens.brace_left, \"Expected '{' for block.\");\r\n    while (!this._check(TokenTypes.tokens.brace_right)) {\r\n      const statement = this._statement();\r\n      if (statement !== null) {\r\n        statements.push(statement as AST.Statement);\r\n      }\r\n    }\r\n    this._consume(TokenTypes.tokens.brace_right, \"Expected '}' for block.\");\r\n\r\n    return statements;\r\n  }\r\n\r\n  _statement(): AST.Statement | AST.Statement[] | null {\r\n    // semicolon\r\n    // return_statement semicolon\r\n    // if_statement\r\n    // switch_statement\r\n    // loop_statement\r\n    // for_statement\r\n    // func_call_statement semicolon\r\n    // variable_statement semicolon\r\n    // break_statement semicolon\r\n    // continue_statement semicolon\r\n    // continuing_statement compound_statement\r\n    // discard semicolon\r\n    // assignment_statement semicolon\r\n    // compound_statement\r\n    // increment_statement semicolon\r\n    // decrement_statement semicolon\r\n    // static_assert_statement semicolon\r\n\r\n    // Ignore any stand-alone semicolons\r\n    while (this._match(TokenTypes.tokens.semicolon) && !this._isAtEnd());\r\n\r\n    let attributes = null;\r\n    if (this._check(TokenTypes.tokens.attr)) {\r\n      attributes = this._attribute();\r\n    }\r\n\r\n    if (this._check(TokenTypes.keywords.if)) {\r\n      return this._if_statement();\r\n    }\r\n\r\n    if (this._check(TokenTypes.keywords.switch)) {\r\n      return this._switch_statement();\r\n    }\r\n\r\n    if (this._check(TokenTypes.keywords.loop)) {\r\n      return this._loop_statement();\r\n    }\r\n\r\n    if (this._check(TokenTypes.keywords.for)) {\r\n      return this._for_statement();\r\n    }\r\n\r\n    if (this._check(TokenTypes.keywords.while)) {\r\n      return this._while_statement();\r\n    }\r\n\r\n    if (this._check(TokenTypes.keywords.continuing)) {\r\n      return this._continuing_statement();\r\n    }\r\n\r\n    if (this._check(TokenTypes.keywords.static_assert)) {\r\n      return this._static_assert_statement();\r\n    }\r\n\r\n    if (this._check(TokenTypes.tokens.brace_left)) {\r\n      return this._compound_statement();\r\n    }\r\n\r\n    let result: AST.Statement | null = null;\r\n    if (this._check(TokenTypes.keywords.return)) {\r\n      result = this._return_statement();\r\n    } else if (this._check([TokenTypes.keywords.var, TokenTypes.keywords.let, TokenTypes.keywords.const])) {\r\n      result = this._variable_statement();\r\n    } else if (this._match(TokenTypes.keywords.discard)) {\r\n      result = this._updateNode(new AST.Discard());\r\n    } else if (this._match(TokenTypes.keywords.break)) {\r\n      const breakStmt = this._updateNode(new AST.Break());\r\n      if (this._currentLoop.length > 0) {\r\n        const loop = this._currentLoop[this._currentLoop.length - 1];\r\n        breakStmt.loopId = loop.id;\r\n      } else {\r\n        // This break statement is not inside a loop.\r\n        //throw this._error(this._peek(), `Break statement must be inside a loop. Line: ${breakStmt.line}`);\r\n      }\r\n      result = breakStmt;\r\n      if (this._check(TokenTypes.keywords.if)) {\r\n        // break-if\r\n        this._advance();\r\n        breakStmt.condition = this._optional_paren_expression();\r\n      }\r\n    } else if (this._match(TokenTypes.keywords.continue)) {\r\n      const continueStmt = this._updateNode(new AST.Continue());\r\n      if (this._currentLoop.length > 0) {\r\n        const loop = this._currentLoop[this._currentLoop.length - 1];\r\n        continueStmt.loopId = loop.id;\r\n      } else {\r\n        // This continue statement is not inside a loop.\r\n        throw this._error(this._peek(), `Continue statement must be inside a loop. Line: ${continueStmt.line}`);\r\n      }\r\n      result = continueStmt;\r\n    } else {\r\n      result =\r\n        this._increment_decrement_statement() ||\r\n        this._func_call_statement() ||\r\n        this._assignment_statement();\r\n    }\r\n\r\n    if (result != null) {\r\n      this._consume(\r\n        TokenTypes.tokens.semicolon,\r\n        \"Expected ';' after statement.\"\r\n      );\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  _static_assert_statement(): AST.StaticAssert | null {\r\n    if (!this._match(TokenTypes.keywords.static_assert)) {\r\n      return null;\r\n    }\r\n    const line = this._currentLine;\r\n    const expression = this._optional_paren_expression();\r\n    return this._updateNode(new AST.StaticAssert(expression), line);\r\n  }\r\n\r\n  _while_statement(): AST.While | null {\r\n    if (!this._match(TokenTypes.keywords.while)) {\r\n      return null;\r\n    }\r\n\r\n    const whileLoop = this._updateNode(new AST.While(null, null));\r\n    this._currentLoop.push(whileLoop);\r\n\r\n    whileLoop.condition = this._optional_paren_expression();\r\n\r\n    let attributes = null;\r\n    if (this._check(TokenTypes.tokens.attr)) {\r\n      attributes = this._attribute();\r\n    }\r\n\r\n    whileLoop.body = this._compound_statement();\r\n\r\n    this._currentLoop.pop();\r\n\r\n    return whileLoop;\r\n  }\r\n\r\n  _continuing_statement(): AST.Continuing | null {\r\n    const loopId = this._currentLoop.length > 0 ? this._currentLoop[this._currentLoop.length - 1].id : -1;\r\n    if (!this._match(TokenTypes.keywords.continuing)) {\r\n      return null;\r\n    }\r\n    const line = this._currentLine;\r\n    const block = this._compound_statement();\r\n    return this._updateNode(new AST.Continuing(block, loopId), line);\r\n  }\r\n\r\n  _for_statement(): AST.For | null {\r\n    // for paren_left for_header paren_right compound_statement\r\n    if (!this._match(TokenTypes.keywords.for)) {\r\n      return null;\r\n    }\r\n\r\n    this._consume(TokenTypes.tokens.paren_left, \"Expected '('.\");\r\n\r\n    const forLoop = this._updateNode(new AST.For(null, null, null, null));\r\n\r\n    this._currentLoop.push(forLoop);\r\n\r\n    // for_header: (variable_statement assignment_statement func_call_statement)? semicolon short_circuit_or_expression? semicolon (assignment_statement func_call_statement)?\r\n    forLoop.init = !this._check(TokenTypes.tokens.semicolon)\r\n      ? this._for_init()\r\n      : null;\r\n    this._consume(TokenTypes.tokens.semicolon, \"Expected ';'.\");\r\n    forLoop.condition = !this._check(TokenTypes.tokens.semicolon)\r\n      ? this._short_circuit_or_expression()\r\n      : null;\r\n    this._consume(TokenTypes.tokens.semicolon, \"Expected ';'.\");\r\n    forLoop.increment = !this._check(TokenTypes.tokens.paren_right)\r\n      ? this._for_increment()\r\n      : null;\r\n\r\n    this._consume(TokenTypes.tokens.paren_right, \"Expected ')'.\");\r\n\r\n    let attributes = null;\r\n    if (this._check(TokenTypes.tokens.attr)) {\r\n      attributes = this._attribute();\r\n    }\r\n\r\n    forLoop.body = this._compound_statement();\r\n\r\n    this._currentLoop.pop();\r\n\r\n    return forLoop;\r\n  }\r\n\r\n  _for_init(): AST.Statement | null {\r\n    // (variable_statement assignment_statement func_call_statement)?\r\n    return (\r\n      this._variable_statement() ||\r\n      this._func_call_statement() ||\r\n      this._assignment_statement()\r\n    );\r\n  }\r\n\r\n  _for_increment(): AST.Statement | null {\r\n    // (assignment_statement func_call_statement increment_statement)?\r\n    return (\r\n      this._func_call_statement() ||\r\n      this._increment_decrement_statement() ||\r\n      this._assignment_statement()\r\n    );\r\n  }\r\n\r\n  _variable_statement(): AST.Var | AST.Let | AST.Const | null {\r\n    // variable_decl\r\n    // variable_decl equal short_circuit_or_expression\r\n    // let (ident variable_ident_decl) equal short_circuit_or_expression\r\n    // const (ident variable_ident_decl) equal short_circuit_or_expression\r\n    if (this._check(TokenTypes.keywords.var)) {\r\n      const _var = this._variable_decl();\r\n      if (_var === null) {\r\n        throw this._error(this._peek(), \"Variable declaration expected.\");\r\n      }\r\n      let value: AST.Expression | null = null;\r\n      if (this._match(TokenTypes.tokens.equal)) {\r\n        value = this._short_circuit_or_expression();\r\n      }\r\n\r\n      return this._updateNode(new AST.Var(\r\n        _var.name,\r\n        _var.type,\r\n        _var.storage,\r\n        _var.access,\r\n        value\r\n      ), _var.line);\r\n    }\r\n\r\n    if (this._match(TokenTypes.keywords.let)) {\r\n      const line = this._currentLine;\r\n      const name = this._consume(\r\n        TokenTypes.tokens.name,\r\n        \"Expected name for let.\"\r\n      ).toString();\r\n      let type: AST.Type | null = null;\r\n      if (this._match(TokenTypes.tokens.colon)) {\r\n        const typeAttrs = this._attribute();\r\n        type = this._type_decl();\r\n        if (type != null) {\r\n          type.attributes = typeAttrs;\r\n        }\r\n      }\r\n      this._consume(TokenTypes.tokens.equal, \"Expected '=' for let.\");\r\n      const value = this._short_circuit_or_expression();\r\n      return this._updateNode(new AST.Let(name, type, null, null, value), line);\r\n    }\r\n\r\n    if (this._match(TokenTypes.keywords.const)) {\r\n      const line = this._currentLine;\r\n      const name = this._consume(\r\n        TokenTypes.tokens.name,\r\n        \"Expected name for const.\"\r\n      ).toString();\r\n      let type: AST.Type | null = null;\r\n      if (this._match(TokenTypes.tokens.colon)) {\r\n        const typeAttrs = this._attribute();\r\n        type = this._type_decl();\r\n        if (type != null) {\r\n          type.attributes = typeAttrs;\r\n        }\r\n      }\r\n      this._consume(TokenTypes.tokens.equal, \"Expected '=' for const.\");\r\n      const value = this._short_circuit_or_expression();\r\n      if (type === null && value instanceof AST.LiteralExpr) {\r\n        type = value.type;\r\n      }\r\n      return this._updateNode(new AST.Const(name, type, null, null, value), line);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  _increment_decrement_statement(): AST.Statement | null {\r\n    const savedPos = this._current;\r\n\r\n    const _var = this._unary_expression();\r\n    if (_var == null) {\r\n      return null;\r\n    }\r\n\r\n    if (!this._check(TokenTypes.increment_operators)) {\r\n      this._current = savedPos;\r\n      return null;\r\n    }\r\n\r\n    const token = this._consume(\r\n      TokenTypes.increment_operators,\r\n      \"Expected increment operator\"\r\n    );\r\n\r\n    return this._updateNode(new AST.Increment(\r\n      token.type === TokenTypes.tokens.plus_plus\r\n        ? AST.IncrementOperator.increment\r\n        : AST.IncrementOperator.decrement,\r\n      _var));\r\n  }\r\n\r\n  _assignment_statement(): AST.Assign | null {\r\n    // (unary_expression underscore) equal short_circuit_or_expression\r\n    let _var: AST.Expression | null = null;\r\n    const line = this._currentLine;\r\n\r\n    if (this._check(TokenTypes.tokens.brace_right)) {\r\n      return null;\r\n    }\r\n\r\n    let isUnderscore = this._match(TokenTypes.tokens.underscore);\r\n    if (!isUnderscore) {\r\n      _var = this._unary_expression();\r\n    }\r\n\r\n    if (!isUnderscore && _var == null) {\r\n      return null;\r\n    }\r\n\r\n    const type = this._consume(\r\n      TokenTypes.assignment_operators,\r\n      \"Expected assignment operator.\");\r\n\r\n    const value = this._short_circuit_or_expression();\r\n\r\n    return this._updateNode(new AST.Assign(\r\n      AST.AssignOperator.parse(type.lexeme),\r\n      _var as AST.Expression,\r\n      value), line);\r\n  }\r\n\r\n  _func_call_statement(): AST.Call | null {\r\n    // ident argument_expression_list\r\n    if (!this._check(TokenTypes.tokens.ident)) {\r\n      return null;\r\n    }\r\n\r\n    const line = this._currentLine;\r\n\r\n    const savedPos = this._current;\r\n    const name = this._consume(\r\n      TokenTypes.tokens.ident,\r\n      \"Expected function name.\"\r\n    );\r\n    const args = this._argument_expression_list();\r\n\r\n    if (args === null) {\r\n      this._current = savedPos;\r\n      return null;\r\n    }\r\n\r\n    return this._updateNode(new AST.Call(name.lexeme, args), line);\r\n  }\r\n\r\n  _loop_statement(): AST.Loop | null {\r\n    // loop brace_left statement* continuing_statement? brace_right\r\n    if (!this._match(TokenTypes.keywords.loop)) {\r\n      return null;\r\n    }\r\n\r\n    let attributes = null;\r\n    if (this._check(TokenTypes.tokens.attr)) {\r\n      attributes = this._attribute();\r\n    }\r\n\r\n    this._consume(TokenTypes.tokens.brace_left, \"Expected '{' for loop.\");\r\n\r\n    const loop = this._updateNode(new AST.Loop([], null));\r\n    this._currentLoop.push(loop);\r\n\r\n    // statement*\r\n    let statement = this._statement();\r\n    while (statement !== null) {\r\n      if (Array.isArray(statement)) {\r\n        for (let s of statement) {\r\n          loop.body.push(s);\r\n        }\r\n      } else {\r\n        loop.body.push(statement);\r\n      }\r\n      // Keep continuing in the loop body statements so it can be\r\n      // executed in the stackframe of the body statements.\r\n      if (statement instanceof AST.Continuing) {\r\n        loop.continuing = statement;\r\n        // Continuing should be the last statement in the loop.\r\n        break;\r\n      }\r\n      statement = this._statement();\r\n    }\r\n\r\n    this._currentLoop.pop();\r\n\r\n    this._consume(TokenTypes.tokens.brace_right, \"Expected '}' for loop.\");\r\n\r\n    return loop;\r\n  }\r\n\r\n  _switch_statement(): AST.Switch | null {\r\n    // switch optional_paren_expression brace_left switch_body+ brace_right\r\n    if (!this._match(TokenTypes.keywords.switch)) {\r\n      return null;\r\n    }\r\n\r\n    const switchStmt = this._updateNode(new AST.Switch(null, []));\r\n\r\n    this._currentLoop.push(switchStmt);\r\n\r\n    switchStmt.condition = this._optional_paren_expression();\r\n\r\n    let attributes = null;\r\n    if (this._check(TokenTypes.tokens.attr)) {\r\n      attributes = this._attribute();\r\n    }\r\n\r\n    this._consume(TokenTypes.tokens.brace_left, \"Expected '{' for switch.\");\r\n    switchStmt.cases = this._switch_body();\r\n    if (switchStmt.cases == null || switchStmt.cases.length == 0) {\r\n      throw this._error(this._previous(), \"Expected 'case' or 'default'.\");\r\n    }\r\n    this._consume(TokenTypes.tokens.brace_right, \"Expected '}' for switch.\");\r\n\r\n    this._currentLoop.pop();\r\n\r\n    return switchStmt;\r\n  }\r\n\r\n  _switch_body(): AST.SwitchCase[] {\r\n    // case case_selectors optional_colon brace_left case_body? brace_right\r\n    // default optional_colon brace_left case_body? brace_right\r\n    const cases: AST.SwitchCase[] = [];\r\n\r\n    let hasDefault = false;\r\n    while (this._check([TokenTypes.keywords.default, TokenTypes.keywords.case])) {\r\n      if (this._match(TokenTypes.keywords.case)) {\r\n        const selectors = this._case_selectors();\r\n        for (const selector of selectors) {\r\n          if (selector instanceof AST.DefaultSelector) {\r\n            if (hasDefault) {\r\n              throw this._error(this._previous(), \"Multiple default cases in switch statement.\");\r\n            }\r\n            hasDefault = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        this._match(TokenTypes.tokens.colon); // colon is optional\r\n\r\n        let attributes = null;\r\n        if (this._check(TokenTypes.tokens.attr)) {\r\n          attributes = this._attribute();\r\n        }\r\n\r\n        this._consume(TokenTypes.tokens.brace_left, \"Exected '{' for switch case.\");\r\n\r\n        const body = this._case_body();\r\n\r\n        this._consume(TokenTypes.tokens.brace_right, \"Exected '}' for switch case.\");\r\n\r\n        cases.push(this._updateNode(new AST.Case(selectors, body)));\r\n      }\r\n\r\n      if (this._match(TokenTypes.keywords.default)) {\r\n        if (hasDefault) {\r\n          throw this._error(this._previous(), \"Multiple default cases in switch statement.\");\r\n        }\r\n        this._match(TokenTypes.tokens.colon); // colon is optional\r\n\r\n        let attributes = null;\r\n        if (this._check(TokenTypes.tokens.attr)) {\r\n          attributes = this._attribute();\r\n        }\r\n\r\n        this._consume(TokenTypes.tokens.brace_left, \"Exected '{' for switch default.\");\r\n\r\n        const body = this._case_body();\r\n\r\n        this._consume(TokenTypes.tokens.brace_right, \"Exected '}' for switch default.\");\r\n\r\n        cases.push(this._updateNode(new AST.Default(body)));\r\n      }\r\n    }\r\n\r\n    return cases;\r\n  }\r\n\r\n  _case_selectors(): AST.Expression[] {\r\n    // case_selector (comma case_selector)* comma?\r\n    // case_selector: expression | default\r\n    const selectors = [];\r\n\r\n    if (this._match(TokenTypes.keywords.default)) {\r\n      selectors.push(this._updateNode(new AST.DefaultSelector()));\r\n    } else {\r\n      selectors.push(this._shift_expression());\r\n    }\r\n\r\n    while (this._match(TokenTypes.tokens.comma)) {\r\n      if (this._match(TokenTypes.keywords.default)) {\r\n        selectors.push(this._updateNode(new AST.DefaultSelector()));\r\n      } else {\r\n        selectors.push(this._shift_expression());\r\n      }\r\n    }\r\n\r\n    return selectors;\r\n  }\r\n\r\n  _case_body(): AST.Statement[] {\r\n    // statement case_body?\r\n    // fallthrough semicolon\r\n    if (this._match(TokenTypes.keywords.fallthrough)) {\r\n      this._consume(TokenTypes.tokens.semicolon, \"Expected ';'\");\r\n      return [];\r\n    }\r\n\r\n    let statement = this._statement();\r\n    if (statement == null) {\r\n      return [];\r\n    }\r\n\r\n    if (!(statement instanceof Array)) {\r\n      statement = [statement];\r\n    }\r\n\r\n    const nextStatement = this._case_body();\r\n    if (nextStatement.length == 0) {\r\n      return statement;\r\n    }\r\n\r\n    return [...statement, nextStatement[0]];\r\n  }\r\n\r\n  _if_statement(): AST.If | null {\r\n    // if optional_paren_expression compound_statement elseif_statement? else_statement?\r\n    if (!this._match(TokenTypes.keywords.if)) {\r\n      return null;\r\n    }\r\n\r\n    const line = this._currentLine;\r\n\r\n    const condition = this._optional_paren_expression();\r\n\r\n    let attributes = null;\r\n    if (this._check(TokenTypes.tokens.attr)) {\r\n      attributes = this._attribute();\r\n    }\r\n\r\n    const block = this._compound_statement();\r\n\r\n    let elseif: AST.ElseIf[] | null = [];\r\n    if (this._match_elseif()) {\r\n      let attributes = null;\r\n      if (this._check(TokenTypes.tokens.attr)) {\r\n        attributes = this._attribute();\r\n      }\r\n      elseif = this._elseif_statement(elseif);\r\n    }\r\n\r\n    let _else: AST.Statement[] | null = null;\r\n    if (this._match(TokenTypes.keywords.else)) {\r\n      let attributes = null;\r\n      if (this._check(TokenTypes.tokens.attr)) {\r\n        attributes = this._attribute();\r\n      }\r\n      _else = this._compound_statement();\r\n    }\r\n\r\n    return this._updateNode(new AST.If(condition, block, elseif, _else), line);\r\n  }\r\n\r\n  _match_elseif(): boolean {\r\n    if (this._tokens[this._current].type === TokenTypes.keywords.else &&\r\n      this._tokens[this._current + 1].type === TokenTypes.keywords.if) {\r\n      this._advance();\r\n      this._advance();\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  _elseif_statement(elseif: AST.ElseIf[] = []): AST.ElseIf[] {\r\n    // else_if optional_paren_expression compound_statement elseif_statement?\r\n    const condition = this._optional_paren_expression();\r\n    const block = this._compound_statement();\r\n    elseif.push(this._updateNode(new AST.ElseIf(condition, block)));\r\n    if (this._match_elseif()) {\r\n      let attributes = null;\r\n      if (this._check(TokenTypes.tokens.attr)) {\r\n        attributes = this._attribute();\r\n      }\r\n      this._elseif_statement(elseif);\r\n    }\r\n    return elseif;\r\n  }\r\n\r\n  _return_statement(): AST.Return | null {\r\n    // return short_circuit_or_expression?\r\n    if (!this._match(TokenTypes.keywords.return)) {\r\n      return null;\r\n    }\r\n    const value = this._short_circuit_or_expression();\r\n    return this._updateNode(new AST.Return(value));\r\n  }\r\n\r\n  _short_circuit_or_expression(): AST.Expression {\r\n    // short_circuit_and_expression\r\n    // short_circuit_or_expression or_or short_circuit_and_expression\r\n    let expr = this._short_circuit_and_expr();\r\n    while (this._match(TokenTypes.tokens.or_or)) {\r\n      expr = this._updateNode(new AST.BinaryOperator(\r\n        this._previous().toString(),\r\n        expr,\r\n        this._short_circuit_and_expr()\r\n      ));\r\n    }\r\n    return expr;\r\n  }\r\n\r\n  _short_circuit_and_expr(): AST.Expression {\r\n    // inclusive_or_expression\r\n    // short_circuit_and_expression and_and inclusive_or_expression\r\n    let expr = this._inclusive_or_expression();\r\n    while (this._match(TokenTypes.tokens.and_and)) {\r\n      expr = this._updateNode(new AST.BinaryOperator(\r\n        this._previous().toString(),\r\n        expr,\r\n        this._inclusive_or_expression()\r\n      ));\r\n    }\r\n    return expr;\r\n  }\r\n\r\n  _inclusive_or_expression(): AST.Expression {\r\n    // exclusive_or_expression\r\n    // inclusive_or_expression or exclusive_or_expression\r\n    let expr = this._exclusive_or_expression();\r\n    while (this._match(TokenTypes.tokens.or)) {\r\n      expr = this._updateNode(new AST.BinaryOperator(\r\n        this._previous().toString(),\r\n        expr,\r\n        this._exclusive_or_expression()\r\n      ));\r\n    }\r\n    return expr;\r\n  }\r\n\r\n  _exclusive_or_expression(): AST.Expression {\r\n    // and_expression\r\n    // exclusive_or_expression xor and_expression\r\n    let expr = this._and_expression();\r\n    while (this._match(TokenTypes.tokens.xor)) {\r\n      expr = this._updateNode(new AST.BinaryOperator(\r\n        this._previous().toString(),\r\n        expr,\r\n        this._and_expression()\r\n      ));\r\n    }\r\n    return expr;\r\n  }\r\n\r\n  _and_expression(): AST.Expression {\r\n    // equality_expression\r\n    // and_expression and equality_expression\r\n    let expr = this._equality_expression();\r\n    while (this._match(TokenTypes.tokens.and)) {\r\n      expr = this._updateNode(new AST.BinaryOperator(\r\n        this._previous().toString(),\r\n        expr,\r\n        this._equality_expression()\r\n      ));\r\n    }\r\n    return expr;\r\n  }\r\n\r\n  _equality_expression(): AST.Expression {\r\n    // relational_expression\r\n    // relational_expression equal_equal relational_expression\r\n    // relational_expression not_equal relational_expression\r\n    const expr = this._relational_expression();\r\n    if (this._match([TokenTypes.tokens.equal_equal, TokenTypes.tokens.not_equal])) {\r\n      return this._updateNode(new AST.BinaryOperator(\r\n        this._previous().toString(),\r\n        expr,\r\n        this._relational_expression()\r\n      ));\r\n    }\r\n    return expr;\r\n  }\r\n\r\n  _relational_expression(): AST.Expression {\r\n    // shift_expression\r\n    // relational_expression less_than shift_expression\r\n    // relational_expression greater_than shift_expression\r\n    // relational_expression less_than_equal shift_expression\r\n    // relational_expression greater_than_equal shift_expression\r\n    let expr = this._shift_expression();\r\n    while (this._match([\r\n        TokenTypes.tokens.less_than,\r\n        TokenTypes.tokens.greater_than,\r\n        TokenTypes.tokens.less_than_equal,\r\n        TokenTypes.tokens.greater_than_equal,\r\n      ])) {\r\n      expr = this._updateNode(new AST.BinaryOperator(\r\n        this._previous().toString(),\r\n        expr,\r\n        this._shift_expression()\r\n      ));\r\n    }\r\n    return expr;\r\n  }\r\n\r\n  _shift_expression(): AST.Expression {\r\n    // additive_expression\r\n    // shift_expression shift_left additive_expression\r\n    // shift_expression shift_right additive_expression\r\n    let expr = this._additive_expression();\r\n    while (this._match([TokenTypes.tokens.shift_left, TokenTypes.tokens.shift_right])) {\r\n      expr = this._updateNode(new AST.BinaryOperator(\r\n        this._previous().toString(),\r\n        expr,\r\n        this._additive_expression()\r\n      ));\r\n    }\r\n    return expr;\r\n  }\r\n\r\n  _additive_expression(): AST.Expression {\r\n    // multiplicative_expression\r\n    // additive_expression plus multiplicative_expression\r\n    // additive_expression minus multiplicative_expression\r\n    let expr = this._multiplicative_expression();\r\n    while (this._match([TokenTypes.tokens.plus, TokenTypes.tokens.minus])) {\r\n      expr = this._updateNode(new AST.BinaryOperator(\r\n        this._previous().toString(),\r\n        expr,\r\n        this._multiplicative_expression()\r\n      ));\r\n    }\r\n    return expr;\r\n  }\r\n\r\n  _multiplicative_expression(): AST.Expression {\r\n    // unary_expression\r\n    // multiplicative_expression star unary_expression\r\n    // multiplicative_expression forward_slash unary_expression\r\n    // multiplicative_expression modulo unary_expression\r\n    let expr = this._unary_expression();\r\n    while (this._match([\r\n        TokenTypes.tokens.star,\r\n        TokenTypes.tokens.forward_slash,\r\n        TokenTypes.tokens.modulo,\r\n      ])) {\r\n      expr = this._updateNode(new AST.BinaryOperator(\r\n        this._previous().toString(),\r\n        expr,\r\n        this._unary_expression()\r\n      ));\r\n    }\r\n    return expr;\r\n  }\r\n\r\n  _unary_expression(): AST.Expression {\r\n    // singular_expression\r\n    // minus unary_expression\r\n    // bang unary_expression\r\n    // tilde unary_expression\r\n    // star unary_expression\r\n    // and unary_expression\r\n    if (this._match([\r\n        TokenTypes.tokens.minus,\r\n        TokenTypes.tokens.bang,\r\n        TokenTypes.tokens.tilde,\r\n        TokenTypes.tokens.star,\r\n        TokenTypes.tokens.and,\r\n      ])) {\r\n      return this._updateNode(new AST.UnaryOperator(\r\n        this._previous().toString(),\r\n        this._unary_expression()\r\n      ));\r\n    }\r\n    return this._singular_expression();\r\n  }\r\n\r\n  _singular_expression(): AST.Expression {\r\n    // primary_expression postfix_expression ?\r\n    const expr = this._primary_expression();\r\n    const p = this._postfix_expression();\r\n    if (p) {\r\n      expr.postfix = p;\r\n    }\r\n    return expr;\r\n  }\r\n\r\n  _postfix_expression(): AST.Expression | null {\r\n    // bracket_left short_circuit_or_expression bracket_right postfix_expression?\r\n    if (this._match(TokenTypes.tokens.bracket_left)) {\r\n      const expr = this._short_circuit_or_expression();\r\n      this._consume(TokenTypes.tokens.bracket_right, \"Expected ']'.\");\r\n      const arrayIndex = this._updateNode(new AST.ArrayIndex(expr));\r\n      const p = this._postfix_expression();\r\n      if (p) {\r\n        arrayIndex.postfix = p;\r\n      }\r\n      return arrayIndex;\r\n    }\r\n\r\n    // period ident postfix_expression?\r\n    if (this._match(TokenTypes.tokens.period)) {\r\n      const name = this._consume(TokenTypes.tokens.name, \"Expected member name.\");\r\n      const p = this._postfix_expression();\r\n      const expr = this._updateNode(new AST.StringExpr(name.lexeme));\r\n      if (p) {\r\n        expr.postfix = p;\r\n      }\r\n      return expr;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  _getStruct(name: string): AST.Type | null {\r\n    if (this._context.aliases.has(name)) {\r\n      const alias = this._context.aliases.get(name).type;\r\n      return alias;\r\n    }\r\n    if (this._context.structs.has(name)) {\r\n      const struct = this._context.structs.get(name);\r\n      return struct;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  _getType(name: string): AST.Type {\r\n    const struct = this._getStruct(name);\r\n    if (struct !== null) {\r\n      return struct;\r\n    }\r\n    switch (name) {\r\n      case \"void\":\r\n        return AST.Type.void;\r\n      case \"bool\":\r\n        return AST.Type.bool;\r\n      case \"i32\":\r\n        return AST.Type.i32;\r\n      case \"u32\":\r\n        return AST.Type.u32;\r\n      case \"f32\":\r\n        return AST.Type.f32;\r\n      case \"f16\":\r\n        return AST.Type.f16;\r\n      case \"vec2f\":\r\n        return AST.TemplateType.vec2f;\r\n      case \"vec3f\":\r\n        return AST.TemplateType.vec3f;\r\n      case \"vec4f\":\r\n        return AST.TemplateType.vec4f;\r\n      case \"vec2i\":\r\n        return AST.TemplateType.vec2i;\r\n      case \"vec3i\":\r\n        return AST.TemplateType.vec3i;\r\n      case \"vec4i\":\r\n        return AST.TemplateType.vec4i;\r\n      case \"vec2u\":\r\n        return AST.TemplateType.vec2u;\r\n      case \"vec3u\":\r\n        return AST.TemplateType.vec3u;\r\n      case \"vec4u\":\r\n        return AST.TemplateType.vec4u;\r\n      case \"vec2h\":\r\n        return AST.TemplateType.vec2h;\r\n      case \"vec3h\":\r\n        return AST.TemplateType.vec3h;\r\n      case \"vec4h\":\r\n        return AST.TemplateType.vec4h;\r\n      case \"mat2x2f\":\r\n        return AST.TemplateType.mat2x2f;\r\n      case \"mat2x3f\":\r\n        return AST.TemplateType.mat2x3f;\r\n      case \"mat2x4f\":\r\n        return AST.TemplateType.mat2x4f;\r\n      case \"mat3x2f\":\r\n        return AST.TemplateType.mat3x2f;\r\n      case \"mat3x3f\":\r\n        return AST.TemplateType.mat3x3f;\r\n      case \"mat3x4f\":\r\n        return AST.TemplateType.mat3x4f;\r\n      case \"mat4x2f\":\r\n        return AST.TemplateType.mat4x2f;\r\n      case \"mat4x3f\":\r\n        return AST.TemplateType.mat4x3f;\r\n      case \"mat4x4f\":\r\n        return AST.TemplateType.mat4x4f;\r\n      case \"mat2x2h\":\r\n        return AST.TemplateType.mat2x2h;\r\n      case \"mat2x3h\":\r\n        return AST.TemplateType.mat2x3h;\r\n      case \"mat2x4h\":\r\n        return AST.TemplateType.mat2x4h;\r\n      case \"mat3x2h\":\r\n        return AST.TemplateType.mat3x2h;\r\n      case \"mat3x3h\":\r\n        return AST.TemplateType.mat3x3h;\r\n      case \"mat3x4h\":\r\n        return AST.TemplateType.mat3x4h;\r\n      case \"mat4x2h\":\r\n        return AST.TemplateType.mat4x2h;\r\n      case \"mat4x3h\":\r\n        return AST.TemplateType.mat4x3h;\r\n      case \"mat4x4h\":\r\n        return AST.TemplateType.mat4x4h;\r\n\r\n      case \"mat2x2i\":\r\n        return AST.TemplateType.mat2x2i;\r\n      case \"mat2x3i\":\r\n        return AST.TemplateType.mat2x3i;\r\n      case \"mat2x4i\":\r\n        return AST.TemplateType.mat2x4i;\r\n      case \"mat3x2i\":\r\n        return AST.TemplateType.mat3x2i;\r\n      case \"mat3x3i\":\r\n        return AST.TemplateType.mat3x3i;\r\n      case \"mat3x4i\":\r\n        return AST.TemplateType.mat3x4i;\r\n      case \"mat4x2i\":\r\n        return AST.TemplateType.mat4x2i;\r\n      case \"mat4x3i\":\r\n        return AST.TemplateType.mat4x3i;\r\n      case \"mat4x4i\":\r\n        return AST.TemplateType.mat4x4i;\r\n\r\n      case \"mat2x2u\":\r\n        return AST.TemplateType.mat2x2u;\r\n      case \"mat2x3u\":\r\n        return AST.TemplateType.mat2x3u;\r\n      case \"mat2x4u\":\r\n        return AST.TemplateType.mat2x4u;\r\n      case \"mat3x2u\":\r\n        return AST.TemplateType.mat3x2u;\r\n      case \"mat3x3u\":\r\n        return AST.TemplateType.mat3x3u;\r\n      case \"mat3x4u\":\r\n        return AST.TemplateType.mat3x4u;\r\n      case \"mat4x2u\":\r\n        return AST.TemplateType.mat4x2u;\r\n      case \"mat4x3u\":\r\n        return AST.TemplateType.mat4x3u;\r\n      case \"mat4x4u\":\r\n        return AST.TemplateType.mat4x4u;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  _validateTypeRange(value: number, type: AST.Type) {\r\n    if (type.name === \"i32\") {\r\n      if (value < -2147483648 || value > 2147483647) {\r\n        throw this._error(this._previous(), `Value out of range for i32: ${value}. Line: ${this._currentLine}.`);\r\n      }\r\n    } else if (type.name === \"u32\") {\r\n      if (value < 0 || value > 4294967295) {\r\n        throw this._error(this._previous(), `Value out of range for u32: ${value}. Line: ${this._currentLine}.`);\r\n      }\r\n    }\r\n  }\r\n\r\n  _primary_expression(): AST.Expression {\r\n    // ident argument_expression_list?\r\n    if (this._match(TokenTypes.tokens.ident)) {\r\n      const name = this._previous().toString();\r\n      if (this._check(TokenTypes.tokens.paren_left)) {\r\n        const args = this._argument_expression_list();\r\n        const type = this._getType(name);\r\n        if (type !== null) {\r\n          return this._updateNode(new AST.CreateExpr(type, args));\r\n        }\r\n        return this._updateNode(new AST.CallExpr(name, args));\r\n      }\r\n      if (this._context.constants.has(name)) {\r\n        const c = this._context.constants.get(name);\r\n        return this._updateNode(new AST.ConstExpr(name, c.value));\r\n      }\r\n      return this._updateNode(new AST.VariableExpr(name));\r\n    }\r\n\r\n    // const_literal\r\n    if (this._match(TokenTypes.tokens.int_literal)) {\r\n      const s = this._previous().toString();\r\n      let type = s.endsWith(\"i\") || s.endsWith(\"i\") ? AST.Type.i32 :\r\n          s.endsWith(\"u\") || s.endsWith(\"U\") ? AST.Type.u32 : AST.Type.x32;\r\n      const i = parseInt(s);\r\n      this._validateTypeRange(i, type);\r\n      return this._updateNode(new AST.LiteralExpr(new ScalarData(i, this._exec.getTypeInfo(type)), type));\r\n    } else if (this._match(TokenTypes.tokens.uint_literal)) {\r\n      const u = parseInt(this._previous().toString());\r\n      this._validateTypeRange(u, AST.Type.u32);\r\n      return this._updateNode(new AST.LiteralExpr(new ScalarData(u, this._exec.getTypeInfo(AST.Type.u32)), AST.Type.u32));\r\n    } else if (this._match([TokenTypes.tokens.decimal_float_literal, TokenTypes.tokens.hex_float_literal])) {\r\n      let fs = this._previous().toString();\r\n      let isF16 = fs.endsWith(\"h\");\r\n      if (isF16) {\r\n        fs = fs.substring(0, fs.length - 1);\r\n      }\r\n      const f = parseFloat(fs);\r\n      this._validateTypeRange(f, isF16 ? AST.Type.f16 : AST.Type.f32);\r\n      const type = isF16 ? AST.Type.f16 : AST.Type.f32;\r\n      return this._updateNode(new AST.LiteralExpr(new ScalarData(f, this._exec.getTypeInfo(type)), type));\r\n    } else if (this._match([TokenTypes.keywords.true, TokenTypes.keywords.false])) {\r\n      let b = this._previous().toString() === TokenTypes.keywords.true.rule;\r\n      return this._updateNode(new AST.LiteralExpr(new ScalarData(b ? 1 : 0, this._exec.getTypeInfo(AST.Type.bool)), AST.Type.bool));\r\n    }\r\n\r\n    // paren_expression\r\n    if (this._check(TokenTypes.tokens.paren_left)) {\r\n      return this._paren_expression();\r\n    }\r\n\r\n    // bitcast less_than type_decl greater_than paren_expression\r\n    if (this._match(TokenTypes.keywords.bitcast)) {\r\n      this._consume(TokenTypes.tokens.less_than, \"Expected '<'.\");\r\n      const type = this._type_decl();\r\n      this._consume(TokenTypes.tokens.greater_than, \"Expected '>'.\");\r\n      const value = this._paren_expression();\r\n      return this._updateNode(new AST.BitcastExpr(type, value));\r\n    }\r\n\r\n    // type_decl argument_expression_list\r\n    const type = this._type_decl();\r\n    const args = this._argument_expression_list();\r\n    return this._updateNode(new AST.CreateExpr(type, args));\r\n  }\r\n\r\n  _argument_expression_list(): AST.Expression[] | null {\r\n    // paren_left ((short_circuit_or_expression comma)* short_circuit_or_expression comma?)? paren_right\r\n    if (!this._match(TokenTypes.tokens.paren_left)) {\r\n      return null;\r\n    }\r\n\r\n    const args: AST.Expression[] = [];\r\n    do {\r\n      if (this._check(TokenTypes.tokens.paren_right)) {\r\n        break;\r\n      }\r\n      const arg = this._short_circuit_or_expression();\r\n      args.push(arg);\r\n    } while (this._match(TokenTypes.tokens.comma));\r\n    this._consume(\r\n      TokenTypes.tokens.paren_right,\r\n      \"Expected ')' for agument list\"\r\n    );\r\n\r\n    return args;\r\n  }\r\n\r\n  _optional_paren_expression(): AST.Expression {\r\n    // [paren_left] short_circuit_or_expression [paren_right]\r\n    this._match(TokenTypes.tokens.paren_left);\r\n    const expr = this._short_circuit_or_expression();\r\n    this._match(TokenTypes.tokens.paren_right);\r\n    return expr;\r\n  }\r\n\r\n  _paren_expression(): AST.Expression {\r\n    // paren_left short_circuit_or_expression paren_right\r\n    this._consume(TokenTypes.tokens.paren_left, \"Expected '('.\");\r\n    const expr = this._short_circuit_or_expression();\r\n    this._consume(TokenTypes.tokens.paren_right, \"Expected ')'.\");\r\n    return expr;\r\n  }\r\n\r\n  _struct_decl(): AST.Struct | null {\r\n    // attribute* struct ident struct_body_decl\r\n    if (!this._match(TokenTypes.keywords.struct)) {\r\n      return null;\r\n    }\r\n\r\n    const startLine = this._currentLine;\r\n\r\n    const name = this._consume(TokenTypes.tokens.ident, \"Expected name for struct.\").toString();\r\n\r\n    // struct_body_decl: brace_left (struct_member comma)* struct_member comma? brace_right\r\n    this._consume(TokenTypes.tokens.brace_left, \"Expected '{' for struct body.\");\r\n    const members: AST.Member[] = [];\r\n    while (!this._check(TokenTypes.tokens.brace_right)) {\r\n      // struct_member: attribute* variable_ident_decl\r\n      const memberAttrs = this._attribute();\r\n\r\n      const memberName = this._consume(TokenTypes.tokens.name, \"Expected variable name.\").toString();\r\n\r\n      this._consume(TokenTypes.tokens.colon, \"Expected ':' for struct member type.\");\r\n\r\n      const typeAttrs = this._attribute();\r\n      const memberType = this._type_decl();\r\n      if (memberType != null) {\r\n        memberType.attributes = typeAttrs;\r\n      }\r\n\r\n      if (!this._check(TokenTypes.tokens.brace_right)) {\r\n        this._consume(TokenTypes.tokens.comma, \"Expected ',' for struct member.\");\r\n      } else {\r\n        this._match(TokenTypes.tokens.comma); // trailing comma optional.\r\n      }\r\n\r\n      members.push(this._updateNode(new AST.Member(memberName, memberType, memberAttrs)));\r\n    }\r\n\r\n    this._consume(TokenTypes.tokens.brace_right, \"Expected '}' after struct body.\");\r\n\r\n    const endLine = this._currentLine;\r\n\r\n    const structNode = this._updateNode(new AST.Struct(name, members, startLine, endLine), startLine);\r\n    this._context.structs.set(name, structNode);\r\n    return structNode;\r\n  }\r\n\r\n  _global_variable_decl(): AST.Var | null {\r\n    // attribute* variable_decl (equal const_expression)?\r\n    const _var = this._variable_decl();\r\n    if (!_var) {\r\n      return null;\r\n    }\r\n\r\n    if (this._match(TokenTypes.tokens.equal)) {\r\n      const expr = this._const_expression();\r\n      _var.value = expr;\r\n    }\r\n\r\n    if (_var.type !== null && _var.value instanceof AST.LiteralExpr) {\r\n      if (_var.value.type.name !== \"x32\") {\r\n        const t1 = _var.type.getTypeName();\r\n        const t2 = _var.value.type.getTypeName();\r\n        if (t1 !== t2) {\r\n          throw this._error(this._peek(), `Invalid cast from ${_var.value.type.name} to ${_var.type.name}. Line:${this._currentLine}`);\r\n        }\r\n      }\r\n      if (_var.value.isScalar) {\r\n        this._validateTypeRange(_var.value.scalarValue, _var.type);\r\n      }\r\n      _var.value.type = _var.type;\r\n    } else if (_var.type === null && _var.value instanceof AST.LiteralExpr) {\r\n      _var.type = _var.value.type.name === \"x32\" ? AST.Type.i32 : _var.value.type;\r\n      if (_var.value.isScalar) {\r\n        this._validateTypeRange(_var.value.scalarValue, _var.type);\r\n      }\r\n    }\r\n    return _var;\r\n  }\r\n\r\n  _override_variable_decl(): AST.Override | null {\r\n    // attribute* override_decl (equal const_expression)?\r\n    const _override = this._override_decl();\r\n    if (_override && this._match(TokenTypes.tokens.equal)) {\r\n      _override.value = this._const_expression();\r\n    }\r\n\r\n    return _override;\r\n  }\r\n\r\n  _global_const_decl(): AST.Const | null {\r\n    // attribute* const (ident variable_ident_decl) global_const_initializer?\r\n    if (!this._match(TokenTypes.keywords.const)) {\r\n      return null;\r\n    }\r\n\r\n    const name = this._consume(\r\n      TokenTypes.tokens.name,\r\n      \"Expected variable name\"\r\n    );\r\n\r\n    const line = this._currentLine;\r\n\r\n    let type: AST.Type | null = null;\r\n    if (this._match(TokenTypes.tokens.colon)) {\r\n      const attrs = this._attribute();\r\n      type = this._type_decl();\r\n      if (type != null) {\r\n        type.attributes = attrs;\r\n      }\r\n    }\r\n    let value: AST.Expression | null = null;\r\n\r\n    this._consume(TokenTypes.tokens.equal, \"const declarations require an assignment\")\r\n\r\n    const valueExpr = this._short_circuit_or_expression();\r\n    try {\r\n      let type = [AST.Type.f32];\r\n      let constValue = valueExpr.constEvaluate(this._exec, type);\r\n\r\n      if (constValue instanceof ScalarData) {\r\n        this._validateTypeRange(constValue.value, type[0]);\r\n      }\r\n\r\n      if (type[0] instanceof AST.TemplateType && type[0].format === null &&\r\n        constValue.typeInfo instanceof TemplateInfo && constValue.typeInfo.format !== null) {\r\n        if (constValue.typeInfo.format.name === \"f16\") {\r\n          type[0].format = AST.Type.f16;\r\n        } else if (constValue.typeInfo.format.name === \"f32\") {\r\n          type[0].format = AST.Type.f32;\r\n        } else if (constValue.typeInfo.format.name === \"i32\") {\r\n          type[0].format = AST.Type.i32;\r\n        } else if (constValue.typeInfo.format.name === \"u32\") {\r\n          type[0].format = AST.Type.u32;\r\n        } else if (constValue.typeInfo.format.name === \"bool\") {\r\n          type[0].format = AST.Type.bool;\r\n        } else {\r\n          console.error(`TODO: impelement template format type ${constValue.typeInfo.format.name}`);\r\n        }\r\n      }\r\n\r\n      value = this._updateNode(new AST.LiteralExpr(constValue, type[0]));\r\n      this._exec.context.setVariable(name.toString(), constValue);\r\n    } catch {\r\n      value = valueExpr;\r\n    }\r\n\r\n    if (type !== null && value instanceof AST.LiteralExpr) {\r\n      if (value.type.name !== \"x32\") {\r\n        const t1 = type.getTypeName();\r\n        const t2 = value.type.getTypeName();\r\n        if (t1 !== t2) {\r\n          throw this._error(this._peek(), `Invalid cast from ${value.type.name} to ${type.name}. Line:${this._currentLine}`);\r\n        }\r\n      }\r\n      value.type = type;\r\n      if (value.isScalar) {\r\n        this._validateTypeRange(value.scalarValue, value.type);\r\n      }\r\n    } else if (type === null && value instanceof AST.LiteralExpr) {\r\n      type = value?.type ?? AST.Type.f32;\r\n      if (type === AST.Type.x32) {\r\n        type = AST.Type.i32;\r\n      }\r\n    }\r\n\r\n    const c = this._updateNode(new AST.Const(name.toString(), type, \"\", \"\", value), line);\r\n    this._context.constants.set(c.name, c);\r\n    return c;\r\n  }\r\n\r\n  _global_let_decl(): AST.Let | null {\r\n    // attribute* let (ident variable_ident_decl) global_const_initializer?\r\n    if (!this._match(TokenTypes.keywords.let)) {\r\n      return null;\r\n    }\r\n\r\n    const line = this._currentLine;\r\n\r\n    const name = this._consume(\r\n      TokenTypes.tokens.name,\r\n      \"Expected variable name\"\r\n    );\r\n\r\n    let type: AST.Type | null = null;\r\n    if (this._match(TokenTypes.tokens.colon)) {\r\n      const attrs = this._attribute();\r\n      type = this._type_decl();\r\n      if (type != null) {\r\n        type.attributes = attrs;\r\n      }\r\n    }\r\n\r\n    let value: AST.Expression | null = null;\r\n    if (this._match(TokenTypes.tokens.equal)) {\r\n      value = this._const_expression();\r\n    }\r\n\r\n    if (type !== null && value instanceof AST.LiteralExpr) {\r\n      if (value.type.name !== \"x32\") {\r\n        const t1 = type.getTypeName();\r\n        const t2 = value.type.getTypeName();\r\n        if (t1 !== t2) {\r\n          throw this._error(this._peek(), `Invalid cast from ${value.type.name} to ${type.name}. Line:${this._currentLine}`);\r\n        }\r\n      }\r\n      value.type = type;\r\n    } else if (type === null && value instanceof AST.LiteralExpr) {\r\n      type = value.type.name === \"x32\" ? AST.Type.i32 : value.type;\r\n    }\r\n\r\n    if (value instanceof AST.LiteralExpr) {\r\n      if (value.isScalar) {\r\n        this._validateTypeRange(value.scalarValue, type);\r\n      }\r\n    }\r\n    return this._updateNode(new AST.Let(name.toString(), type, \"\", \"\", value), line);\r\n  }\r\n\r\n  _const_expression(): AST.Expression {\r\n    // type_decl paren_left ((const_expression comma)* const_expression comma?)? paren_right\r\n    // const_literal\r\n    return this._short_circuit_or_expression();\r\n  }\r\n\r\n  _variable_decl(): AST.Var | null {\r\n    // var variable_qualifier? (ident variable_ident_decl)\r\n    if (!this._match(TokenTypes.keywords.var)) {\r\n      return null;\r\n    }\r\n\r\n    const line = this._currentLine;\r\n\r\n    // variable_qualifier: less_than storage_class (comma access_mode)? greater_than\r\n    let storage: string = \"\";\r\n    let access: string = \"\";\r\n    if (this._match(TokenTypes.tokens.less_than)) {\r\n      storage = this._consume(TokenTypes.storage_class, \"Expected storage_class.\").toString();\r\n      if (this._match(TokenTypes.tokens.comma))\r\n        access = this._consume(TokenTypes.access_mode, \"Expected access_mode.\").toString();\r\n      this._consume(TokenTypes.tokens.greater_than, \"Expected '>'.\");\r\n    }\r\n\r\n    const name = this._consume(\r\n      TokenTypes.tokens.name,\r\n      \"Expected variable name\"\r\n    );\r\n\r\n    let type: AST.Type | null = null;\r\n    if (this._match(TokenTypes.tokens.colon)) {\r\n      const attrs = this._attribute();\r\n      type = this._type_decl();\r\n      if (type != null) {\r\n        type.attributes = attrs;\r\n      }\r\n    }\r\n\r\n    return this._updateNode(new AST.Var(name.toString(), type, storage, access, null), line);\r\n  }\r\n\r\n  _override_decl(): AST.Override | null {\r\n    // override (ident variable_ident_decl)\r\n    if (!this._match(TokenTypes.keywords.override)) {\r\n      return null;\r\n    }\r\n\r\n    const name = this._consume(TokenTypes.tokens.name, \"Expected variable name\");\r\n    let type: AST.Type | null = null;\r\n    if (this._match(TokenTypes.tokens.colon)) {\r\n      const attrs = this._attribute();\r\n      type = this._type_decl();\r\n      if (type != null) {\r\n        type.attributes = attrs;\r\n      }\r\n    }\r\n\r\n    return this._updateNode(new AST.Override(name.toString(), type, null));\r\n  }\r\n\r\n  _diagnostic(): AST.Diagnostic | null {\r\n    // diagnostic(severity_control_name, diagnostic_rule_name)\r\n    this._consume(TokenTypes.tokens.paren_left, \"Expected '('\");\r\n    const severity = this._consume(\r\n      TokenTypes.tokens.ident,\r\n      \"Expected severity control name.\"\r\n    );\r\n    this._consume(TokenTypes.tokens.comma, \"Expected ','\");\r\n    const rule = this._consume(\r\n      TokenTypes.tokens.ident,\r\n      \"Expected diagnostic rule name.\"\r\n    );\r\n    let ruleMessage = rule.toString();\r\n    if (this._match(TokenTypes.tokens.period)) {\r\n      const message = this._consume(\r\n        TokenTypes.tokens.ident,\r\n        \"Expected diagnostic message.\"\r\n      );\r\n      ruleMessage += `.${message.toString()}`;\r\n    }\r\n\r\n    this._consume(TokenTypes.tokens.paren_right, \"Expected ')'\");\r\n    return this._updateNode(new AST.Diagnostic(severity.toString(), ruleMessage));\r\n  }\r\n\r\n  _enable_directive(): AST.Enable {\r\n    // enable ident semicolon\r\n    const name = this._consume(TokenTypes.tokens.ident, \"identity expected.\");\r\n    return this._updateNode(new AST.Enable(name.toString()));\r\n  }\r\n\r\n  _requires_directive(): AST.Requires {\r\n    // requires extension [, extension]* semicolon\r\n    const extensions: string[] = [this._consume(TokenTypes.tokens.ident, \"identity expected.\").toString()];\r\n    while (this._match(TokenTypes.tokens.comma)) {\r\n      const name = this._consume(TokenTypes.tokens.ident, \"identity expected.\");\r\n      extensions.push(name.toString());\r\n    }\r\n    return this._updateNode(new AST.Requires(extensions));\r\n  }\r\n\r\n  _type_alias(): AST.Alias {\r\n    // type ident equal type_decl\r\n    const name = this._consume(TokenTypes.tokens.ident, \"identity expected.\");\r\n    this._consume(TokenTypes.tokens.equal, \"Expected '=' for type alias.\");\r\n\r\n    let aliasType = this._type_decl();\r\n    if (aliasType === null) {\r\n      throw this._error(this._peek(), \"Expected Type for Alias.\");\r\n    }\r\n    if (this._context.aliases.has(aliasType.name)) {\r\n      aliasType = this._context.aliases.get(aliasType.name).type;\r\n    }\r\n\r\n    const aliasNode = this._updateNode(new AST.Alias(name.toString(), aliasType));\r\n    this._context.aliases.set(aliasNode.name, aliasNode);\r\n\r\n    return aliasNode;\r\n  }\r\n\r\n  _type_decl(): AST.Type | null {\r\n    // ident\r\n    // bool\r\n    // float32\r\n    // int32\r\n    // uint32\r\n    // vec2 less_than type_decl greater_than\r\n    // vec3 less_than type_decl greater_than\r\n    // vec4 less_than type_decl greater_than\r\n    // mat2x2 less_than type_decl greater_than\r\n    // mat2x3 less_than type_decl greater_than\r\n    // mat2x4 less_than type_decl greater_than\r\n    // mat3x2 less_than type_decl greater_than\r\n    // mat3x3 less_than type_decl greater_than\r\n    // mat3x4 less_than type_decl greater_than\r\n    // mat4x2 less_than type_decl greater_than\r\n    // mat4x3 less_than type_decl greater_than\r\n    // mat4x4 less_than type_decl greater_than\r\n    // atomic less_than type_decl greater_than\r\n    // pointer less_than storage_class comma type_decl (comma access_mode)? greater_than\r\n    // array_type_decl\r\n    // texture_sampler_types\r\n\r\n    if (this._check([\r\n        TokenTypes.tokens.ident,\r\n        ...TokenTypes.texel_format,\r\n        TokenTypes.keywords.bool,\r\n        TokenTypes.keywords.f32,\r\n        TokenTypes.keywords.i32,\r\n        TokenTypes.keywords.u32,\r\n      ])) {\r\n      const type = this._advance();\r\n      const typeName = type.toString();\r\n      if (this._context.structs.has(typeName)) {\r\n        return this._context.structs.get(typeName);\r\n      }\r\n      if (this._context.aliases.has(typeName)) {\r\n        return this._context.aliases.get(typeName).type;\r\n      }\r\n\r\n      const t = this._getType(typeName);\r\n      // Don't \"forward declare\" built-in types\r\n      if (!t) {\r\n        const node = this._updateNode(new AST.ForwardType(typeName));\r\n        this._forwardTypeCount++;\r\n        return node;\r\n      }\r\n\r\n      return this._updateNode(new AST.Type(typeName));\r\n    }\r\n\r\n    // texture_sampler_types\r\n    let type = this._texture_sampler_types();\r\n    if (type) {\r\n      return type;\r\n    }\r\n\r\n    if (this._check(TokenTypes.template_types)) {\r\n      let type = this._advance().toString();\r\n      let format: AST.Type | null = null;\r\n      let access: string | null = null;\r\n      if (this._match(TokenTypes.tokens.less_than)) {\r\n        format = this._type_decl();\r\n        access = null;\r\n        if (this._match(TokenTypes.tokens.comma)) {\r\n          access = this._consume(TokenTypes.access_mode, \"Expected access_mode for pointer\").toString();\r\n        }\r\n        this._consume(TokenTypes.tokens.greater_than, \"Expected '>' for type.\");\r\n      }\r\n      const node = this._updateNode(new AST.TemplateType(type, format, access));\r\n      return node;\r\n    }\r\n\r\n    // pointer less_than storage_class comma type_decl (comma access_mode)? greater_than\r\n    if (this._match(TokenTypes.keywords.ptr)) {\r\n      let pointer = this._previous().toString();\r\n      this._consume(TokenTypes.tokens.less_than, \"Expected '<' for pointer.\");\r\n      const storage = this._consume(TokenTypes.storage_class, \"Expected storage_class for pointer\");\r\n      this._consume(TokenTypes.tokens.comma, \"Expected ',' for pointer.\");\r\n      const decl = this._type_decl();\r\n      let access: string | null = null;\r\n      if (this._match(TokenTypes.tokens.comma)) {\r\n        access = this._consume(TokenTypes.access_mode, \"Expected access_mode for pointer\").toString();\r\n      }\r\n      this._consume(TokenTypes.tokens.greater_than, \"Expected '>' for pointer.\");\r\n      const node = this._updateNode(new AST.PointerType(pointer, storage.toString(), decl, access));\r\n      return node;\r\n    }\r\n\r\n    // The following type_decl's have an optional attribyte_list*\r\n    const attrs = this._attribute();\r\n\r\n    // attribute* array\r\n    // attribute* array less_than type_decl (comma element_count_expression)? greater_than\r\n    if (this._match(TokenTypes.keywords.array)) {\r\n      let format = null;\r\n      let countInt = -1;\r\n      const array = this._previous();\r\n      let countNode: AST.Expression | null = null;\r\n      if (this._match(TokenTypes.tokens.less_than)) {\r\n        format = this._type_decl();\r\n        if (this._context.aliases.has(format.name)) {\r\n          format = this._context.aliases.get(format.name).type;\r\n        }\r\n        let count: string = \"\";\r\n        if (this._match(TokenTypes.tokens.comma)) {\r\n          countNode = this._shift_expression();\r\n          // If we can't evaluate the node, defer evaluating it until after the shader has\r\n          // finished being parsed, because const statements can be declared **after** they\r\n          // are used.\r\n          try {\r\n            count = countNode.constEvaluate(this._exec).toString();\r\n            countNode = null;\r\n          } catch (e) {\r\n            count = \"1\";\r\n          }\r\n        }\r\n        this._consume(TokenTypes.tokens.greater_than, \"Expected '>' for array.\");\r\n        countInt = count ? parseInt(count) : 0;\r\n      }\r\n      const arrayType = this._updateNode(new AST.ArrayType(array.toString(), attrs, format, countInt));\r\n      if (countNode) {\r\n        this._deferArrayCountEval.push({ arrayType, countNode });\r\n      }\r\n      return arrayType;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  _texture_sampler_types(): AST.SamplerType | null {\r\n    // sampler_type\r\n    if (this._match(TokenTypes.sampler_type)) {\r\n      return this._updateNode(new AST.SamplerType(this._previous().toString(), null, null));\r\n    }\r\n\r\n    // depth_texture_type\r\n    if (this._match(TokenTypes.depth_texture_type)) {\r\n      return this._updateNode(new AST.SamplerType(this._previous().toString(), null, null));\r\n    }\r\n\r\n    // sampled_texture_type less_than type_decl greater_than\r\n    // multisampled_texture_type less_than type_decl greater_than\r\n    if (this._match(TokenTypes.sampled_texture_type) ||\r\n      this._match(TokenTypes.multisampled_texture_type)) {\r\n      const sampler = this._previous();\r\n      this._consume(\r\n        TokenTypes.tokens.less_than,\r\n        \"Expected '<' for sampler type.\"\r\n      );\r\n      const format = this._type_decl();\r\n      this._consume(TokenTypes.tokens.greater_than, \"Expected '>' for sampler type.\");\r\n      return this._updateNode(new AST.SamplerType(sampler.toString(), format, null));\r\n    }\r\n\r\n    // storage_texture_type less_than texel_format comma access_mode greater_than\r\n    if (this._match(TokenTypes.storage_texture_type)) {\r\n      const sampler = this._previous();\r\n      this._consume(TokenTypes.tokens.less_than, \"Expected '<' for sampler type.\");\r\n      const format = this._consume(TokenTypes.texel_format, \"Invalid texel format.\").toString();\r\n      this._consume(TokenTypes.tokens.comma, \"Expected ',' after texel format.\");\r\n      const access = this._consume(TokenTypes.access_mode, \"Expected access mode for storage texture type.\").toString();\r\n      this._consume(TokenTypes.tokens.greater_than, \"Expected '>' for sampler type.\");\r\n      return this._updateNode(new AST.SamplerType(sampler.toString(), format, access));\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  _attribute(): AST.Attribute[] | null {\r\n    // attr ident paren_left (literal_or_ident comma)* literal_or_ident paren_right\r\n    // attr ident\r\n\r\n    let attributes: AST.Attribute[] = [];\r\n\r\n    while (this._match(TokenTypes.tokens.attr)) {\r\n      const name = this._consume(\r\n        TokenTypes.attribute_name,\r\n        \"Expected attribute name\"\r\n      );\r\n      const attr = this._updateNode(new AST.Attribute(name.toString(), null));\r\n      if (this._match(TokenTypes.tokens.paren_left)) {\r\n        // literal_or_ident\r\n        attr.value = this._consume(TokenTypes.literal_or_ident, \"Expected attribute value\").toString();\r\n        if (this._check(TokenTypes.tokens.comma)) {\r\n          this._advance();\r\n          do {\r\n            const v = this._consume(TokenTypes.literal_or_ident, \"Expected attribute value\").toString();\r\n            if (!(attr.value instanceof Array)) {\r\n              attr.value = [attr.value as string];\r\n            }\r\n            attr.value.push(v);\r\n          } while (this._match(TokenTypes.tokens.comma));\r\n        }\r\n        this._consume(TokenTypes.tokens.paren_right, \"Expected ')'\");\r\n      }\r\n      attributes.push(attr);\r\n    }\r\n\r\n    if (attributes.length == 0) {\r\n      return null;\r\n    }\r\n\r\n    return attributes;\r\n  }\r\n}\r\n", "import { WgslParser } from \"./wgsl_parser.js\";\r\nimport { Reflect } from \"./reflect/reflect.js\";\r\n\r\nexport * from \"./reflect/info.js\";\r\n\r\nexport class WgslReflect extends Reflect {\r\n  constructor(code?: string) {\r\n    super();\r\n    if (code) {\r\n      this.update(code);\r\n    }\r\n  }\r\n\r\n  update(code: string): void {\r\n    const parser = new WgslParser();\r\n    const ast = parser.parse(code);\r\n    this.updateAST(ast);\r\n  }\r\n}\r\n", "import { Node, CallExpr, Continue, Expression, Break } from \"../wgsl_ast.js\";\n\nexport class Command {\n    get line(): number { return -1; }\n}\n\nexport class StatementCommand extends Command {\n    node: Node;\n\n    constructor(node: Node) {\n        super();\n        this.node = node;\n    }\n\n    get line(): number { return this.node.line; }\n}\n\nexport class CallExprCommand extends Command {\n    node: CallExpr;\n    statement: Node;\n\n    constructor(node: CallExpr, statement: Node) {\n        super();\n        this.node = node;\n        this.statement = statement;\n    }\n\n    get line(): number { return this.statement.line; }\n}\n\nexport class ContinueTargetCommand extends Command {\n    id: number;\n\n    constructor(id: number) {\n        super();\n        this.id = id;\n    }\n}\n\nexport class BreakTargetCommand extends Command {\n    id: number;\n\n    constructor(id: number) {\n        super();\n        this.id = id;\n    }\n}\n\nexport class ContinueCommand extends Command {\n    id: number;\n    node: Continue;\n\n    constructor(id: number, node: Continue) {\n        super();\n        this.id = id;\n        this.node = node;\n    }\n\n    get line(): number { return this.node.line; }\n}\n\nexport class BreakCommand extends Command {\n    id: number;\n    condition: Expression | null;\n    node: Break;\n\n    constructor(id: number, condition: Expression | null, node: Break) {\n        super();\n        this.id = id;\n        this.condition = condition;\n        this.node = node;\n    }\n\n    get line(): number { return this.node.line; }\n}\n\n\nexport class GotoCommand extends Command {\n    condition: Node | null;\n    position: number;\n    lineNo: number = -1;\n\n    constructor(condition: Node | null, position: number, line: number) {\n        super();\n        this.condition = condition;\n        this.position = position;\n        this.lineNo = line;\n    }\n\n    get line(): number {\n        return this.condition?.line ?? this.lineNo;\n    }\n}\n\nexport class BlockCommand extends Command {\n    statements: Array<Node> = [];\n\n    constructor(statements: Array<Node>) {\n      super();\n      this.statements = statements;\n    }\n\n    get line(): number {\n      return this.statements.length > 0 ? this.statements[0].line : -1;\n    }\n}\n", "import { Command } from \"./command.js\";\r\nimport { CallExpr } from \"../wgsl_ast.js\";\r\nimport { ExecContext } from \"./exec_context.js\";\r\n\r\nexport class StackFrame {\r\n    parent: StackFrame | null = null;\r\n    context: ExecContext;\r\n    commands: Command[] = [];\r\n    current: number = 0;\r\n    parentCallExpr: CallExpr | null = null;\r\n\r\n    constructor(context: ExecContext, parent?: StackFrame) {\r\n        this.context = context;\r\n        this.parent = parent ?? null;\r\n    }\r\n\r\n    get isAtEnd(): boolean { return this.current >= this.commands.length; }\r\n\r\n    getNextCommand(): Command | null {\r\n        if (this.current >= this.commands.length) {\r\n            return null;\r\n        }\r\n        const command = this.commands[this.current];\r\n        this.current++;\r\n        return command;\r\n    }\r\n\r\n    getCurrentCommand(): Command | null {\r\n        if (this.current >= this.commands.length) {\r\n            return null;\r\n        }\r\n        return this.commands[this.current];\r\n    }\r\n}\r\n", "import { StackFrame } from \"./stack_frame.js\";\r\n\r\nexport class ExecStack {\r\n    states: StackFrame[] = [];\r\n\r\n    get isEmpty(): boolean { return this.states.length == 0; }\r\n\r\n    get last(): StackFrame | null { return this.states[this.states.length - 1] ?? null; }\r\n\r\n    pop(): void {\r\n        this.states.pop();\r\n    }\r\n}\r\n", "import * as AST from \"./wgsl_ast.js\";\r\nimport { WgslExec } from \"./wgsl_exec.js\";\r\nimport { WgslParser } from \"./wgsl_parser.js\";\r\nimport { ExecContext, FunctionRef } from \"./exec/exec_context.js\";\r\nimport { Command, StatementCommand, CallExprCommand, GotoCommand, BlockCommand,\r\n        ContinueTargetCommand, ContinueCommand, BreakCommand, BreakTargetCommand } from \"./exec/command.js\";\r\nimport { StackFrame } from \"./exec/stack_frame.js\";\r\nimport { ExecStack } from \"./exec/exec_stack.js\";\r\nimport { ScalarData, VectorData, MatrixData, TextureData, TypedData, VoidData } from \"./wgsl_ast.js\";\r\n\r\ntype RuntimeStateCallbackType = () => void;\r\n\r\nexport class WgslDebug {\r\n    _code: string;\r\n    _exec: WgslExec;\r\n    _execStack: ExecStack;\r\n    _dispatchId: number[];\r\n    _runTimer: any = null;\r\n    breakpoints: Set<number> = new Set();\r\n    runStateCallback: RuntimeStateCallbackType | null = null;\r\n\r\n    constructor(code: string, runStateCallback?: RuntimeStateCallbackType) {\r\n        this._code = code;\r\n        const parser = new WgslParser();\r\n        const ast = parser.parse(code);\r\n        this._exec = new WgslExec(ast);\r\n        this.runStateCallback = runStateCallback ?? null\r\n    }\r\n\r\n    getVariableValue(name: string): number | number[] | null {\r\n        const context = this.context;\r\n        const v = context.getVariable(name)?.value ?? null;\r\n        if (v === null) {\r\n            return null;\r\n        }\r\n        if (v instanceof ScalarData) {\r\n            return v.value;\r\n        }\r\n        if (v instanceof VectorData) {\r\n            return Array.from(v.data);\r\n        }\r\n        if (v instanceof MatrixData) {\r\n            return Array.from(v.data);\r\n        }\r\n        console.error(`Unsupported return variable type ${v.typeInfo.name}`);\r\n        return null;\r\n    }\r\n\r\n    reset(): void {\r\n        this._exec = new WgslExec(this._exec.ast);\r\n        this.startDebug();\r\n    }\r\n\r\n    startDebug(): void {\r\n        this._execStack = new ExecStack();\r\n        const state = this._createState(this._exec.ast, this._exec.context);\r\n        this._execStack.states.push(state);\r\n    }\r\n\r\n    get context(): ExecContext {\r\n        const state = this.currentState;\r\n        if (state === null) {\r\n            return this._exec.context;\r\n        }\r\n        return state.context;\r\n    }\r\n\r\n    get currentState(): StackFrame | null {\r\n        while (true) {\r\n            if (this._execStack.isEmpty) {\r\n                return null;\r\n            }\r\n\r\n            let state = this._execStack.last;\r\n            if (state === null) {\r\n                return null;\r\n            }\r\n\r\n            if (state.isAtEnd) {\r\n                this._execStack.pop();\r\n                if (this._execStack.isEmpty) {\r\n                    return null;\r\n                }\r\n                state = this._execStack.last;\r\n            }\r\n\r\n            return state;\r\n        }\r\n    }\r\n\r\n    get currentCommand(): Command | null {\r\n        while (true) {\r\n            if (this._execStack.isEmpty) {\r\n                return null;\r\n            }\r\n\r\n            let state = this._execStack.last;\r\n            if (state === null) {\r\n                return null;\r\n            }\r\n\r\n            if (state.isAtEnd) {\r\n                this._execStack.pop();\r\n                if (this._execStack.isEmpty) {\r\n                    return null;\r\n                }\r\n                state = this._execStack.last;\r\n            }\r\n\r\n            const command = state.getCurrentCommand();\r\n            if (command === null) {\r\n                continue;\r\n            }\r\n\r\n            return command;\r\n        }\r\n    }\r\n\r\n    toggleBreakpoint(line: number) {\r\n        if (this.breakpoints.has(line)) {\r\n            this.breakpoints.delete(line);\r\n        } else {\r\n            this.breakpoints.add(line);\r\n        }\r\n    }\r\n\r\n    clearBreakpoints() {\r\n        this.breakpoints.clear();\r\n    }\r\n\r\n    get isRunning() {\r\n        return this._runTimer !== null;\r\n    }\r\n\r\n    run() {\r\n        if (this.isRunning) {\r\n            return;\r\n        }\r\n        this._runTimer = setInterval(() => {\r\n            const command = this.currentCommand;\r\n            if (command) {\r\n                if (this.breakpoints.has(command.line)) {\r\n                    clearInterval(this._runTimer!);\r\n                    this._runTimer = null;\r\n                    if (this.runStateCallback !== null) {\r\n                        this.runStateCallback();\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n            if (!this.stepNext(true)) {\r\n                clearInterval(this._runTimer!);\r\n                this._runTimer = null;\r\n                if (this.runStateCallback !== null) {\r\n                    this.runStateCallback();\r\n                }\r\n            }\r\n        }, 0);\r\n        if (this.runStateCallback !== null) {\r\n            this.runStateCallback();\r\n        }\r\n    }\r\n\r\n    pause() {\r\n        if (this._runTimer !== null) {\r\n            clearInterval(this._runTimer);\r\n            this._runTimer = null;\r\n            if (this.runStateCallback !== null) {\r\n                this.runStateCallback();\r\n            }\r\n        }\r\n    }\r\n\r\n    _setOverrides(constants: Object, context: ExecContext): void {\r\n        for (const k in constants) {\r\n            const v = constants[k];\r\n            const override = this._exec.reflection.getOverrideInfo(k);\r\n            if (override !== null) {\r\n                if (override.type === null) {\r\n                    override.type = this._exec.getTypeInfo(\"u32\");\r\n                }\r\n                if (override.type.name === \"u32\" || override.type.name === \"i32\" || override.type.name === \"f32\" || override.type.name === \"f16\") {\r\n                    context.setVariable(k, new ScalarData(v, override.type));\r\n                } else if (override.type.name === \"bool\") {\r\n                    context.setVariable(k, new ScalarData(v ? 1 : 0, override.type));\r\n                } else if (override.type.name === \"vec2\" || override.type.name === \"vec3\" || override.type.name === \"vec4\" ||\r\n                    override.type.name === \"vec2f\" || override.type.name === \"vec3f\" || override.type.name === \"vec4f\" ||\r\n                    override.type.name === \"vec2i\" || override.type.name === \"vec3i\" || override.type.name === \"vec4i\" ||\r\n                    override.type.name === \"vec2u\" || override.type.name === \"vec3u\" || override.type.name === \"vec4u\" ||\r\n                    override.type.name === \"vec2h\" || override.type.name === \"vec3h\" || override.type.name === \"vec4h\") {\r\n                    context.setVariable(k, new VectorData(v, override.type));\r\n                } else {\r\n                    console.error(`Invalid constant type for ${k}`);\r\n                }\r\n            } else {\r\n                console.error(`Override ${k} does not exist in the shader.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    debugWorkgroup(kernel: string, dispatchId: number[], \r\n        dispatchCount: number | number[], bindGroups: Object, config?: Object): boolean {\r\n\r\n        this._execStack = new ExecStack();\r\n\r\n        const context = this._exec.context;\r\n        context.currentFunctionName = kernel;\r\n\r\n        this._dispatchId = dispatchId;\r\n\r\n        config = config ?? {};\r\n        if (config[\"constants\"]) {\r\n            this._setOverrides(config[\"constants\"], context);\r\n        }\r\n\r\n        // Use this to debug the top level statements, otherwise call _execStatements.\r\n        /*const state = new _ExecState(this._exec.context);\r\n        this._execStack.states.push(state);\r\n        for (const statement of this._exec.ast) {\r\n            state.commands.push(new Command(CommandType.Statement, statement));\r\n        }*/\r\n        this._exec._execStatements(this._exec.ast, context);\r\n\r\n        const kernelFn = context.getFunction(kernel);\r\n        if (!kernelFn) {\r\n            console.error(`Function ${kernel} not found`);\r\n            return false;\r\n        }\r\n\r\n        const kernelRefl = this._exec.reflection.getFunctionInfo(kernel);\r\n\r\n        if (typeof dispatchCount === \"number\") {\r\n            dispatchCount = [dispatchCount, 1, 1];\r\n        } else if (dispatchCount.length === 0) {\r\n            console.error(`Invalid dispatch count`);\r\n            return false;\r\n        } else if (dispatchCount.length === 1) {\r\n            dispatchCount = [dispatchCount[0], 1, 1];\r\n        } else if (dispatchCount.length === 2) {\r\n            dispatchCount = [dispatchCount[0], dispatchCount[1], 1];\r\n        } else if (dispatchCount.length > 3) {\r\n            dispatchCount = [dispatchCount[0], dispatchCount[1], dispatchCount[2]];\r\n        }\r\n\r\n        const depth = dispatchCount[2];\r\n        const height = dispatchCount[1];\r\n        const width = dispatchCount[0];\r\n\r\n        const vec3u = this._exec.typeInfo[\"vec3u\"];\r\n        context.setVariable(\"@num_workgroups\", new VectorData(dispatchCount, vec3u));\r\n\r\n        for (const set in bindGroups) {\r\n            for (const binding in bindGroups[set]) {\r\n                const entry = bindGroups[set][binding];\r\n\r\n                context.variables.forEach((v) => {\r\n                    const node = v.node;\r\n                    if (node?.attributes) {\r\n                        let b = null;\r\n                        let s = null;\r\n                        for (const attr of node.attributes) {\r\n                            if (attr.name === \"binding\") {\r\n                                b = attr.value;\r\n                            } else if (attr.name === \"group\") {\r\n                                s = attr.value;\r\n                            }\r\n                        }\r\n                        if (binding == b && set == s) {\r\n                            let found = false;\r\n                            for (const resource of kernelRefl.resources) {\r\n                                if (resource.name === v.name && resource.group === parseInt(set) && resource.binding === parseInt(binding)) {\r\n                                    found = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (found) {\r\n                                if (entry.texture !== undefined && entry.descriptor !== undefined) {\r\n                                    // Texture\r\n                                    const textureData = new TextureData(entry.texture, this._exec.getTypeInfo(node.type), entry.descriptor,\r\n                                                                        entry.texture.view ?? null);\r\n                                    v.value = textureData;\r\n                                } else if (entry.uniform !== undefined) {\r\n                                    // Uniform buffer\r\n                                    v.value = new TypedData(entry.uniform, this._exec.getTypeInfo(node.type));\r\n                                } else {\r\n                                    // Storage buffer\r\n                                    v.value = new TypedData(entry, this._exec.getTypeInfo(node.type));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        let found = false;\r\n        for (let z = 0; z < depth && !found; ++z) {\r\n            for (let y = 0; y < height && !found; ++y) {\r\n                for (let x = 0; x < width && !found; ++x) {\r\n                    context.setVariable(\"@workgroup_id\", new VectorData([x, y, z], vec3u));\r\n                    if (this._dispatchWorkgroup(kernelFn, [x, y, z], context)) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    _shouldExecuteNextCommand(): boolean {\r\n        const command = this.currentCommand;\r\n        if (command === null) {\r\n            return false;\r\n        }\r\n        if (command instanceof GotoCommand) {\r\n            if (command.condition === null) {\r\n                return true;\r\n            }\r\n        } else if (command instanceof ContinueTargetCommand || command instanceof BreakTargetCommand) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    stepInto() {\r\n        if (this.isRunning) {\r\n            return;\r\n        }\r\n        this.stepNext(true);\r\n    }\r\n\r\n    stepOver() {\r\n        if (this.isRunning) {\r\n            return;\r\n        }\r\n        this.stepNext(false);\r\n    }\r\n\r\n    stepOut() {\r\n        const state = this.currentState;\r\n        if (state === null) {\r\n            return;\r\n        }\r\n        const parentState = state.parent;\r\n\r\n        if (this.isRunning) {\r\n            clearInterval(this._runTimer);\r\n            this._runTimer = null;\r\n        }\r\n\r\n        this._runTimer = setInterval(() => {\r\n            const command = this.currentCommand;\r\n            if (command) {\r\n                if (this.breakpoints.has(command.line)) {\r\n                    clearInterval(this._runTimer!);\r\n                    this._runTimer = null;\r\n                    if (this.runStateCallback !== null) {\r\n                        this.runStateCallback();\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n            if (!this.stepNext(true)) {\r\n                clearInterval(this._runTimer!);\r\n                this._runTimer = null;\r\n                if (this.runStateCallback !== null) {\r\n                    this.runStateCallback();\r\n                }\r\n            }\r\n\r\n            const state = this.currentState;\r\n            if (state === parentState) {\r\n                clearInterval(this._runTimer!);\r\n                this._runTimer = null;\r\n                if (this.runStateCallback !== null) {\r\n                    this.runStateCallback();\r\n                }\r\n            }\r\n        }, 0);\r\n        if (this.runStateCallback !== null) {\r\n            this.runStateCallback();\r\n        }\r\n    }\r\n\r\n    // Returns true if execution is not finished, false if execution is complete.\r\n    stepNext(stepInto = true): boolean {\r\n        if (!this._execStack) {\r\n            this._execStack = new ExecStack();\r\n            const state = this._createState(this._exec.ast, this._exec.context);\r\n            this._execStack.states.push(state);\r\n        }\r\n\r\n        while (true) {\r\n            if (this._execStack.isEmpty) {\r\n                return false;\r\n            }\r\n\r\n            let state = this._execStack.last;\r\n            if (state === null) {\r\n                return false;\r\n            }\r\n\r\n            if (state.isAtEnd) {\r\n                this._execStack.pop();\r\n                if (this._execStack.isEmpty) {\r\n                    return false;\r\n                }\r\n                state = this._execStack.last;\r\n            }\r\n\r\n            const command = state!.getNextCommand();\r\n            if (command === null) {\r\n                continue;\r\n            }\r\n\r\n            if (stepInto && command instanceof CallExprCommand) {\r\n                const node = command.node;\r\n                const fn = state.context.getFunction(node.name);\r\n                if (!fn) {\r\n                    continue; // it's not a custom function, step over it\r\n                }\r\n                const fnState = this._createState(fn.node.body, state.context.clone(), state);\r\n\r\n                for (let ai = 0; ai < fn.node.args.length; ++ai) {\r\n                    const arg = fn.node.args[ai];\r\n                    const value = this._exec.evalExpression(node.args[ai], fnState.context);\r\n                    fnState.context.createVariable(arg.name, value, arg);\r\n                }\r\n\r\n                fnState.parentCallExpr = node;\r\n                this._execStack.states.push(fnState);\r\n                fnState.context.currentFunctionName = fn.name;\r\n\r\n                if (this._shouldExecuteNextCommand()) {\r\n                    continue;\r\n                }\r\n                return true;\r\n            } else if (command instanceof StatementCommand) {\r\n                const node = command.node;\r\n                if (stepInto && node instanceof AST.Call) {\r\n                    const fn = state.context.getFunction(node.name);\r\n                    // We want to step into custom functions, not directly execute them\r\n                    if (fn) {\r\n                        const fnState = this._createState(fn.node.body, state.context.clone(), state);\r\n\r\n                        for (let ai = 0; ai < fn.node.args.length; ++ai) {\r\n                            const arg = fn.node.args[ai];\r\n                            const value = this._exec.evalExpression(node.args[ai], fnState.context);\r\n                            fnState.context.createVariable(arg.name, value, arg);\r\n                        }\r\n\r\n                        this._execStack.states.push(fnState);\r\n                        fnState.context.currentFunctionName = fn.name;\r\n\r\n                        if (this._shouldExecuteNextCommand()) {\r\n                            continue;\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                const res = this._exec.execStatement(node, state.context);\r\n                if (res !== null && res !== undefined && !(res instanceof VoidData)) {\r\n                    let s = state;\r\n                    // Find the CallExpr to store the return value in.\r\n                    while (s) {\r\n                        if (s.parentCallExpr) {\r\n                            s.parentCallExpr.setCachedReturnValue(res);\r\n                            break;\r\n                        }\r\n                        s = s.parent;\r\n                    }\r\n                    if (s === null) {\r\n                        console.error(\"Could not find CallExpr to store return value in\");\r\n                    }\r\n                    if (this._shouldExecuteNextCommand()) {\r\n                        continue;\r\n                    }\r\n                    return true;\r\n                }\r\n            } else if (command instanceof ContinueTargetCommand) {\r\n                continue;\r\n            } else if (command instanceof BreakTargetCommand) {\r\n                continue;\r\n            } else if (command instanceof ContinueCommand) {\r\n                const targetId = command.id;\r\n                while (!this._execStack.isEmpty) {\r\n                    state = this._execStack.last;\r\n                    for (let i = state.commands.length - 1; i >= 0; --i) {\r\n                        const cmd = state.commands[i];\r\n                        if (cmd instanceof ContinueTargetCommand) {\r\n                            if (cmd.id === targetId) {\r\n                                state.current = i + 1;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    // No Goto -1 found (loop), pop the current state and continue searching.\r\n                    this._execStack.pop();\r\n                }\r\n                // If we got here, we've reached the end of the stack and didn't find a -1.\r\n                // That means a continue was used outside of a loop, so we're done.\r\n                console.error(\"Continue statement used outside of a loop\");\r\n                return false;\r\n            } else if (command instanceof BreakCommand) {\r\n                const targetId = command.id;\r\n                // break-if conditional break \r\n                if (command.condition) {\r\n                    const res = this._exec.evalExpression(command.condition, state.context);\r\n                    if (!(res instanceof ScalarData)) {\r\n                        console.error(\"Condition must be a scalar\");\r\n                        return false;\r\n                    }\r\n                    // If the condition is false, then we should not the break.\r\n                    if (!res.value) {\r\n                        if (this._shouldExecuteNextCommand()) {\r\n                            continue;\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                while (!this._execStack.isEmpty) {\r\n                    state = this._execStack.last;\r\n                    for (let i = state.commands.length - 1; i >= 0; --i) {\r\n                        const cmd = state.commands[i];\r\n                        if (cmd instanceof BreakTargetCommand) {\r\n                            if (cmd.id === targetId) {\r\n                                state.current = i + 1;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    // No Goto -2 found (loop), pop the current state and continue searching.\r\n                    this._execStack.pop();\r\n                }\r\n                // If we got here, we've reached the end of the stack and didn't find a BreakTarget.\r\n                // That means a break was used outside of a loop, so we're done.\r\n                console.error(\"Break statement used outside of a loop\");\r\n                return false;\r\n            } else if (command instanceof GotoCommand) {\r\n                if (command.condition) {\r\n                    const res = this._exec.evalExpression(command.condition, state.context);\r\n                    if (!(res instanceof ScalarData)) {\r\n                        console.error(\"Condition must be a scalar\");\r\n                        return false;\r\n                    }\r\n                    // If the GOTO condition value is true, then continue to the next command.\r\n                    // Otherwise, jump to the specified position.\r\n                    if (res.value) {\r\n                        if (this._shouldExecuteNextCommand()) {\r\n                            continue;\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n                state.current = command.position;\r\n                if (this._shouldExecuteNextCommand()) {\r\n                    continue;\r\n                }\r\n                return true;\r\n            } else if (command instanceof BlockCommand) {\r\n                const blockState = this._createState(command.statements, state.context.clone(), state);\r\n                this._execStack.states.push(blockState);\r\n                continue; // step into the first statement of the block\r\n            }\r\n\r\n            if (state.isAtEnd) {\r\n                this._execStack.pop();\r\n                if (this._execStack.isEmpty) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (this._shouldExecuteNextCommand()) {\r\n                continue;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n    _dispatchWorkgroup(f: FunctionRef, workgroup_id: number[], context: ExecContext): boolean {\r\n        const workgroupSize = [1, 1, 1];\r\n        for (const attr of f.node.attributes) {\r\n            if (attr.name === \"workgroup_size\") {\r\n                if (Array.isArray(attr.value)) {\r\n                    if (attr.value.length > 0) {\r\n                        // The value could be an override constant\r\n                        const v = context.getVariableValue(attr.value[0]);\r\n                        if (v instanceof ScalarData) {\r\n                            workgroupSize[0] = v.value;\r\n                        } else {\r\n                            workgroupSize[0] = parseInt(attr.value[0]);\r\n                        }\r\n                    }\r\n                    if (attr.value.length > 1) {\r\n                        const v = context.getVariableValue(attr.value[1]);\r\n                        if (v instanceof ScalarData) {\r\n                            workgroupSize[1] = v.value;\r\n                        } else {\r\n                            workgroupSize[1] = parseInt(attr.value[1]);\r\n                        }\r\n                    }\r\n                    if (attr.value.length > 2) {\r\n                        const v = context.getVariableValue(attr.value[2]);\r\n                        if (v instanceof ScalarData) {\r\n                            workgroupSize[2] = v.value;\r\n                        } else {\r\n                            workgroupSize[2] = parseInt(attr.value[2]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    const v = context.getVariableValue(attr.value);\r\n                    if (v instanceof ScalarData) {\r\n                        workgroupSize[0] = v.value;\r\n                    } else if (v instanceof VectorData) {\r\n                        workgroupSize[0] = v.data[0];\r\n                        workgroupSize[1] = v.data.length > 1 ? v.data[1] : 1;\r\n                        workgroupSize[2] = v.data.length > 2 ? v.data[2] : 1;\r\n                    } else {\r\n                        workgroupSize[0] = parseInt(attr.value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const vec3u = this._exec.typeInfo[\"vec3u\"];\r\n        const u32 = this._exec.typeInfo[\"u32\"];\r\n        context.setVariable(\"@workgroup_size\", new VectorData(workgroupSize, vec3u));\r\n\r\n        const width = workgroupSize[0];\r\n        const height = workgroupSize[1];\r\n        const depth = workgroupSize[2];\r\n\r\n        let found = false;\r\n        for (let z = 0, li = 0; z < depth && !found; ++z) {\r\n            for (let y = 0; y < height && !found; ++y) {\r\n                for (let x = 0; x < width && !found; ++x, ++li) {\r\n                    const local_invocation_id = [x, y, z];\r\n                    const global_invocation_id = [\r\n                        x + workgroup_id[0] * workgroupSize[0],\r\n                        y + workgroup_id[1] * workgroupSize[1],\r\n                        z + workgroup_id[2] * workgroupSize[2]];\r\n\r\n                    context.setVariable(\"@local_invocation_id\", new VectorData(local_invocation_id, vec3u));\r\n                    context.setVariable(\"@global_invocation_id\", new VectorData(global_invocation_id, vec3u));\r\n                    context.setVariable(\"@local_invocation_index\", new ScalarData(li, u32));\r\n\r\n                    if (global_invocation_id[0] === this._dispatchId[0] &&\r\n                        global_invocation_id[1] === this._dispatchId[1] &&\r\n                        global_invocation_id[2] === this._dispatchId[2]) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (found) {\r\n            this._dispatchExec(f, context);\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    _dispatchExec(f: FunctionRef, context: ExecContext) {\r\n        // Update any built-in input args.\r\n        // TODO: handle input structs.\r\n        for (const arg of f.node.args) {\r\n            for (const attr of arg.attributes) {\r\n                if (attr.name === \"builtin\") {\r\n                    const globalName = `@${attr.value}`;\r\n                    const globalVar = context.getVariable(globalName);\r\n                    if (globalVar !== null) {\r\n                        context.variables.set(arg.name, globalVar);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const state = this._createState(f.node.body, context);\r\n        this._execStack.states.push(state);\r\n    }\r\n\r\n    _createState(ast: AST.Node[], context: ExecContext, parent?: StackFrame): StackFrame {\r\n        const state = new StackFrame(context, parent ?? null);\r\n\r\n        for (const statement of ast) {\r\n            // A statement may have expressions that include function calls.\r\n            // Gather all of the internal function calls from the statement.\r\n            // We can then include them as commands to step through, storing their\r\n            // values with the call node so that when it is evaluated, it uses that\r\n            // already computed value. This allows us to step into the function\r\n            if (statement instanceof AST.Let ||\r\n                statement instanceof AST.Var ||\r\n                statement instanceof AST.Const ||\r\n                statement instanceof AST.Assign) {\r\n                const functionCalls = [];\r\n                this._collectFunctionCalls(statement.value, functionCalls);\r\n                for (const call of functionCalls) {\r\n                    state.commands.push(new CallExprCommand(call, statement));\r\n                }\r\n                state.commands.push(new StatementCommand(statement));\r\n            } else if (statement instanceof AST.Call) {\r\n                const functionCalls = [];\r\n                for (const arg of statement.args) {\r\n                    this._collectFunctionCalls(arg, functionCalls);\r\n                }\r\n                for (const call of functionCalls) {\r\n                    state.commands.push(new CallExprCommand(call, statement));\r\n                }\r\n                state.commands.push(new StatementCommand(statement));\r\n            } else if (statement instanceof AST.Return) {\r\n                const functionCalls = [];\r\n                this._collectFunctionCalls(statement.value, functionCalls);\r\n                for (const call of functionCalls) {\r\n                    state.commands.push(new CallExprCommand(call, statement));\r\n                }\r\n                state.commands.push(new StatementCommand(statement));\r\n            } else if (statement instanceof AST.Increment) {\r\n                state.commands.push(new StatementCommand(statement));\r\n            } else if (statement instanceof AST.Function) {\r\n                const f = new FunctionRef(statement);\r\n                state.context.functions.set(statement.name, f);\r\n                continue;\r\n            } else if (statement instanceof AST.If) {\r\n                const functionCalls = [];\r\n                this._collectFunctionCalls(statement.condition, functionCalls);\r\n                for (const call of functionCalls) {\r\n                    state.commands.push(new CallExprCommand(call, statement));\r\n                }\r\n\r\n                let conditionCmd = new GotoCommand(statement.condition, 0, statement.line);\r\n                state.commands.push(conditionCmd);\r\n                if (statement.body.length > 0) {\r\n                    state.commands.push(new BlockCommand(statement.body));\r\n                }\r\n                const gotoEnd = new GotoCommand(null, 0, statement.line);\r\n                state.commands.push(gotoEnd);\r\n\r\n                for (const elseIf of statement.elseif) {\r\n                    conditionCmd.position = state.commands.length;\r\n\r\n                    const functionCalls = [];\r\n                    this._collectFunctionCalls(elseIf.condition, functionCalls);\r\n                    for (const call of functionCalls) {\r\n                        state.commands.push(new CallExprCommand(call, statement));\r\n                    }\r\n\r\n                    conditionCmd = new GotoCommand(elseIf.condition, 0, elseIf.line);\r\n                    state.commands.push(conditionCmd);\r\n                    if (elseIf.body.length > 0) {\r\n                        state.commands.push(new BlockCommand(elseIf.body));\r\n                    }\r\n                    state.commands.push(gotoEnd);\r\n                }\r\n\r\n                conditionCmd.position = state.commands.length;\r\n                if (statement.else) {\r\n                    state.commands.push(new BlockCommand(statement.else));\r\n                }\r\n\r\n                gotoEnd.position = state.commands.length;\r\n            } else if (statement instanceof AST.Switch) {\r\n                const functionCalls = [];\r\n                this._collectFunctionCalls(statement.condition, functionCalls);\r\n                for (const call of functionCalls) {\r\n                    state.commands.push(new CallExprCommand(call, statement));\r\n                }\r\n\r\n                let defaultCase: AST.SwitchCase | null = null;\r\n                for (const c of statement.cases) {\r\n                    if (c instanceof AST.Default) {\r\n                        defaultCase = c;\r\n                        break;\r\n                    } else if (c instanceof AST.Case) {\r\n                        for (const selector of c.selectors) {\r\n                            if (selector instanceof AST.DefaultSelector) {\r\n                                defaultCase = c;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                const gotoEndCommands: GotoCommand[] = [];\r\n\r\n                for (const c of statement.cases) {\r\n                    if (c === defaultCase) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (!(c instanceof AST.Case)) {\r\n                        continue;\r\n                    }\r\n\r\n                    let lastCondition = null;\r\n                    for (const selector of c.selectors) {\r\n                        let conditionExpr = new AST.BinaryOperator(\"==\", statement.condition, selector);\r\n                        if (lastCondition) {\r\n                            conditionExpr = new AST.BinaryOperator(\"||\", lastCondition, conditionExpr);\r\n                        }\r\n                        lastCondition = conditionExpr;\r\n                    }\r\n\r\n                    const gotoCommand = new GotoCommand(lastCondition, 0, c.line);\r\n                    state.commands.push(gotoCommand);\r\n\r\n                    if (c.body.length > 0) {\r\n                        state.commands.push(new BlockCommand(c.body));\r\n                    }\r\n\r\n                    const gotoEndCommand = new GotoCommand(null, 0, c.line);\r\n                    gotoEndCommands.push(gotoEndCommand);\r\n                    state.commands.push(gotoEndCommand);\r\n\r\n                    gotoCommand.position = state.commands.length;\r\n                }\r\n\r\n                if (defaultCase) {\r\n                    state.commands.push(new BlockCommand(defaultCase.body));\r\n                }\r\n\r\n                state.commands.push(new BreakTargetCommand(statement.id));\r\n\r\n                const commandPos = state.commands.length;\r\n                for (let i = 0; i < gotoEndCommands.length; ++i) {\r\n                    gotoEndCommands[i].position = commandPos;\r\n                }\r\n            } else if (statement instanceof AST.While) {\r\n                const functionCalls = [];\r\n                state.commands.push(new ContinueTargetCommand(statement.id));\r\n                this._collectFunctionCalls(statement.condition, functionCalls);\r\n                for (const call of functionCalls) {\r\n                    state.commands.push(new CallExprCommand(call, statement));\r\n                }\r\n                const conditionCmd = new GotoCommand(statement.condition, 0, statement.line);\r\n                state.commands.push(conditionCmd);\r\n                let lastLine = statement.line;\r\n\r\n                if (statement.body.length > 0) {\r\n                    state.commands.push(new BlockCommand(statement.body));\r\n                    lastLine = statement.body[statement.body.length - 1].line;\r\n                }\r\n\r\n                state.commands.push(new GotoCommand(statement.condition, 0, lastLine));\r\n                state.commands.push(new BreakTargetCommand(statement.id));\r\n                conditionCmd.position = state.commands.length;\r\n            } else if (statement instanceof AST.For) {\r\n                if (statement.init) {\r\n                    state.commands.push(new StatementCommand(statement.init));\r\n                }\r\n\r\n                let conditionPos = state.commands.length;\r\n\r\n                if (statement.increment === null) {\r\n                    state.commands.push(new ContinueTargetCommand(statement.id));\r\n                }\r\n                let conditionCmd = null;\r\n                if (statement.condition) {\r\n                    const functionCalls = [];\r\n                    this._collectFunctionCalls(statement.condition!, functionCalls);\r\n                    for (const call of functionCalls) {\r\n                        state.commands.push(new CallExprCommand(call, statement));\r\n                    }\r\n                    conditionCmd = new GotoCommand(statement.condition, 0, statement.line);\r\n                    state.commands.push(conditionCmd);\r\n                }\r\n\r\n                let lastLine = statement.line;\r\n                if (statement.body.length > 0) {\r\n                    state.commands.push(new BlockCommand(statement.body));\r\n                    lastLine = statement.body[statement.body.length - 1].line;\r\n                }\r\n\r\n                if (statement.increment) {\r\n                    state.commands.push(new ContinueTargetCommand(statement.id));\r\n                    state.commands.push(new StatementCommand(statement.increment));\r\n                }\r\n                state.commands.push(new GotoCommand(null, conditionPos, lastLine));\r\n                state.commands.push(new BreakTargetCommand(statement.id));\r\n                conditionCmd.position = state.commands.length;\r\n            } else if (statement instanceof AST.Loop) {\r\n                let loopStartPos = state.commands.length;\r\n                if (!statement.continuing) {\r\n                    state.commands.push(new ContinueTargetCommand(statement.id));\r\n                }\r\n                let lastLine = statement.line;\r\n                if (statement.body.length > 0) {\r\n                    state.commands.push(new BlockCommand(statement.body));\r\n                    lastLine = statement.body[statement.body.length - 1].line;\r\n                }\r\n                state.commands.push(new GotoCommand(null, loopStartPos, lastLine));\r\n                state.commands.push(new BreakTargetCommand(statement.id));\r\n            } else if (statement instanceof AST.Continuing) {\r\n                state.commands.push(new ContinueTargetCommand(statement.loopId));\r\n                state.commands.push(new BlockCommand(statement.body));\r\n            } else if (statement instanceof AST.Continue) {\r\n                state.commands.push(new ContinueCommand(statement.loopId, statement));\r\n            } else if (statement instanceof AST.Break) {\r\n                state.commands.push(new BreakCommand(statement.loopId, statement.condition, statement));\r\n            } else if (statement instanceof AST.StaticAssert) {\r\n                state.commands.push(new StatementCommand(statement));\r\n            } else if (statement instanceof AST.Struct) {\r\n                // nothing to do\r\n            } else {\r\n                console.error(`TODO: statement type ${statement.constructor.name}`);\r\n            }\r\n        }\r\n\r\n        return state;\r\n    }\r\n\r\n    _collectFunctionCalls(node: AST.Expression, functionCalls: AST.CallExpr[]) {\r\n        if (node instanceof AST.CallExpr) {\r\n            if (node.args) {\r\n                for (const arg of node.args) {\r\n                    this._collectFunctionCalls(arg, functionCalls);\r\n                }\r\n            }\r\n            // Only collect custom function calls, not built-in functions.\r\n            if (!node.isBuiltin) {\r\n                functionCalls.push(node);\r\n            }\r\n        } else if (node instanceof AST.BinaryOperator) {\r\n            this._collectFunctionCalls(node.left, functionCalls);\r\n            this._collectFunctionCalls(node.right, functionCalls);\r\n        } else if (node instanceof AST.UnaryOperator) {\r\n            this._collectFunctionCalls(node.right, functionCalls);\r\n        } else if (node instanceof AST.CreateExpr) {\r\n            if (node.args) {\r\n                for (const arg of node.args) {\r\n                    this._collectFunctionCalls(arg, functionCalls);\r\n                }\r\n            }\r\n        } else if (node instanceof AST.BitcastExpr) {\r\n            this._collectFunctionCalls(node.value, functionCalls);\r\n        } else if (node instanceof AST.ArrayIndex) {\r\n            this._collectFunctionCalls(node.index, functionCalls);\r\n        } else if (AST.LiteralExpr) {\r\n            // nothing to do\r\n        } else {\r\n            console.error(`TODO: expression type ${node.constructor.name}`);\r\n        }\r\n    }\r\n}\r\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {ShaderAttributeType, ShaderLayout, log} from '@luma.gl/core';\nimport {WgslReflect} from 'wgsl_reflect';\n\n/**\n * Parse a ShaderLayout from WGSL shader source code.\n * @param source WGSL source code (can contain both @vertex and @fragment entry points)\n * @returns\n */\nexport function getShaderLayoutFromWGSL(source: string): ShaderLayout {\n  const shaderLayout: ShaderLayout = {attributes: [], bindings: []};\n\n  let parsedWGSL: WgslReflect;\n  try {\n    parsedWGSL = parseWGSL(source);\n  } catch (error: any) {\n    log.error(error.message)();\n    return shaderLayout;\n  }\n\n  for (const uniform of parsedWGSL.uniforms) {\n    const members = [];\n    for (const attribute of (uniform.type as any)?.members || []) {\n      members.push({\n        name: attribute.name,\n        type: getType(attribute.type)\n      });\n    }\n\n    shaderLayout.bindings.push({\n      type: 'uniform',\n      name: uniform.name,\n      group: uniform.group,\n      location: uniform.binding,\n      // @ts-expect-error TODO - unused for now but needs fixing\n      members\n    });\n  }\n\n  for (const texture of parsedWGSL.textures) {\n    shaderLayout.bindings.push({\n      type: 'texture',\n      name: texture.name,\n      group: texture.group,\n      location: texture.binding\n    });\n  }\n\n  for (const sampler of parsedWGSL.samplers) {\n    shaderLayout.bindings.push({\n      type: 'sampler',\n      name: sampler.name,\n      group: sampler.group,\n      location: sampler.binding\n    });\n  }\n\n  const vertex = parsedWGSL.entry.vertex[0]; // \"main\"\n\n  // Vertex shader inputs\n  const attributeCount = vertex?.inputs.length || 0; // inputs to \"main\"\n  for (let i = 0; i < attributeCount; i++) {\n    const wgslAttribute = vertex.inputs[i];\n\n    // locationType can be \"builtin\"\n    if (wgslAttribute.locationType === 'location') {\n      const type = getType(wgslAttribute.type);\n\n      shaderLayout.attributes.push({\n        name: wgslAttribute.name,\n        location: Number(wgslAttribute.location),\n        type\n      });\n    }\n  }\n  return shaderLayout;\n}\n\n/** Get a valid shader attribute type string from a wgsl-reflect type */\nfunction getType(type: any): ShaderAttributeType {\n  return type.format ? `${type.name}<${type.format.name}>` : type.name;\n}\n\nfunction parseWGSL(source: string): WgslReflect {\n  try {\n    return new WgslReflect(source);\n  } catch (error: any) {\n    if (error instanceof Error) {\n      throw error;\n    }\n    let message = 'WGSL parse error';\n    if (typeof error === 'object' && error?.message) {\n      message += `: ${error.message} `;\n    }\n    if (typeof error === 'object' && error?.token) {\n      message += error.token.line || '';\n    }\n    throw new Error(message, {cause: error});\n  }\n}\n", "// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* eslint-disable no-shadow */ // radians and degrees are common variable names\n\nimport type {NumericArray} from '@math.gl/types';\n\nimport type {MathArray} from '../classes/base/math-array';\n\nconst RADIANS_TO_DEGREES = (1 / Math.PI) * 180;\nconst DEGREES_TO_RADIANS = (1 / 180) * Math.PI;\n\nexport type ConfigurationOptions = {\n  EPSILON: number;\n  debug?: boolean;\n  precision: number;\n  printTypes?: boolean;\n  printDegrees?: boolean;\n  printRowMajor?: boolean;\n  _cartographicRadians?: boolean;\n};\n\nconst DEFAULT_CONFIG: Required<ConfigurationOptions> = {\n  EPSILON: 1e-12,\n  debug: false,\n  precision: 4,\n  printTypes: false,\n  printDegrees: false,\n  printRowMajor: true,\n  _cartographicRadians: false\n};\n\n// We use a global field to store the config\ndeclare global {\n  // eslint-disable-next-line no-var\n  var mathgl: {\n    config: Required<ConfigurationOptions>;\n  };\n}\n\n// Configuration is truly global as of v3.6 to ensure single config even if multiple copies of math.gl\n// Multiple copies of config can be quite tricky to debug...\nglobalThis.mathgl = globalThis.mathgl || {config: {...DEFAULT_CONFIG}};\n\nexport const config = globalThis.mathgl.config;\n\nexport function configure(options: Partial<ConfigurationOptions>): ConfigurationOptions {\n  // Only copy existing keys\n  Object.assign(config, options);\n  return config;\n}\n\n/**\n * Formats a value into a string\n * @param value\n * @param param1\n * @returns\n */\nexport function formatValue(\n  value: number,\n  {precision = config.precision}: {precision?: number} = {}\n): string {\n  value = round(value);\n  // get rid of trailing zeros\n  return `${parseFloat(value.toPrecision(precision))}`;\n}\n\n/**\n * Check if value is an \"array\"\n * Returns `true` if value is either an array or a typed array\n * Note: returns `false` for `ArrayBuffer` and `DataView` instances\n * @note isTypedArray and isNumericArray are often more useful in TypeScript\n */\nexport function isArray(value: unknown): boolean {\n  return Array.isArray(value) || (ArrayBuffer.isView(value) && !(value instanceof DataView));\n}\n\nexport function clone(array: NumericArray | MathArray): NumericArray {\n  return 'clone' in array ? array.clone() : array.slice();\n}\n\nexport function toRadians(degrees: number): number;\nexport function toRadians(degrees: NumericArray): NumericArray;\n\nexport function toRadians(degrees: number | NumericArray): number | NumericArray {\n  return radians(degrees as NumericArray);\n}\n\nexport function toDegrees(degrees: number): number;\nexport function toDegrees(degrees: NumericArray): NumericArray;\n\nexport function toDegrees(radians: number | NumericArray): number | NumericArray {\n  return degrees(radians as NumericArray);\n}\n\n// GLSL math function equivalents - Works on both single values and vectors\n\n/**\n * \"GLSL equivalent\" radians: Works on single values and vectors\n */\nexport function radians(degrees: number): number;\nexport function radians(degrees: NumericArray, result?: NumericArray): NumericArray;\n\nexport function radians(\n  degrees: number | NumericArray,\n  result?: NumericArray\n): number | NumericArray {\n  return map(degrees, (degrees) => degrees * DEGREES_TO_RADIANS, result);\n}\n\n/**\n * \"GLSL equivalent\" degrees: Works on single values and vectors\n */\nexport function degrees(radians: number): number;\nexport function degrees(radians: NumericArray, result?: NumericArray): NumericArray;\n\nexport function degrees(\n  radians: number | NumericArray,\n  result?: NumericArray\n): number | NumericArray {\n  return map(radians, (radians) => radians * RADIANS_TO_DEGREES, result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.sin`: Works on single values and vectors\n * @deprecated\n */\nexport function sin(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.sin(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.cos`: Works on single values and vectors\n * @deprecated\n */\nexport function cos(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.cos(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.tan`: Works on single values and vectors\n * @deprecated\n */\nexport function tan(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.tan(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.asin`: Works on single values and vectors\n * @deprecated\n */\nexport function asin(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.asin(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.acos`: Works on single values and vectors\n * @deprecated\n */\nexport function acos(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.acos(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.atan`: Works on single values and vectors\n * @deprecated\n */\nexport function atan(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.atan(angle), result);\n}\n\n/**\n * GLSL style value clamping: Works on single values and vectors\n */\nexport function clamp(value: number, min: number, max: number): number;\nexport function clamp(value: NumericArray, min: number, max: number): NumericArray;\n\nexport function clamp(\n  value: number | NumericArray,\n  min: number,\n  max: number\n): number | NumericArray {\n  return map(value, (value) => Math.max(min, Math.min(max, value)));\n}\n\n/**\n * Interpolate between two numbers or two arrays\n */\nexport function lerp(a: number, b: number, t: number): number;\nexport function lerp(a: NumericArray, b: NumericArray, t: number): NumericArray;\n\nexport function lerp(\n  a: number | NumericArray,\n  b: number | NumericArray,\n  t: number\n): number | NumericArray {\n  if (isArray(a)) {\n    return (a as NumericArray).map((ai: number, i: number) => lerp(ai, (b as NumericArray)[i], t));\n  }\n  return t * (b as number) + (1 - t) * (a as number);\n}\n\n/* eslint-disable */\n\n/**\n * Compares any two math objects, using `equals` method if available.\n * @param a\n * @param b\n * @param epsilon\n * @returns\n */\nexport function equals(a: any, b: any, epsilon?: number): boolean {\n  const oldEpsilon = config.EPSILON;\n  if (epsilon) {\n    config.EPSILON = epsilon;\n  }\n  try {\n    if (a === b) {\n      return true;\n    }\n    if (isArray(a) && isArray(b)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < a.length; ++i) {\n        // eslint-disable-next-line max-depth\n        if (!equals(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a && a.equals) {\n      return a.equals(b);\n    }\n    if (b && b.equals) {\n      return b.equals(a);\n    }\n    if (typeof a === 'number' && typeof b === 'number') {\n      return Math.abs(a - b) <= config.EPSILON * Math.max(1, Math.abs(a), Math.abs(b));\n    }\n    return false;\n  } finally {\n    config.EPSILON = oldEpsilon;\n  }\n}\n\nexport function exactEquals(a: any, b: any): boolean {\n  if (a === b) {\n    return true;\n  }\n  if (a && typeof a === 'object' && b && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (a.exactEquals) {\n      return a.exactEquals(b);\n    }\n  }\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; ++i) {\n      if (!exactEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n/* eslint-enable */\n\nexport function withEpsilon<T>(epsilon: number, func: () => T): T {\n  const oldPrecision = config.EPSILON;\n  config.EPSILON = epsilon;\n  let value: T;\n  try {\n    value = func();\n  } finally {\n    config.EPSILON = oldPrecision;\n  }\n  return value;\n}\n\n// HELPERS\n\nfunction round(value: number): number {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\n// If the array has a clone function, calls it, otherwise returns a copy\nfunction duplicateArray(array: NumericArray): NumericArray {\n  // @ts-expect-error We check for math.gl class methods\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n  return array.clone ? (array.clone() as NumericArray) : (new Array(array.length) as number[]);\n}\n\n// If the argument value is an array, applies the func element wise,\n// otherwise applies func to the argument value\nfunction map(\n  value: number | NumericArray,\n  func: (x: number, index?: number, resultArray?: NumericArray) => number,\n  result?: NumericArray\n): number | NumericArray {\n  if (isArray(value)) {\n    const array = value as NumericArray;\n    result = result || duplicateArray(array);\n    for (let i = 0; i < result.length && i < array.length; ++i) {\n      const val = typeof value === 'number' ? value : value[i];\n      result[i] = func(val, i, result);\n    }\n    return result;\n  }\n  return func(value as number);\n}\n", "// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {NumericArray} from '@math.gl/types';\nimport {ConfigurationOptions, config, formatValue, equals, isArray} from '../../lib/common';\n\n/** Base class for vectors and matrices */\nexport abstract class MathArray extends Array<number> {\n  /** Number of elements (values) in this array */\n  abstract get ELEMENTS(): number;\n\n  abstract copy(vector: Readonly<NumericArray>): this;\n\n  abstract fromObject(object: Record<string, unknown>): this;\n\n  // Common methods\n\n  /**\n   * Clone the current object\n   * @returns a new copy of this object\n   */\n  clone(): this {\n    // @ts-expect-error TS2351: Cannot use 'new' with an expression whose type lacks a call or construct signature.\n    return new this.constructor().copy(this); // eslint-disable-line\n  }\n\n  fromArray(array: Readonly<NumericArray>, offset: number = 0): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = array[i + offset];\n    }\n    return this.check();\n  }\n\n  toArray<TypedArray>(targetArray: TypedArray, offset?: number): TypedArray;\n  toArray(targetArray?: number[], offset?: number): NumericArray;\n\n  toArray(targetArray: NumericArray = [], offset: number = 0): NumericArray {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      targetArray[offset + i] = this[i];\n    }\n    return targetArray;\n  }\n\n  toObject(targetObject: Record<string, unknown>): Record<string, unknown> {\n    return targetObject;\n  }\n\n  from(arrayOrObject: Readonly<NumericArray> | Record<string, unknown>): this {\n    return Array.isArray(arrayOrObject)\n      ? this.copy(arrayOrObject)\n      : // @ts-ignore\n        this.fromObject(arrayOrObject);\n  }\n\n  to<T extends NumericArray | Record<string, unknown>>(arrayOrObject: T): T {\n    // @ts-ignore\n    if (arrayOrObject === this) {\n      return this as T;\n    }\n    // @ts-expect-error TS2339: Property 'toObject' does not exist on type 'MathArray'.\n    return isArray(arrayOrObject) ? this.toArray(arrayOrObject) : this.toObject(arrayOrObject);\n  }\n\n  toTarget(target: this): this {\n    return target ? this.to(target) : this;\n  }\n\n  /** @deprecated */\n  toFloat32Array(): Float32Array {\n    return new Float32Array(this);\n  }\n\n  override toString(): string {\n    return this.formatString(config);\n  }\n\n  /** Formats string according to options */\n  formatString(opts: ConfigurationOptions): string {\n    let string = '';\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      string += (i > 0 ? ', ' : '') + formatValue(this[i], opts);\n    }\n    return `${opts.printTypes ? this.constructor.name : ''}[${string}]`;\n  }\n\n  equals(array: Readonly<NumericArray>): boolean {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (!equals(this[i], array[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  exactEquals(array: Readonly<NumericArray>): boolean {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (this[i] !== array[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Modifiers\n\n  /** Negates all values in this object */\n  negate(): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = -this[i];\n    }\n    return this.check();\n  }\n\n  /** Linearly interpolates between two values */\n  lerp(a: Readonly<NumericArray>, t: number): this;\n  lerp(a: Readonly<NumericArray>, b: Readonly<NumericArray>, t: number): this;\n\n  lerp(a: Readonly<NumericArray>, b: Readonly<NumericArray> | number, t?: number): this {\n    if (t === undefined) {\n      return this.lerp(this, a, b as number);\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const ai = a[i];\n      const endValue = typeof b === 'number' ? b : b[i];\n      this[i] = ai + t * (endValue - ai);\n    }\n    return this.check();\n  }\n\n  /** Minimal */\n  min(vector: Readonly<NumericArray>): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(vector[i], this[i]);\n    }\n    return this.check();\n  }\n\n  /** Maximal */\n  max(vector: Readonly<NumericArray>): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.max(vector[i], this[i]);\n    }\n    return this.check();\n  }\n\n  clamp(minVector: Readonly<NumericArray>, maxVector: Readonly<NumericArray>): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], minVector[i]), maxVector[i]);\n    }\n    return this.check();\n  }\n\n  add(...vectors: Readonly<NumericArray>[]): this {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] += vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  subtract(...vectors: Readonly<NumericArray>[]): this {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] -= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  scale(scale: number | Readonly<NumericArray>): this {\n    if (typeof scale === 'number') {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= scale;\n      }\n    } else {\n      for (let i = 0; i < this.ELEMENTS && i < scale.length; ++i) {\n        this[i] *= scale[i];\n      }\n    }\n    return this.check();\n  }\n\n  /**\n   * Multiplies all elements by `scale`\n   * Note: `Matrix4.multiplyByScalar` only scales its 3x3 \"minor\"\n   */\n  multiplyByScalar(scalar: number): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scalar;\n    }\n    return this.check();\n  }\n\n  // Debug checks\n\n  /** Throws an error if array length is incorrect or contains illegal values */\n  check(): this {\n    if (config.debug && !this.validate()) {\n      throw new Error(`math.gl: ${this.constructor.name} some fields set to invalid numbers'`);\n    }\n    return this;\n  }\n\n  /** Returns false if the array length is incorrect or contains illegal values */\n  validate(): boolean {\n    let valid = this.length === this.ELEMENTS;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      valid = valid && Number.isFinite(this[i]);\n    }\n    return valid;\n  }\n\n  // three.js compatibility\n\n  /** @deprecated */\n  sub(a: Readonly<NumericArray>): this {\n    return this.subtract(a);\n  }\n\n  /** @deprecated */\n  setScalar(a: number): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = a;\n    }\n    return this.check();\n  }\n\n  /** @deprecated */\n  addScalar(a: number): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] += a;\n    }\n    return this.check();\n  }\n\n  /** @deprecated */\n  subScalar(a: number): this {\n    return this.addScalar(-a);\n  }\n\n  /** @deprecated */\n  multiplyScalar(scalar: number): this {\n    // Multiplies all elements\n    // `Matrix4.scale` only scales its 3x3 \"minor\"\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scalar;\n    }\n    return this.check();\n  }\n\n  /** @deprecated */\n  divideScalar(a: number): this {\n    return this.multiplyByScalar(1 / a);\n  }\n\n  /** @deprecated */\n  clampScalar(min: number, max: number): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], min), max);\n    }\n    return this.check();\n  }\n\n  /** @deprecated */\n  get elements(): NumericArray {\n    return this;\n  }\n}\n", "// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {NumericArray} from '@math.gl/types';\nimport {config} from './common';\n\nexport function validateVector(v: NumericArray, length: number): boolean {\n  if (v.length !== length) {\n    return false;\n  }\n  // Could be arguments \"array\" (v.every not availasble)\n  for (let i = 0; i < v.length; ++i) {\n    if (!Number.isFinite(v[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function checkNumber(value: unknown): number {\n  if (!Number.isFinite(value)) {\n    throw new Error(`Invalid number ${JSON.stringify(value)}`);\n  }\n  return value as number;\n}\n\nexport function checkVector<T extends NumericArray>(\n  v: T,\n  length: number,\n  callerName: string = ''\n): T {\n  if (config.debug && !validateVector(v, length)) {\n    throw new Error(`math.gl: ${callerName} some fields set to invalid numbers'`);\n  }\n  return v;\n}\n\nconst map: Record<string, boolean> = {};\n\nexport function deprecated(method: string, version: string): void {\n  if (!map[method]) {\n    map[method] = true;\n    // eslint-disable-next-line\n    console.warn(\n      `${method} has been removed in version ${version}, see upgrade guide for more information`\n    );\n  }\n}\n", "// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nexport function assert(condition: unknown, message?: string): void {\n  if (!condition) {\n    throw new Error(`math.gl assertion ${message}`);\n  }\n}\n", "// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Copyright (c) 2017 Uber Technologies, Inc.\n\nimport {NumericArray} from '@math.gl/types';\nimport {MathArray} from './math-array';\nimport {checkNumber} from '../../lib/validators';\nimport {assert} from '../../lib/assert';\n\n/** Base class for vectors with at least 2 elements */\nexport abstract class Vector extends MathArray {\n  // ACCESSORS\n\n  get x(): number {\n    return this[0];\n  }\n\n  set x(value: number) {\n    this[0] = checkNumber(value);\n  }\n\n  get y(): number {\n    return this[1];\n  }\n\n  set y(value: number) {\n    this[1] = checkNumber(value);\n  }\n\n  /**\n   * Returns the length of the vector from the origin to the point described by this vector\n   *\n   * @note `length` is a reserved word for Arrays, so `v.length()` will return number of elements\n   * Instead we provide `len` and `magnitude`\n   */\n  len(): number {\n    return Math.sqrt(this.lengthSquared());\n  }\n\n  /**\n   * Returns the length of the vector from the origin to the point described by this vector\n   */\n  magnitude(): number {\n    return this.len();\n  }\n\n  /**\n   * Returns the squared length of the vector from the origin to the point described by this vector\n   */\n  lengthSquared(): number {\n    let length = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      length += this[i] * this[i];\n    }\n    return length;\n  }\n\n  /**\n   * Returns the squared length of the vector from the origin to the point described by this vector\n   */\n  magnitudeSquared(): number {\n    return this.lengthSquared();\n  }\n\n  distance(mathArray: Readonly<NumericArray>): number {\n    return Math.sqrt(this.distanceSquared(mathArray));\n  }\n\n  distanceSquared(mathArray: Readonly<NumericArray>): number {\n    let length = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const dist = this[i] - mathArray[i];\n      length += dist * dist;\n    }\n    return checkNumber(length);\n  }\n\n  dot(mathArray: Readonly<NumericArray>): number {\n    let product = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      product += this[i] * mathArray[i];\n    }\n    return checkNumber(product);\n  }\n\n  // MODIFIERS\n\n  normalize(): this {\n    const length = this.magnitude();\n    if (length !== 0) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= length;\n      }\n    }\n    return this.check();\n  }\n\n  multiply(...vectors: Readonly<NumericArray>[]): this {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  divide(...vectors: Readonly<NumericArray>[]): this {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  // THREE.js compatibility\n\n  lengthSq(): number {\n    return this.lengthSquared();\n  }\n  distanceTo(vector: Readonly<NumericArray>): number {\n    return this.distance(vector);\n  }\n  distanceToSquared(vector: Readonly<NumericArray>): number {\n    return this.distanceSquared(vector);\n  }\n\n  getComponent(i: number): number {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    return checkNumber(this[i]);\n  }\n\n  setComponent(i: number, value: number): this {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    this[i] = value;\n    return this.check();\n  }\n\n  addVectors(a: Readonly<NumericArray>, b: Readonly<NumericArray>): this {\n    return this.copy(a).add(b);\n  }\n\n  subVectors(a: Readonly<NumericArray>, b: Readonly<NumericArray>): this {\n    return this.copy(a).subtract(b);\n  }\n\n  multiplyVectors(a: Readonly<NumericArray>, b: Readonly<NumericArray>): this {\n    return this.copy(a).multiply(b);\n  }\n\n  addScaledVector(a: Readonly<NumericArray>, b: number): this {\n    // @ts-expect-error error TS2351: Cannot use 'new' with an expression whose type lacks a call or construct signature.\n    return this.add((new this.constructor(a) as this).multiplyScalar(b));\n  }\n}\n", "// @eslint-disable\n// @ts-nocheck\n\nimport type {NumericArray} from '@math.gl/types';\nimport * as glMatrix from './common.js';\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns a new 2D vector\n */\nexport function create(): NumericArray {\n  const out = new glMatrix.ARRAY_TYPE(2);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param a vector to clone\n * @returns a new 2D vector\n */\nexport function clone(a: Readonly<NumericArray>): NumericArray {\n  const out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param x X component\n * @param y Y component\n * @returns a new 2D vector\n */\nexport function fromValues(x: number, y: number): NumericArray {\n  const out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a the source vector\n * @returns {NumericArray} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {NumericArray} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {NumericArray} out\n */\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a the first operand\n * @param {Readonly<NumericArray>} b the second operand\n * @returns {NumericArray} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a the first operand\n * @param {Readonly<NumericArray>} b the second operand\n * @returns {NumericArray} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a the first operand\n * @param {Readonly<NumericArray>} b the second operand\n * @returns {NumericArray} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a the first operand\n * @param {Readonly<NumericArray>} b the second operand\n * @returns {NumericArray} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a vector to ceil\n * @returns {NumericArray} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a vector to floor\n * @returns {NumericArray} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a the first operand\n * @param {Readonly<NumericArray>} b the second operand\n * @returns {NumericArray} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a the first operand\n * @param {Readonly<NumericArray>} b the second operand\n * @returns {NumericArray} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec2\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a vector to round\n * @returns {NumericArray} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {NumericArray} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a the first operand\n * @param {Readonly<NumericArray>} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {NumericArray} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {Readonly<NumericArray>} a the first operand\n * @param {Readonly<NumericArray>} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  const x = b[0] - a[0];\n  const y = b[1] - a[1];\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {Readonly<NumericArray>} a the first operand\n * @param {Readonly<NumericArray>} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  const x = b[0] - a[0];\n  const y = b[1] - a[1];\n  return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {Readonly<NumericArray>} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  const x = a[0];\n  const y = a[1];\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {Readonly<NumericArray>} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  const x = a[0];\n  const y = a[1];\n  return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a vector to negate\n * @returns {NumericArray} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a vector to invert\n * @returns {NumericArray} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a vector to normalize\n * @returns {NumericArray} out\n */\nexport function normalize(out, a) {\n  const x = a[0];\n  const y = a[1];\n  let len = x * x + y * y;\n  if (len > 0) {\n    // TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {Readonly<NumericArray>} a the first operand\n * @param {Readonly<NumericArray>} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {Readonly<NumericArray>} a the first operand\n * @param {Readonly<NumericArray>} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  const z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a the first operand\n * @param {Readonly<NumericArray>} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {NumericArray} out\n */\nexport function lerp(out, a, b, t) {\n  const ax = a[0];\n  const ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {NumericArray} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {NumericArray} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n  const r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {NumericArray} out\n */\nexport function transformMat2(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {NumericArray} out\n */\nexport function transformMat2d(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {NumericArray} out\n */\nexport function transformMat3(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {NumericArray} out the receiving vector\n * @param {Readonly<NumericArray>} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {NumericArray} out\n */\nexport function transformMat4(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Rotate a 2D vector\n * @param {NumericArray} out The receiving vec2\n * @param {Readonly<NumericArray>} a The vec2 point to rotate\n * @param {Readonly<NumericArray>} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {NumericArray} out\n */\nexport function rotate(out, a, b, rad) {\n  // Translate point to the origin\n  const p0 = a[0] - b[0];\n  const p1 = a[1] - b[1];\n  const sinC = Math.sin(rad);\n  const cosC = Math.cos(rad);\n\n  // perform rotation and translate to correct position\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n\n  return out;\n}\n\n/**\n * Get the angle between two 2D vectors\n * @param {Readonly<NumericArray>} a The first operand\n * @param {Readonly<NumericArray>} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  const x1 = a[0];\n  const y1 = a[1];\n  const x2 = b[0];\n  const y2 = b[1];\n  // mag is the product of the magnitudes of a and b\n  const mag = Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2));\n  // mag &&.. short circuits if mag == 0\n  const cosine = mag && (x1 * x2 + y1 * y2) / mag;\n  // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n\n/**\n * Set the components of a vec2 to zero\n *\n * @param {NumericArray} out the receiving vector\n * @returns {NumericArray} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {Readonly<NumericArray>} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return `vec2(${a[0]}, ${a[1]})`;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {Readonly<NumericArray>} a The first vector.\n * @param {Readonly<NumericArray>} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {Readonly<NumericArray>} a The first vector.\n * @param {Readonly<NumericArray>} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  const a0 = a[0];\n  const a1 = a[1];\n  const b0 = b[0];\n  const b1 = b[1];\n  return (\n    Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n    Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1))\n  );\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function () {\n  const vec = create();\n\n  return function (a, stride, offset, count, fn, arg) {\n    let i;\n    let l;\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n})();\n", "// @eslint-disable\n// @ts-nocheck\n\n/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport const RANDOM = Math.random;\nexport const ANGLE_ORDER = 'zyx';\n\n/**\n * Symmetric round\n * see https://www.npmjs.com/package/round-half-up-symmetric#user-content-detailed-background\n *\n * @param {Number} a value to round\n */\nexport function round(a) {\n  if (a >= 0) return Math.round(a);\n\n  return a % 0.5 === 0 ? Math.floor(a) : Math.round(a);\n}\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\n\nconst degree = Math.PI / 180;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n", "// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* eslint-disable camelcase */\nimport {NumericArray} from '@math.gl/types';\n// vec2 additions\n\nexport function vec2_transformMat4AsVector<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  const w = m[3] * x + m[7] * y || 1.0;\n  out[0] = (m[0] * x + m[4] * y) / w;\n  out[1] = (m[1] * x + m[5] * y) / w;\n  return out;\n}\n\n// vec3 additions\n\n// Transform as vector, only uses 3x3 minor matrix\nexport function vec3_transformMat4AsVector<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = m[3] * x + m[7] * y + m[11] * z || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n  return out;\n}\n\nexport function vec3_transformMat2<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  return out;\n}\n\n// vec4 additions\n\nexport function vec4_transformMat2<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nexport function vec4_transformMat3<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  out[0] = m[0] * x + m[3] * y + m[6] * z;\n  out[1] = m[1] * x + m[4] * y + m[7] * z;\n  out[2] = m[2] * x + m[5] * y + m[8] * z;\n  out[3] = a[3];\n  return out;\n}\n", "// @eslint-disable\n// @ts-nocheck\n\nimport * as glMatrix from './common.js';\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  const out = new glMatrix.ARRAY_TYPE(3);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  const out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  const out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  out[2] = glMatrix.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  const x = b[0] - a[0];\n  const y = b[1] - a[1];\n  const z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  const x = b[0] - a[0];\n  const y = b[1] - a[1];\n  const z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  let len = x * x + y * y + z * z;\n  if (len > 0) {\n    // TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  const ax = a[0];\n  const ay = a[1];\n  const az = a[2];\n  const bx = b[0];\n  const by = b[1];\n  const bz = b[2];\n\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  const ax = a[0];\n  const ay = a[1];\n  const az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function slerp(out, a, b, t) {\n  const angle = Math.acos(Math.min(Math.max(dot(a, b), -1), 1));\n  const sinTotal = Math.sin(angle);\n\n  const ratioA = Math.sin((1 - t) * angle) / sinTotal;\n  const ratioB = Math.sin(t * angle) / sinTotal;\n  out[0] = ratioA * a[0] + ratioB * b[0];\n  out[1] = ratioA * a[1] + ratioB * b[1];\n  out[2] = ratioA * a[2] + ratioB * b[2];\n\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  const factorTimes2 = t * t;\n  const factor1 = factorTimes2 * (2 * t - 3) + 1;\n  const factor2 = factorTimes2 * (t - 2) + t;\n  const factor3 = factorTimes2 * (t - 1);\n  const factor4 = factorTimes2 * (3 - 2 * t);\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  const inverseFactor = 1 - t;\n  const inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  const factorTimes2 = t * t;\n  const factor1 = inverseFactorTimesTwo * inverseFactor;\n  const factor2 = 3 * t * inverseFactorTimesTwo;\n  const factor3 = 3 * factorTimes2 * inverseFactor;\n  const factor4 = factorTimes2 * t;\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n\n  const r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  const z = glMatrix.RANDOM() * 2.0 - 1.0;\n  const zScale = Math.sqrt(1.0 - z * z) * scale;\n\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  const qx = q[0];\n  const qy = q[1];\n  const qz = q[2];\n  const qw = q[3];\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n  let uvx = qy * z - qz * y;\n  let uvy = qz * x - qx * z;\n  let uvz = qx * y - qy * x;\n  // var uuv = vec3.cross([], qvec, uv);\n  let uuvx = qy * uvz - qz * uvy;\n  let uuvy = qz * uvx - qx * uvz;\n  let uuvz = qx * uvy - qy * uvx;\n  // vec3.scale(uv, uv, 2 * w);\n  const w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2;\n  // vec3.scale(uuv, uuv, 2);\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2;\n  // return vec3.add(out, a, vec3.add(out, uv, uuv));\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, rad) {\n  const p = [];\n  const r = [];\n  // Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  // perform rotation\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad);\n\n  // translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, rad) {\n  const p = [];\n  const r = [];\n  // Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  // perform rotation\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad);\n\n  // translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, rad) {\n  const p = [];\n  const r = [];\n  // Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  // perform rotation\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2];\n\n  // translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  const ax = a[0];\n  const ay = a[1];\n  const az = a[2];\n  const bx = b[0];\n  const by = b[1];\n  const bz = b[2];\n  const mag = Math.sqrt((ax * ax + ay * ay + az * az) * (bx * bx + by * by + bz * bz));\n  const cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return `vec3(${a[0]}, ${a[1]}, ${a[2]})`;\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  const a0 = a[0];\n  const a1 = a[1];\n  const a2 = a[2];\n  const b0 = b[0];\n  const b1 = b[1];\n  const b2 = b[2];\n  return (\n    Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n    Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n    Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2))\n  );\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function () {\n  const vec = create();\n\n  return function (a, stride, offset, count, fn, arg) {\n    let i;\n    let l;\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n})();\n", "// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Copyright (c) 2017 Uber Technologies, Inc.\n\nimport {NumericArray, NumericArray3} from '@math.gl/types';\nimport {Vector} from './base/vector';\nimport {config, isArray} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\n// @ts-ignore gl-matrix types\nimport {\n  angle as vec3_angle,\n  cross as vec3_cross,\n  rotateX as vec3_rotateX,\n  rotateY as vec3_rotateY,\n  rotateZ as vec3_rotateZ,\n  transformMat4 as vec3_transformMat4,\n  transformMat3 as vec3_transformMat3,\n  transformQuat as vec3_transformQuat\n} from '../gl-matrix/vec3';\n/* eslint-disable camelcase */\nimport {vec3_transformMat2, vec3_transformMat4AsVector} from '../lib/gl-matrix-extras';\n\nconst ORIGIN = [0, 0, 0];\n\nlet ZERO: Vector3;\n\n/** Helper type that captures array length for a 3 element vector */\nexport type Vector3Like = Vector3 | NumericArray3;\n\n/**\n * Three-element vector class with common linear algebra operations.\n * Subclass of Array<number> meaning that it is highly compatible with other libraries\n */\nexport class Vector3 extends Vector {\n  static get ZERO(): Vector3 {\n    if (!ZERO) {\n      ZERO = new Vector3(0, 0, 0);\n      Object.freeze(ZERO);\n    }\n    return ZERO;\n  }\n\n  /**\n   * @class\n   * @param x\n   * @param y\n   * @param z\n   */\n  constructor(x: number | Readonly<NumericArray> = 0, y: number = 0, z: number = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0);\n    if (arguments.length === 1 && isArray(x)) {\n      this.copy(x as NumericArray);\n    } else {\n      // this.set(x, y, z);\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n      // @ts-expect-error TS2412: Property '0' of type 'number | [number, number, number]' is not assignable to numeric index type 'number'\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n    }\n  }\n\n  set(x: number, y: number, z: number): this {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    return this.check();\n  }\n\n  copy(array: Readonly<NumericArray>): this {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    return this.check();\n  }\n\n  fromObject(object: {x: number; y: number; z: number}): this {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    return this.check();\n  }\n\n  override toObject(object: {x?: number; y?: number; z?: number}): {\n    x: number;\n    y: number;\n    z: number;\n  } {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    return object as {x: number; y: number; z: number};\n  }\n\n  // Getters/setters\n\n  get ELEMENTS(): number {\n    return 3;\n  }\n  get z(): number {\n    return this[2];\n  }\n  set z(value: number) {\n    this[2] = checkNumber(value);\n  }\n\n  // ACCESSORS\n\n  angle(vector: Readonly<NumericArray>): number {\n    return vec3_angle(this, vector);\n  }\n\n  // MODIFIERS\n\n  cross(vector: Readonly<NumericArray>): this {\n    vec3_cross(this, this, vector);\n    return this.check();\n  }\n\n  rotateX({radians, origin = ORIGIN}: {radians: number; origin?: Readonly<NumericArray>}): this {\n    vec3_rotateX(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateY({radians, origin = ORIGIN}: {radians: number; origin?: Readonly<NumericArray>}): this {\n    vec3_rotateY(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateZ({radians, origin = ORIGIN}: {radians: number; origin?: Readonly<NumericArray>}): this {\n    vec3_rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n\n  // Transforms\n\n  // transforms as point (4th component is implicitly 1)\n  transform(matrix4: Readonly<NumericArray>): this {\n    return this.transformAsPoint(matrix4);\n  }\n\n  // transforms as point (4th component is implicitly 1)\n  transformAsPoint(matrix4: Readonly<NumericArray>): this {\n    vec3_transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  // transforms as vector  (4th component is implicitly 0, ignores translation. slightly faster)\n  transformAsVector(matrix4: Readonly<NumericArray>): this {\n    vec3_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3: Readonly<NumericArray>): this {\n    vec3_transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2: Readonly<NumericArray>): this {\n    vec3_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion: Readonly<NumericArray>): this {\n    vec3_transformQuat(this, this, quaternion);\n    return this.check();\n  }\n}\n", "// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Copyright (c) 2017 Uber Technologies, Inc.\n\nimport {NumericArray} from '@math.gl/types';\nimport {MathArray} from './math-array';\nimport {checkNumber} from '../../lib/validators';\nimport {config} from '../../lib/common';\n\n/** Base class for matrices */\nexport abstract class Matrix extends MathArray {\n  abstract get RANK(): number;\n\n  // fromObject(object) {\n  //   const array = object.elements;\n  //   return this.fromRowMajor(array);\n  // }\n  // toObject(object) {\n  //   const array = object.elements;\n  //   this.toRowMajor(array);\n  //   return object;\n  // }\n\n  // TODO better override formatString?\n  override toString(): string {\n    let string = '[';\n    if (config.printRowMajor) {\n      string += 'row-major:';\n      for (let row = 0; row < this.RANK; ++row) {\n        for (let col = 0; col < this.RANK; ++col) {\n          string += ` ${this[col * this.RANK + row]}`;\n        }\n      }\n    } else {\n      string += 'column-major:';\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        string += ` ${this[i]}`;\n      }\n    }\n    string += ']';\n    return string;\n  }\n\n  getElementIndex(row: number, col: number): number {\n    return col * this.RANK + row;\n  }\n\n  // By default assumes row major indices\n  getElement(row: number, col: number): number {\n    return this[col * this.RANK + row];\n  }\n\n  // By default assumes row major indices\n  setElement(row: number, col: number, value: number): this {\n    this[col * this.RANK + row] = checkNumber(value);\n    return this;\n  }\n  getColumn<NumArrayT>(columnIndex: number, result: NumArrayT): NumArrayT;\n  getColumn(columnIndex: number): number[];\n\n  getColumn(\n    columnIndex: number,\n    result: number[] = new Array<number>(this.RANK).fill(-0)\n  ): number[] {\n    const firstIndex = columnIndex * this.RANK;\n    for (let i = 0; i < this.RANK; ++i) {\n      result[i] = this[firstIndex + i];\n    }\n    return result;\n  }\n\n  setColumn(columnIndex: number, columnVector: Readonly<NumericArray>): this {\n    const firstIndex = columnIndex * this.RANK;\n    for (let i = 0; i < this.RANK; ++i) {\n      this[firstIndex + i] = columnVector[i];\n    }\n    return this;\n  }\n}\n", "import * as glMatrix from './common.js';\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nexport function create() {\n  const out = new glMatrix.ARRAY_TYPE(9);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nexport function clone(a) {\n  const out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  const out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    const a01 = a[1];\n    const a02 = a[2];\n    const a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a10 = a[3];\n  const a11 = a[4];\n  const a12 = a[5];\n  const a20 = a[6];\n  const a21 = a[7];\n  const a22 = a[8];\n\n  const b01 = a22 * a11 - a12 * a21;\n  const b11 = -a22 * a10 + a12 * a20;\n  const b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function adjoint(out, a) {\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a10 = a[3];\n  const a11 = a[4];\n  const a12 = a[5];\n  const a20 = a[6];\n  const a21 = a[7];\n  const a22 = a[8];\n\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a10 = a[3];\n  const a11 = a[4];\n  const a12 = a[5];\n  const a20 = a[6];\n  const a21 = a[7];\n  const a22 = a[8];\n\n  return (\n    a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20)\n  );\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a10 = a[3];\n  const a11 = a[4];\n  const a12 = a[5];\n  const a20 = a[6];\n  const a21 = a[7];\n  const a22 = a[8];\n\n  const b00 = b[0];\n  const b01 = b[1];\n  const b02 = b[2];\n  const b10 = b[3];\n  const b11 = b[4];\n  const b12 = b[5];\n  const b20 = b[6];\n  const b21 = b[7];\n  const b22 = b[8];\n\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a10 = a[3];\n  const a11 = a[4];\n  const a12 = a[5];\n  const a20 = a[6];\n  const a21 = a[7];\n  const a22 = a[8];\n  const x = v[0];\n  const y = v[1];\n\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a10 = a[3];\n  const a11 = a[4];\n  const a12 = a[5];\n  const a20 = a[6];\n  const a21 = a[7];\n  const a22 = a[8];\n  const s = Math.sin(rad);\n  const c = Math.cos(rad);\n\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n  const x = v[0];\n  const y = v[1];\n\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function fromRotation(out, rad) {\n  const s = Math.sin(rad);\n  const c = Math.cos(rad);\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n  const x = q[0];\n  const y = q[1];\n  const z = q[2];\n  const w = q[3];\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n\n  const xx = x * x2;\n  const yx = y * x2;\n  const yy = y * y2;\n  const zx = z * x2;\n  const zy = z * y2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n\n  return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[4];\n  const a11 = a[5];\n  const a12 = a[6];\n  const a13 = a[7];\n  const a20 = a[8];\n  const a21 = a[9];\n  const a22 = a[10];\n  const a23 = a[11];\n  const a30 = a[12];\n  const a31 = a[13];\n  const a32 = a[14];\n  const a33 = a[15];\n\n  const b00 = a00 * a11 - a01 * a10;\n  const b01 = a00 * a12 - a02 * a10;\n  const b02 = a00 * a13 - a03 * a10;\n  const b03 = a01 * a12 - a02 * a11;\n  const b04 = a01 * a13 - a03 * a11;\n  const b05 = a02 * a13 - a03 * a12;\n  const b06 = a20 * a31 - a21 * a30;\n  const b07 = a20 * a32 - a22 * a30;\n  const b08 = a20 * a33 - a23 * a30;\n  const b09 = a21 * a32 - a22 * a31;\n  const b10 = a21 * a33 - a23 * a31;\n  const b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return `mat3(${a[0]}, ${a[1]}, ${a[2]}, ${a[3]}, ${a[4]}, ${a[5]}, ${a[6]}, ${a[7]}, ${a[8]})`;\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return Math.sqrt(\n    a[0] * a[0] +\n      a[1] * a[1] +\n      a[2] * a[2] +\n      a[3] * a[3] +\n      a[4] * a[4] +\n      a[5] * a[5] +\n      a[6] * a[6] +\n      a[7] * a[7] +\n      a[8] * a[8]\n  );\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return (\n    a[0] === b[0] &&\n    a[1] === b[1] &&\n    a[2] === b[2] &&\n    a[3] === b[3] &&\n    a[4] === b[4] &&\n    a[5] === b[5] &&\n    a[6] === b[6] &&\n    a[7] === b[7] &&\n    a[8] === b[8]\n  );\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  const a0 = a[0];\n  const a1 = a[1];\n  const a2 = a[2];\n  const a3 = a[3];\n  const a4 = a[4];\n  const a5 = a[5];\n  const a6 = a[6];\n  const a7 = a[7];\n  const a8 = a[8];\n  const b0 = b[0];\n  const b1 = b[1];\n  const b2 = b[2];\n  const b3 = b[3];\n  const b4 = b[4];\n  const b5 = b[5];\n  const b6 = b[6];\n  const b7 = b[7];\n  const b8 = b[8];\n  return (\n    Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n    Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n    Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n    Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n    Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n    Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n    Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n    Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n    Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8))\n  );\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nexport const sub = subtract;\n", "// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Copyright (c) 2017 Uber Technologies, Inc.\n\nimport {NumericArray, NumericArray9} from '@math.gl/types';\nimport {Matrix} from './base/matrix';\nimport {checkVector} from '../lib/validators';\n\nimport {vec4_transformMat3} from '../lib/gl-matrix-extras';\n\nimport {\n  fromQuat as mat3_fromQuat,\n  determinant as mat3_determinant,\n  transpose as mat3_transpose,\n  invert as mat3_invert,\n  multiply as mat3_multiply,\n  rotate as mat3_rotate,\n  scale as mat3_scale,\n  translate as mat3_translate\n} from '../gl-matrix/mat3';\nimport {transformMat3 as vec2_transformMat3} from '../gl-matrix/vec2';\nimport {transformMat3 as vec3_transformMat3} from '../gl-matrix/vec3';\n\n// eslint-disable-next-line no-shadow\nenum INDICES {\n  COL0ROW0 = 0,\n  COL0ROW1 = 1,\n  COL0ROW2 = 2,\n  COL1ROW0 = 3,\n  COL1ROW1 = 4,\n  COL1ROW2 = 5,\n  COL2ROW0 = 6,\n  COL2ROW1 = 7,\n  COL2ROW2 = 8\n}\n\nconst IDENTITY_MATRIX = Object.freeze([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n\n/** Helper type that captures array length for a 3x3 matrix */\nexport type Matrix3Like = Matrix3 | NumericArray9;\n\n/**\n * A 3x3 matrix with common linear algebra operations\n * Subclass of Array<number> meaning that it is highly compatible with other libraries\n */\nexport class Matrix3 extends Matrix {\n  static get IDENTITY(): Readonly<Matrix3> {\n    return getIdentityMatrix();\n  }\n\n  static get ZERO(): Readonly<Matrix3> {\n    return getZeroMatrix();\n  }\n\n  get ELEMENTS(): number {\n    return 9;\n  }\n\n  get RANK(): number {\n    return 3;\n  }\n\n  get INDICES(): typeof INDICES {\n    return INDICES;\n  }\n\n  constructor(array?: Readonly<NumericArray>);\n  /** @deprecated */\n  constructor(...args: number[]);\n\n  constructor(array?: number | Readonly<NumericArray>, ...args: number[]) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0);\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else if (args.length > 0) {\n      this.copy([array as number, ...args]);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array: Readonly<NumericArray>): this {\n    // Element wise copy for performance\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    return this.check();\n  }\n\n  // Constructors\n\n  identity(): this {\n    return this.copy(IDENTITY_MATRIX);\n  }\n\n  /**\n   *\n   * @param object\n   * @returns self\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  fromObject(object: {[key: string]: any}): this {\n    return this.check();\n  }\n\n  /** Calculates a 3x3 matrix from the given quaternion\n   * q quat  Quaternion to create matrix from\n   */\n  fromQuaternion(q: Readonly<NumericArray>): this {\n    mat3_fromQuat(this, q);\n    return this.check();\n  }\n\n  /**\n   * accepts column major order, stores in column major order\n   */\n  // eslint-disable-next-line max-params\n  set(\n    m00: number,\n    m10: number,\n    m20: number,\n    m01: number,\n    m11: number,\n    m21: number,\n    m02: number,\n    m12: number,\n    m22: number\n  ): this {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  /**\n   * accepts row major order, stores as column major\n   */\n  // eslint-disable-next-line max-params\n  setRowMajor(\n    m00: number,\n    m01: number,\n    m02: number,\n    m10: number,\n    m11: number,\n    m12: number,\n    m20: number,\n    m21: number,\n    m22: number\n  ): this {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  // Accessors\n\n  determinant(): number {\n    return mat3_determinant(this);\n  }\n\n  // Modifiers\n  transpose(): this {\n    mat3_transpose(this, this);\n    return this.check();\n  }\n\n  /** Invert a matrix. Note that this can fail if the matrix is not invertible */\n  invert(): this {\n    mat3_invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n  multiplyLeft(a: NumericArray): this {\n    mat3_multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a: NumericArray): this {\n    mat3_multiply(this, this, a);\n    return this.check();\n  }\n\n  rotate(radians: number): this {\n    mat3_rotate(this, this, radians);\n    return this.check();\n  }\n\n  override scale(factor: NumericArray | number): this {\n    if (Array.isArray(factor)) {\n      mat3_scale(this, this, factor);\n    } else {\n      mat3_scale(this, this, [factor as number, factor as number]);\n    }\n    return this.check();\n  }\n\n  translate(vec: NumericArray): this {\n    mat3_translate(this, this, vec);\n    return this.check();\n  }\n\n  // Transforms\n  transform(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    let out: NumericArray;\n    switch (vector.length) {\n      case 2:\n        out = vec2_transformMat3(result || [-0, -0], vector, this) as NumericArray;\n        break;\n      case 3:\n        out = vec3_transformMat3(result || [-0, -0, -0], vector, this) as NumericArray;\n        break;\n      case 4:\n        out = vec4_transformMat3(result || [-0, -0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(out, vector.length);\n    return out;\n  }\n\n  /** @deprecated */\n  transformVector(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transform(vector, result);\n  }\n\n  /** @deprecated */\n  transformVector2(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transform(vector, result);\n  }\n\n  /** @deprecated */\n  transformVector3(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transform(vector, result);\n  }\n}\n\nlet ZERO_MATRIX3: Matrix3 | null;\nlet IDENTITY_MATRIX3: Matrix3 | null = null;\n\nfunction getZeroMatrix(): Readonly<Matrix3> {\n  if (!ZERO_MATRIX3) {\n    ZERO_MATRIX3 = new Matrix3([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    Object.freeze(ZERO_MATRIX3);\n  }\n  return ZERO_MATRIX3;\n}\n\nfunction getIdentityMatrix(): Matrix3 {\n  if (!IDENTITY_MATRIX3) {\n    IDENTITY_MATRIX3 = new Matrix3();\n    Object.freeze(IDENTITY_MATRIX3);\n  }\n  return IDENTITY_MATRIX3;\n}\n", "// @eslint-disable\n// @ts-nocheck\n\nimport * as glMatrix from './common.js';\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns a new 4x4 matrix\n */\nexport function create() {\n  const out = new glMatrix.ARRAY_TYPE(16);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nexport function clone(a) {\n  const out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nexport function fromValues(\n  m00,\n  m01,\n  m02,\n  m03,\n  m10,\n  m11,\n  m12,\n  m13,\n  m20,\n  m21,\n  m22,\n  m23,\n  m30,\n  m31,\n  m32,\n  m33\n) {\n  const out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nexport function set(\n  out,\n  m00,\n  m01,\n  m02,\n  m03,\n  m10,\n  m11,\n  m12,\n  m13,\n  m20,\n  m21,\n  m22,\n  m23,\n  m30,\n  m31,\n  m32,\n  m33\n) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a23 = a[11];\n\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[4];\n  const a11 = a[5];\n  const a12 = a[6];\n  const a13 = a[7];\n  const a20 = a[8];\n  const a21 = a[9];\n  const a22 = a[10];\n  const a23 = a[11];\n  const a30 = a[12];\n  const a31 = a[13];\n  const a32 = a[14];\n  const a33 = a[15];\n\n  const b00 = a00 * a11 - a01 * a10;\n  const b01 = a00 * a12 - a02 * a10;\n  const b02 = a00 * a13 - a03 * a10;\n  const b03 = a01 * a12 - a02 * a11;\n  const b04 = a01 * a13 - a03 * a11;\n  const b05 = a02 * a13 - a03 * a12;\n  const b06 = a20 * a31 - a21 * a30;\n  const b07 = a20 * a32 - a22 * a30;\n  const b08 = a20 * a33 - a23 * a30;\n  const b09 = a21 * a32 - a22 * a31;\n  const b10 = a21 * a33 - a23 * a31;\n  const b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function adjoint(out, a) {\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[4];\n  const a11 = a[5];\n  const a12 = a[6];\n  const a13 = a[7];\n  const a20 = a[8];\n  const a21 = a[9];\n  const a22 = a[10];\n  const a23 = a[11];\n  const a30 = a[12];\n  const a31 = a[13];\n  const a32 = a[14];\n  const a33 = a[15];\n\n  const b00 = a00 * a11 - a01 * a10;\n  const b01 = a00 * a12 - a02 * a10;\n  const b02 = a00 * a13 - a03 * a10;\n  const b03 = a01 * a12 - a02 * a11;\n  const b04 = a01 * a13 - a03 * a11;\n  const b05 = a02 * a13 - a03 * a12;\n  const b06 = a20 * a31 - a21 * a30;\n  const b07 = a20 * a32 - a22 * a30;\n  const b08 = a20 * a33 - a23 * a30;\n  const b09 = a21 * a32 - a22 * a31;\n  const b10 = a21 * a33 - a23 * a31;\n  const b11 = a22 * a33 - a23 * a32;\n\n  out[0] = a11 * b11 - a12 * b10 + a13 * b09;\n  out[1] = a02 * b10 - a01 * b11 - a03 * b09;\n  out[2] = a31 * b05 - a32 * b04 + a33 * b03;\n  out[3] = a22 * b04 - a21 * b05 - a23 * b03;\n  out[4] = a12 * b08 - a10 * b11 - a13 * b07;\n  out[5] = a00 * b11 - a02 * b08 + a03 * b07;\n  out[6] = a32 * b02 - a30 * b05 - a33 * b01;\n  out[7] = a20 * b05 - a22 * b02 + a23 * b01;\n  out[8] = a10 * b10 - a11 * b08 + a13 * b06;\n  out[9] = a01 * b08 - a00 * b10 - a03 * b06;\n  out[10] = a30 * b04 - a31 * b02 + a33 * b00;\n  out[11] = a21 * b02 - a20 * b04 - a23 * b00;\n  out[12] = a11 * b07 - a10 * b09 - a12 * b06;\n  out[13] = a00 * b09 - a01 * b07 + a02 * b06;\n  out[14] = a31 * b01 - a30 * b03 - a32 * b00;\n  out[15] = a20 * b03 - a21 * b01 + a22 * b00;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[4];\n  const a11 = a[5];\n  const a12 = a[6];\n  const a13 = a[7];\n  const a20 = a[8];\n  const a21 = a[9];\n  const a22 = a[10];\n  const a23 = a[11];\n  const a30 = a[12];\n  const a31 = a[13];\n  const a32 = a[14];\n  const a33 = a[15];\n\n  const b0 = a00 * a11 - a01 * a10;\n  const b1 = a00 * a12 - a02 * a10;\n  const b2 = a01 * a12 - a02 * a11;\n  const b3 = a20 * a31 - a21 * a30;\n  const b4 = a20 * a32 - a22 * a30;\n  const b5 = a21 * a32 - a22 * a31;\n  const b6 = a00 * b5 - a01 * b4 + a02 * b3;\n  const b7 = a10 * b5 - a11 * b4 + a12 * b3;\n  const b8 = a20 * b2 - a21 * b1 + a22 * b0;\n  const b9 = a30 * b2 - a31 * b1 + a32 * b0;\n\n  // Calculate the determinant\n  return a13 * b6 - a03 * b7 + a33 * b8 - a23 * b9;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[4];\n  const a11 = a[5];\n  const a12 = a[6];\n  const a13 = a[7];\n  const a20 = a[8];\n  const a21 = a[9];\n  const a22 = a[10];\n  const a23 = a[11];\n  const a30 = a[12];\n  const a31 = a[13];\n  const a32 = a[14];\n  const a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  let b0 = b[0];\n  let b1 = b[1];\n  let b2 = b[2];\n  let b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n  const x = v[0];\n  const y = v[1];\n  const z = v[2];\n  let a00;\n  let a01;\n  let a02;\n  let a03;\n  let a10;\n  let a11;\n  let a12;\n  let a13;\n  let a20;\n  let a21;\n  let a22;\n  let a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n  const x = v[0];\n  const y = v[1];\n  const z = v[2];\n\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let c;\n  let s;\n  let t;\n  let a00;\n  let a01;\n  let a02;\n  let a03;\n  let a10;\n  let a11;\n  let a12;\n  let a13;\n  let a20;\n  let a21;\n  let a22;\n  let a23;\n  let b00;\n  let b01;\n  let b02;\n  let b10;\n  let b11;\n  let b12;\n  let b20;\n  let b21;\n  let b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateX(out, a, rad) {\n  const s = Math.sin(rad);\n  const c = Math.cos(rad);\n  const a10 = a[4];\n  const a11 = a[5];\n  const a12 = a[6];\n  const a13 = a[7];\n  const a20 = a[8];\n  const a21 = a[9];\n  const a22 = a[10];\n  const a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateY(out, a, rad) {\n  const s = Math.sin(rad);\n  const c = Math.cos(rad);\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a20 = a[8];\n  const a21 = a[9];\n  const a22 = a[10];\n  const a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateZ(out, a, rad) {\n  const s = Math.sin(rad);\n  const c = Math.cos(rad);\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[4];\n  const a11 = a[5];\n  const a12 = a[6];\n  const a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function fromRotation(out, rad, axis) {\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let c;\n  let s;\n  let t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromXRotation(out, rad) {\n  const s = Math.sin(rad);\n  const c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromYRotation(out, rad) {\n  const s = Math.sin(rad);\n  const c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromZRotation(out, rad) {\n  const s = Math.sin(rad);\n  const c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  const x = q[0];\n  const y = q[1];\n  const z = q[2];\n  const w = q[3];\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n\n  const xx = x * x2;\n  const xy = x * y2;\n  const xz = x * z2;\n  const yy = y * y2;\n  const yz = y * z2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\nexport function fromQuat2(out, a) {\n  const translation = new glMatrix.ARRAY_TYPE(3);\n  const bx = -a[0];\n  const by = -a[1];\n  const bz = -a[2];\n  const bw = a[3];\n  const ax = a[4];\n  const ay = a[5];\n  const az = a[6];\n  const aw = a[7];\n\n  const magnitude = bx * bx + by * by + bz * bz + bw * bw;\n  // Only scale if it makes sense\n  if (magnitude > 0) {\n    translation[0] = ((ax * bw + aw * bx + ay * bz - az * by) * 2) / magnitude;\n    translation[1] = ((ay * bw + aw * by + az * bx - ax * bz) * 2) / magnitude;\n    translation[2] = ((az * bw + aw * bz + ax * by - ay * bx) * 2) / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n  const m11 = mat[0];\n  const m12 = mat[1];\n  const m13 = mat[2];\n  const m21 = mat[4];\n  const m22 = mat[5];\n  const m23 = mat[6];\n  const m31 = mat[8];\n  const m32 = mat[9];\n  const m33 = mat[10];\n\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport function getRotation(out, mat) {\n  const scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n\n  const is1 = 1 / scaling[0];\n  const is2 = 1 / scaling[1];\n  const is3 = 1 / scaling[2];\n\n  const sm11 = mat[0] * is1;\n  const sm12 = mat[1] * is2;\n  const sm13 = mat[2] * is3;\n  const sm21 = mat[4] * is1;\n  const sm22 = mat[5] * is2;\n  const sm23 = mat[6] * is3;\n  const sm31 = mat[8] * is1;\n  const sm32 = mat[9] * is2;\n  const sm33 = mat[10] * is3;\n\n  const trace = sm11 + sm22 + sm33;\n  let S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/**\n * Decomposes a transformation matrix into its rotation, translation\n * and scale components. Returns only the rotation component\n * @param  {quat} out_r Quaternion to receive the rotation component\n * @param  {vec3} out_t Vector to receive the translation vector\n * @param  {vec3} out_s Vector to receive the scaling factor\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @returns {quat} out_r\n */\nexport function decompose(out_r, out_t, out_s, mat) {\n  out_t[0] = mat[12];\n  out_t[1] = mat[13];\n  out_t[2] = mat[14];\n\n  const m11 = mat[0];\n  const m12 = mat[1];\n  const m13 = mat[2];\n  const m21 = mat[4];\n  const m22 = mat[5];\n  const m23 = mat[6];\n  const m31 = mat[8];\n  const m32 = mat[9];\n  const m33 = mat[10];\n\n  out_s[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out_s[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out_s[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  const is1 = 1 / out_s[0];\n  const is2 = 1 / out_s[1];\n  const is3 = 1 / out_s[2];\n\n  const sm11 = m11 * is1;\n  const sm12 = m12 * is2;\n  const sm13 = m13 * is3;\n  const sm21 = m21 * is1;\n  const sm22 = m22 * is2;\n  const sm23 = m23 * is3;\n  const sm31 = m31 * is1;\n  const sm32 = m32 * is2;\n  const sm33 = m33 * is3;\n\n  const trace = sm11 + sm22 + sm33;\n  let S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out_r[3] = 0.25 * S;\n    out_r[0] = (sm23 - sm32) / S;\n    out_r[1] = (sm31 - sm13) / S;\n    out_r[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out_r[3] = (sm23 - sm32) / S;\n    out_r[0] = 0.25 * S;\n    out_r[1] = (sm12 + sm21) / S;\n    out_r[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out_r[3] = (sm31 - sm13) / S;\n    out_r[0] = (sm12 + sm21) / S;\n    out_r[1] = 0.25 * S;\n    out_r[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out_r[3] = (sm12 - sm21) / S;\n    out_r[0] = (sm31 + sm13) / S;\n    out_r[1] = (sm23 + sm32) / S;\n    out_r[2] = 0.25 * S;\n  }\n\n  return out_r;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  const x = q[0];\n  const y = q[1];\n  const z = q[2];\n  const w = q[3];\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n\n  const xx = x * x2;\n  const xy = x * y2;\n  const xz = x * z2;\n  const yy = y * y2;\n  const yz = y * z2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n  const sx = s[0];\n  const sy = s[1];\n  const sz = s[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  const x = q[0];\n  const y = q[1];\n  const z = q[2];\n  const w = q[3];\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n\n  const xx = x * x2;\n  const xy = x * y2;\n  const xz = x * z2;\n  const yy = y * y2;\n  const yz = y * z2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n\n  const sx = s[0];\n  const sy = s[1];\n  const sz = s[2];\n\n  const ox = o[0];\n  const oy = o[1];\n  const oz = o[2];\n\n  const out0 = (1 - (yy + zz)) * sx;\n  const out1 = (xy + wz) * sx;\n  const out2 = (xz - wy) * sx;\n  const out4 = (xy - wz) * sy;\n  const out5 = (1 - (xx + zz)) * sy;\n  const out6 = (yz + wx) * sy;\n  const out8 = (xz + wy) * sz;\n  const out9 = (yz - wx) * sz;\n  const out10 = (1 - (xx + yy)) * sz;\n\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n  const x = q[0];\n  const y = q[1];\n  const z = q[2];\n  const w = q[3];\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n\n  const xx = x * x2;\n  const yx = y * x2;\n  const yy = y * y2;\n  const zx = z * x2;\n  const zy = z * y2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function frustum(out, left, right, bottom, top, near, far) {\n  const rl = 1 / (right - left);\n  const tb = 1 / (top - bottom);\n  const nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  const f = 1.0 / Math.tan(fovy / 2);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n  if (far != null && far !== Infinity) {\n    const nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n  return out;\n}\n\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\nexport const perspective = perspectiveNO;\n\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  const f = 1.0 / Math.tan(fovy / 2);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n  if (far != null && far !== Infinity) {\n    const nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  const upTan = Math.tan((fov.upDegrees * Math.PI) / 180.0);\n  const downTan = Math.tan((fov.downDegrees * Math.PI) / 180.0);\n  const leftTan = Math.tan((fov.leftDegrees * Math.PI) / 180.0);\n  const rightTan = Math.tan((fov.rightDegrees * Math.PI) / 180.0);\n  const xScale = 2.0 / (leftTan + rightTan);\n  const yScale = 2.0 / (upTan + downTan);\n\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = (far * near) / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  const lr = 1 / (left - right);\n  const bt = 1 / (bottom - top);\n  const nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\nexport const ortho = orthoNO;\n\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  const lr = 1 / (left - right);\n  const bt = 1 / (bottom - top);\n  const nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function lookAt(out, eye, center, up) {\n  let len;\n  let x0;\n  let x1;\n  let x2;\n  let y0;\n  let y1;\n  let y2;\n  let z0;\n  let z1;\n  let z2;\n  const eyex = eye[0];\n  const eyey = eye[1];\n  const eyez = eye[2];\n  const upx = up[0];\n  const upy = up[1];\n  const upz = up[2];\n  const centerx = center[0];\n  const centery = center[1];\n  const centerz = center[2];\n\n  if (\n    Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n    Math.abs(eyey - centery) < glMatrix.EPSILON &&\n    Math.abs(eyez - centerz) < glMatrix.EPSILON\n  ) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n  const eyex = eye[0];\n  const eyey = eye[1];\n  const eyez = eye[2];\n  const upx = up[0];\n  const upy = up[1];\n  const upz = up[2];\n\n  let z0 = eyex - target[0];\n  let z1 = eyey - target[1];\n  let z2 = eyez - target[2];\n\n  let len = z0 * z0 + z1 * z1 + z2 * z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  let x0 = upy * z2 - upz * z1;\n  let x1 = upz * z0 - upx * z2;\n  let x2 = upx * z1 - upy * z0;\n\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return `mat4(${a[0]}, ${a[1]}, ${a[2]}, ${a[3]}, ${a[4]}, ${a[5]}, ${a[6]}, ${a[7]}, ${a[8]}, ${a[9]}, ${a[10]}, ${a[11]}, ${a[12]}, ${a[13]}, ${a[14]}, ${a[15]})`;\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return Math.sqrt(\n    a[0] * a[0] +\n      a[1] * a[1] +\n      a[2] * a[2] +\n      a[3] * a[3] +\n      a[4] * a[4] +\n      a[5] * a[5] +\n      a[6] * a[6] +\n      a[7] * a[7] +\n      a[8] * a[8] +\n      a[9] * a[9] +\n      a[10] * a[10] +\n      a[11] * a[11] +\n      a[12] * a[12] +\n      a[13] * a[13] +\n      a[14] * a[14] +\n      a[15] * a[15]\n  );\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return (\n    a[0] === b[0] &&\n    a[1] === b[1] &&\n    a[2] === b[2] &&\n    a[3] === b[3] &&\n    a[4] === b[4] &&\n    a[5] === b[5] &&\n    a[6] === b[6] &&\n    a[7] === b[7] &&\n    a[8] === b[8] &&\n    a[9] === b[9] &&\n    a[10] === b[10] &&\n    a[11] === b[11] &&\n    a[12] === b[12] &&\n    a[13] === b[13] &&\n    a[14] === b[14] &&\n    a[15] === b[15]\n  );\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  const a0 = a[0];\n  const a1 = a[1];\n  const a2 = a[2];\n  const a3 = a[3];\n  const a4 = a[4];\n  const a5 = a[5];\n  const a6 = a[6];\n  const a7 = a[7];\n  const a8 = a[8];\n  const a9 = a[9];\n  const a10 = a[10];\n  const a11 = a[11];\n  const a12 = a[12];\n  const a13 = a[13];\n  const a14 = a[14];\n  const a15 = a[15];\n\n  const b0 = b[0];\n  const b1 = b[1];\n  const b2 = b[2];\n  const b3 = b[3];\n  const b4 = b[4];\n  const b5 = b[5];\n  const b6 = b[6];\n  const b7 = b[7];\n  const b8 = b[8];\n  const b9 = b[9];\n  const b10 = b[10];\n  const b11 = b[11];\n  const b12 = b[12];\n  const b13 = b[13];\n  const b14 = b[14];\n  const b15 = b[15];\n\n  return (\n    Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n    Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n    Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n    Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n    Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n    Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n    Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n    Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n    Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\n    Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\n    Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\n    Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\n    Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\n    Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\n    Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\n    Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15))\n  );\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nexport const sub = subtract;\n", "// @eslint-disable\n// @ts-nocheck\n\nimport * as glMatrix from './common.js';\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  const out = new glMatrix.ARRAY_TYPE(4);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  const out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  const out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  out[2] = glMatrix.round(a[2]);\n  out[3] = glMatrix.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  const x = b[0] - a[0];\n  const y = b[1] - a[1];\n  const z = b[2] - a[2];\n  const w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  const x = b[0] - a[0];\n  const y = b[1] - a[1];\n  const z = b[2] - a[2];\n  const w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = a[3];\n  let len = x * x + y * y + z * z + w * w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\nexport function cross(out, u, v, w) {\n  const A = v[0] * w[1] - v[1] * w[0];\n  const B = v[0] * w[2] - v[2] * w[0];\n  const C = v[0] * w[3] - v[3] * w[0];\n  const D = v[1] * w[2] - v[2] * w[1];\n  const E = v[1] * w[3] - v[3] * w[1];\n  const F = v[2] * w[3] - v[3] * w[2];\n  const G = u[0];\n  const H = u[1];\n  const I = u[2];\n  const J = u[3];\n\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  const ax = a[0];\n  const ay = a[1];\n  const az = a[2];\n  const aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n\n  // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n  let v1;\n  let v2;\n  let v3;\n  let v4;\n  let s1;\n  let s2;\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  const d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const qx = q[0];\n  const qy = q[1];\n  const qz = q[2];\n  const qw = q[3];\n\n  // calculate quat * vec\n  const ix = qw * x + qy * z - qz * y;\n  const iy = qw * y + qz * x - qx * z;\n  const iz = qw * z + qx * y - qy * x;\n  const iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return `vec4(${a[0]}, ${a[1]}, ${a[2]}, ${a[3]})`;\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  const a0 = a[0];\n  const a1 = a[1];\n  const a2 = a[2];\n  const a3 = a[3];\n  const b0 = b[0];\n  const b1 = b[1];\n  const b2 = b[2];\n  const b3 = b[3];\n  return (\n    Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n    Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n    Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n    Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3))\n  );\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function () {\n  const vec = create();\n\n  return function (a, stride, offset, count, fn, arg) {\n    let i;\n    let l;\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n})();\n", "// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Copyright (c) 2017 Uber Technologies, Inc.\n\nimport {NumericArray, NumericArray16} from '@math.gl/types';\nimport {Matrix} from './base/matrix';\nimport {checkVector} from '../lib/validators';\n\n/* eslint-disable camelcase */\nimport {vec2_transformMat4AsVector, vec3_transformMat4AsVector} from '../lib/gl-matrix-extras';\n// @ts-ignore gl-matrix types...\nimport {\n  fromQuat as mat4_fromQuat,\n  frustum as mat4_frustum,\n  lookAt as mat4_lookAt,\n  ortho as mat4_ortho,\n  perspective as mat4_perspective,\n  determinant as mat4_determinant,\n  transpose as mat4_transpose,\n  invert as mat4_invert,\n  multiply as mat4_multiply,\n  rotateX as mat4_rotateX,\n  rotateY as mat4_rotateY,\n  rotateZ as mat4_rotateZ,\n  rotate as mat4_rotate,\n  scale as mat4_scale,\n  translate as mat4_translate\n} from '../gl-matrix/mat4';\nimport {transformMat4 as vec2_transformMat4} from '../gl-matrix/vec2';\nimport {transformMat4 as vec3_transformMat4} from '../gl-matrix/vec3';\nimport {transformMat4 as vec4_transformMat4} from '../gl-matrix/vec4';\n\n// eslint-disable-next-line no-shadow\nenum INDICES {\n  COL0ROW0 = 0,\n  COL0ROW1 = 1,\n  COL0ROW2 = 2,\n  COL0ROW3 = 3,\n  COL1ROW0 = 4,\n  COL1ROW1 = 5,\n  COL1ROW2 = 6,\n  COL1ROW3 = 7,\n  COL2ROW0 = 8,\n  COL2ROW1 = 9,\n  COL2ROW2 = 10,\n  COL2ROW3 = 11,\n  COL3ROW0 = 12,\n  COL3ROW1 = 13,\n  COL3ROW2 = 14,\n  COL3ROW3 = 15\n}\n\nconst DEFAULT_FOVY = (45 * Math.PI) / 180;\nconst DEFAULT_ASPECT = 1;\nconst DEFAULT_NEAR = 0.1;\nconst DEFAULT_FAR = 500;\n\nconst IDENTITY_MATRIX = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n\n/** Helper type that captures array length for a 4x4 matrix */\nexport type Matrix4Like = Matrix4 | NumericArray16;\n\n/**\n * A 4x4 matrix with common linear algebra operations\n * Subclass of Array<number> meaning that it is highly compatible with other libraries\n */\nexport class Matrix4 extends Matrix {\n  static get IDENTITY(): Readonly<Matrix4> {\n    return getIdentityMatrix();\n  }\n\n  static get ZERO(): Readonly<Matrix4> {\n    return getZeroMatrix();\n  }\n\n  get ELEMENTS(): number {\n    return 16;\n  }\n\n  get RANK(): number {\n    return 4;\n  }\n\n  get INDICES(): typeof INDICES {\n    return INDICES;\n  }\n\n  constructor(array?: Readonly<NumericArray>) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0);\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array: Readonly<NumericArray>): this {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    this[9] = array[9];\n    this[10] = array[10];\n    this[11] = array[11];\n    this[12] = array[12];\n    this[13] = array[13];\n    this[14] = array[14];\n    this[15] = array[15];\n    return this.check();\n  }\n\n  // eslint-disable-next-line max-params\n  set(\n    m00: number,\n    m10: number,\n    m20: number,\n    m30: number,\n    m01: number,\n    m11: number,\n    m21: number,\n    m31: number,\n    m02: number,\n    m12: number,\n    m22: number,\n    m32: number,\n    m03: number,\n    m13: number,\n    m23: number,\n    m33: number\n  ): this {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  // accepts row major order, stores as column major\n  // eslint-disable-next-line max-params\n  setRowMajor(\n    m00: number,\n    m01: number,\n    m02: number,\n    m03: number,\n    m10: number,\n    m11: number,\n    m12: number,\n    m13: number,\n    m20: number,\n    m21: number,\n    m22: number,\n    m23: number,\n    m30: number,\n    m31: number,\n    m32: number,\n    m33: number\n  ): this {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  toRowMajor(result: NumericArray): NumericArray {\n    result[0] = this[0];\n    result[1] = this[4];\n    result[2] = this[8];\n    result[3] = this[12];\n    result[4] = this[1];\n    result[5] = this[5];\n    result[6] = this[9];\n    result[7] = this[13];\n    result[8] = this[2];\n    result[9] = this[6];\n    result[10] = this[10];\n    result[11] = this[14];\n    result[12] = this[3];\n    result[13] = this[7];\n    result[14] = this[11];\n    result[15] = this[15];\n    return result;\n  }\n\n  // Constructors\n\n  /** Set to identity matrix */\n  identity(): this {\n    return this.copy(IDENTITY_MATRIX);\n  }\n\n  /**\n   *\n   * @param object\n   * @returns self\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  fromObject(object: {[key: string]: any}): this {\n    return this.check();\n  }\n\n  /**\n   * Calculates a 4x4 matrix from the given quaternion\n   * @param quaternion Quaternion to create matrix from\n   * @returns self\n   */\n  fromQuaternion(quaternion: Readonly<NumericArray>): this {\n    mat4_fromQuat(this, quaternion);\n    return this.check();\n  }\n\n  /**\n   * Generates a frustum matrix with the given bounds\n   * @param view.left - Left bound of the frustum\n   * @param view.right - Right bound of the frustum\n   * @param view.bottom - Bottom bound of the frustum\n   * @param view.top - Top bound of the frustum\n   * @param view.near - Near bound of the frustum\n   * @param view.far - Far bound of the frustum. Can be set to Infinity.\n   * @returns self\n   */\n  frustum(view: {\n    left: number;\n    right: number;\n    bottom: number;\n    top: number;\n    near: number;\n    far?: number;\n  }): this {\n    const {left, right, bottom, top, near = DEFAULT_NEAR, far = DEFAULT_FAR} = view;\n    if (far === Infinity) {\n      computeInfinitePerspectiveOffCenter(this, left, right, bottom, top, near);\n    } else {\n      mat4_frustum(this, left, right, bottom, top, near, far);\n    }\n    return this.check();\n  }\n\n  /**\n   * Generates a look-at matrix with the given eye position, focal point,\n   * and up axis\n   * @param view.eye - (vector) Position of the viewer\n   * @param view.center - (vector) Point the viewer is looking at\n   * @param view.up - (vector) Up axis\n   * @returns self\n   */\n  lookAt(view: {\n    eye: Readonly<NumericArray>;\n    center?: Readonly<NumericArray>;\n    up?: Readonly<NumericArray>;\n  }): this {\n    const {eye, center = [0, 0, 0], up = [0, 1, 0]} = view;\n    mat4_lookAt(this, eye, center, up);\n    return this.check();\n  }\n\n  /**\n   * Generates a orthogonal projection matrix with the given bounds\n   * from \"traditional\" view space parameters\n   * @param view.left - Left bound of the frustum\n   * @param view.right number  Right bound of the frustum\n   * @param view.bottom - Bottom bound of the frustum\n   * @param view.top number  Top bound of the frustum\n   * @param view.near - Near bound of the frustum\n   * @param view.far number  Far bound of the frustum\n   * @returns self\n   */\n  ortho(view: {\n    left: number;\n    right: number;\n    bottom: number;\n    top: number;\n    near?: number;\n    far?: number;\n  }): this {\n    const {left, right, bottom, top, near = DEFAULT_NEAR, far = DEFAULT_FAR} = view;\n    mat4_ortho(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  /**\n   * Generates an orthogonal projection matrix with the same parameters\n   * as a perspective matrix (plus focalDistance)\n   * @param view.fovy Vertical field of view in radians\n   * @param view.aspect Aspect ratio. Typically viewport width / viewport height\n   * @param view.focalDistance Distance in the view frustum used for extent calculations\n   * @param view.near Near bound of the frustum\n   * @param view.far Far bound of the frustum\n   * @returns self\n   */\n  orthographic(view: {\n    fovy?: number;\n    aspect?: number;\n    focalDistance?: number;\n    near?: number;\n    far?: number;\n  }): this {\n    const {\n      fovy = DEFAULT_FOVY,\n      aspect = DEFAULT_ASPECT,\n      focalDistance = 1,\n      near = DEFAULT_NEAR,\n      far = DEFAULT_FAR\n    } = view;\n\n    checkRadians(fovy);\n\n    const halfY = fovy / 2;\n    const top = focalDistance * Math.tan(halfY); // focus_plane is the distance from the camera\n    const right = top * aspect;\n\n    return this.ortho({\n      left: -right,\n      right,\n      bottom: -top,\n      top,\n      near,\n      far\n    });\n  }\n\n  /**\n   * Generates a perspective projection matrix with the given bounds\n   * @param view.fovy Vertical field of view in radians\n   * @param view.aspect Aspect ratio. typically viewport width/height\n   * @param view.near Near bound of the frustum\n   * @param view.far Far bound of the frustum\n   * @returns self\n   */\n  perspective(view: {fovy: number; aspect?: number; near?: number; far?: number}): this {\n    const {fovy = (45 * Math.PI) / 180, aspect = 1, near = 0.1, far = 500} = view;\n    checkRadians(fovy);\n    mat4_perspective(this, fovy, aspect, near, far);\n    return this.check();\n  }\n\n  // Accessors\n\n  determinant(): number {\n    return mat4_determinant(this);\n  }\n\n  /**\n   * Extracts the non-uniform scale assuming the matrix is an affine transformation.\n   * The scales are the \"lengths\" of the column vectors in the upper-left 3x3 matrix.\n   * @param result\n   * @returns self\n   */\n  getScale(result: NumericArray = [-0, -0, -0]): NumericArray {\n    // explicit is faster than hypot...\n    result[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]);\n    result[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]);\n    result[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]);\n    // result[0] = Math.hypot(this[0], this[1], this[2]);\n    // result[1] = Math.hypot(this[4], this[5], this[6]);\n    // result[2] = Math.hypot(this[8], this[9], this[10]);\n    return result;\n  }\n\n  /**\n   * Gets the translation portion, assuming the matrix is a affine transformation matrix.\n   * @param result\n   * @returns self\n   */\n  getTranslation(result: NumericArray = [-0, -0, -0]): NumericArray {\n    result[0] = this[12];\n    result[1] = this[13];\n    result[2] = this[14];\n    return result;\n  }\n\n  /**\n   * Gets upper left 3x3 pure rotation matrix (non-scaling), assume affine transformation matrix\n   * @param result\n   * @param scaleResult\n   * @returns self\n   */\n  getRotation(result?: NumericArray, scaleResult?: NumericArray): NumericArray {\n    result = result || [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0];\n    scaleResult = scaleResult || [-0, -0, -0];\n    const scale = this.getScale(scaleResult);\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = 0;\n    result[4] = this[4] * inverseScale0;\n    result[5] = this[5] * inverseScale1;\n    result[6] = this[6] * inverseScale2;\n    result[7] = 0;\n    result[8] = this[8] * inverseScale0;\n    result[9] = this[9] * inverseScale1;\n    result[10] = this[10] * inverseScale2;\n    result[11] = 0;\n    result[12] = 0;\n    result[13] = 0;\n    result[14] = 0;\n    result[15] = 1;\n    return result;\n  }\n\n  /**\n   *\n   * @param result\n   * @param scaleResult\n   * @returns self\n   */\n  getRotationMatrix3(result?: NumericArray, scaleResult?: NumericArray): NumericArray {\n    result = result || [-0, -0, -0, -0, -0, -0, -0, -0, -0];\n    scaleResult = scaleResult || [-0, -0, -0];\n    const scale = this.getScale(scaleResult);\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = this[4] * inverseScale0;\n    result[4] = this[5] * inverseScale1;\n    result[5] = this[6] * inverseScale2;\n    result[6] = this[8] * inverseScale0;\n    result[7] = this[9] * inverseScale1;\n    result[8] = this[10] * inverseScale2;\n    return result;\n  }\n\n  // Modifiers\n\n  transpose(): this {\n    mat4_transpose(this, this);\n    return this.check();\n  }\n\n  invert(): this {\n    mat4_invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n\n  multiplyLeft(a: Readonly<NumericArray>): this {\n    mat4_multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a: Readonly<NumericArray>): this {\n    mat4_multiply(this, this, a);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the X axis\n  rotateX(radians: number): this {\n    mat4_rotateX(this, this, radians);\n    // mat4_rotate(this, this, radians, [1, 0, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Y axis.\n  rotateY(radians: number): this {\n    mat4_rotateY(this, this, radians);\n    // mat4_rotate(this, this, radians, [0, 1, 0]);\n    return this.check();\n  }\n\n  /**\n   * Rotates a matrix by the given angle around the Z axis.\n   * @param radians\n   * @returns self\n   */\n  rotateZ(radians: number): this {\n    mat4_rotateZ(this, this, radians);\n    // mat4_rotate(this, this, radians, [0, 0, 1]);\n    return this.check();\n  }\n\n  /**\n   *\n   * @param param0\n   * @returns self\n   */\n  rotateXYZ(angleXYZ: Readonly<NumericArray>): this {\n    return this.rotateX(angleXYZ[0]).rotateY(angleXYZ[1]).rotateZ(angleXYZ[2]);\n  }\n\n  /**\n   *\n   * @param radians\n   * @param axis\n   * @returns self\n   */\n  rotateAxis(radians: number, axis: Readonly<NumericArray>): this {\n    mat4_rotate(this, this, radians, axis);\n    return this.check();\n  }\n\n  /**\n   *\n   * @param factor\n   * @returns self\n   */\n  override scale(factor: number | Readonly<NumericArray>): this {\n    mat4_scale(this, this, Array.isArray(factor) ? factor : [factor, factor, factor]);\n    return this.check();\n  }\n\n  /**\n   *\n   * @param vec\n   * @returns self\n   */\n  translate(vector: Readonly<NumericArray>): this {\n    mat4_translate(this, this, vector);\n    return this.check();\n  }\n\n  // Transforms\n\n  /**\n   * Transforms any 2, 3 or 4 element vector. 2 and 3 elements are treated as points\n   * @param vector\n   * @param result\n   * @returns self\n   */\n  transform(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    if (vector.length === 4) {\n      result = vec4_transformMat4(result || [-0, -0, -0, -0], vector, this) as NumericArray;\n      checkVector(result, 4);\n      return result;\n    }\n    return this.transformAsPoint(vector, result);\n  }\n\n  /**\n   * Transforms any 2 or 3 element array as point (w implicitly 1)\n   * @param vector\n   * @param result\n   * @returns self\n   */\n  transformAsPoint(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    const {length} = vector;\n    let out: NumericArray;\n    switch (length) {\n      case 2:\n        out = vec2_transformMat4(result || [-0, -0], vector, this) as NumericArray;\n        break;\n      case 3:\n        out = vec3_transformMat4(result || [-0, -0, -0], vector, this) as NumericArray;\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(out, vector.length);\n    return out;\n  }\n\n  /**\n   * Transforms any 2 or 3 element array as vector (w implicitly 0)\n   * @param vector\n   * @param result\n   * @returns self\n   */\n  transformAsVector(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    let out: NumericArray;\n    switch (vector.length) {\n      case 2:\n        out = vec2_transformMat4AsVector(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        out = vec3_transformMat4AsVector(result || [-0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(out, vector.length);\n    return out;\n  }\n\n  /** @deprecated */\n  transformPoint(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transformAsPoint(vector, result);\n  }\n\n  /** @deprecated */\n  transformVector(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transformAsPoint(vector, result);\n  }\n\n  /** @deprecated */\n  transformDirection(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transformAsVector(vector, result);\n  }\n\n  // three.js math API compatibility\n\n  makeRotationX(radians: number): this {\n    return this.identity().rotateX(radians);\n  }\n\n  makeTranslation(x: number, y: number, z: number): this {\n    return this.identity().translate([x, y, z]);\n  }\n}\n\n// TODO initializing static members directly is an option, but make sure no tree-shaking issues\nlet ZERO: Matrix4;\nlet IDENTITY: Matrix4;\n\nfunction getZeroMatrix(): Readonly<Matrix4> {\n  if (!ZERO) {\n    ZERO = new Matrix4([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    Object.freeze(ZERO);\n  }\n  return ZERO;\n}\n\nfunction getIdentityMatrix(): Matrix4 {\n  if (!IDENTITY) {\n    IDENTITY = new Matrix4();\n    Object.freeze(IDENTITY);\n  }\n  return IDENTITY;\n}\n\n// HELPER FUNCTIONS\n\nfunction checkRadians(possiblyDegrees: number) {\n  if (possiblyDegrees > Math.PI * 2) {\n    throw Error('expected radians');\n  }\n}\n\n// eslint-disable-next-line max-params\nfunction computeInfinitePerspectiveOffCenter(\n  result: NumericArray,\n  left: number,\n  right: number,\n  bottom: number,\n  top: number,\n  near: number\n): NumericArray {\n  const column0Row0 = (2 * near) / (right - left);\n  const column1Row1 = (2 * near) / (top - bottom);\n  const column2Row0 = (right + left) / (right - left);\n  const column2Row1 = (top + bottom) / (top - bottom);\n  const column2Row2 = -1;\n  const column2Row3 = -1;\n  const column3Row2 = -2 * near;\n  result[0] = column0Row0;\n  result[1] = 0;\n  result[2] = 0;\n  result[3] = 0;\n  result[4] = 0;\n  result[5] = column1Row1;\n  result[6] = 0;\n  result[7] = 0;\n  result[8] = column2Row0;\n  result[9] = column2Row1;\n  result[10] = column2Row2;\n  result[11] = column2Row3;\n  result[12] = 0;\n  result[13] = 0;\n  result[14] = column3Row2;\n  result[15] = 0;\n  return result;\n}\n", "// @eslint-disable\n// @ts-nocheck\n\nimport * as glMatrix from './common.js';\nimport * as mat3 from './mat3.js';\nimport * as vec3 from './vec3.js';\nimport * as vec4 from './vec4.js';\n\n// const glMatrix: {EPSILON = 0.000001};\n\n/**\n * Quaternion in the format XYZW\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nexport function create() {\n  const out = new glMatrix.ARRAY_TYPE(4);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  const s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nexport function getAxisAngle(out_axis, q) {\n  const rad = Math.acos(q[3]) * 2.0;\n  const s = Math.sin(rad / 2.0);\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\nexport function getAngle(a, b) {\n  const dotproduct = dot(a, b);\n\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n  const ax = a[0];\n  const ay = a[1];\n  const az = a[2];\n  const aw = a[3];\n  const bx = b[0];\n  const by = b[1];\n  const bz = b[2];\n  const bw = b[3];\n\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n\n  const ax = a[0];\n  const ay = a[1];\n  const az = a[2];\n  const aw = a[3];\n  const bx = Math.sin(rad);\n  const bw = Math.cos(rad);\n\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n\n  const ax = a[0];\n  const ay = a[1];\n  const az = a[2];\n  const aw = a[3];\n  const by = Math.sin(rad);\n  const bw = Math.cos(rad);\n\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n\n  const ax = a[0];\n  const ay = a[1];\n  const az = a[2];\n  const aw = a[3];\n  const bz = Math.sin(rad);\n  const bw = Math.cos(rad);\n\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\nexport function calculateW(out, a) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\nexport function exp(out, a) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = a[3];\n\n  const r = Math.sqrt(x * x + y * y + z * z);\n  const et = Math.exp(w);\n  const s = r > 0 ? (et * Math.sin(r)) / r : 0;\n\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n\n  return out;\n}\n\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\nexport function ln(out, a) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = a[3];\n\n  const r = Math.sqrt(x * x + y * y + z * z);\n  const t = r > 0 ? Math.atan2(r, w) / r : 0;\n\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n\n  return out;\n}\n\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  const ax = a[0];\n  const ay = a[1];\n  const az = a[2];\n  const aw = a[3];\n  let bx = b[0];\n  let by = b[1];\n  let bz = b[2];\n  let bw = b[3];\n\n  let cosom;\n  let omega;\n  let scale0;\n  let scale1;\n  let sinom;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  }\n  // calculate coefficients\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n\n  return out;\n}\n\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n// export function random(out) {\n//   // Implementation of http://planning.cs.uiuc.edu/node198.html\n//   // TODO: Calling random 3 times is probably not the fastest solution\n//   let u1 = glMatrix.RANDOM();\n//   let u2 = glMatrix.RANDOM();\n//   let u3 = glMatrix.RANDOM();\n\n//   let sqrt1MinusU1 = Math.sqrt(1 - u1);\n//   let sqrtU1 = Math.sqrt(u1);\n\n//   out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n//   out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n//   out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n//   out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n//   return out;\n// }\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n  const a0 = a[0];\n  const a1 = a[1];\n  const a2 = a[2];\n  const a3 = a[3];\n  const dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  const invDot = dot ? 1.0 / dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  const fTrace = m[0] + m[4] + m[8];\n  let fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    let i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    const j = (i + 1) % 3;\n    const k = (i + 2) % 3;\n\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z using the provided intrinsic order for the conversion.\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x Angle to rotate around X axis in degrees.\n * @param {Number} y Angle to rotate around Y axis in degrees.\n * @param {Number} z Angle to rotate around Z axis in degrees.\n * @param {'zyx'|'xyz'|'yxz'|'yzx'|'zxy'|'zyx'} order Intrinsic order for conversion, default is zyx.\n * @returns {quat} out\n * @function\n */\n// export function fromEuler(out, x, y, z, order = glMatrix.ANGLE_ORDER) {\n//   let halfToRad = Math.PI / 360;\n//   x *= halfToRad;\n//   z *= halfToRad;\n//   y *= halfToRad;\n\n//   let sx = Math.sin(x);\n//   let cx = Math.cos(x);\n//   let sy = Math.sin(y);\n//   let cy = Math.cos(y);\n//   let sz = Math.sin(z);\n//   let cz = Math.cos(z);\n\n//   switch (order) {\n//     case \"xyz\":\n//       out[0] = sx * cy * cz + cx * sy * sz;\n//       out[1] = cx * sy * cz - sx * cy * sz;\n//       out[2] = cx * cy * sz + sx * sy * cz;\n//       out[3] = cx * cy * cz - sx * sy * sz;\n//       break;\n\n//     case \"xzy\":\n//       out[0] = sx * cy * cz - cx * sy * sz;\n//       out[1] = cx * sy * cz - sx * cy * sz;\n//       out[2] = cx * cy * sz + sx * sy * cz;\n//       out[3] = cx * cy * cz + sx * sy * sz;\n//       break;\n\n//     case \"yxz\":\n//       out[0] = sx * cy * cz + cx * sy * sz;\n//       out[1] = cx * sy * cz - sx * cy * sz;\n//       out[2] = cx * cy * sz - sx * sy * cz;\n//       out[3] = cx * cy * cz + sx * sy * sz;\n//       break;\n\n//     case \"yzx\":\n//       out[0] = sx * cy * cz + cx * sy * sz;\n//       out[1] = cx * sy * cz + sx * cy * sz;\n//       out[2] = cx * cy * sz - sx * sy * cz;\n//       out[3] = cx * cy * cz - sx * sy * sz;\n//       break;\n\n//     case \"zxy\":\n//       out[0] = sx * cy * cz - cx * sy * sz;\n//       out[1] = cx * sy * cz + sx * cy * sz;\n//       out[2] = cx * cy * sz + sx * sy * cz;\n//       out[3] = cx * cy * cz - sx * sy * sz;\n//       break;\n\n//     case \"zyx\":\n//       out[0] = sx * cy * cz - cx * sy * sz;\n//       out[1] = cx * sy * cz + sx * cy * sz;\n//       out[2] = cx * cy * sz - sx * sy * cz;\n//       out[3] = cx * cy * cz + sx * sy * sz;\n//       break;\n\n//     default:\n//       throw new Error('Unknown angle order ' + order);\n//   }\n\n//   return out;\n// }\n\n/**\n * Returns a string representation of a quaternion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return `quat(${a[0]}, ${a[1]}, ${a[2]}, ${a[3]})`;\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nexport const clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nexport const fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions point approximately to the same direction.\n *\n * Both quaternions are assumed to be unit length.\n *\n * @param {ReadonlyQuat} a The first unit quaternion.\n * @param {ReadonlyQuat} b The second unit quaternion.\n * @returns {Boolean} True if the quaternions are equal, false otherwise.\n */\nexport function equals(a, b) {\n  return Math.abs(vec4.dot(a, b)) >= 1 - glMatrix.EPSILON;\n}\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\nexport const rotationTo = (function () {\n  const tmpvec3 = vec3.create();\n  const xUnitVec3 = vec3.fromValues(1, 0, 0);\n  const yUnitVec3 = vec3.fromValues(0, 1, 0);\n\n  return function (out, a, b) {\n    const dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    }\n    vec3.cross(tmpvec3, a, b);\n    out[0] = tmpvec3[0];\n    out[1] = tmpvec3[1];\n    out[2] = tmpvec3[2];\n    out[3] = 1 + dot;\n    return normalize(out, out);\n  };\n})();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport const sqlerp = (function () {\n  const temp1 = create();\n  const temp2 = create();\n\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n\n    return out;\n  };\n})();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nexport const setAxes = (function () {\n  const matr = mat3.create();\n\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n\n    return normalize(out, fromMat3(out, matr));\n  };\n})();\n", "// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Copyright (c) 2017 Uber Technologies, Inc.\n\n// Adaptation of THREE.js Spherical class, under MIT license\nimport {NumericArray} from '@math.gl/types';\nimport {Vector3} from './vector3';\nimport {formatValue, equals, config, degrees, radians, clamp} from '../lib/common';\n// @ts-ignore gl-matrix types...\nimport * as vec3 from '../gl-matrix/vec3';\n\ntype SphericalCoordinatesOptions = {\n  phi?: number;\n  theta?: number;\n  radius?: number;\n  bearing?: number;\n  pitch?: number;\n  altitude?: number;\n  radiusScale?: number;\n};\n\ntype FormatOptions = {\n  printTypes?: boolean;\n};\n\n// TODO - import epsilon\nconst EPSILON = 0.000001;\nconst EARTH_RADIUS_METERS = 6371000;\n\n/**\n * The poles (phi) are at the positive and negative y axis.\n * The equator starts at positive z.\n * @link https://en.wikipedia.org/wiki/Spherical_coordinate_system\n */\nexport class SphericalCoordinates {\n  phi: number;\n  theta: number;\n  radius: number;\n  radiusScale: number;\n  // bearing: number;\n  // pitch: number;\n  // altitude: number;\n\n  // lnglatZ coordinates\n  // longitude: number;\n  // latitude: number;\n  // lng: number;\n  // lat: number;\n  // z: number;\n\n  /**\n   * Creates a new SphericalCoordinates object\n   * @param options\n   * @param [options.phi] =0 - rotation around X (latitude)\n   * @param [options.theta] =0 - rotation around Y (longitude)\n   * @param [options.radius] =1 - Distance from center\n   * @param [options.bearing]\n   * @param [options.pitch]\n   * @param [options.altitude]\n   * @param [options.radiusScale] =1\n   */\n  // eslint-disable-next-line complexity\n  constructor({\n    phi = 0,\n    theta = 0,\n    radius = 1,\n    bearing,\n    pitch,\n    altitude,\n    radiusScale = EARTH_RADIUS_METERS\n  }: SphericalCoordinatesOptions = {}) {\n    this.phi = phi;\n    this.theta = theta;\n    // TODO - silently accepts illegal 0\n    this.radius = radius || altitude || 1; // radial distance from center\n    this.radiusScale = radiusScale || 1; // Used by lngLatZ\n    if (bearing !== undefined) {\n      this.bearing = bearing; // up / down towards top and bottom pole\n    }\n    if (pitch !== undefined) {\n      this.pitch = pitch; // around the equator of the sphere\n    }\n    this.check();\n  }\n\n  toString(): string {\n    return this.formatString(config);\n  }\n\n  formatString({printTypes = false}: FormatOptions): string {\n    const f = formatValue;\n    return `${printTypes ? 'Spherical' : ''}\\\n[rho:${f(this.radius)},theta:${f(this.theta)},phi:${f(this.phi)}]`;\n  }\n\n  equals(other: SphericalCoordinates): boolean {\n    return (\n      equals(this.radius, other.radius) &&\n      equals(this.theta, other.theta) &&\n      equals(this.phi, other.phi)\n    );\n  }\n\n  exactEquals(other: SphericalCoordinates): boolean {\n    return this.radius === other.radius && this.theta === other.theta && this.phi === other.phi;\n  }\n\n  /* eslint-disable brace-style */\n  // Cartographic (bearing 0 north, pitch 0 look from above)\n  get bearing(): number {\n    return 180 - degrees(this.phi);\n  }\n\n  set bearing(v: number) {\n    this.phi = Math.PI - radians(v);\n  }\n\n  get pitch(): number {\n    return degrees(this.theta);\n  }\n\n  set pitch(v: number) {\n    this.theta = radians(v);\n  }\n\n  // get pitch() { return 90 - degrees(this.phi); }\n  // set pitch(v) { this.phi = radians(v) + Math.PI / 2; }\n  // get altitude() { return this.radius - 1; } // relative altitude\n  // lnglatZ coordinates\n  get longitude(): number {\n    return degrees(this.phi);\n  }\n\n  get latitude(): number {\n    return degrees(this.theta);\n  }\n\n  get lng(): number {\n    return degrees(this.phi);\n  }\n\n  get lat(): number {\n    return degrees(this.theta);\n  }\n\n  get z(): number {\n    return (this.radius - 1) * this.radiusScale;\n  }\n\n  /* eslint-enable brace-style */\n  set(radius: number, phi: number, theta: number): this {\n    this.radius = radius;\n    this.phi = phi;\n    this.theta = theta;\n    return this.check();\n  }\n\n  clone(): SphericalCoordinates {\n    return new SphericalCoordinates().copy(this);\n  }\n\n  copy(other: SphericalCoordinates): this {\n    this.radius = other.radius;\n    this.phi = other.phi;\n    this.theta = other.theta;\n    return this.check();\n  }\n\n  fromLngLatZ([lng, lat, z]: [number, number, number]): this {\n    this.radius = 1 + z / this.radiusScale;\n    this.phi = radians(lat);\n    this.theta = radians(lng);\n    return this.check();\n  }\n\n  fromVector3(v: Readonly<NumericArray>): this {\n    this.radius = vec3.length(v);\n    if (this.radius > 0) {\n      this.theta = Math.atan2(v[0], v[1]); // equator angle around y-up axis\n      this.phi = Math.acos(clamp(v[2] / this.radius, -1, 1)); // polar angle\n    }\n    return this.check();\n  }\n\n  toVector3(): Vector3 {\n    return new Vector3(0, 0, this.radius)\n      .rotateX({radians: this.theta})\n      .rotateZ({radians: this.phi});\n  }\n\n  // restrict phi to be betwee EPS and PI-EPS\n  makeSafe(): this {\n    this.phi = Math.max(EPSILON, Math.min(Math.PI - EPSILON, this.phi));\n    return this;\n  }\n\n  check(): this {\n    // this.makeSafe();\n    if (!Number.isFinite(this.phi) || !Number.isFinite(this.theta) || !(this.radius > 0)) {\n      throw new Error('SphericalCoordinates: some fields set to invalid numbers');\n    }\n    return this;\n  }\n}\n", "// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Copyright (c) 2017 Uber Technologies, Inc.\n\nimport {MathArray} from './base/math-array';\nimport {Quaternion} from './quaternion';\nimport {NumericArray} from '@math.gl/types';\n\nimport {clamp} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\n\n// Internal constants\nconst ERR_UNKNOWN_ORDER = 'Unknown Euler angle order';\nconst ALMOST_ONE = 0.99999;\n\n// eslint-disable-next-line no-shadow\nenum RotationOrder {\n  ZYX = 0,\n  YXZ = 1,\n  XZY = 2,\n  ZXY = 3,\n  YZX = 4,\n  XYZ = 5\n}\n\nexport class Euler extends MathArray {\n  // Constants\n  static get ZYX(): RotationOrder {\n    return RotationOrder.ZYX;\n  }\n  static get YXZ(): RotationOrder {\n    return RotationOrder.YXZ;\n  }\n  static get XZY(): RotationOrder {\n    return RotationOrder.XZY;\n  }\n  static get ZXY(): RotationOrder {\n    return RotationOrder.ZXY;\n  }\n  static get YZX(): RotationOrder {\n    return RotationOrder.YZX;\n  }\n  static get XYZ(): RotationOrder {\n    return RotationOrder.XYZ;\n  }\n  static get RollPitchYaw(): RotationOrder {\n    return RotationOrder.ZYX;\n  }\n  static get DefaultOrder(): RotationOrder {\n    return RotationOrder.ZYX;\n  }\n  static get RotationOrders(): typeof RotationOrder {\n    return RotationOrder;\n  }\n  static rotationOrder(order: RotationOrder): string {\n    return RotationOrder[order];\n  }\n  get ELEMENTS(): number {\n    return 4;\n  }\n\n  /**\n   * @class\n   * @param {Number | Number[]} x\n   * @param {Number=} [y]\n   * @param {Number=} [z]\n   * @param {Number=} [order]\n   */\n  constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0);\n    // eslint-disable-next-line prefer-rest-params\n    if (arguments.length > 0 && Array.isArray(arguments[0])) {\n      // @ts-expect-error\n      // eslint-disable-next-line prefer-rest-params\n      this.fromVector3(...arguments);\n    } else {\n      this.set(x, y, z, order);\n    }\n  }\n\n  fromQuaternion(quaternion: Readonly<NumericArray>): this {\n    const [x, y, z, w] = quaternion;\n    const ysqr = y * y;\n    const t0 = -2 * (ysqr + z * z) + 1;\n    const t1 = +2 * (x * y + w * z);\n    let t2 = -2 * (x * z - w * y);\n    const t3 = +2 * (y * z + w * x);\n    const t4 = -2 * (x * x + ysqr) + 1;\n    t2 = t2 > 1 ? 1 : t2;\n    t2 = t2 < -1 ? -1 : t2;\n    const roll = Math.atan2(t3, t4);\n    const pitch = Math.asin(t2);\n    const yaw = Math.atan2(t1, t0);\n    return this.set(roll, pitch, yaw, Euler.RollPitchYaw);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  fromObject(object: Record<string, unknown>): this {\n    throw new Error('not implemented');\n    //  return this.set(object.x, object.y, object.z, object.order);\n  }\n\n  // fromQuaternion(q, order) {\n  //   this._fromRotationMat[-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0];\n  //   return this.check();\n  // }\n  // If copied array does contain fourth element, preserves currently set order\n  copy(array: Readonly<NumericArray>): this {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    // @ts-expect-error\n    this[3] = Number.isFinite(array[3]) || this.order;\n    return this.check();\n  }\n\n  // Sets the three angles, and optionally sets the rotation order\n  // If order is not specified, preserves currently set order\n  set(x = 0, y = 0, z = 0, order: RotationOrder): this {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = Number.isFinite(order) ? order : this[3];\n    return this.check();\n  }\n\n  override validate(): boolean {\n    return (\n      validateOrder(this[3]) &&\n      Number.isFinite(this[0]) &&\n      Number.isFinite(this[1]) &&\n      Number.isFinite(this[2])\n    );\n  }\n\n  // Does not copy the orientation element\n  override toArray(array: NumericArray = [], offset: number = 0): NumericArray {\n    array[offset] = this[0];\n    array[offset + 1] = this[1];\n    array[offset + 2] = this[2];\n    return array;\n  }\n\n  // Copies the orientation element\n  toArray4(array: NumericArray = [], offset: number = 0): NumericArray {\n    array[offset] = this[0];\n    array[offset + 1] = this[1];\n    array[offset + 2] = this[2];\n    array[offset + 3] = this[3];\n    return array;\n  }\n\n  toVector3(result: NumericArray = [-0, -0, -0]): NumericArray {\n    result[0] = this[0];\n    result[1] = this[1];\n    result[2] = this[2];\n    return result;\n  }\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  // x, y, z angle notation (note: only corresponds to axis in XYZ orientation)\n\n  get x(): number {\n    return this[0];\n  }\n  set x(value: number) {\n    this[0] = checkNumber(value);\n  }\n\n  get y(): number {\n    return this[1];\n  }\n  set y(value: number) {\n    this[1] = checkNumber(value);\n  }\n\n  get z(): number {\n    return this[2];\n  }\n  set z(value: number) {\n    this[2] = checkNumber(value);\n  }\n  // alpha, beta, gamma angle notation\n  get alpha(): number {\n    return this[0];\n  }\n  set alpha(value: number) {\n    this[0] = checkNumber(value);\n  }\n\n  get beta(): number {\n    return this[1];\n  }\n  set beta(value: number) {\n    this[1] = checkNumber(value);\n  }\n\n  get gamma(): number {\n    return this[2];\n  }\n  set gamma(value: number) {\n    this[2] = checkNumber(value);\n  }\n\n  // phi, theta, psi angle notation\n  get phi(): number {\n    return this[0];\n  }\n  set phi(value: number) {\n    this[0] = checkNumber(value);\n  }\n\n  get theta(): number {\n    return this[1];\n  }\n  set theta(value: number) {\n    this[1] = checkNumber(value);\n  }\n\n  get psi(): number {\n    return this[2];\n  }\n  set psi(value: number) {\n    this[2] = checkNumber(value);\n  }\n  // roll, pitch, yaw angle notation\n\n  get roll(): number {\n    return this[0];\n  }\n  set roll(value: number) {\n    this[0] = checkNumber(value);\n  }\n\n  get pitch(): number {\n    return this[1];\n  }\n  set pitch(value: number) {\n    this[1] = checkNumber(value);\n  }\n\n  get yaw(): number {\n    return this[2];\n  }\n  set yaw(value: number) {\n    this[2] = checkNumber(value);\n  }\n\n  // rotation order, in all three angle notations\n  get order(): RotationOrder {\n    return this[3];\n  }\n  set order(value: RotationOrder) {\n    this[3] = checkOrder(value);\n  }\n\n  // Constructors\n  fromVector3(v: Readonly<NumericArray>, order: RotationOrder): this {\n    return this.set(v[0], v[1], v[2], Number.isFinite(order) ? order : this[3]);\n  }\n\n  // TODO - with and without 4th element\n  override fromArray(array: Readonly<NumericArray>, offset: number = 0): this {\n    this[0] = array[0 + offset];\n    this[1] = array[1 + offset];\n    this[2] = array[2 + offset];\n    if (array[3] !== undefined) {\n      this[3] = array[3];\n    }\n    return this.check();\n  }\n\n  // Common ZYX rotation order\n  fromRollPitchYaw(roll: number, pitch: number, yaw: number): this {\n    return this.set(roll, pitch, yaw, RotationOrder.ZYX);\n  }\n\n  fromRotationMatrix(m: Readonly<NumericArray>, order: RotationOrder = Euler.DefaultOrder): this {\n    this._fromRotationMatrix(m, order);\n    return this.check();\n  }\n\n  // ACCESSORS\n\n  getRotationMatrix(m: NumericArray): NumericArray {\n    return this._getRotationMatrix(m);\n  }\n\n  // TODO - move to Quaternion\n  getQuaternion(): Quaternion {\n    const q = new Quaternion();\n    switch (this[3]) {\n      case RotationOrder.XYZ:\n        return q.rotateX(this[0]).rotateY(this[1]).rotateZ(this[2]);\n      case RotationOrder.YXZ:\n        return q.rotateY(this[0]).rotateX(this[1]).rotateZ(this[2]);\n      case RotationOrder.ZXY:\n        return q.rotateZ(this[0]).rotateX(this[1]).rotateY(this[2]);\n      case RotationOrder.ZYX:\n        return q.rotateZ(this[0]).rotateY(this[1]).rotateX(this[2]);\n      case RotationOrder.YZX:\n        return q.rotateY(this[0]).rotateZ(this[1]).rotateX(this[2]);\n      case RotationOrder.XZY:\n        return q.rotateX(this[0]).rotateZ(this[1]).rotateY(this[2]);\n      default:\n        throw new Error(ERR_UNKNOWN_ORDER);\n    }\n  }\n\n  // INTERNAL METHODS\n  // Conversion from Euler to rotation matrix and from matrix to Euler\n  // Adapted from three.js under MIT license\n  // // WARNING: this discards revolution information -bhouston\n  // reorder(newOrder) {\n  //   const q = new Quaternion().setFromEuler(this);\n  //   return this.setFromQuaternion(q, newOrder);\n  /* eslint-disable complexity, max-statements, one-var */\n  _fromRotationMatrix(m: Readonly<NumericArray>, order = Euler.DefaultOrder): this {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    const m11 = m[0],\n      m12 = m[4],\n      m13 = m[8];\n    const m21 = m[1],\n      m22 = m[5],\n      m23 = m[9];\n    const m31 = m[2],\n      m32 = m[6],\n      m33 = m[10];\n    order = order || this[3];\n    switch (order) {\n      case Euler.XYZ:\n        this[1] = Math.asin(clamp(m13, -1, 1));\n        if (Math.abs(m13) < ALMOST_ONE) {\n          this[0] = Math.atan2(-m23, m33);\n          this[2] = Math.atan2(-m12, m11);\n        } else {\n          this[0] = Math.atan2(m32, m22);\n          this[2] = 0;\n        }\n        break;\n      case Euler.YXZ:\n        this[0] = Math.asin(-clamp(m23, -1, 1));\n        if (Math.abs(m23) < ALMOST_ONE) {\n          this[1] = Math.atan2(m13, m33);\n          this[2] = Math.atan2(m21, m22);\n        } else {\n          this[1] = Math.atan2(-m31, m11);\n          this[2] = 0;\n        }\n        break;\n      case Euler.ZXY:\n        this[0] = Math.asin(clamp(m32, -1, 1));\n        if (Math.abs(m32) < ALMOST_ONE) {\n          this[1] = Math.atan2(-m31, m33);\n          this[2] = Math.atan2(-m12, m22);\n        } else {\n          this[1] = 0;\n          this[2] = Math.atan2(m21, m11);\n        }\n        break;\n      case Euler.ZYX:\n        this[1] = Math.asin(-clamp(m31, -1, 1));\n        if (Math.abs(m31) < ALMOST_ONE) {\n          this[0] = Math.atan2(m32, m33);\n          this[2] = Math.atan2(m21, m11);\n        } else {\n          this[0] = 0;\n          this[2] = Math.atan2(-m12, m22);\n        }\n        break;\n      case Euler.YZX:\n        this[2] = Math.asin(clamp(m21, -1, 1));\n        if (Math.abs(m21) < ALMOST_ONE) {\n          this[0] = Math.atan2(-m23, m22);\n          this[1] = Math.atan2(-m31, m11);\n        } else {\n          this[0] = 0;\n          this[1] = Math.atan2(m13, m33);\n        }\n        break;\n      case Euler.XZY:\n        this[2] = Math.asin(-clamp(m12, -1, 1));\n        if (Math.abs(m12) < ALMOST_ONE) {\n          this[0] = Math.atan2(m32, m22);\n          this[1] = Math.atan2(m13, m11);\n        } else {\n          this[0] = Math.atan2(-m23, m33);\n          this[1] = 0;\n        }\n        break;\n      default:\n        throw new Error(ERR_UNKNOWN_ORDER);\n    }\n    this[3] = order;\n    return this;\n  }\n\n  _getRotationMatrix(result: NumericArray): NumericArray {\n    const te = result || [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0];\n    const x = this.x,\n      y = this.y,\n      z = this.z;\n    const a = Math.cos(x);\n    const c = Math.cos(y);\n    const e = Math.cos(z);\n    const b = Math.sin(x);\n    const d = Math.sin(y);\n    const f = Math.sin(z);\n    switch (this[3]) {\n      case Euler.XYZ: {\n        const ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n        te[0] = c * e;\n        te[4] = -c * f;\n        te[8] = d;\n        te[1] = af + be * d;\n        te[5] = ae - bf * d;\n        te[9] = -b * c;\n        te[2] = bf - ae * d;\n        te[6] = be + af * d;\n        te[10] = a * c;\n        break;\n      }\n      case Euler.YXZ: {\n        const ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n        te[0] = ce + df * b;\n        te[4] = de * b - cf;\n        te[8] = a * d;\n        te[1] = a * f;\n        te[5] = a * e;\n        te[9] = -b;\n        te[2] = cf * b - de;\n        te[6] = df + ce * b;\n        te[10] = a * c;\n        break;\n      }\n      case Euler.ZXY: {\n        const ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n        te[0] = ce - df * b;\n        te[4] = -a * f;\n        te[8] = de + cf * b;\n        te[1] = cf + de * b;\n        te[5] = a * e;\n        te[9] = df - ce * b;\n        te[2] = -a * d;\n        te[6] = b;\n        te[10] = a * c;\n        break;\n      }\n      case Euler.ZYX: {\n        const ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n        te[0] = c * e;\n        te[4] = be * d - af;\n        te[8] = ae * d + bf;\n        te[1] = c * f;\n        te[5] = bf * d + ae;\n        te[9] = af * d - be;\n        te[2] = -d;\n        te[6] = b * c;\n        te[10] = a * c;\n        break;\n      }\n      case Euler.YZX: {\n        const ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n        te[0] = c * e;\n        te[4] = bd - ac * f;\n        te[8] = bc * f + ad;\n        te[1] = f;\n        te[5] = a * e;\n        te[9] = -b * e;\n        te[2] = -d * e;\n        te[6] = ad * f + bc;\n        te[10] = ac - bd * f;\n        break;\n      }\n      case Euler.XZY: {\n        const ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n        te[0] = c * e;\n        te[4] = -f;\n        te[8] = d * e;\n        te[1] = ac * f + bd;\n        te[5] = a * e;\n        te[9] = ad * f - bc;\n        te[2] = bc * f - ad;\n        te[6] = b * e;\n        te[10] = bd * f + ac;\n        break;\n      }\n      default:\n        throw new Error(ERR_UNKNOWN_ORDER);\n    }\n    // last column\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n    // bottom row\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return te;\n  }\n\n  toQuaternion(): Quaternion {\n    // Abbreviations for the various angular functions\n    const cy = Math.cos(this.yaw * 0.5);\n    const sy = Math.sin(this.yaw * 0.5);\n    const cr = Math.cos(this.roll * 0.5);\n    const sr = Math.sin(this.roll * 0.5);\n    const cp = Math.cos(this.pitch * 0.5);\n    const sp = Math.sin(this.pitch * 0.5);\n    const w = cy * cr * cp + sy * sr * sp;\n    const x = cy * sr * cp - sy * cr * sp;\n    const y = cy * cr * sp + sy * sr * cp;\n    const z = sy * cr * cp - cy * sr * sp;\n    return new Quaternion(x, y, z, w);\n  }\n}\n\n// HELPER FUNCTIONS\n\nfunction validateOrder(value: number): boolean {\n  return value >= 0 && value < 6;\n}\n\nfunction checkOrder(value: number) {\n  if (value < 0 && value >= 6) {\n    throw new Error(ERR_UNKNOWN_ORDER);\n  }\n  return value;\n}\n", "// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// NOTE: Added to make Cesium-derived test cases work\n// TODO: Determine if/how to keep\nexport const EPSILON1 = 1e-1;\nexport const EPSILON2 = 1e-2;\nexport const EPSILON3 = 1e-3;\nexport const EPSILON4 = 1e-4;\nexport const EPSILON5 = 1e-5;\nexport const EPSILON6 = 1e-6;\nexport const EPSILON7 = 1e-7;\nexport const EPSILON8 = 1e-8;\nexport const EPSILON9 = 1e-9;\nexport const EPSILON10 = 1e-10;\nexport const EPSILON11 = 1e-11;\nexport const EPSILON12 = 1e-12;\nexport const EPSILON13 = 1e-13;\nexport const EPSILON14 = 1e-14;\nexport const EPSILON15 = 1e-15;\nexport const EPSILON16 = 1e-16;\nexport const EPSILON17 = 1e-17;\nexport const EPSILON18 = 1e-18;\nexport const EPSILON19 = 1e-19;\nexport const EPSILON20 = 1e-20;\n\nexport const PI_OVER_TWO = Math.PI / 2;\nexport const PI_OVER_FOUR = Math.PI / 4;\nexport const PI_OVER_SIX = Math.PI / 6;\n\nexport const TWO_PI = Math.PI * 2;\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Forked from THREE.js under MIT license\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nimport {clamp} from '@math.gl/core';\n\n/** Pre-calculated tables for float16 conversion */\ntype Float16Tables = {\n  // float32 to float16 helpers\n  baseTable: Uint32Array;\n  shiftTable: Uint32Array;\n  // float16 to float32 helpers\n  mantissaTable: Uint32Array;\n  exponentTable: Uint32Array;\n  offsetTable: Uint32Array;\n};\n\n/**  */\nlet float16Tables: Float16Tables | null = null;\n\n/** Storage that can be viewed both as float and integer */\nconst buffer = new ArrayBuffer(4);\nconst floatView = new Float32Array(buffer);\nconst uint32View = new Uint32Array(buffer);\n\n/**\n * float32 to float16\n * @param val\n * @returns\n */\nexport function toHalfFloat(val: number): number {\n  float16Tables ||= generateFloat16Tables();\n\n  // if ( Math.abs( val ) > 65504 ) console.warn( 'toHalfFloat(): Value out of range.' );\n\n  val = clamp(val, -65504, 65504);\n\n  floatView[0] = val;\n  const f = uint32View[0];\n  const e = (f >> 23) & 0x1ff;\n  return float16Tables.baseTable[e] + ((f & 0x007fffff) >> float16Tables.shiftTable[e]);\n}\n\n/**\n * float16 to float32\n * @param val\n * @returns\n */\nexport function fromHalfFloat(val: number): number {\n  float16Tables ||= generateFloat16Tables();\n\n  const m = val >> 10;\n  uint32View[0] =\n    float16Tables.mantissaTable[float16Tables.offsetTable[m] + (val & 0x3ff)] +\n    float16Tables.exponentTable[m];\n  return floatView[0];\n}\n\nfunction generateFloat16Tables(): Float16Tables {\n  // float32 to float16 helpers\n\n  const baseTable = new Uint32Array(512);\n  const shiftTable = new Uint32Array(512);\n\n  for (let i = 0; i < 256; ++i) {\n    const e = i - 127;\n\n    // very small number (0, -0)\n\n    if (e < -27) {\n      baseTable[i] = 0x0000;\n      baseTable[i | 0x100] = 0x8000;\n      shiftTable[i] = 24;\n      shiftTable[i | 0x100] = 24;\n\n      // small number (denorm)\n    } else if (e < -14) {\n      baseTable[i] = 0x0400 >> (-e - 14);\n      baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\n      shiftTable[i] = -e - 1;\n      shiftTable[i | 0x100] = -e - 1;\n\n      // normal number\n    } else if (e <= 15) {\n      baseTable[i] = (e + 15) << 10;\n      baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\n      shiftTable[i] = 13;\n      shiftTable[i | 0x100] = 13;\n\n      // large number (Infinity, -Infinity)\n    } else if (e < 128) {\n      baseTable[i] = 0x7c00;\n      baseTable[i | 0x100] = 0xfc00;\n      shiftTable[i] = 24;\n      shiftTable[i | 0x100] = 24;\n\n      // stay (NaN, Infinity, -Infinity)\n    } else {\n      baseTable[i] = 0x7c00;\n      baseTable[i | 0x100] = 0xfc00;\n      shiftTable[i] = 13;\n      shiftTable[i | 0x100] = 13;\n    }\n  }\n\n  // float16 to float32 helpers\n\n  const mantissaTable = new Uint32Array(2048);\n  const exponentTable = new Uint32Array(64);\n  const offsetTable = new Uint32Array(64);\n\n  for (let i = 1; i < 1024; ++i) {\n    let m = i << 13; // zero pad mantissa bits\n    let e = 0; // zero exponent\n\n    // normalized\n    while ((m & 0x00800000) === 0) {\n      m <<= 1;\n      e -= 0x00800000; // decrement exponent\n    }\n\n    m &= ~0x00800000; // clear leading 1 bit\n    e += 0x38800000; // adjust bias\n\n    mantissaTable[i] = m | e;\n  }\n\n  for (let i = 1024; i < 2048; ++i) {\n    mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\n  }\n\n  for (let i = 1; i < 31; ++i) {\n    exponentTable[i] = i << 23;\n  }\n\n  exponentTable[31] = 0x47800000;\n  exponentTable[32] = 0x80000000;\n\n  for (let i = 33; i < 63; ++i) {\n    exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n  }\n\n  exponentTable[63] = 0xc7800000;\n\n  for (let i = 1; i < 64; ++i) {\n    if (i !== 32) {\n      offsetTable[i] = 1024;\n    }\n  }\n\n  return {baseTable, shiftTable, mantissaTable, exponentTable, offsetTable};\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {NumericArray} from '@math.gl/types';\n\n/**\n * Calculate WebGL 64 bit float\n * @param a  - the input float number\n * @param out - the output array. If not supplied, a new array is created.\n * @param startIndex - the index in the output array to fill from. Default 0.\n * @returns - the fp64 representation of the input number\n */\nexport function fp64ify(a: number, out: NumericArray = [], startIndex: number = 0): NumericArray {\n  const hiPart = Math.fround(a);\n  const loPart = a - hiPart;\n  out[startIndex] = hiPart;\n  out[startIndex + 1] = loPart;\n  return out;\n}\n\n/**\n * Calculate the low part of a WebGL 64 bit float\n * @param a the input float number\n * @returns the lower 32 bit of the number\n */\nexport function fp64LowPart(a: number): number {\n  return a - Math.fround(a);\n}\n\n/**\n * Calculate WebGL 64 bit matrix (transposed \"Float64Array\")\n * @param matrix  the input matrix\n * @returns the fp64 representation of the input matrix\n */\nexport function fp64ifyMatrix4(matrix: NumericArray): Float32Array {\n  // Transpose the projection matrix to column major for GLSL.\n  const matrixFP64 = new Float32Array(32);\n  for (let i = 0; i < 4; ++i) {\n    for (let j = 0; j < 4; ++j) {\n      const index = i * 4 + j;\n      fp64ify(matrix[j * 4 + i], matrixFP64, index * 2);\n    }\n  }\n  return matrixFP64;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// import {ShaderModule} from '../../types';\n\nconst fp32shader = /* glsl */ `\\\n#ifdef LUMA_FP32_TAN_PRECISION_WORKAROUND\n\n// All these functions are for substituting tan() function from Intel GPU only\nconst float TWO_PI = 6.2831854820251465;\nconst float PI_2 = 1.5707963705062866;\nconst float PI_16 = 0.1963495463132858;\n\nconst float SIN_TABLE_0 = 0.19509032368659973;\nconst float SIN_TABLE_1 = 0.3826834261417389;\nconst float SIN_TABLE_2 = 0.5555702447891235;\nconst float SIN_TABLE_3 = 0.7071067690849304;\n\nconst float COS_TABLE_0 = 0.9807852506637573;\nconst float COS_TABLE_1 = 0.9238795042037964;\nconst float COS_TABLE_2 = 0.8314695954322815;\nconst float COS_TABLE_3 = 0.7071067690849304;\n\nconst float INVERSE_FACTORIAL_3 = 1.666666716337204e-01; // 1/3!\nconst float INVERSE_FACTORIAL_5 = 8.333333767950535e-03; // 1/5!\nconst float INVERSE_FACTORIAL_7 = 1.9841270113829523e-04; // 1/7!\nconst float INVERSE_FACTORIAL_9 = 2.75573188446287533e-06; // 1/9!\n\nfloat sin_taylor_fp32(float a) {\n  float r, s, t, x;\n\n  if (a == 0.0) {\n    return 0.0;\n  }\n\n  x = -a * a;\n  s = a;\n  r = a;\n\n  r = r * x;\n  t = r * INVERSE_FACTORIAL_3;\n  s = s + t;\n\n  r = r * x;\n  t = r * INVERSE_FACTORIAL_5;\n  s = s + t;\n\n  r = r * x;\n  t = r * INVERSE_FACTORIAL_7;\n  s = s + t;\n\n  r = r * x;\n  t = r * INVERSE_FACTORIAL_9;\n  s = s + t;\n\n  return s;\n}\n\nvoid sincos_taylor_fp32(float a, out float sin_t, out float cos_t) {\n  if (a == 0.0) {\n    sin_t = 0.0;\n    cos_t = 1.0;\n  }\n  sin_t = sin_taylor_fp32(a);\n  cos_t = sqrt(1.0 - sin_t * sin_t);\n}\n\nfloat tan_taylor_fp32(float a) {\n    float sin_a;\n    float cos_a;\n\n    if (a == 0.0) {\n        return 0.0;\n    }\n\n    // 2pi range reduction\n    float z = floor(a / TWO_PI);\n    float r = a - TWO_PI * z;\n\n    float t;\n    float q = floor(r / PI_2 + 0.5);\n    int j = int(q);\n\n    if (j < -2 || j > 2) {\n        return 1.0 / 0.0;\n    }\n\n    t = r - PI_2 * q;\n\n    q = floor(t / PI_16 + 0.5);\n    int k = int(q);\n    int abs_k = int(abs(float(k)));\n\n    if (abs_k > 4) {\n        return 1.0 / 0.0;\n    } else {\n        t = t - PI_16 * q;\n    }\n\n    float u = 0.0;\n    float v = 0.0;\n\n    float sin_t, cos_t;\n    float s, c;\n    sincos_taylor_fp32(t, sin_t, cos_t);\n\n    if (k == 0) {\n        s = sin_t;\n        c = cos_t;\n    } else {\n        if (abs(float(abs_k) - 1.0) < 0.5) {\n            u = COS_TABLE_0;\n            v = SIN_TABLE_0;\n        } else if (abs(float(abs_k) - 2.0) < 0.5) {\n            u = COS_TABLE_1;\n            v = SIN_TABLE_1;\n        } else if (abs(float(abs_k) - 3.0) < 0.5) {\n            u = COS_TABLE_2;\n            v = SIN_TABLE_2;\n        } else if (abs(float(abs_k) - 4.0) < 0.5) {\n            u = COS_TABLE_3;\n            v = SIN_TABLE_3;\n        }\n        if (k > 0) {\n            s = u * sin_t + v * cos_t;\n            c = u * cos_t - v * sin_t;\n        } else {\n            s = u * sin_t - v * cos_t;\n            c = u * cos_t + v * sin_t;\n        }\n    }\n\n    if (j == 0) {\n        sin_a = s;\n        cos_a = c;\n    } else if (j == 1) {\n        sin_a = c;\n        cos_a = -s;\n    } else if (j == -1) {\n        sin_a = -c;\n        cos_a = s;\n    } else {\n        sin_a = -s;\n        cos_a = -c;\n    }\n    return sin_a / cos_a;\n}\n#endif\n\nfloat tan_fp32(float a) {\n#ifdef LUMA_FP32_TAN_PRECISION_WORKAROUND\n  return tan_taylor_fp32(a);\n#else\n  return tan(a);\n#endif\n}\n`;\n\n/**\n * 32 bit math library (fixups for GPUs)\n */\nexport const fp32 = {\n  name: 'fp32',\n  vs: fp32shader\n};\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nexport const fp64arithmeticShader = /* glsl */ `\\\n\nuniform fp64arithmeticUniforms {\n  uniform float ONE;\n} fp64;\n\n/*\nAbout LUMA_FP64_CODE_ELIMINATION_WORKAROUND\n\nThe purpose of this workaround is to prevent shader compilers from\noptimizing away necessary arithmetic operations by swapping their sequences\nor transform the equation to some 'equivalent' form.\n\nThe method is to multiply an artifical variable, ONE, which will be known to\nthe compiler to be 1 only at runtime. The whole expression is then represented\nas a polynomial with respective to ONE. In the coefficients of all terms, only one a\nand one b should appear\n\nerr = (a + b) * ONE^6 - a * ONE^5 - (a + b) * ONE^4 + a * ONE^3 - b - (a + b) * ONE^2 + a * ONE\n*/\n\n// Divide float number to high and low floats to extend fraction bits\nvec2 split(float a) {\n  const float SPLIT = 4097.0;\n  float t = a * SPLIT;\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\n  float a_hi = t * fp64.ONE - (t - a);\n  float a_lo = a * fp64.ONE - a_hi;\n#else\n  float a_hi = t - (t - a);\n  float a_lo = a - a_hi;\n#endif\n  return vec2(a_hi, a_lo);\n}\n\n// Divide float number again when high float uses too many fraction bits\nvec2 split2(vec2 a) {\n  vec2 b = split(a.x);\n  b.y += a.y;\n  return b;\n}\n\n// Special sum operation when a > b\nvec2 quickTwoSum(float a, float b) {\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\n  float sum = (a + b) * fp64.ONE;\n  float err = b - (sum - a) * fp64.ONE;\n#else\n  float sum = a + b;\n  float err = b - (sum - a);\n#endif\n  return vec2(sum, err);\n}\n\n// General sum operation\nvec2 twoSum(float a, float b) {\n  float s = (a + b);\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\n  float v = (s * fp64.ONE - a) * fp64.ONE;\n  float err = (a - (s - v) * fp64.ONE) * fp64.ONE * fp64.ONE * fp64.ONE + (b - v);\n#else\n  float v = s - a;\n  float err = (a - (s - v)) + (b - v);\n#endif\n  return vec2(s, err);\n}\n\nvec2 twoSub(float a, float b) {\n  float s = (a - b);\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\n  float v = (s * fp64.ONE - a) * fp64.ONE;\n  float err = (a - (s - v) * fp64.ONE) * fp64.ONE * fp64.ONE * fp64.ONE - (b + v);\n#else\n  float v = s - a;\n  float err = (a - (s - v)) - (b + v);\n#endif\n  return vec2(s, err);\n}\n\nvec2 twoSqr(float a) {\n  float prod = a * a;\n  vec2 a_fp64 = split(a);\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\n  float err = ((a_fp64.x * a_fp64.x - prod) * fp64.ONE + 2.0 * a_fp64.x *\n    a_fp64.y * fp64.ONE * fp64.ONE) + a_fp64.y * a_fp64.y * fp64.ONE * fp64.ONE * fp64.ONE;\n#else\n  float err = ((a_fp64.x * a_fp64.x - prod) + 2.0 * a_fp64.x * a_fp64.y) + a_fp64.y * a_fp64.y;\n#endif\n  return vec2(prod, err);\n}\n\nvec2 twoProd(float a, float b) {\n  float prod = a * b;\n  vec2 a_fp64 = split(a);\n  vec2 b_fp64 = split(b);\n  float err = ((a_fp64.x * b_fp64.x - prod) + a_fp64.x * b_fp64.y +\n    a_fp64.y * b_fp64.x) + a_fp64.y * b_fp64.y;\n  return vec2(prod, err);\n}\n\nvec2 sum_fp64(vec2 a, vec2 b) {\n  vec2 s, t;\n  s = twoSum(a.x, b.x);\n  t = twoSum(a.y, b.y);\n  s.y += t.x;\n  s = quickTwoSum(s.x, s.y);\n  s.y += t.y;\n  s = quickTwoSum(s.x, s.y);\n  return s;\n}\n\nvec2 sub_fp64(vec2 a, vec2 b) {\n  vec2 s, t;\n  s = twoSub(a.x, b.x);\n  t = twoSub(a.y, b.y);\n  s.y += t.x;\n  s = quickTwoSum(s.x, s.y);\n  s.y += t.y;\n  s = quickTwoSum(s.x, s.y);\n  return s;\n}\n\nvec2 mul_fp64(vec2 a, vec2 b) {\n  vec2 prod = twoProd(a.x, b.x);\n  // y component is for the error\n  prod.y += a.x * b.y;\n#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)\n  prod = split2(prod);\n#endif\n  prod = quickTwoSum(prod.x, prod.y);\n  prod.y += a.y * b.x;\n#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)\n  prod = split2(prod);\n#endif\n  prod = quickTwoSum(prod.x, prod.y);\n  return prod;\n}\n\nvec2 div_fp64(vec2 a, vec2 b) {\n  float xn = 1.0 / b.x;\n#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)\n  vec2 yn = mul_fp64(a, vec2(xn, 0));\n#else\n  vec2 yn = a * xn;\n#endif\n  float diff = (sub_fp64(a, mul_fp64(b, yn))).x;\n  vec2 prod = twoProd(xn, diff);\n  return sum_fp64(yn, prod);\n}\n\nvec2 sqrt_fp64(vec2 a) {\n  if (a.x == 0.0 && a.y == 0.0) return vec2(0.0, 0.0);\n  if (a.x < 0.0) return vec2(0.0 / 0.0, 0.0 / 0.0);\n\n  float x = 1.0 / sqrt(a.x);\n  float yn = a.x * x;\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\n  vec2 yn_sqr = twoSqr(yn) * fp64.ONE;\n#else\n  vec2 yn_sqr = twoSqr(yn);\n#endif\n  float diff = sub_fp64(a, yn_sqr).x;\n  vec2 prod = twoProd(x * 0.5, diff);\n#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)\n  return sum_fp64(split(yn), prod);\n#else\n  return sum_fp64(vec2(yn, 0.0), prod);\n#endif\n}\n`;\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {ShaderModule} from '../../../lib/shader-module/shader-module';\n\nimport {fp64ify, fp64LowPart, fp64ifyMatrix4} from '../../../modules/math/fp64/fp64-utils';\nimport {fp64arithmeticShader} from './fp64-arithmetic-glsl';\nimport {fp64functionShader} from './fp64-functions-glsl';\n\ntype FP64Props = {};\ntype FP64Uniforms = {ONE: number};\ntype FP64Bindings = {};\n\ntype FP64Utilities = {\n  fp64ify: typeof fp64ify;\n  fp64LowPart: typeof fp64LowPart;\n  fp64ifyMatrix4: typeof fp64ifyMatrix4;\n};\n\nconst defaultUniforms: FP64Uniforms = {\n  // Used in LUMA_FP64_CODE_ELIMINATION_WORKAROUND\n  ONE: 1.0\n};\n\n/**\n * 64bit arithmetic: add, sub, mul, div (small subset of fp64 module)\n */\nexport const fp64arithmetic: ShaderModule<FP64Props, FP64Uniforms, FP64Bindings> & FP64Utilities = {\n  name: 'fp64arithmetic',\n  vs: fp64arithmeticShader,\n  defaultUniforms,\n  uniformTypes: {ONE: 'f32'},\n\n  // Additional Functions\n  fp64ify,\n  fp64LowPart,\n  fp64ifyMatrix4\n};\n\n/**\n * Full 64 bit math library\n */\nexport const fp64: ShaderModule<{}> & FP64Utilities = {\n  name: 'fp64',\n  vs: fp64functionShader,\n  dependencies: [fp64arithmetic],\n\n  // Additional Functions\n  fp64ify,\n  fp64LowPart,\n  fp64ifyMatrix4\n};\n\nexport {fp64ify, fp64LowPart, fp64ifyMatrix4};\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {ShaderModule} from '../../../lib/shader-module/shader-module';\nimport type {NumberArray3, NumberArray4} from '@math.gl/core';\n\n// cyan color\nconst DEFAULT_HIGHLIGHT_COLOR: NumberArray4 = [0, 1, 1, 1];\n\n/**\n * Props for the picking module, which depending on mode renders picking colors or highlighted item.\n * When active, renders picking colors, assumed to be rendered to off-screen \"picking\" buffer.\n * When inactive, renders normal colors, with the exception of selected object which is rendered with highlight\n */\nexport type PickingProps = {\n  /** Are we picking? I.e. rendering picking colors? */\n  isActive?: boolean;\n  /** Set to true when picking an attribute value instead of object index */\n  isAttribute?: boolean;\n  /** Set to a picking color to visually highlight that item, or `null` to explicitly clear **/\n  highlightedObjectColor?: NumberArray3 | null;\n  /** Color of visual highlight of \"selected\" item */\n  highlightColor?: NumberArray3 | NumberArray4;\n  /** Color range 0-1 or 0-255 */\n  useFloatColors?: boolean;\n};\n\n/**\n * Uniforms for the picking module, which renders picking colors and highlighted item.\n * When active, renders picking colors, assumed to be rendered to off-screen \"picking\" buffer.\n * When inactive, renders normal colors, with the exception of selected object which is rendered with highlight\n */\nexport type PickingUniforms = {\n  /**\n   * When true, renders picking colors. Set when rendering to off-screen \"picking\" buffer.\n   * When false, renders normal colors, with the exception of selected object which is rendered with highlight\n   */\n  isActive?: boolean;\n  /** Set to true when picking an attribute value instead of object index */\n  isAttribute?: boolean;\n  /** Color range 0-1 or 0-255 */\n  useFloatColors?: boolean;\n  /** Do we have a highlighted item? */\n  isHighlightActive?: boolean;\n  /** Set to a picking color to visually highlight that item */\n  highlightedObjectColor?: NumberArray3;\n  /** Color of visual highlight of \"selected\" item */\n  highlightColor?: NumberArray4;\n};\n\nconst vs = /* glsl */ `\\\nuniform pickingUniforms {\n  float isActive;\n  float isAttribute;\n  float isHighlightActive;\n  float useFloatColors;\n  vec3 highlightedObjectColor;\n  vec4 highlightColor;\n} picking;\n\nout vec4 picking_vRGBcolor_Avalid;\n\n// Normalize unsigned byte color to 0-1 range\nvec3 picking_normalizeColor(vec3 color) {\n  return picking.useFloatColors > 0.5 ? color : color / 255.0;\n}\n\n// Normalize unsigned byte color to 0-1 range\nvec4 picking_normalizeColor(vec4 color) {\n  return picking.useFloatColors > 0.5 ? color : color / 255.0;\n}\n\nbool picking_isColorZero(vec3 color) {\n  return dot(color, vec3(1.0)) < 0.00001;\n}\n\nbool picking_isColorValid(vec3 color) {\n  return dot(color, vec3(1.0)) > 0.00001;\n}\n\n// Check if this vertex is highlighted \nbool isVertexHighlighted(vec3 vertexColor) {\n  vec3 highlightedObjectColor = picking_normalizeColor(picking.highlightedObjectColor);\n  return\n    bool(picking.isHighlightActive) && picking_isColorZero(abs(vertexColor - highlightedObjectColor));\n}\n\n// Set the current picking color\nvoid picking_setPickingColor(vec3 pickingColor) {\n  pickingColor = picking_normalizeColor(pickingColor);\n\n  if (bool(picking.isActive)) {\n    // Use alpha as the validity flag. If pickingColor is [0, 0, 0] fragment is non-pickable\n    picking_vRGBcolor_Avalid.a = float(picking_isColorValid(pickingColor));\n\n    if (!bool(picking.isAttribute)) {\n      // Stores the picking color so that the fragment shader can render it during picking\n      picking_vRGBcolor_Avalid.rgb = pickingColor;\n    }\n  } else {\n    // Do the comparison with selected item color in vertex shader as it should mean fewer compares\n    picking_vRGBcolor_Avalid.a = float(isVertexHighlighted(pickingColor));\n  }\n}\n\nvoid picking_setPickingAttribute(float value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.r = value;\n  }\n}\n\nvoid picking_setPickingAttribute(vec2 value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.rg = value;\n  }\n}\n\nvoid picking_setPickingAttribute(vec3 value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.rgb = value;\n  }\n}\n`;\n\nconst fs = /* glsl */ `\\\nuniform pickingUniforms {\n  float isActive;\n  float isAttribute;\n  float isHighlightActive;\n  float useFloatColors;\n  vec3 highlightedObjectColor;\n  vec4 highlightColor;\n} picking;\n\nin vec4 picking_vRGBcolor_Avalid;\n\n/*\n * Returns highlight color if this item is selected.\n */\nvec4 picking_filterHighlightColor(vec4 color) {\n  // If we are still picking, we don't highlight\n  if (picking.isActive > 0.5) {\n    return color;\n  }\n\n  bool selected = bool(picking_vRGBcolor_Avalid.a);\n\n  if (selected) {\n    // Blend in highlight color based on its alpha value\n    float highLightAlpha = picking.highlightColor.a;\n    float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);\n    float highLightRatio = highLightAlpha / blendedAlpha;\n\n    vec3 blendedRGB = mix(color.rgb, picking.highlightColor.rgb, highLightRatio);\n    return vec4(blendedRGB, blendedAlpha);\n  } else {\n    return color;\n  }\n}\n\n/*\n * Returns picking color if picking enabled else unmodified argument.\n */\nvec4 picking_filterPickingColor(vec4 color) {\n  if (bool(picking.isActive)) {\n    if (picking_vRGBcolor_Avalid.a == 0.0) {\n      discard;\n    }\n    return picking_vRGBcolor_Avalid;\n  }\n  return color;\n}\n\n/*\n * Returns picking color if picking is enabled if not\n * highlight color if this item is selected, otherwise unmodified argument.\n */\nvec4 picking_filterColor(vec4 color) {\n  vec4 highlightColor = picking_filterHighlightColor(color);\n  return picking_filterPickingColor(highlightColor);\n}\n`;\n\n/**\n * Provides support for color-coding-based picking and highlighting.\n * In particular, supports picking a specific instance in an instanced\n * draw call and highlighting an instance based on its picking color,\n * and correspondingly, supports picking and highlighting groups of\n * primitives with the same picking color in non-instanced draw-calls\n */\nexport const picking = {\n  props: {} as PickingProps,\n  uniforms: {} as PickingUniforms,\n\n  name: 'picking',\n\n  uniformTypes: {\n    isActive: 'f32',\n    isAttribute: 'f32',\n    isHighlightActive: 'f32',\n    useFloatColors: 'f32',\n    highlightedObjectColor: 'vec3<f32>',\n    highlightColor: 'vec4<f32>'\n  },\n  defaultUniforms: {\n    isActive: false,\n    isAttribute: false,\n    isHighlightActive: false,\n    useFloatColors: true,\n    highlightedObjectColor: [0, 0, 0],\n    highlightColor: DEFAULT_HIGHLIGHT_COLOR\n  },\n\n  vs,\n  fs,\n  getUniforms\n} as const satisfies ShaderModule<PickingProps, PickingUniforms>;\n\nfunction getUniforms(opts: PickingProps = {}, prevUniforms?: PickingUniforms): PickingUniforms {\n  const uniforms = {} as PickingUniforms;\n\n  if (opts.highlightedObjectColor === undefined) {\n    // Unless highlightedObjectColor explicitly null or set, do not update state\n  } else if (opts.highlightedObjectColor === null) {\n    uniforms.isHighlightActive = false;\n  } else {\n    uniforms.isHighlightActive = true;\n    const highlightedObjectColor = opts.highlightedObjectColor.slice(0, 3) as NumberArray3;\n    uniforms.highlightedObjectColor = highlightedObjectColor;\n  }\n\n  if (opts.highlightColor) {\n    const color = Array.from(opts.highlightColor, x => x / 255);\n    if (!Number.isFinite(color[3])) {\n      color[3] = 1;\n    }\n    uniforms.highlightColor = color as NumberArray4;\n  }\n\n  if (opts.isActive !== undefined) {\n    uniforms.isActive = Boolean(opts.isActive);\n    uniforms.isAttribute = Boolean(opts.isAttribute);\n  }\n\n  if (opts.useFloatColors !== undefined) {\n    uniforms.useFloatColors = Boolean(opts.useFloatColors);\n  }\n\n  return uniforms;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nexport const lightingUniformsGLSL = /* glsl */ `\\\nprecision highp int;\n\n// #if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\nstruct AmbientLight {\n  vec3 color;\n};\n\nstruct PointLight {\n  vec3 color;\n  vec3 position;\n  vec3 attenuation; // 2nd order x:Constant-y:Linear-z:Exponential\n};\n\nstruct DirectionalLight {\n  vec3 color;\n  vec3 direction;\n};\n\nuniform lightingUniforms {\n  int enabled;\n  int lightType;\n\n  int directionalLightCount;\n  int pointLightCount;\n\n  vec3 ambientColor;\n\n  vec3 lightColor0;\n  vec3 lightPosition0;\n  vec3 lightDirection0;\n  vec3 lightAttenuation0;\n\n  vec3 lightColor1;\n  vec3 lightPosition1;\n  vec3 lightDirection1;\n  vec3 lightAttenuation1;\n\n  vec3 lightColor2;\n  vec3 lightPosition2;\n  vec3 lightDirection2;\n  vec3 lightAttenuation2;\n} lighting;\n\nPointLight lighting_getPointLight(int index) {\n  switch (index) {\n    case 0:\n      return PointLight(lighting.lightColor0, lighting.lightPosition0, lighting.lightAttenuation0);\n    case 1:\n      return PointLight(lighting.lightColor1, lighting.lightPosition1, lighting.lightAttenuation1);\n    case 2:\n    default:  \n      return PointLight(lighting.lightColor2, lighting.lightPosition2, lighting.lightAttenuation2);\n  }\n}\n\nDirectionalLight lighting_getDirectionalLight(int index) {\n  switch (index) {\n    case 0:\n      return DirectionalLight(lighting.lightColor0, lighting.lightDirection0);\n    case 1:\n      return DirectionalLight(lighting.lightColor1, lighting.lightDirection1);\n    case 2:\n    default:   \n      return DirectionalLight(lighting.lightColor2, lighting.lightDirection2);\n  }\n} \n\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\n  return pointLight.attenuation.x\n       + pointLight.attenuation.y * distance\n       + pointLight.attenuation.z * distance * distance;\n}\n\n// #endif\n`;\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nexport const lightingUniformsWGSL = /* wgsl */ `\\\n// #if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\nstruct AmbientLight {\n  color: vec3<f32>,\n};\n\nstruct PointLight {\n  color: vec3<f32>,\n  position: vec3<f32>,\n  attenuation: vec3<f32>, // 2nd order x:Constant-y:Linear-z:Exponential\n};\n\nstruct DirectionalLight {\n  color: vec3<f32>,\n  direction: vec3<f32>,\n};\n\nstruct lightingUniforms {\n  enabled: i32,\n  pointLightCount: i32,\n  directionalLightCount: i32,\n\n  ambientColor: vec3<f32>,\n\n  // TODO - support multiple lights by uncommenting arrays below\n  lightType: i32,\n  lightColor: vec3<f32>,\n  lightDirection: vec3<f32>,\n  lightPosition: vec3<f32>,\n  lightAttenuation: vec3<f32>,\n\n  // AmbientLight ambientLight;\n  // PointLight pointLight[MAX_LIGHTS];\n  // DirectionalLight directionalLight[MAX_LIGHTS];\n};\n\n// Binding 0:1 is reserved for lighting (Note: could go into separate bind group as it is stable across draw calls)\n@binding(1) @group(0) var<uniform> lighting : lightingUniforms;\n\nfn lighting_getPointLight(index: i32) -> PointLight {\n  return PointLight(lighting.lightColor, lighting.lightPosition, lighting.lightAttenuation);\n}\n\nfn lighting_getDirectionalLight(index: i32) -> DirectionalLight {\n  return DirectionalLight(lighting.lightColor, lighting.lightDirection);\n} \n\nfn getPointLightAttenuation(pointLight: PointLight, distance: f32) -> f32 {\n  return pointLight.attenuation.x\n       + pointLight.attenuation.y * distance\n       + pointLight.attenuation.z * distance * distance;\n}\n`;\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {log} from '@luma.gl/core';\nimport {ShaderModule} from '../../../lib/shader-module/shader-module';\nimport {lightingUniformsGLSL} from './lighting-uniforms-glsl';\nimport {lightingUniformsWGSL} from './lighting-uniforms-wgsl';\nimport type {NumberArray3} from '@math.gl/core';\n\n/** Max number of supported lights (in addition to ambient light */\nconst MAX_LIGHTS = 3;\n\n/** Whether to divide */\nconst COLOR_FACTOR = 255.0;\n\n/** Shader type field for lights */\n// eslint-disable-next-line no-shadow\nexport enum LIGHT_TYPE {\n  POINT = 0,\n  DIRECTIONAL = 1\n}\n\n/** Lighting helper types */\n\nexport type Light = AmbientLight | PointLight | DirectionalLight;\n\nexport type AmbientLight = {\n  type: 'ambient';\n  color?: Readonly<NumberArray3>;\n  intensity?: number;\n};\n\nexport type PointLight = {\n  type: 'point';\n  position: Readonly<NumberArray3>;\n  color?: Readonly<NumberArray3>;\n  intensity?: number;\n  attenuation?: Readonly<NumberArray3>;\n};\n\nexport type DirectionalLight = {\n  type: 'directional';\n  direction: Readonly<NumberArray3>;\n  color?: Readonly<NumberArray3>;\n  intensity?: number;\n};\n\nexport type LightingProps = {\n  enabled?: boolean;\n  lights?: Light[];\n  /** @deprecated */\n  ambientLight?: AmbientLight;\n  /** @deprecated */\n  pointLights?: PointLight[];\n  /** @deprecated */\n  directionalLights?: DirectionalLight[];\n};\n\nexport type LightingUniforms = {\n  enabled: number;\n  ambientLightColor: Readonly<NumberArray3>;\n  directionalLightCount: number;\n  pointLightCount: number;\n  lightType: number; // [];\n  lightColor0: Readonly<NumberArray3>;\n  lightPosition0: Readonly<NumberArray3>;\n  lightDirection0: Readonly<NumberArray3>;\n  lightAttenuation0: Readonly<NumberArray3>;\n  lightColor1: Readonly<NumberArray3>;\n  lightPosition1: Readonly<NumberArray3>;\n  lightDirection1: Readonly<NumberArray3>;\n  lightAttenuation1: Readonly<NumberArray3>;\n  lightColor2: Readonly<NumberArray3>;\n  lightPosition2: Readonly<NumberArray3>;\n  lightDirection2: Readonly<NumberArray3>;\n  lightAttenuation2: Readonly<NumberArray3>;\n};\n\n/** UBO ready lighting module */\nexport const lighting = {\n  props: {} as LightingProps,\n  uniforms: {} as LightingUniforms,\n\n  name: 'lighting',\n\n  defines: {\n    MAX_LIGHTS\n  },\n\n  uniformTypes: {\n    enabled: 'i32',\n    lightType: 'i32',\n\n    directionalLightCount: 'i32',\n    pointLightCount: 'i32',\n\n    ambientLightColor: 'vec3<f32>',\n\n    // TODO define as arrays once we have appropriate uniformTypes\n    lightColor0: 'vec3<f32>',\n    lightPosition0: 'vec3<f32>',\n    // TODO - could combine direction and attenuation\n    lightDirection0: 'vec3<f32>',\n    lightAttenuation0: 'vec3<f32>',\n\n    lightColor1: 'vec3<f32>',\n    lightPosition1: 'vec3<f32>',\n    lightDirection1: 'vec3<f32>',\n    lightAttenuation1: 'vec3<f32>',\n    lightColor2: 'vec3<f32>',\n    lightPosition2: 'vec3<f32>',\n    lightDirection2: 'vec3<f32>',\n    lightAttenuation2: 'vec3<f32>'\n  },\n\n  defaultUniforms: {\n    enabled: 1,\n    lightType: LIGHT_TYPE.POINT,\n\n    directionalLightCount: 0,\n    pointLightCount: 0,\n\n    ambientLightColor: [0.1, 0.1, 0.1],\n    lightColor0: [1, 1, 1],\n    lightPosition0: [1, 1, 2],\n    // TODO - could combine direction and attenuation\n    lightDirection0: [1, 1, 1],\n    lightAttenuation0: [1, 0, 0],\n\n    lightColor1: [1, 1, 1],\n    lightPosition1: [1, 1, 2],\n    lightDirection1: [1, 1, 1],\n    lightAttenuation1: [1, 0, 0],\n    lightColor2: [1, 1, 1],\n    lightPosition2: [1, 1, 2],\n    lightDirection2: [1, 1, 1],\n    lightAttenuation2: [1, 0, 0]\n  },\n  source: lightingUniformsWGSL,\n  vs: lightingUniformsGLSL,\n  fs: lightingUniformsGLSL,\n\n  getUniforms\n} as const satisfies ShaderModule<LightingProps, LightingUniforms, {}>;\n\nfunction getUniforms(\n  props?: LightingProps,\n  prevUniforms: Partial<LightingUniforms> = {}\n): LightingUniforms {\n  // Copy props so we can modify\n  props = props ? {...props} : props;\n\n  // TODO legacy\n  if (!props) {\n    return {...lighting.defaultUniforms};\n  }\n  // Support for array of lights. Type of light is detected by type field\n  if (props.lights) {\n    props = {...props, ...extractLightTypes(props.lights), lights: undefined};\n  }\n\n  // Specify lights separately\n  const {ambientLight, pointLights, directionalLights} = props || {};\n  const hasLights =\n    ambientLight ||\n    (pointLights && pointLights.length > 0) ||\n    (directionalLights && directionalLights.length > 0);\n\n  // TODO - this may not be the correct decision\n  if (!hasLights) {\n    return {...lighting.defaultUniforms, enabled: 0};\n  }\n\n  const uniforms = {\n    ...lighting.defaultUniforms,\n    ...prevUniforms,\n    ...getLightSourceUniforms({ambientLight, pointLights, directionalLights})\n  };\n\n  if (props.enabled !== undefined) {\n    uniforms.enabled = props.enabled ? 1 : 0;\n  }\n\n  return uniforms;\n}\n\nfunction getLightSourceUniforms({\n  ambientLight,\n  pointLights = [],\n  directionalLights = []\n}: LightingProps): Partial<LightingUniforms> {\n  const lightSourceUniforms: Partial<LightingUniforms> = {};\n\n  lightSourceUniforms.ambientLightColor = convertColor(ambientLight);\n\n  let currentLight: 0 | 1 | 2 = 0;\n\n  for (const pointLight of pointLights) {\n    lightSourceUniforms.lightType = LIGHT_TYPE.POINT;\n\n    const i = currentLight as 0 | 1 | 2;\n    lightSourceUniforms[`lightColor${i}`] = convertColor(pointLight);\n    lightSourceUniforms[`lightPosition${i}`] = pointLight.position;\n    lightSourceUniforms[`lightAttenuation${i}`] = pointLight.attenuation || [1, 0, 0];\n    currentLight++;\n  }\n\n  for (const directionalLight of directionalLights) {\n    lightSourceUniforms.lightType = LIGHT_TYPE.DIRECTIONAL;\n\n    const i = currentLight as 0 | 1 | 2;\n    lightSourceUniforms[`lightColor${i}`] = convertColor(directionalLight);\n    lightSourceUniforms[`lightDirection${i}`] = directionalLight.direction;\n    currentLight++;\n  }\n\n  if (currentLight > MAX_LIGHTS) {\n    log.warn('MAX_LIGHTS exceeded')();\n  }\n\n  lightSourceUniforms.directionalLightCount = directionalLights.length;\n  lightSourceUniforms.pointLightCount = pointLights.length;\n\n  return lightSourceUniforms;\n}\n\nfunction extractLightTypes(lights: Light[]): LightingProps {\n  const lightSources: LightingProps = {pointLights: [], directionalLights: []};\n  for (const light of lights || []) {\n    switch (light.type) {\n      case 'ambient':\n        // Note: Only uses last ambient light\n        // TODO - add ambient light sources on CPU?\n        lightSources.ambientLight = light;\n        break;\n      case 'directional':\n        lightSources.directionalLights?.push(light);\n        break;\n      case 'point':\n        lightSources.pointLights?.push(light);\n        break;\n      default:\n      // eslint-disable-next-line\n      // console.warn(light.type);\n    }\n  }\n  return lightSources;\n}\n\n/** Take color 0-255 and intensity as input and output 0.0-1.0 range */\nfunction convertColor(\n  colorDef: {color?: Readonly<NumberArray3>; intensity?: number} = {}\n): NumberArray3 {\n  const {color = [0, 0, 0], intensity = 1.0} = colorDef;\n  return color.map(component => (component * intensity) / COLOR_FACTOR) as NumberArray3;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nexport const PHONG_VS = /* glsl */ `\\\nuniform phongMaterialUniforms {\n  uniform float ambient;\n  uniform float diffuse;\n  uniform float shininess;\n  uniform vec3  specularColor;\n} material;\n`;\n\nexport const PHONG_FS = /* glsl */ `\\\nuniform phongMaterialUniforms {\n  uniform float ambient;\n  uniform float diffuse;\n  uniform float shininess;\n  uniform vec3  specularColor;\n} material;\n\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 light_direction, vec3 view_direction, vec3 normal_worldspace, vec3 color) {\n  vec3 halfway_direction = normalize(light_direction + view_direction);\n  float lambertian = dot(light_direction, normal_worldspace);\n  float specular = 0.0;\n  if (lambertian > 0.0) {\n    float specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);\n    specular = pow(specular_angle, material.shininess);\n  }\n  lambertian = max(lambertian, 0.0);\n  return (lambertian * material.diffuse * surfaceColor + specular * material.specularColor) * color;\n}\n\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\n  vec3 lightColor = surfaceColor;\n\n  if (lighting.enabled == 0) {\n    return lightColor;\n  }\n\n  vec3 view_direction = normalize(cameraPosition - position_worldspace);\n  lightColor = material.ambient * surfaceColor * lighting.ambientColor;\n\n  for (int i = 0; i < lighting.pointLightCount; i++) {\n    PointLight pointLight = lighting_getPointLight(i);\n    vec3 light_position_worldspace = pointLight.position;\n    vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n    float light_attenuation = getPointLightAttenuation(pointLight, distance(light_position_worldspace, position_worldspace));\n    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color / light_attenuation);\n  }\n\n  int totalLights = min(MAX_LIGHTS, lighting.pointLightCount + lighting.directionalLightCount);\n  for (int i = lighting.pointLightCount; i < totalLights; i++) {\n    DirectionalLight directionalLight = lighting_getDirectionalLight(i);\n    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n  }\n  \n  return lightColor;\n}\n`;\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nexport const PHONG_WGSL = /* wgsl */ `\\\nstruct phongMaterialUniforms {\n  ambient: f32,\n  diffuse: f32,\n  shininess: f32,\n  specularColor: vec3<f32>,\n};\n\n@binding(2) @group(0) var<uniform> phongMaterial : phongMaterialUniforms;\n\nfn lighting_getLightColor(surfaceColor: vec3<f32>, light_direction: vec3<f32>, view_direction: vec3<f32>, normal_worldspace: vec3<f32>, color: vec3<f32>) -> vec3<f32> {\n  let halfway_direction: vec3<f32> = normalize(light_direction + view_direction);\n  var lambertian: f32 = dot(light_direction, normal_worldspace);\n  var specular: f32 = 0.0;\n  if (lambertian > 0.0) {\n    let specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);\n    specular = pow(specular_angle, phongMaterial.shininess);\n  }\n  lambertian = max(lambertian, 0.0);\n  return (lambertian * phongMaterial.diffuse * surfaceColor + specular * phongMaterial.specularColor) * color;\n}\n\nfn lighting_getLightColor2(surfaceColor: vec3<f32>, cameraPosition: vec3<f32>, position_worldspace: vec3<f32>, normal_worldspace: vec3<f32>) -> vec3<f32> {\n  var lightColor: vec3<f32> = surfaceColor;\n\n  if (lighting.enabled == 0) {\n    return lightColor;\n  }\n\n  let view_direction: vec3<f32> = normalize(cameraPosition - position_worldspace);\n  lightColor = phongMaterial.ambient * surfaceColor * lighting.ambientColor;\n\n  if (lighting.lightType == 0) {\n    let pointLight: PointLight  = lighting_getPointLight(0);\n    let light_position_worldspace: vec3<f32> = pointLight.position;\n    let light_direction: vec3<f32> = normalize(light_position_worldspace - position_worldspace);\n    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n  } else if (lighting.lightType == 1) {\n    var directionalLight: DirectionalLight = lighting_getDirectionalLight(0);\n    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n  }\n  \n  return lightColor;\n  /*\n  for (int i = 0; i < MAX_LIGHTS; i++) {\n    if (i >= lighting.pointLightCount) {\n      break;\n    }\n    PointLight pointLight = lighting.pointLight[i];\n    vec3 light_position_worldspace = pointLight.position;\n    vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n  }\n\n  for (int i = 0; i < MAX_LIGHTS; i++) {\n    if (i >= lighting.directionalLightCount) {\n      break;\n    }\n    DirectionalLight directionalLight = lighting.directionalLight[i];\n    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n  }\n  */\n}\n\nfn lighting_getSpecularLightColor(cameraPosition: vec3<f32>, position_worldspace: vec3<f32>, normal_worldspace: vec3<f32>) -> vec3<f32>{\n  var lightColor = vec3<f32>(0, 0, 0);\n  let surfaceColor = vec3<f32>(0, 0, 0);\n\n  if (lighting.enabled == 0) {\n    let view_direction = normalize(cameraPosition - position_worldspace);\n\n    switch (lighting.lightType) {\n      case 0, default: {\n        let pointLight: PointLight = lighting_getPointLight(0);\n        let light_position_worldspace: vec3<f32> = pointLight.position;\n        let light_direction: vec3<f32> = normalize(light_position_worldspace - position_worldspace);\n        lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n      }\n      case 1: {\n        let directionalLight: DirectionalLight = lighting_getDirectionalLight(0);\n        lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n      }\n    }\n  }\n  return lightColor;\n}\n`;\n\n// TODO - handle multiple lights\n/**\n    for (int i = 0; i < MAX_LIGHTS; i++) {\n      if (i >= lighting.pointLightCount) {\n        break;\n      }\n      PointLight pointLight = lighting_getPointLight(i);\n      vec3 light_position_worldspace = pointLight.position;\n      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n    }\n\n    for (int i = 0; i < MAX_LIGHTS; i++) {\n      if (i >= lighting.directionalLightCount) {\n        break;\n      }\n      PointLight pointLight = lighting_getDirectionalLight(i);\n      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n    }\n  }\n    /**\n    for (int i = 0; i < MAX_LIGHTS; i++) {\n      if (i >= lighting.pointLightCount) {\n        break;\n      }\n      PointLight pointLight = lighting_getPointLight(i);\n      vec3 light_position_worldspace = pointLight.position;\n      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n    }\n\n    for (int i = 0; i < MAX_LIGHTS; i++) {\n      if (i >= lighting.directionalLightCount) {\n        break;\n      }\n      PointLight pointLight = lighting_getDirectionalLight(i);\n      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n    }\n  }\n  */\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {NumberArray3} from '@math.gl/types';\nimport {ShaderModule} from '../../../lib/shader-module/shader-module';\nimport {lighting} from '../lights/lighting';\nimport {PHONG_VS, PHONG_FS} from '../phong-material/phong-shaders-glsl';\nimport {PHONG_WGSL} from '../phong-material/phong-shaders-wgsl';\n\nexport type GouraudMaterialProps = {\n  ambient?: number;\n  diffuse?: number;\n  /** Specularity exponent */\n  shininess?: number;\n  specularColor?: [number, number, number];\n};\n\n/** In Gouraud shading, color is calculated for each triangle vertex normal, and then color is interpolated colors across the triangle */\nexport const gouraudMaterial: ShaderModule<GouraudMaterialProps> = {\n  props: {} as GouraudMaterialProps,\n\n  name: 'gouraudMaterial',\n  // Note these are switched between phong and gouraud\n  vs: PHONG_FS.replace('phongMaterial', 'gouraudMaterial'),\n  fs: PHONG_VS.replace('phongMaterial', 'gouraudMaterial'),\n  source: PHONG_WGSL.replaceAll('phongMaterial', 'gouraudMaterial'),\n  defines: {\n    LIGHTING_VERTEX: 1\n  },\n  dependencies: [lighting],\n  uniformTypes: {\n    ambient: 'f32',\n    diffuse: 'f32',\n    shininess: 'f32',\n    specularColor: 'vec3<f32>'\n  },\n  defaultUniforms: {\n    ambient: 0.35,\n    diffuse: 0.6,\n    shininess: 32,\n    specularColor: [0.15, 0.15, 0.15]\n  },\n\n  getUniforms(props: GouraudMaterialProps) {\n    const uniforms = {...props};\n    if (uniforms.specularColor) {\n      uniforms.specularColor = uniforms.specularColor.map(x => x / 255) as NumberArray3;\n    }\n    return {...gouraudMaterial.defaultUniforms, ...uniforms};\n  }\n};\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Vector3, Matrix4} from '@math.gl/core';\nimport {ShaderModule} from '../../lib/shader-module/shader-module';\nimport type {NumberArray3, NumberArray16} from '@math.gl/core';\n\ntype ProjectionProps = {\n  modelMatrix?: Readonly<Matrix4 | NumberArray16>;\n  viewMatrix?: Readonly<Matrix4 | NumberArray16>;\n  projectionMatrix?: Readonly<Matrix4 | NumberArray16>;\n  cameraPositionWorld?: Readonly<Vector3 | NumberArray3>;\n};\n\nconst IDENTITY_MATRIX: NumberArray16 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\nconst DEFAULT_MODULE_OPTIONS: ProjectionProps = {\n  modelMatrix: IDENTITY_MATRIX,\n  viewMatrix: IDENTITY_MATRIX,\n  projectionMatrix: IDENTITY_MATRIX,\n  cameraPositionWorld: [0, 0, 0]\n};\n\nfunction getUniforms(opts: ProjectionProps = DEFAULT_MODULE_OPTIONS, prevUniforms = {}) {\n  // const viewProjectionInverse = viewProjection.invert();\n  // viewInverseMatrix: view.invert(),\n  // viewProjectionInverseMatrix: viewProjectionInverse\n\n  const uniforms: Record<string, any> = {};\n  if (opts.modelMatrix !== undefined) {\n    uniforms.modelMatrix = opts.modelMatrix;\n  }\n  if (opts.viewMatrix !== undefined) {\n    uniforms.viewMatrix = opts.viewMatrix;\n  }\n  if (opts.projectionMatrix !== undefined) {\n    uniforms.projectionMatrix = opts.projectionMatrix;\n  }\n  if (opts.cameraPositionWorld !== undefined) {\n    uniforms.cameraPositionWorld = opts.cameraPositionWorld;\n  }\n\n  // COMPOSITE UNIFORMS\n  if (opts.projectionMatrix !== undefined && opts.viewMatrix !== undefined) {\n    uniforms.viewProjectionMatrix = new Matrix4(opts.projectionMatrix).multiplyRight(\n      opts.viewMatrix\n    );\n  }\n\n  return uniforms;\n}\n\nconst common = /* glsl */ `\\\nvarying vec4 project_vPositionWorld;\nvarying vec3 project_vNormalWorld;\n\nvec4 project_getPosition_World() {\n  return project_vPositionWorld;\n}\n\nvec3 project_getNormal_World() {\n  return project_vNormalWorld;\n}\n`;\n\nconst vs = `\\\n${common}\n\n// Unprefixed uniforms\nuniform mat4 modelMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewProjectionMatrix;\nuniform vec3 cameraPositionWorld;\n\nstruct World {\n  vec3 position;\n  vec3 normal;\n};\n\nWorld world;\n\nvoid project_setPosition(vec4 position) {\n  project_vPositionWorld = position;\n}\n\nvoid project_setNormal(vec3 normal) {\n  project_vNormalWorld = normal;\n}\n\nvoid project_setPositionAndNormal_World(vec3 position, vec3 normal) {\n  world.position = position;\n  world.normal = normal;\n}\n\nvoid project_setPositionAndNormal_Model(vec3 position, vec3 normal) {\n  world.position = (modelMatrix * vec4(position, 1.)).xyz;\n  world.normal = mat3(modelMatrix) * normal;\n}\n\nvec4 project_model_to_clipspace(vec4 position) {\n  return viewProjectionMatrix * modelMatrix * position;\n}\n\nvec4 project_model_to_clipspace(vec3 position) {\n  return viewProjectionMatrix * modelMatrix * vec4(position, 1.);\n}\n\nvec4 project_world_to_clipspace(vec3 position) {\n  return viewProjectionMatrix * vec4(position, 1.);\n}\n\nvec4 project_view_to_clipspace(vec3 position) {\n  return projectionMatrix * vec4(position, 1.);\n}\n\nvec4 project_to_clipspace(vec3 position) {\n  return viewProjectionMatrix * vec4(position, 1.);\n}\n`;\n\nconst fs = `\n${common}\\\n`;\n\n/**\n * Projects coordinates\n */\nexport const project = {\n  name: 'project',\n  getUniforms,\n  vs,\n  fs\n} as const satisfies ShaderModule<ProjectionProps, ProjectionProps>;\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {ShaderModule} from '../../../lib/shader-module/shader-module';\nimport type {NumericArray} from '../../../types';\nimport {project} from '../../project/project';\n\n/* eslint-disable camelcase */\n\nexport type DirlightOptions = {\n  lightDirection?: NumericArray;\n};\n\nconst DEFAULT_MODULE_OPTIONS: Required<DirlightOptions> = {\n  lightDirection: new Float32Array([1, 1, 2])\n};\n\nfunction getUniforms(opts: DirlightOptions = DEFAULT_MODULE_OPTIONS): Record<string, any> {\n  const uniforms = {};\n  if (opts.lightDirection) {\n    // @ts-expect-error TODO add types\n    uniforms.dirlight_uLightDirection = opts.lightDirection;\n  }\n  return uniforms;\n}\n\nconst fs = /* glsl */ `\\\nuniform vec3 dirlight_uLightDirection;\n\n/*\n * Returns color attenuated by angle from light source\n */\nvec4 dirlight_filterColor(vec4 color) {\n  vec3 normal = project_getNormal_World();\n  float d = abs(dot(normalize(normal), normalize(dirlight_uLightDirection)));\n  return vec4(color.rgb * d, color.a);\n}\n`;\n\n/**\n * Cheap lighting - single directional light, single dot product, one uniform\n */\nexport const dirlight: ShaderModule = {\n  name: 'dirlight',\n  // vs // TODO - reuse normal from geometry module\n  fs,\n  getUniforms,\n  dependencies: [project]\n};\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {ShaderModule} from '@luma.gl/shadertools';\nimport type {LayerProps} from '../../types/layer-props';\n\nconst uniformBlock = `\\\nuniform layerUniforms {\n  uniform float opacity;\n} layer;\n`;\n\nexport type LayerUniforms = {\n  opacity?: number;\n};\n\nexport const layerUniforms = {\n  name: 'layer',\n  vs: uniformBlock,\n  fs: uniformBlock,\n  getUniforms: (props: Partial<LayerProps>) => {\n    return {\n      // apply gamma to opacity to make it visually \"linear\"\n      // TODO - v10: use raw opacity?\n      opacity: Math.pow(props.opacity!, 1 / 2.2)\n    };\n  },\n  uniformTypes: {\n    opacity: 'f32'\n  }\n} as const satisfies ShaderModule<LayerProps, LayerUniforms>;\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {ShaderModule} from '@luma.gl/shadertools';\n\nconst source = /* wgsl */ `\\\nconst SMOOTH_EDGE_RADIUS: f32 = 0.5;\n\nstruct VertexGeometry {\n  position: vec4<f32>,\n  worldPosition: vec3<f32>,\n  worldPositionAlt: vec3<f32>,\n  normal: vec3<f32>,\n  uv: vec2<f32>,\n  pickingColor: vec3<f32>,\n};\n\nvar<private> geometry_: VertexGeometry = VertexGeometry(\n  vec4<f32>(0.0, 0.0, 1.0, 0.0),\n  vec3<f32>(0.0, 0.0, 0.0),\n  vec3<f32>(0.0, 0.0, 0.0),\n  vec3<f32>(0.0, 0.0, 0.0),\n  vec2<f32>(0.0, 0.0),\n  vec3<f32>(0.0, 0.0, 0.0)\n);\n\nstruct FragmentGeometry {\n  uv: vec2<f32>,\n};\n\nvar<private> fragmentGeometry: FragmentGeometry;\n\nfn smoothedge(edge: f32, x: f32) -> f32 {\n  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);\n}\n`;\n\nconst defines = '#define SMOOTH_EDGE_RADIUS 0.5';\n\nconst vs = /* glsl */ `\\\n${defines}\n\nstruct VertexGeometry {\n  vec4 position;\n  vec3 worldPosition;\n  vec3 worldPositionAlt;\n  vec3 normal;\n  vec2 uv;\n  vec3 pickingColor;\n} geometry = VertexGeometry(\n  vec4(0.0, 0.0, 1.0, 0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec2(0.0),\n  vec3(0.0)\n);\n`;\n\nconst fs = /* glsl */ `\\\n${defines}\n\nstruct FragmentGeometry {\n  vec2 uv;\n} geometry;\n\nfloat smoothedge(float edge, float x) {\n  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);\n}\n`;\n\nexport default {\n  name: 'geometry',\n  source,\n  vs,\n  fs\n} as const satisfies ShaderModule;\n", "export const MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nexport const COMPUTE_INTERVAL = 25;\n\nexport enum InputEvent {\n  Start = 1,\n  Move = 2,\n  End = 4,\n  Cancel = 8\n}\n\nexport enum InputDirection {\n  None = 0,\n  Left = 1,\n  Right = 2,\n  Up = 4,\n  Down = 8,\n  Horizontal = 3,\n  Vertical = 12,\n  All = 15\n}\n", "export enum RecognizerState {\n  Possible = 1,\n  Began = 2,\n  Changed = 4,\n  Ended = 8,\n  Recognized = 8, // eslint-disable-line\n  Cancelled = 16,\n  Failed = 32\n}\n", "// magical touchAction value\nexport const TOUCH_ACTION_COMPUTE = 'compute';\nexport const TOUCH_ACTION_AUTO = 'auto';\nexport const TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nexport const TOUCH_ACTION_NONE = 'none';\nexport const TOUCH_ACTION_PAN_X = 'pan-x';\nexport const TOUCH_ACTION_PAN_Y = 'pan-y';\n", "import {\n  TOUCH_ACTION_NONE,\n  TOUCH_ACTION_PAN_X,\n  TOUCH_ACTION_PAN_Y,\n  TOUCH_ACTION_MANIPULATION,\n  TOUCH_ACTION_AUTO\n} from './touchaction-Consts';\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @returns valid touchAction\n */\nexport default function cleanTouchActions(actions: string): string {\n  // none\n  if (actions.includes(TOUCH_ACTION_NONE)) {\n    return TOUCH_ACTION_NONE;\n  }\n\n  const hasPanX = actions.includes(TOUCH_ACTION_PAN_X);\n  const hasPanY = actions.includes(TOUCH_ACTION_PAN_Y);\n\n  // if both pan-x and pan-y are set (different recognizers\n  // for different directions, e.g. horizontal pan but vertical swipe?)\n  // we need none (as otherwise with pan-x pan-y combined none of these\n  // recognizers will work, since the browser would handle all panning\n  if (hasPanX && hasPanY) {\n    return TOUCH_ACTION_NONE;\n  }\n\n  // pan-x OR pan-y\n  if (hasPanX || hasPanY) {\n    return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n  }\n\n  // manipulation\n  if (actions.includes(TOUCH_ACTION_MANIPULATION)) {\n    return TOUCH_ACTION_MANIPULATION;\n  }\n\n  return TOUCH_ACTION_AUTO;\n}\n", "import {TOUCH_ACTION_COMPUTE} from './touchaction-Consts';\nimport cleanTouchActions from './clean-touch-actions';\n\nimport type {Manager} from '../manager';\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n */\nexport class TouchAction {\n  manager: Manager;\n  actions: string = '';\n\n  constructor(manager: Manager, value: string) {\n    this.manager = manager;\n    this.set(value);\n  }\n\n  /**\n   * set the touchAction value on the element or enable the polyfill\n   */\n  set(value: string) {\n    // find out the touch-action by the event handlers\n    if (value === TOUCH_ACTION_COMPUTE) {\n      value = this.compute();\n    }\n\n    if (this.manager.element) {\n      this.manager.element.style.touchAction = value;\n      this.actions = value;\n    }\n  }\n\n  /**\n   * just re-set the touchAction value\n   */\n  update() {\n    this.set(this.manager.options.touchAction);\n  }\n\n  /**\n   * compute the value for the touchAction property based on the recognizer's settings\n   */\n  compute(): string {\n    let actions: string[] = [];\n    for (const recognizer of this.manager.recognizers) {\n      if (recognizer.options.enable) {\n        actions = actions.concat(recognizer.getTouchAction());\n      }\n    }\n    return cleanTouchActions(actions.join(' '));\n  }\n}\n", "/**\n * split string on whitespace\n * @returns {Array} words\n */\nexport function splitStr(str: string): string[] {\n  return str.trim().split(/\\s+/g);\n}\n", "import {splitStr} from './split-str';\n\n/**\n * addEventListener with multiple events at once\n */\nexport function addEventListeners(\n  target: EventTarget | null,\n  types: string,\n  handler: EventListener\n) {\n  if (!target) {\n    return;\n  }\n  for (const type of splitStr(types)) {\n    target.addEventListener(type, handler, false);\n  }\n}\n\n/**\n * removeEventListener with multiple events at once\n */\nexport function removeEventListeners(\n  target: EventTarget | null,\n  types: string,\n  handler: EventListener\n) {\n  if (!target) {\n    return;\n  }\n  for (const type of splitStr(types)) {\n    target.removeEventListener(type, handler, false);\n  }\n}\n", "/**\n * get the window object of an element\n */\nexport function getWindowForElement(element: HTMLElement): Window | null {\n  const doc = element.ownerDocument || (element as unknown as Document);\n  return doc.defaultView;\n}\n", "/**\n * find if a node is in the given parent\n */\nexport default function hasParent(node: HTMLElement, parent: HTMLElement): boolean {\n  let ancestor: Node | null = node;\n  while (ancestor) {\n    if (ancestor === parent) {\n      return true;\n    }\n    ancestor = ancestor.parentNode;\n  }\n  return false;\n}\n", "import type {Point, PointerEventLike} from './types';\n\n/**\n * get the center of all the pointers\n */\nexport function getCenter(pointers: PointerEventLike[]): Point {\n  const pointersLength = pointers.length;\n\n  // no need to loop when only one touch\n  if (pointersLength === 1) {\n    return {\n      x: Math.round(pointers[0].clientX),\n      y: Math.round(pointers[0].clientY)\n    };\n  }\n\n  let x = 0;\n  let y = 0;\n  let i = 0;\n  while (i < pointersLength) {\n    x += pointers[i].clientX;\n    y += pointers[i].clientY;\n    i++;\n  }\n\n  return {\n    x: Math.round(x / pointersLength),\n    y: Math.round(y / pointersLength)\n  };\n}\n", "import {getCenter} from './get-center';\nimport type {RawInput, PointerEventLike, SimpleInput} from './types';\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n */\nexport function simpleCloneInputData(input: RawInput): SimpleInput {\n  // make a simple copy of the pointers because we will get a reference if we don't\n  const pointers: PointerEventLike[] = [];\n  let i = 0;\n  while (i < input.pointers.length) {\n    pointers[i] = {\n      clientX: Math.round(input.pointers[i].clientX),\n      clientY: Math.round(input.pointers[i].clientY)\n    };\n    i++;\n  }\n\n  return {\n    timeStamp: Date.now(),\n    pointers,\n    center: getCenter(pointers),\n    deltaX: input.deltaX,\n    deltaY: input.deltaY\n  };\n}\n", "import type {Point, PointerEventLike} from './types';\n\n/**\n * calculate the absolute distance between two points\n * @returns distance\n */\nexport function getPointDistance(p1: Point, p2: Point): number {\n  const x = p2.x - p1.x;\n  const y = p2.y - p1.y;\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * calculate the absolute distance between two pointer events\n * @returns distance\n */\nexport function getEventDistance(p1: PointerEventLike, p2: PointerEventLike): number {\n  const x = p2.clientX - p1.clientX;\n  const y = p2.clientY - p1.clientY;\n  return Math.sqrt(x * x + y * y);\n}\n", "import {Point, PointerEventLike} from './types';\n\n/**\n * calculate the angle between two coordinates\n * @returns angle in degrees\n */\nexport function getPointAngle(p1: Point, p2: Point) {\n  const x: number = p2.x - p1.x;\n  const y: number = p2.y - p1.y;\n  return (Math.atan2(y, x) * 180) / Math.PI;\n}\n\n/**\n * calculate the angle between two pointer events\n * @returns angle in degrees\n */\nexport function getEventAngle(p1: PointerEventLike, p2: PointerEventLike) {\n  const x: number = p2.clientX - p1.clientX;\n  const y: number = p2.clientY - p1.clientY;\n  return (Math.atan2(y, x) * 180) / Math.PI;\n}\n", "import {InputDirection} from './input-consts';\n\n/**\n * get the direction between two points\n * @returns direction\n */\nexport function getDirection(dx: number, dy: number): InputDirection {\n  if (dx === dy) {\n    return InputDirection.None;\n  }\n\n  if (Math.abs(dx) >= Math.abs(dy)) {\n    return dx < 0 ? InputDirection.Left : InputDirection.Right;\n  }\n  return dy < 0 ? InputDirection.Up : InputDirection.Down;\n}\n", "import {InputEvent} from './input-consts';\nimport type {RawInput, Session} from './types';\n\n/** Populates input.deltaX, input.deltaY */\nexport function computeDeltaXY(\n  session: Session,\n  input: RawInput\n): {\n  deltaX: number;\n  deltaY: number;\n} {\n  // getCenter is called before computeDeltaXY\n  const center = input.center!;\n  let offset = session.offsetDelta;\n  let prevDelta = session.prevDelta;\n  const prevInput = session.prevInput;\n\n  if (input.eventType === InputEvent.Start || prevInput?.eventType === InputEvent.End) {\n    prevDelta = session.prevDelta = {\n      x: prevInput?.deltaX || 0,\n      y: prevInput?.deltaY || 0\n    };\n\n    offset = session.offsetDelta = {\n      x: center.x,\n      y: center.y\n    };\n  }\n\n  return {\n    deltaX: prevDelta!.x + (center.x - offset!.x),\n    deltaY: prevDelta!.y + (center.y - offset!.y)\n  };\n}\n", "import type {Vector} from './types';\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n */\nexport function getVelocity(deltaTime: number, x: number, y: number): Vector {\n  return {\n    x: x / deltaTime || 0,\n    y: y / deltaTime || 0\n  };\n}\n", "import {getEventDistance} from './get-distance';\nimport type {PointerEventLike} from './types';\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n */\nexport function getScale(start: PointerEventLike[], end: PointerEventLike[]): number {\n  return getEventDistance(end[0], end[1]) / getEventDistance(start[0], start[1]);\n}\n", "import {getEventAngle} from './get-angle';\nimport {PointerEventLike} from './types';\n\n/**\n * calculate the rotation degrees between two pointer sets\n * @returns rotation in degrees\n */\nexport function getRotation(start: PointerEventLike[], end: PointerEventLike[]): number {\n  return getEventAngle(end[1], end[0]) - getEventAngle(start[1], start[0]);\n}\n", "import {InputEvent, COMPUTE_INTERVAL} from './input-consts';\nimport {getVelocity} from './get-velocity';\nimport {getDirection} from './get-direction';\n\nimport type {Session, HammerInput} from './types';\n\n/**\n * velocity is calculated every x ms\n */\nexport function computeIntervalInputData(session: Session, input: HammerInput) {\n  const last = session.lastInterval || input;\n  const deltaTime = input.timeStamp - last.timeStamp;\n  let velocity;\n  let velocityX;\n  let velocityY;\n  let direction;\n\n  if (\n    input.eventType !== InputEvent.Cancel &&\n    (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)\n  ) {\n    const deltaX = input.deltaX - last.deltaX;\n    const deltaY = input.deltaY - last.deltaY;\n\n    const v = getVelocity(deltaTime, deltaX, deltaY);\n    velocityX = v.x;\n    velocityY = v.y;\n    velocity = Math.abs(v.x) > Math.abs(v.y) ? v.x : v.y;\n    direction = getDirection(deltaX, deltaY);\n\n    session.lastInterval = input;\n  } else {\n    // use latest velocity info if it doesn't overtake a minimum period\n    velocity = last.velocity;\n    velocityX = last.velocityX;\n    velocityY = last.velocityY;\n    direction = last.direction;\n  }\n\n  input.velocity = velocity;\n  input.velocityX = velocityX;\n  input.velocityY = velocityY;\n  input.direction = direction;\n}\n", "import hasParent from '../utils/has-parent';\nimport {simpleCloneInputData} from './simple-clone-input-data';\nimport {getCenter} from './get-center';\nimport {getPointDistance} from './get-distance';\nimport {getPointAngle} from './get-angle';\nimport {getDirection} from './get-direction';\nimport {computeDeltaXY} from './get-delta-xy';\nimport {getVelocity} from './get-velocity';\nimport {getScale} from './get-scale';\nimport {getRotation} from './get-rotation';\nimport {computeIntervalInputData} from './compute-interval-input-data';\n\nimport type {Manager} from '../manager';\nimport type {RawInput, HammerInput} from './types';\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n */\nexport function computeInputData(manager: Manager, input: RawInput): HammerInput {\n  const {session} = manager;\n  const {pointers} = input;\n  const {length: pointersLength} = pointers;\n\n  // store the first input to calculate the distance and direction\n  if (!session.firstInput) {\n    session.firstInput = simpleCloneInputData(input);\n  }\n\n  // to compute scale and rotation we need to store the multiple touches\n  if (pointersLength > 1 && !session.firstMultiple) {\n    session.firstMultiple = simpleCloneInputData(input);\n  } else if (pointersLength === 1) {\n    session.firstMultiple = false;\n  }\n\n  const {firstInput, firstMultiple} = session;\n  const offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n  const center = (input.center = getCenter(pointers));\n  input.timeStamp = Date.now();\n  input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n  input.angle = getPointAngle(offsetCenter, center);\n  input.distance = getPointDistance(offsetCenter, center);\n\n  const {deltaX, deltaY} = computeDeltaXY(session, input);\n  input.deltaX = deltaX;\n  input.deltaY = deltaY;\n  input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n  const overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n  input.overallVelocityX = overallVelocity.x;\n  input.overallVelocityY = overallVelocity.y;\n  input.overallVelocity =\n    Math.abs(overallVelocity.x) > Math.abs(overallVelocity.y)\n      ? overallVelocity.x\n      : overallVelocity.y;\n\n  input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n  input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n  input.maxPointers = !session.prevInput\n    ? input.pointers.length\n    : input.pointers.length > session.prevInput.maxPointers\n      ? input.pointers.length\n      : session.prevInput.maxPointers;\n\n  // find the correct target\n  let target = manager.element!;\n  if (hasParent(input.srcEvent.target as HTMLElement, target)) {\n    target = input.srcEvent.target as HTMLElement;\n  }\n  input.target = target;\n\n  computeIntervalInputData(session, input as HammerInput);\n\n  // All the optional fields have been populated\n  return input as HammerInput;\n}\n", "import {InputEvent} from './input-consts';\nimport {computeInputData} from './compute-input-data';\n\nimport type {Manager} from '../manager';\nimport type {RawInput} from './types';\n\n/**\n * handle input events\n */\nexport function inputHandler(manager: Manager, eventType: InputEvent, input: RawInput) {\n  const pointersLen = input.pointers.length;\n  const changedPointersLen = input.changedPointers.length;\n  const isFirst = eventType & InputEvent.Start && pointersLen - changedPointersLen === 0;\n  const isFinal =\n    eventType & (InputEvent.End | InputEvent.Cancel) && pointersLen - changedPointersLen === 0;\n\n  input.isFirst = Boolean(isFirst);\n  input.isFinal = Boolean(isFinal);\n\n  if (isFirst) {\n    manager.session = {};\n  }\n\n  // source event is the normalized value of the domEvents\n  // like 'touchstart, mouseup, pointerdown'\n  input.eventType = eventType;\n\n  // compute scale, rotation etc\n  const processedInput = computeInputData(manager, input);\n\n  // emit secret event\n  manager.emit('hammer.input', processedInput);\n\n  manager.recognize(processedInput);\n  manager.session.prevInput = processedInput;\n}\n", "import {addEventListeners, removeEventListeners} from '../utils/event-listeners';\nimport {getWindowForElement} from '../utils/get-window-for-element';\nimport {inputHandler} from './input-handler';\n\nimport {InputEvent} from './input-consts';\nimport type {RawInput} from './types';\nimport type {Manager} from '../manager';\n\n/**\n * create new input type manager\n */\nexport abstract class Input {\n  manager: Manager;\n  element: HTMLElement;\n  target: EventTarget;\n\n  evEl: string = '';\n  evWin: string = '';\n  evTarget: string = '';\n\n  constructor(manager: Manager) {\n    this.manager = manager;\n    this.element = manager.element!;\n    this.target = manager.options.inputTarget || manager.element!;\n  }\n\n  /** smaller wrapper around the handler, for the scope and the enabled state of the manager,\n   * so when disabled the input events are completely bypassed.\n   */\n  protected domHandler = (ev: Event) => {\n    if (this.manager.options.enable) {\n      this.handler(ev);\n    }\n  };\n\n  protected callback(eventType: InputEvent, input: RawInput) {\n    inputHandler(this.manager, eventType, input);\n  }\n\n  /**\n   * should handle the inputEvent data and trigger the callback\n   */\n  abstract handler(ev: Event): void;\n\n  // eslint-disable @typescript-eslint/unbound-method\n  /**\n   * bind the events\n   */\n  init() {\n    addEventListeners(this.element, this.evEl, this.domHandler);\n    addEventListeners(this.target, this.evTarget, this.domHandler);\n    addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n  }\n\n  /**\n   * unbind the events\n   */\n  destroy() {\n    removeEventListeners(this.element, this.evEl, this.domHandler);\n    removeEventListeners(this.target, this.evTarget, this.domHandler);\n    removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n  }\n  // eslint-enable @typescript-eslint/unbound-method\n}\n", "import {InputEvent} from '../input/input-consts';\nimport {Input} from '../input/input';\nimport type {Manager} from '../manager';\n\nconst POINTER_INPUT_MAP = {\n  pointerdown: InputEvent.Start,\n  pointermove: InputEvent.Move,\n  pointerup: InputEvent.End,\n  pointercancel: InputEvent.Cancel,\n  pointerout: InputEvent.Cancel\n} as const;\n\nconst POINTER_ELEMENT_EVENTS = 'pointerdown';\nconst POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n/**\n * Pointer events input\n */\nexport class PointerEventInput extends Input {\n  store: PointerEvent[];\n\n  constructor(manager: Manager) {\n    super(manager);\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    this.store = this.manager.session.pointerEvents = [];\n    this.init();\n  }\n\n  /**\n   * handle mouse events\n   */\n  handler(ev: PointerEvent) {\n    const {store} = this;\n    let removePointer = false;\n\n    // @ts-ignore\n    const eventType = POINTER_INPUT_MAP[ev.type];\n    const pointerType = ev.pointerType;\n\n    const isTouch = pointerType === 'touch';\n\n    // get index of the event in the store\n    let storeIndex = store.findIndex((e) => e.pointerId === ev.pointerId);\n\n    // start and mouse must be down\n    if (eventType & InputEvent.Start && (ev.buttons || isTouch)) {\n      if (storeIndex < 0) {\n        store.push(ev);\n        storeIndex = store.length - 1;\n      }\n    } else if (eventType & (InputEvent.End | InputEvent.Cancel)) {\n      removePointer = true;\n    }\n\n    // it not found, so the pointer hasn't been down (so it's probably a hover)\n    if (storeIndex < 0) {\n      return;\n    }\n\n    // update the event in the store\n    store[storeIndex] = ev;\n\n    this.callback(eventType, {\n      pointers: store,\n      changedPointers: [ev],\n      eventType,\n      pointerType,\n      srcEvent: ev\n    });\n\n    if (removePointer) {\n      // remove from the store\n      store.splice(storeIndex, 1);\n    }\n  }\n}\n", "const VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\n\n/**\n * get the prefixed property\n * @returns prefixed property name\n */\nexport function prefixed(obj: Record<string, any>, property: string): string | undefined {\n  const camelProp = property[0].toUpperCase() + property.slice(1);\n\n  for (const prefix of VENDOR_PREFIXES) {\n    const prop = prefix ? prefix + camelProp : property;\n\n    if (prop in obj) {\n      return prop;\n    }\n  }\n  return undefined;\n}\n", "import {TouchAction} from './touchaction/touchaction';\nimport {PointerEventInput} from './inputs/pointerevent';\nimport {splitStr} from './utils/split-str';\nimport {prefixed} from './utils/prefixed';\nimport {RecognizerState} from './recognizer/recognizer-state';\n\nimport type {Input} from './input/input';\nimport type {Recognizer} from './recognizer/recognizer';\nimport type {Session, HammerInput} from './input/types';\n\nconst STOP = 1;\nconst FORCED_STOP = 2;\n\nexport type ManagerOptions = {\n  /**\n   * The value for the touchAction property/fallback.\n   * When set to `compute` it will magically set the correct value based on the added recognizers.\n   * @default compute\n   */\n  touchAction?: string;\n\n  /**\n   * @default true\n   */\n  enable?: boolean;\n\n  /**\n   * EXPERIMENTAL FEATURE -- can be removed/changed\n   * Change the parent input target element.\n   * If Null, then it is being set the to main element.\n   * @default null\n   */\n  inputTarget?: null | EventTarget;\n\n  /**\n   * Some CSS properties can be used to improve the working of Hammer.\n   * Add them to this method and they will be set when creating a new Manager.\n   */\n  cssProps?: Partial<CSSStyleDeclaration>;\n};\n\nexport type HammerEvent = HammerInput & {\n  type: string;\n  preventDefault: () => void;\n};\nexport type EventHandler = (event: HammerEvent) => void;\n\nconst defaultOptions: Required<ManagerOptions> = {\n  touchAction: 'compute',\n  enable: true,\n  inputTarget: null,\n  cssProps: {\n    /**\n     * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n     */\n    userSelect: 'none',\n    /**\n     * (Webkit) Disable default dragging behavior\n     */\n    // @ts-ignore\n    userDrag: 'none',\n    /**\n     * (iOS only) Disables the default callout shown when you touch and hold a touch target.\n     * When you touch and hold a touch target such as a link, Safari displays\n     * a callout containing information about the link. This property allows you to disable that callout.\n     */\n    // @ts-ignore\n    touchCallout: 'none',\n    /**\n     * (iOS only) Sets the color of the highlight that appears over a link while it's being tapped.\n     */\n    // @ts-ignore\n    tapHighlightColor: 'rgba(0,0,0,0)'\n  }\n};\n\n/**\n * Manager\n */\nexport class Manager {\n  options: Required<ManagerOptions>;\n\n  element: HTMLElement | null;\n  touchAction: TouchAction;\n  oldCssProps: {[prop: string]: any};\n  session: Session;\n  recognizers: Recognizer[];\n  input: Input;\n  handlers: {[event: string]: EventHandler[]};\n\n  constructor(element: HTMLElement, options: ManagerOptions) {\n    this.options = {\n      ...defaultOptions,\n      ...options,\n      cssProps: {...defaultOptions.cssProps, ...options.cssProps},\n      inputTarget: options.inputTarget || element\n    };\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = new PointerEventInput(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    this.toggleCssProps(true);\n  }\n\n  /**\n   * set options\n   */\n  set(options: Partial<ManagerOptions>) {\n    Object.assign(this.options, options);\n\n    // Options that need a little more setup\n    if (options.touchAction) {\n      this.touchAction.update();\n    }\n    if (options.inputTarget) {\n      // Clean up existing event listeners and reinitialize\n      this.input.destroy();\n      this.input.target = options.inputTarget;\n      this.input.init();\n    }\n    return this;\n  }\n\n  /**\n   * stop recognizing for this session.\n   * This session will be discarded, when a new [input]start event is fired.\n   * When forced, the recognizer cycle is stopped immediately.\n   */\n  stop(force?: boolean) {\n    this.session.stopped = force ? FORCED_STOP : STOP;\n  }\n\n  /**\n   * run the recognizers!\n   * called by the inputHandler function on every movement of the pointers (touches)\n   * it walks through all the recognizers and tries to detect the gesture that is being made\n   */\n  recognize(inputData: HammerInput) {\n    const {session} = this;\n    if (session.stopped) {\n      return;\n    }\n\n    // run the touch-action polyfill\n    if (this.session.prevented) {\n      inputData.srcEvent.preventDefault();\n    }\n\n    let recognizer;\n    const {recognizers} = this;\n\n    // this holds the recognizer that is being recognized.\n    // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n    // if no recognizer is detecting a thing, it is set to `null`\n    let {curRecognizer} = session;\n\n    // reset when the last recognizer is recognized\n    // or when we're in a new session\n    if (!curRecognizer || (curRecognizer && curRecognizer.state & RecognizerState.Recognized)) {\n      curRecognizer = session.curRecognizer = null;\n    }\n\n    let i = 0;\n    while (i < recognizers.length) {\n      recognizer = recognizers[i];\n\n      // find out if we are allowed try to recognize the input for this one.\n      // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n      // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n      //      that is being recognized.\n      // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n      //      this can be setup with the `recognizeWith()` method on the recognizer.\n      if (\n        session.stopped !== FORCED_STOP && // 1\n        (!curRecognizer ||\n          recognizer === curRecognizer || // 2\n          recognizer.canRecognizeWith(curRecognizer))\n      ) {\n        // 3\n        recognizer.recognize(inputData);\n      } else {\n        recognizer.reset();\n      }\n\n      // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n      // current active recognizer. but only if we don't already have an active recognizer\n      if (\n        !curRecognizer &&\n        recognizer.state & (RecognizerState.Began | RecognizerState.Changed | RecognizerState.Ended)\n      ) {\n        curRecognizer = session.curRecognizer = recognizer;\n      }\n      i++;\n    }\n  }\n\n  /**\n   * get a recognizer by its event name.\n   */\n  get(recognizerName: string): Recognizer | null {\n    const {recognizers} = this;\n    for (let i = 0; i < recognizers.length; i++) {\n      if (recognizers[i].options.event === recognizerName) {\n        return recognizers[i];\n      }\n    }\n    return null;\n  }\n\n  /**\n   * add a recognizer to the manager\n   * existing recognizers with the same event name will be removed\n   */\n  add(recognizer: Recognizer | Recognizer[]) {\n    if (Array.isArray(recognizer)) {\n      for (const item of recognizer) {\n        this.add(item);\n      }\n      return this;\n    }\n\n    // remove existing\n    const existing = this.get(recognizer.options.event);\n    if (existing) {\n      this.remove(existing);\n    }\n\n    this.recognizers.push(recognizer);\n    recognizer.manager = this;\n\n    this.touchAction.update();\n    return recognizer;\n  }\n\n  /**\n   * remove a recognizer by name or instance\n   */\n  remove(recognizerOrName: Recognizer | string | (Recognizer | string)[]) {\n    if (Array.isArray(recognizerOrName)) {\n      for (const item of recognizerOrName) {\n        this.remove(item);\n      }\n      return this;\n    }\n\n    const recognizer =\n      typeof recognizerOrName === 'string' ? this.get(recognizerOrName) : recognizerOrName;\n\n    // let's make sure this recognizer exists\n    if (recognizer) {\n      const {recognizers} = this;\n      const index = recognizers.indexOf(recognizer);\n\n      if (index !== -1) {\n        recognizers.splice(index, 1);\n        this.touchAction.update();\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * bind event\n   */\n  on(events: string, handler: EventHandler) {\n    if (!events || !handler) {\n      return;\n    }\n    const {handlers} = this;\n    for (const event of splitStr(events)) {\n      handlers[event] = handlers[event] || [];\n      handlers[event].push(handler);\n    }\n  }\n\n  /**\n   * unbind event, leave hander blank to remove all handlers\n   */\n  off(events: string, handler?: EventHandler) {\n    if (!events) {\n      return;\n    }\n\n    const {handlers} = this;\n    for (const event of splitStr(events)) {\n      if (!handler) {\n        delete handlers[event];\n      } else if (handlers[event]) {\n        handlers[event].splice(handlers[event].indexOf(handler), 1);\n      }\n    }\n  }\n\n  /**\n   * emit event to the listeners\n   */\n  emit(event: string, data: HammerInput) {\n    // no handlers, so skip it all\n    const handlers = this.handlers[event] && this.handlers[event].slice();\n    if (!handlers || !handlers.length) {\n      return;\n    }\n\n    const evt = data as HammerEvent;\n    evt.type = event;\n    evt.preventDefault = function () {\n      data.srcEvent.preventDefault();\n    };\n\n    let i = 0;\n    while (i < handlers.length) {\n      handlers[i](evt);\n      i++;\n    }\n  }\n\n  /**\n   * destroy the manager and unbinds all events\n   * it doesn't unbind dom events, that is the user own responsibility\n   */\n  destroy() {\n    this.toggleCssProps(false);\n\n    this.handlers = {};\n    this.session = {};\n    this.input.destroy();\n    this.element = null;\n  }\n\n  /**\n   * add/remove the css properties as defined in manager.options.cssProps\n   */\n  private toggleCssProps(add: boolean) {\n    const {element} = this;\n    if (!element) {\n      return;\n    }\n    for (const [name, value] of Object.entries(this.options.cssProps)) {\n      const prop = prefixed(element.style, name) as any;\n      if (add) {\n        this.oldCssProps[prop] = element.style[prop];\n        element.style[prop] = value as any;\n      } else {\n        element.style[prop] = this.oldCssProps[prop] || '';\n      }\n    }\n    if (!add) {\n      this.oldCssProps = {};\n    }\n  }\n}\n", "/**\n * get a unique id\n */\nlet _uniqueId = 1;\nexport function uniqueId(): number {\n  return _uniqueId++;\n}\n", "import {RecognizerState} from './recognizer-state';\n\n/**\n * get a usable string, used as event postfix\n */\nexport function stateStr(state: RecognizerState) {\n  if (state & RecognizerState.Cancelled) {\n    return 'cancel';\n  } else if (state & RecognizerState.Ended) {\n    return 'end';\n  } else if (state & RecognizerState.Changed) {\n    return 'move';\n  } else if (state & RecognizerState.Began) {\n    return 'start';\n  }\n  return '';\n}\n", "import {RecognizerState} from './recognizer-state';\nimport {uniqueId} from '../utils/unique-id';\nimport {stateStr} from './state-str';\n\nimport type {Manager} from '../manager';\nimport type {HammerInput} from '../input/types';\n\nexport type RecognizerOptions = {\n  /** Name of the event */\n  event: string;\n  /** Enable this recognizer */\n  enable: boolean;\n};\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n */\nexport abstract class Recognizer<OptionsT extends RecognizerOptions = any> {\n  id: number;\n  state: RecognizerState;\n  manager!: Manager;\n\n  readonly options: OptionsT;\n\n  protected simultaneous: {[id: string]: Recognizer};\n  protected requireFail: Recognizer[];\n\n  constructor(options: OptionsT) {\n    this.options = options;\n\n    this.id = uniqueId();\n\n    this.state = RecognizerState.Possible;\n    this.simultaneous = {};\n    this.requireFail = [];\n  }\n\n  /**\n   * set options\n   */\n  set(options: Partial<OptionsT>) {\n    Object.assign(this.options, options);\n\n    // also update the touchAction, in case something changed about the directions/enabled state\n    this.manager.touchAction.update();\n    return this;\n  }\n\n  /**\n   * recognize simultaneous with an other recognizer.\n   */\n  recognizeWith(recognizerOrName: Recognizer | string | (Recognizer | string)[]) {\n    if (Array.isArray(recognizerOrName)) {\n      for (const item of recognizerOrName) {\n        this.recognizeWith(item);\n      }\n      return this;\n    }\n\n    let otherRecognizer: Recognizer | null;\n    if (typeof recognizerOrName === 'string') {\n      otherRecognizer = this.manager.get(recognizerOrName);\n      if (!otherRecognizer) {\n        throw new Error(`Cannot find recognizer ${recognizerOrName}`);\n      }\n    } else {\n      otherRecognizer = recognizerOrName;\n    }\n    const {simultaneous} = this;\n    if (!simultaneous[otherRecognizer.id]) {\n      simultaneous[otherRecognizer.id] = otherRecognizer;\n      otherRecognizer.recognizeWith(this);\n    }\n    return this;\n  }\n\n  /**\n   * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n   */\n  dropRecognizeWith(recognizerOrName: Recognizer | string | (Recognizer | string)[]) {\n    if (Array.isArray(recognizerOrName)) {\n      for (const item of recognizerOrName) {\n        this.dropRecognizeWith(item);\n      }\n      return this;\n    }\n\n    let otherRecognizer: Recognizer | null;\n    if (typeof recognizerOrName === 'string') {\n      otherRecognizer = this.manager.get(recognizerOrName);\n    } else {\n      otherRecognizer = recognizerOrName;\n    }\n    if (otherRecognizer) {\n      delete this.simultaneous[otherRecognizer.id];\n    }\n    return this;\n  }\n\n  /**\n   * recognizer can only run when an other is failing\n   */\n  requireFailure(recognizerOrName: Recognizer | string | (Recognizer | string)[]) {\n    if (Array.isArray(recognizerOrName)) {\n      for (const item of recognizerOrName) {\n        this.requireFailure(item);\n      }\n      return this;\n    }\n\n    let otherRecognizer: Recognizer | null;\n    if (typeof recognizerOrName === 'string') {\n      otherRecognizer = this.manager.get(recognizerOrName);\n      if (!otherRecognizer) {\n        throw new Error(`Cannot find recognizer ${recognizerOrName}`);\n      }\n    } else {\n      otherRecognizer = recognizerOrName;\n    }\n    const {requireFail} = this;\n    if (requireFail.indexOf(otherRecognizer) === -1) {\n      requireFail.push(otherRecognizer);\n      otherRecognizer.requireFailure(this);\n    }\n    return this;\n  }\n\n  /**\n   * drop the requireFailure link. it does not remove the link on the other recognizer.\n   */\n  dropRequireFailure(recognizerOrName: Recognizer | string | (Recognizer | string)[]) {\n    if (Array.isArray(recognizerOrName)) {\n      for (const item of recognizerOrName) {\n        this.dropRequireFailure(item);\n      }\n      return this;\n    }\n\n    let otherRecognizer: Recognizer | null;\n    if (typeof recognizerOrName === 'string') {\n      otherRecognizer = this.manager.get(recognizerOrName);\n    } else {\n      otherRecognizer = recognizerOrName;\n    }\n    if (otherRecognizer) {\n      const index = this.requireFail.indexOf(otherRecognizer);\n      if (index > -1) {\n        this.requireFail.splice(index, 1);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * has require failures boolean\n   */\n  hasRequireFailures(): boolean {\n    return Boolean(this.requireFail.find((recognier) => recognier.options.enable));\n  }\n\n  /**\n   * if the recognizer can recognize simultaneous with an other recognizer\n   */\n  canRecognizeWith(otherRecognizer: Recognizer): boolean {\n    return Boolean(this.simultaneous[otherRecognizer.id]);\n  }\n\n  /**\n   * You should use `tryEmit` instead of `emit` directly to check\n   * that all the needed recognizers has failed before emitting.\n   */\n  protected emit(input?: HammerInput) {\n    // Some recognizers override emit() with their own logic\n    if (!input) return;\n\n    const {state} = this;\n\n    // 'panstart' and 'panmove'\n    if (state < RecognizerState.Ended) {\n      this.manager.emit(this.options.event + stateStr(state), input);\n    }\n\n    // simple 'eventName' events\n    this.manager.emit(this.options.event, input);\n\n    // additional event(panleft, panright, pinchin, pinchout...)\n    if (input.additionalEvent) {\n      this.manager.emit(input.additionalEvent, input);\n    }\n\n    // panend and pancancel\n    if (state >= RecognizerState.Ended) {\n      this.manager.emit(this.options.event + stateStr(state), input);\n    }\n  }\n\n  /**\n   * Check that all the require failure recognizers has failed,\n   * if true, it emits a gesture event,\n   * otherwise, setup the state to FAILED.\n   */\n  protected tryEmit(input?: HammerInput) {\n    if (this.canEmit()) {\n      this.emit(input);\n    } else {\n      // it's failing anyway\n      this.state = RecognizerState.Failed;\n    }\n  }\n\n  /**\n   * can we emit?\n   */\n  protected canEmit(): boolean {\n    let i = 0;\n    while (i < this.requireFail.length) {\n      if (!(this.requireFail[i].state & (RecognizerState.Failed | RecognizerState.Possible))) {\n        return false;\n      }\n      i++;\n    }\n    return true;\n  }\n\n  /**\n   * update the recognizer\n   */\n  recognize(inputData: HammerInput) {\n    // make a new copy of the inputData\n    // so we can change the inputData without messing up the other recognizers\n    const inputDataClone = {...inputData};\n\n    // is is enabled and allow recognizing?\n    if (!this.options.enable) {\n      this.reset();\n      this.state = RecognizerState.Failed;\n      return;\n    }\n\n    // reset when we've reached the end\n    if (\n      this.state &\n      (RecognizerState.Recognized | RecognizerState.Cancelled | RecognizerState.Failed)\n    ) {\n      this.state = RecognizerState.Possible;\n    }\n\n    this.state = this.process(inputDataClone);\n\n    // the recognizer has recognized a gesture\n    // so trigger an event\n    if (\n      this.state &\n      (RecognizerState.Began |\n        RecognizerState.Changed |\n        RecognizerState.Ended |\n        RecognizerState.Cancelled)\n    ) {\n      this.tryEmit(inputDataClone);\n    }\n  }\n\n  /**\n   * return the state of the recognizer\n   * the actual recognizing happens in this method\n   */\n\n  abstract process(inputData: HammerInput): RecognizerState;\n\n  /**\n   * return the preferred touch-action\n   */\n  abstract getTouchAction(): string[];\n\n  /**\n   * return the event names that are emitted by this recognizer\n   */\n  getEventNames(): string[] {\n    return [this.options.event];\n  }\n\n  /**\n   * called when the gesture isn't allowed to recognize\n   * like when another is being recognized or it is disabled\n   */\n  reset(): void {}\n}\n", "import {Recognizer, RecognizerOptions} from '../recognizer/recognizer';\nimport {RecognizerState} from '../recognizer/recognizer-state';\nimport {InputEvent} from '../input/input-consts';\nimport type {HammerInput} from '../input/types';\n\ntype AttrRecognizerOptions = RecognizerOptions & {\n  pointers: number;\n};\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n */\nexport abstract class AttrRecognizer<\n  OptionsT extends AttrRecognizerOptions\n> extends Recognizer<OptionsT> {\n  /**\n   * Used to check if it the recognizer receives valid input, like input.distance > 10.\n   */\n  attrTest(input: HammerInput): boolean {\n    const optionPointers = this.options.pointers;\n    return optionPointers === 0 || input.pointers.length === optionPointers;\n  }\n\n  /**\n   * Process the input and return the state for the recognizer\n   */\n  process(input: HammerInput) {\n    const {state} = this;\n    const {eventType} = input;\n\n    const isRecognized = state & (RecognizerState.Began | RecognizerState.Changed);\n    const isValid = this.attrTest(input);\n\n    // on cancel input and we've recognized before, return STATE_CANCELLED\n    if (isRecognized && (eventType & InputEvent.Cancel || !isValid)) {\n      return state | RecognizerState.Cancelled;\n    } else if (isRecognized || isValid) {\n      if (eventType & InputEvent.End) {\n        return state | RecognizerState.Ended;\n      } else if (!(state & RecognizerState.Began)) {\n        return RecognizerState.Began;\n      }\n      return state | RecognizerState.Changed;\n    }\n    return RecognizerState.Failed;\n  }\n}\n", "/* global setTimeout, clearTimeout */\nimport {Recognizer} from '../recognizer/recognizer';\nimport {TOUCH_ACTION_MANIPULATION} from '../touchaction/touchaction-Consts';\nimport {InputEvent} from '../input/input-consts';\nimport {RecognizerState} from '../recognizer/recognizer-state';\nimport {getPointDistance} from '../input/get-distance';\nimport type {Point, HammerInput} from '../input/types';\n\nexport type TapRecognizerOptions = {\n  /** Name of the event.\n   * @default 'tap'\n   */\n  event?: string;\n  /** Enable this event.\n   * @default true\n   */\n  enable?: boolean;\n  /** Required pointers.\n   * @default 1\n   */\n  pointers?: number;\n  /** Required number of taps in succession.\n   * @default 1\n   */\n  taps?: number;\n  /** Maximum time in ms between multiple taps.\n   * @default 300\n   */\n  interval?: number;\n  /** Maximum press time in ms.\n   * @default 250\n   */\n  time?: number;\n  /** While doing a tap some small movement is allowed.\n   * @default 9\n   */\n  threshold?: number;\n  /** The maximum position difference between multiple taps.\n   * @default 10\n   */\n  posThreshold?: number;\n};\n\n/**\n * A tap is recognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n */\nexport class TapRecognizer extends Recognizer<Required<TapRecognizerOptions>> {\n  /** previous time for tap counting */\n  private pTime: number | null = null;\n  /** previous center for tap counting */\n  private pCenter: Point | null = null;\n\n  private _timer: any = null;\n  private _input: HammerInput | null = null;\n\n  private count: number = 0;\n\n  constructor(options: TapRecognizerOptions = {}) {\n    super({\n      enable: true,\n      event: 'tap',\n      pointers: 1,\n      taps: 1,\n      interval: 300,\n      time: 250,\n      threshold: 9,\n      posThreshold: 10,\n      ...options\n    });\n  }\n\n  getTouchAction() {\n    return [TOUCH_ACTION_MANIPULATION];\n  }\n\n  process(input: HammerInput) {\n    const {options} = this;\n\n    const validPointers = input.pointers.length === options.pointers;\n    const validMovement = input.distance < options.threshold;\n    const validTouchTime = input.deltaTime < options.time;\n\n    this.reset();\n\n    if (input.eventType & InputEvent.Start && this.count === 0) {\n      return this.failTimeout();\n    }\n\n    // we only allow little movement\n    // and we've reached an end event, so a tap is possible\n    if (validMovement && validTouchTime && validPointers) {\n      if (input.eventType !== InputEvent.End) {\n        return this.failTimeout();\n      }\n\n      const validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;\n      const validMultiTap =\n        !this.pCenter || getPointDistance(this.pCenter, input.center) < options.posThreshold;\n\n      this.pTime = input.timeStamp;\n      this.pCenter = input.center;\n\n      if (!validMultiTap || !validInterval) {\n        this.count = 1;\n      } else {\n        this.count += 1;\n      }\n\n      this._input = input;\n\n      // if tap count matches we have recognized it,\n      // else it has began recognizing...\n      const tapCount = this.count % options.taps;\n      if (tapCount === 0) {\n        // no failing requirements, immediately trigger the tap event\n        // or wait as long as the multitap interval to trigger\n        if (!this.hasRequireFailures()) {\n          return RecognizerState.Recognized;\n        }\n        this._timer = setTimeout(() => {\n          this.state = RecognizerState.Recognized;\n          this.tryEmit(this._input!);\n        }, options.interval);\n        return RecognizerState.Began;\n      }\n    }\n    return RecognizerState.Failed;\n  }\n\n  failTimeout() {\n    this._timer = setTimeout(() => {\n      this.state = RecognizerState.Failed;\n    }, this.options.interval);\n    return RecognizerState.Failed;\n  }\n\n  reset() {\n    clearTimeout(this._timer);\n  }\n\n  emit(input: HammerInput) {\n    if (this.state === RecognizerState.Recognized) {\n      input.tapCount = this.count;\n      this.manager.emit(this.options.event, input);\n    }\n  }\n}\n", "import {AttrRecognizer} from './attribute';\nimport {InputDirection} from '../input/input-consts';\nimport {RecognizerState} from '../recognizer/recognizer-state';\nimport {TOUCH_ACTION_PAN_X, TOUCH_ACTION_PAN_Y} from '../touchaction/touchaction-Consts';\nimport type {HammerInput} from '../input/types';\n\nexport type PanRecognizerOptions = {\n  /** Name of the event.\n   * @default 'pan'\n   */\n  event?: string;\n  /** Enable this event.\n   * @default true\n   */\n  enable?: boolean;\n  /** Required number of pointers. 0 for all pointers.\n   * @default 1\n   */\n  pointers?: number;\n  /** Required direction of panning.\n   * @default InputDirection.All\n   */\n  direction?: InputDirection;\n  /** Minimal pan distance required before recognizing.\n   * @default 10\n   */\n  threshold?: number;\n};\n\nconst EVENT_NAMES = ['', 'start', 'move', 'end', 'cancel', 'up', 'down', 'left', 'right'] as const;\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n */\nexport class PanRecognizer extends AttrRecognizer<Required<PanRecognizerOptions>> {\n  pX: number | null;\n  pY: number | null;\n\n  constructor(options: PanRecognizerOptions = {}) {\n    super({\n      enable: true,\n      pointers: 1,\n      event: 'pan',\n      threshold: 10,\n      direction: InputDirection.All,\n      ...options\n    });\n    this.pX = null;\n    this.pY = null;\n  }\n\n  getTouchAction(): string[] {\n    const {\n      options: {direction}\n    } = this;\n    const actions: string[] = [];\n    if (direction & InputDirection.Horizontal) {\n      actions.push(TOUCH_ACTION_PAN_Y);\n    }\n    if (direction & InputDirection.Vertical) {\n      actions.push(TOUCH_ACTION_PAN_X);\n    }\n    return actions;\n  }\n\n  getEventNames(): string[] {\n    return EVENT_NAMES.map((suffix) => this.options.event + suffix);\n  }\n\n  directionTest(input: HammerInput): boolean {\n    const {options} = this;\n    let hasMoved = true;\n    let {distance} = input;\n    let {direction} = input;\n    const x = input.deltaX;\n    const y = input.deltaY;\n\n    // lock to axis?\n    if (!(direction & options.direction)) {\n      if (options.direction & InputDirection.Horizontal) {\n        direction =\n          x === 0 ? InputDirection.None : x < 0 ? InputDirection.Left : InputDirection.Right;\n        hasMoved = x !== this.pX;\n        distance = Math.abs(input.deltaX);\n      } else {\n        direction = y === 0 ? InputDirection.None : y < 0 ? InputDirection.Up : InputDirection.Down;\n        hasMoved = y !== this.pY;\n        distance = Math.abs(input.deltaY);\n      }\n    }\n    input.direction = direction;\n    return hasMoved && distance > options.threshold && Boolean(direction & options.direction);\n  }\n\n  attrTest(input: HammerInput): boolean {\n    return (\n      super.attrTest(input) &&\n      (Boolean(this.state & RecognizerState.Began) ||\n        (!(this.state & RecognizerState.Began) && this.directionTest(input)))\n    );\n  }\n\n  emit(input: HammerInput) {\n    this.pX = input.deltaX;\n    this.pY = input.deltaY;\n\n    const direction = InputDirection[input.direction].toLowerCase();\n\n    if (direction) {\n      input.additionalEvent = this.options.event + direction;\n    }\n    super.emit(input);\n  }\n}\n", "import {AttrRecognizer} from './attribute';\nimport {TOUCH_ACTION_NONE} from '../touchaction/touchaction-Consts';\nimport {RecognizerState} from '../recognizer/recognizer-state';\nimport type {HammerInput} from '../input/types';\n\nexport type PinchRecognizerOptions = {\n  /** Name of the event.\n   * @default 'pinch'\n   */\n  event?: string;\n  /** Enable this event.\n   * @default true\n   */\n  enable?: boolean;\n  /** Required number of pointers, with a minimum of 2.\n   * @default 2\n   */\n  pointers?: number;\n  /** Minimal scale before recognizing.\n   * @default 0\n   */\n  threshold?: number;\n};\n\nconst EVENT_NAMES = ['', 'start', 'move', 'end', 'cancel', 'in', 'out'] as const;\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n */\nexport class PinchRecognizer extends AttrRecognizer<Required<PinchRecognizerOptions>> {\n  constructor(options: PinchRecognizerOptions = {}) {\n    super({\n      enable: true,\n      event: 'pinch',\n      threshold: 0,\n      pointers: 2,\n      ...options\n    });\n  }\n\n  getTouchAction() {\n    return [TOUCH_ACTION_NONE];\n  }\n\n  getEventNames(): string[] {\n    return EVENT_NAMES.map((suffix) => this.options.event + suffix);\n  }\n\n  attrTest(input: HammerInput): boolean {\n    return (\n      super.attrTest(input) &&\n      (Math.abs(input.scale - 1) > this.options.threshold ||\n        Boolean(this.state & RecognizerState.Began))\n    );\n  }\n\n  emit(input: HammerInput) {\n    if (input.scale !== 1) {\n      const inOut = input.scale < 1 ? 'in' : 'out';\n      input.additionalEvent = this.options.event + inOut;\n    }\n    super.emit(input);\n  }\n}\n", "// mjolnir.js\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {MjolnirEventRaw} from '../types';\n\nexport interface InputOptions {\n  enable?: boolean;\n}\n\nexport class Input<EventType extends MjolnirEventRaw, Options extends InputOptions> {\n  element: HTMLElement;\n  options: Options;\n  callback: (e: EventType) => void;\n\n  constructor(element: HTMLElement, callback: (e: EventType) => void, options: Options) {\n    this.element = element;\n    this.callback = callback;\n    this.options = options;\n  }\n}\n", "// mjolnir.js\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global'\n\n/* global window, global, document, navigator */\nexport const userAgent =\n  typeof navigator !== 'undefined' && navigator.userAgent ? navigator.userAgent.toLowerCase() : '';\n\nconst window_ = typeof window !== 'undefined' ? window : global;\nconst global_ = typeof global !== 'undefined' ? global : window;\nconst document_ = typeof document !== 'undefined' ? document : {};\n\nexport {window_ as window, global_ as global, document_ as document};\n", "// mjolnir.js\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {MjolnirWheelEventRaw} from '../types';\nimport {Input, InputOptions} from './input';\n\nimport {userAgent} from '../utils/globals';\n\nconst firefox = userAgent.indexOf('firefox') !== -1;\n\n// Constants for normalizing input delta\nconst WHEEL_DELTA_MAGIC_SCALER = 4.000244140625;\nconst WHEEL_DELTA_PER_LINE = 40;\n// Slow down zoom if shift key is held for more precise zooming\nconst SHIFT_MULTIPLIER = 0.25;\n\nexport class WheelInput extends Input<MjolnirWheelEventRaw, Required<InputOptions>> {\n  constructor(\n    element: HTMLElement,\n    callback: (event: MjolnirWheelEventRaw) => void,\n    options: InputOptions\n  ) {\n    super(element, callback, {enable: true, ...options});\n\n    element.addEventListener('wheel', this.handleEvent, {passive: false});\n  }\n\n  destroy() {\n    this.element.removeEventListener('wheel', this.handleEvent);\n  }\n\n  /**\n   * Enable this input (begin processing events)\n   * if the specified event type is among those handled by this input.\n   */\n  enableEventType(eventType: string, enabled: boolean) {\n    if (eventType === 'wheel') {\n      this.options.enable = enabled;\n    }\n  }\n\n  /* eslint-disable complexity, max-statements */\n  handleEvent = (event: WheelEvent) => {\n    if (!this.options.enable) {\n      return;\n    }\n\n    let value = event.deltaY;\n    if (globalThis.WheelEvent) {\n      // Firefox doubles the values on retina screens...\n      if (firefox && event.deltaMode === globalThis.WheelEvent.DOM_DELTA_PIXEL) {\n        value /= globalThis.devicePixelRatio;\n      }\n      if (event.deltaMode === globalThis.WheelEvent.DOM_DELTA_LINE) {\n        value *= WHEEL_DELTA_PER_LINE;\n      }\n    }\n\n    if (value !== 0 && value % WHEEL_DELTA_MAGIC_SCALER === 0) {\n      // This one is definitely a mouse wheel event.\n      // Normalize this value to match trackpad.\n      value = Math.floor(value / WHEEL_DELTA_MAGIC_SCALER);\n    }\n\n    if (event.shiftKey && value) {\n      value = value * SHIFT_MULTIPLIER;\n    }\n\n    this.callback({\n      type: 'wheel',\n      center: {\n        x: event.clientX,\n        y: event.clientY\n      },\n      delta: -value,\n      srcEvent: event,\n      pointerType: 'mouse',\n      target: event.target as HTMLElement\n    });\n  };\n}\n", "// mjolnir.js\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {MjolnirPointerEventRaw} from '../types';\nimport {Input, InputOptions} from './input';\n\nconst MOUSE_EVENTS = [\n  'mousedown',\n  'mousemove',\n  'mouseup',\n  'mouseover',\n  'mouseout',\n  'mouseleave'\n] as const;\n\ntype MoveEventType = 'pointermove' | 'pointerover' | 'pointerout' | 'pointerenter' | 'pointerleave';\n\n/**\n * Hammer.js swallows 'move' events (for pointer/touch/mouse)\n * when the pointer is not down. This class sets up a handler\n * specifically for these events to work around this limitation.\n * Note that this could be extended to more intelligently handle\n * move events across input types, e.g. storing multiple simultaneous\n * pointer/touch events, calculating speed/direction, etc.\n */\nexport class MoveInput extends Input<MjolnirPointerEventRaw, Required<InputOptions>> {\n  pressed: boolean;\n  enableMoveEvent: boolean;\n  enableEnterEvent: boolean;\n  enableLeaveEvent: boolean;\n  enableOutEvent: boolean;\n  enableOverEvent: boolean;\n\n  constructor(\n    element: HTMLElement,\n    callback: (event: MjolnirPointerEventRaw) => void,\n    options: InputOptions\n  ) {\n    super(element, callback, {enable: true, ...options});\n\n    this.pressed = false;\n    const {enable} = this.options;\n\n    this.enableMoveEvent = enable;\n    this.enableLeaveEvent = enable;\n    this.enableEnterEvent = enable;\n    this.enableOutEvent = enable;\n    this.enableOverEvent = enable;\n\n    MOUSE_EVENTS.forEach((event) => element.addEventListener(event, this.handleEvent));\n  }\n\n  destroy() {\n    MOUSE_EVENTS.forEach((event) => this.element.removeEventListener(event, this.handleEvent));\n  }\n\n  /**\n   * Enable this input (begin processing events)\n   * if the specified event type is among those handled by this input.\n   */\n  enableEventType(eventType: string, enabled: boolean) {\n    switch (eventType) {\n      case 'pointermove':\n        this.enableMoveEvent = enabled;\n        break;\n      case 'pointerover':\n        this.enableOverEvent = enabled;\n        break;\n      case 'pointerout':\n        this.enableOutEvent = enabled;\n        break;\n      case 'pointerenter':\n        this.enableEnterEvent = enabled;\n        break;\n      case 'pointerleave':\n        this.enableLeaveEvent = enabled;\n        break;\n      default:\n      // ignore\n    }\n  }\n\n  handleEvent = (event: MouseEvent) => {\n    this.handleOverEvent(event);\n    this.handleOutEvent(event);\n    this.handleEnterEvent(event);\n    this.handleLeaveEvent(event);\n    this.handleMoveEvent(event);\n  };\n\n  handleOverEvent(event: MouseEvent) {\n    if (this.enableOverEvent && event.type === 'mouseover') {\n      this._emit('pointerover', event);\n    }\n  }\n\n  handleOutEvent(event: MouseEvent) {\n    if (this.enableOutEvent && event.type === 'mouseout') {\n      this._emit('pointerout', event);\n    }\n  }\n\n  handleEnterEvent(event: MouseEvent) {\n    if (this.enableEnterEvent && event.type === 'mouseenter') {\n      this._emit('pointerenter', event);\n    }\n  }\n\n  handleLeaveEvent(event: MouseEvent) {\n    if (this.enableLeaveEvent && event.type === 'mouseleave') {\n      this._emit('pointerleave', event);\n    }\n  }\n\n  handleMoveEvent(event: MouseEvent) {\n    if (this.enableMoveEvent) {\n      switch (event.type) {\n        case 'mousedown':\n          if (event.button >= 0) {\n            // Button is down\n            this.pressed = true;\n          }\n          break;\n        case 'mousemove':\n          // Move events use `bottons` to track the button being pressed\n          if (event.buttons === 0) {\n            // Button is not down\n            this.pressed = false;\n          }\n          if (!this.pressed) {\n            // Drag events are emitted by hammer already\n            // we just need to emit the move event on hover\n            this._emit('pointermove', event);\n          }\n          break;\n        case 'mouseup':\n          this.pressed = false;\n          break;\n        default:\n      }\n    }\n  }\n\n  _emit(type: MoveEventType, event: MouseEvent) {\n    this.callback({\n      type,\n      center: {\n        x: event.clientX,\n        y: event.clientY\n      },\n      srcEvent: event,\n      pointerType: 'mouse',\n      target: event.target as HTMLElement\n    });\n  }\n}\n", "// mjolnir.js\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {MjolnirKeyEventRaw} from '../types';\nimport {Input, InputOptions} from './input';\n\nconst KEY_EVENTS = ['keydown', 'keyup'] as const;\n\ntype KeyInputOptions = InputOptions & {\n  tabIndex?: number;\n};\n\nexport class KeyInput extends Input<MjolnirKeyEventRaw, Required<KeyInputOptions>> {\n  enableDownEvent: boolean;\n  enableUpEvent: boolean;\n\n  constructor(\n    element: HTMLElement,\n    callback: (event: MjolnirKeyEventRaw) => void,\n    options: KeyInputOptions\n  ) {\n    super(element, callback, {enable: true, tabIndex: 0, ...options});\n\n    this.enableDownEvent = this.options.enable;\n    this.enableUpEvent = this.options.enable;\n\n    element.tabIndex = this.options.tabIndex;\n    element.style.outline = 'none';\n    KEY_EVENTS.forEach((event) => element.addEventListener(event, this.handleEvent));\n  }\n\n  destroy() {\n    KEY_EVENTS.forEach((event) => this.element.removeEventListener(event, this.handleEvent));\n  }\n\n  /**\n   * Enable this input (begin processing events)\n   * if the specified event type is among those handled by this input.\n   */\n  enableEventType(eventType: string, enabled: boolean) {\n    if (eventType === 'keydown') {\n      this.enableDownEvent = enabled;\n    }\n    if (eventType === 'keyup') {\n      this.enableUpEvent = enabled;\n    }\n  }\n\n  handleEvent = (event: KeyboardEvent) => {\n    // Ignore if focused on text input\n    const targetElement = (event.target || event.srcElement) as HTMLElement;\n    if (\n      (targetElement.tagName === 'INPUT' && (targetElement as HTMLInputElement).type === 'text') ||\n      targetElement.tagName === 'TEXTAREA'\n    ) {\n      return;\n    }\n\n    if (this.enableDownEvent && event.type === 'keydown') {\n      this.callback({\n        type: 'keydown',\n        srcEvent: event,\n        key: event.key,\n        target: event.target as HTMLElement\n      });\n    }\n\n    if (this.enableUpEvent && event.type === 'keyup') {\n      this.callback({\n        type: 'keyup',\n        srcEvent: event,\n        key: event.key,\n        target: event.target as HTMLElement\n      });\n    }\n  };\n}\n", "// mjolnir.js\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {MjolnirPointerEventRaw} from '../types';\nimport {Input, InputOptions} from './input';\n\nexport class ContextmenuInput extends Input<MjolnirPointerEventRaw, InputOptions> {\n  constructor(\n    element: HTMLElement,\n    callback: (event: MjolnirPointerEventRaw) => void,\n    options: InputOptions\n  ) {\n    super(element, callback, options);\n\n    element.addEventListener('contextmenu', this.handleEvent);\n  }\n\n  destroy() {\n    this.element.removeEventListener('contextmenu', this.handleEvent);\n  }\n\n  /**\n   * Enable this input (begin processing events)\n   * if the specified event type is among those handled by this input.\n   */\n  enableEventType(eventType: string, enabled: boolean) {\n    if (eventType === 'contextmenu') {\n      this.options.enable = enabled;\n    }\n  }\n\n  handleEvent = (event: MouseEvent) => {\n    if (!this.options.enable) {\n      return;\n    }\n\n    this.callback({\n      type: 'contextmenu',\n      center: {\n        x: event.clientX,\n        y: event.clientY\n      },\n      srcEvent: event,\n      pointerType: 'mouse',\n      target: event.target as HTMLElement\n    });\n  };\n}\n", "// mjolnir.js\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {MjolnirEventRaw, Point} from '../types';\nimport type {HammerEvent} from '../hammerjs/index';\n\n/* Constants */\nconst DOWN_EVENT = 1;\nconst MOVE_EVENT = 2;\nconst UP_EVENT = 4;\nconst MOUSE_EVENTS = {\n  pointerdown: DOWN_EVENT,\n  pointermove: MOVE_EVENT,\n  pointerup: UP_EVENT,\n  mousedown: DOWN_EVENT,\n  mousemove: MOVE_EVENT,\n  mouseup: UP_EVENT\n};\n\n// MouseEvent.button https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\nconst MOUSE_EVENT_BUTTON_LEFT = 0;\nconst MOUSE_EVENT_BUTTON_MIDDLE = 1;\nconst MOUSE_EVENT_BUTTON_RIGHT = 2;\n// MouseEvent.buttons https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\nconst MOUSE_EVENT_BUTTONS_LEFT_MASK = 1;\nconst MOUSE_EVENT_BUTTONS_RIGHT_MASK = 2;\nconst MOUSE_EVENT_BUTTONS_MIDDLE_MASK = 4;\n\n/**\n * Extract the involved mouse button\n */\nexport function whichButtons(event: MjolnirEventRaw): {\n  leftButton: boolean;\n  middleButton: boolean;\n  rightButton: boolean;\n} | null {\n  const eventType = MOUSE_EVENTS[event.srcEvent.type];\n  if (!eventType) {\n    // Not a mouse evet\n    return null;\n  }\n\n  const {buttons, button} = event.srcEvent as PointerEvent;\n  let leftButton = false;\n  let middleButton = false;\n  let rightButton = false;\n\n  if (eventType === MOVE_EVENT) {\n    leftButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_LEFT_MASK);\n    middleButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_MIDDLE_MASK);\n    rightButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_RIGHT_MASK);\n  } else {\n    leftButton = button === MOUSE_EVENT_BUTTON_LEFT;\n    middleButton = button === MOUSE_EVENT_BUTTON_MIDDLE;\n    rightButton = button === MOUSE_EVENT_BUTTON_RIGHT;\n  }\n\n  return {leftButton, middleButton, rightButton};\n}\n\n/**\n * Calculate event position relative to the root element\n */\nexport function getOffsetPosition(\n  event: MjolnirEventRaw,\n  rootElement: HTMLElement\n): {\n  center: Point;\n  offsetCenter: Point;\n} | null {\n  const center = (event as HammerEvent).center;\n\n  // `center` is a hammer.js event property\n  if (!center) {\n    // Not a gestural event\n    return null;\n  }\n\n  const rect = rootElement.getBoundingClientRect();\n\n  // Fix scale for map affected by a CSS transform.\n  // See https://stackoverflow.com/a/26893663/3528533\n  const scaleX = rect.width / rootElement.offsetWidth || 1;\n  const scaleY = rect.height / rootElement.offsetHeight || 1;\n\n  // Calculate center relative to the root element\n  const offsetCenter = {\n    x: (center.x - rect.left - rootElement.clientLeft) / scaleX,\n    y: (center.y - rect.top - rootElement.clientTop) / scaleY\n  };\n\n  return {center, offsetCenter};\n}\n", "// mjolnir.js\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {EventManager} from '../event-manager';\nimport {whichButtons, getOffsetPosition} from './event-utils';\nimport type {\n  MjolnirEventRaw,\n  MjolnirEventWrapper,\n  MjolnirEvent,\n  MjolnirEventHandler\n} from '../types';\n\nexport type HandlerOptions = {\n  /** Optional element from which the event is originated from.\n   * @default 'root'\n   */\n  srcElement?: 'root' | HTMLElement;\n  /** Handler with higher priority will be called first.\n   * Handler with the same priority will be called in the order of registration.\n   * @default 0\n   */\n  priority?: number;\n};\n\ntype EventHandler = {\n  type: string;\n  handler: (event: MjolnirEvent) => void;\n  once?: boolean;\n  passive?: boolean;\n  srcElement: 'root' | HTMLElement;\n  priority: number;\n};\n\nconst DEFAULT_OPTIONS: Required<HandlerOptions> = {\n  srcElement: 'root',\n  priority: 0\n};\n\nexport class EventRegistrar {\n  eventManager: EventManager;\n  recognizerName: string;\n  handlers: EventHandler[];\n  handlersByElement: Map<'root' | HTMLElement, EventHandler[]>;\n  _active: boolean;\n\n  constructor(eventManager: EventManager, recognizerName: string) {\n    this.eventManager = eventManager;\n    this.recognizerName = recognizerName;\n    this.handlers = [];\n    // Element -> handler map\n    this.handlersByElement = new Map();\n\n    this._active = false;\n  }\n\n  // Returns true if there are no non-passive handlers\n  isEmpty(): boolean {\n    return !this._active;\n  }\n\n  add(\n    type: string,\n    handler: MjolnirEventHandler,\n    options?: HandlerOptions,\n    once: boolean = false,\n    passive: boolean = false\n  ) {\n    const {handlers, handlersByElement} = this;\n    const opts: Required<HandlerOptions> = {...DEFAULT_OPTIONS, ...options};\n\n    let entries = handlersByElement.get(opts.srcElement);\n    if (!entries) {\n      entries = [];\n      handlersByElement.set(opts.srcElement, entries);\n    }\n    const entry: EventHandler = {\n      type,\n      handler,\n      srcElement: opts.srcElement,\n      priority: opts.priority\n    };\n    if (once) {\n      entry.once = true;\n    }\n    if (passive) {\n      entry.passive = true;\n    }\n    handlers.push(entry);\n    this._active = this._active || !entry.passive;\n\n    // Sort handlers by descending priority\n    // Handlers with the same priority are excuted in the order of registration\n    let insertPosition = entries.length - 1;\n    while (insertPosition >= 0) {\n      if (entries[insertPosition].priority >= entry.priority) {\n        break;\n      }\n      insertPosition--;\n    }\n    entries.splice(insertPosition + 1, 0, entry);\n  }\n\n  remove(type: string, handler: MjolnirEventHandler) {\n    const {handlers, handlersByElement} = this;\n\n    for (let i = handlers.length - 1; i >= 0; i--) {\n      const entry = handlers[i];\n\n      if (entry.type === type && entry.handler === handler) {\n        handlers.splice(i, 1);\n        const entries = handlersByElement.get(entry.srcElement)!;\n        entries.splice(entries.indexOf(entry), 1);\n        if (entries.length === 0) {\n          handlersByElement.delete(entry.srcElement);\n        }\n      }\n    }\n    this._active = handlers.some((entry) => !entry.passive);\n  }\n\n  /**\n   * Handles hammerjs event\n   */\n  handleEvent = (event: MjolnirEventRaw) => {\n    if (this.isEmpty()) {\n      return;\n    }\n\n    const mjolnirEvent = this._normalizeEvent(event);\n    let target = event.srcEvent.target as HTMLElement;\n\n    while (target && target !== mjolnirEvent.rootElement) {\n      this._emit(mjolnirEvent, target);\n      if (mjolnirEvent.handled) {\n        return;\n      }\n      target = target.parentNode as HTMLElement;\n    }\n    this._emit(mjolnirEvent, 'root');\n  };\n\n  /**\n   * Invoke handlers on a particular element\n   */\n  _emit<T extends MjolnirEventRaw>(\n    event: MjolnirEventWrapper<T>,\n    srcElement: 'root' | HTMLElement\n  ) {\n    const entries = this.handlersByElement.get(srcElement);\n\n    if (entries) {\n      let immediatePropagationStopped = false;\n\n      // Prevents the current event from bubbling up\n      const stopPropagation = () => {\n        event.handled = true;\n      };\n      // Prevent any remaining listeners from being called\n      const stopImmediatePropagation = () => {\n        event.handled = true;\n        immediatePropagationStopped = true;\n      };\n      const entriesToRemove: EventHandler[] = [];\n\n      for (let i = 0; i < entries.length; i++) {\n        const {type, handler, once} = entries[i];\n        // @ts-ignore\n        handler({\n          ...event,\n          type,\n          stopPropagation,\n          stopImmediatePropagation\n        });\n        if (once) {\n          entriesToRemove.push(entries[i]);\n        }\n        if (immediatePropagationStopped) {\n          break;\n        }\n      }\n\n      for (let i = 0; i < entriesToRemove.length; i++) {\n        const {type, handler} = entriesToRemove[i];\n        this.remove(type, handler);\n      }\n    }\n  }\n\n  /**\n   * Normalizes hammerjs and custom events to have predictable fields.\n   */\n  _normalizeEvent<T extends MjolnirEventRaw>(event: T): MjolnirEventWrapper<T> {\n    const rootElement = this.eventManager.getElement();\n\n    // @ts-ignore\n    return {\n      ...event,\n      ...whichButtons(event),\n      ...getOffsetPosition(event, rootElement!),\n      preventDefault: () => {\n        event.srcEvent.preventDefault();\n      },\n      stopImmediatePropagation: null,\n      stopPropagation: null,\n      handled: false,\n      rootElement\n    };\n  }\n}\n", "// mjolnir.js\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Manager as HammerManager, Recognizer} from './hammerjs/index';\nimport type {\n  MjolnirEventRaw,\n  MjolnirEvent,\n  MjolnirEventHandler,\n  MjolnirEventHandlers\n} from './types';\n\nimport {WheelInput} from './inputs/wheel-input';\nimport {MoveInput} from './inputs/move-input';\nimport {KeyInput} from './inputs/key-input';\nimport {ContextmenuInput} from './inputs/contextmenu-input';\n\nimport {EventRegistrar, HandlerOptions} from './utils/event-registrar';\n\ntype RecognizerConstructor = {new (options: any): Recognizer};\n\ntype RecognizerTupleNormalized = {\n  recognizer: Recognizer;\n  /** Allow another gesture to be recognized simultaneously with this one.\n   * For example an interaction can trigger pinch and rotate at the same time. */\n  recognizeWith?: string[];\n  /** Another recognizer is mutually exclusive with this one.\n   * For example an interaction could be singletap or doubletap; pan-horizontal or pan-vertical; but never both. */\n  requireFailure?: string[];\n};\n\nexport type RecognizerTuple =\n  | Recognizer\n  | RecognizerConstructor\n  | RecognizerTupleNormalized\n  /** hammer.js/mjolnir.js@2 style */\n  | [\n      recognizer: RecognizerConstructor,\n      options?: any,\n      /** Allow another gesture to be recognized simultaneously with this one.\n       * For example an interaction can trigger pinch and rotate at the same time. */\n      recognizeWith?: string | string[],\n      /** Another recognizer is mutually exclusive with this one.\n       * For example an interaction could be singletap or doubletap; pan-horizontal or pan-vertical; but never both. */\n      requireFailure?: string | string[]\n    ];\n\nexport type EventManagerOptions = {\n  /** Event listeners */\n  events?: MjolnirEventHandlers;\n  /** Gesture recognizers */\n  recognizers?: RecognizerTuple[];\n  /** Touch action to set on the target element.\n   * Use 'compute' to automatically set as the least restrictive value to support the recognizers.\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action\n   * @default 'compute'\n   */\n  touchAction?: 'none' | 'compute' | 'manipulation' | 'pan-x' | 'pan-y' | 'pan-x pan-y';\n  /** Tab index of the target element */\n  tabIndex?: number;\n  /**\n   * Optional CSS properties to be applied to the target element.\n   */\n  cssProps?: Partial<CSSStyleDeclaration>;\n};\n\nfunction normalizeRecognizer(item: RecognizerTuple): RecognizerTupleNormalized {\n  if ('recognizer' in item) {\n    return item;\n  }\n  let recognizer: Recognizer;\n  const itemArray = Array.isArray(item) ? [...item] : [item];\n  if (typeof itemArray[0] === 'function') {\n    // Backward compatibility: v2 / hammerjs style\n    const RecognizerType = itemArray.shift();\n    const options = itemArray.shift() || {};\n    recognizer = new RecognizerType(options);\n  } else {\n    recognizer = itemArray.shift();\n  }\n  return {\n    recognizer,\n    recognizeWith: typeof itemArray[0] === 'string' ? [itemArray[0]] : itemArray[0],\n    requireFailure: typeof itemArray[1] === 'string' ? [itemArray[1]] : itemArray[1]\n  };\n}\n\n// Unified API for subscribing to events about both\n// basic input events (e.g. 'mousemove', 'touchstart', 'wheel')\n// and gestural input (e.g. 'click', 'tap', 'panstart').\n// Delegates gesture related event registration and handling to Hammer.js.\nexport class EventManager {\n  private element: HTMLElement | null;\n  private manager: HammerManager;\n  private options: Required<EventManagerOptions>;\n  private events: Map<string, EventRegistrar>;\n\n  // Custom handlers\n  private wheelInput: WheelInput;\n  private moveInput: MoveInput;\n  private contextmenuInput: ContextmenuInput;\n  private keyInput: KeyInput;\n\n  constructor(element: HTMLElement | null = null, options: EventManagerOptions = {}) {\n    this.options = {\n      recognizers: [],\n      events: {},\n      touchAction: 'compute',\n      tabIndex: 0,\n      cssProps: {},\n      ...options\n    };\n    this.events = new Map();\n    this.element = element;\n\n    if (!element) return;\n\n    this.manager = new HammerManager(element, this.options);\n    for (const item of this.options.recognizers) {\n      const {recognizer, recognizeWith, requireFailure} = normalizeRecognizer(item);\n      this.manager.add(recognizer);\n      if (recognizeWith) {\n        recognizer.recognizeWith(recognizeWith);\n      }\n      if (requireFailure) {\n        recognizer.requireFailure(requireFailure);\n      }\n    }\n\n    this.manager.on('hammer.input', this._onBasicInput);\n\n    // Handle events not handled by Hammer.js:\n    // - mouse wheel\n    // - pointer/touch/mouse move\n    this.wheelInput = new WheelInput(element, this._onOtherEvent, {\n      enable: false\n    });\n    this.moveInput = new MoveInput(element, this._onOtherEvent, {\n      enable: false\n    });\n    this.keyInput = new KeyInput(element, this._onOtherEvent, {\n      enable: false,\n      tabIndex: options.tabIndex\n    });\n    this.contextmenuInput = new ContextmenuInput(element, this._onOtherEvent, {\n      enable: false\n    });\n\n    // Register all passed events.\n    this.on(this.options.events);\n  }\n\n  getElement(): HTMLElement | null {\n    return this.element;\n  }\n\n  // Tear down internal event management implementations.\n  destroy(): void {\n    // manager etc. cannot exist if there is no element\n    if (!this.element) return;\n\n    this.wheelInput.destroy();\n    this.moveInput.destroy();\n    this.keyInput.destroy();\n    this.contextmenuInput.destroy();\n    this.manager.destroy();\n  }\n\n  /** Register multiple event handlers */\n  on(events: MjolnirEventHandlers, opts?: HandlerOptions): void;\n  on<EventT extends MjolnirEvent>(\n    event: EventT['type'],\n    handler: (ev: EventT) => void,\n    opts?: HandlerOptions\n  ): void;\n\n  /** Register an event handler function to be called on `event` */\n  on(event: any, handler: any, opts?: any) {\n    this._addEventHandler(event, handler, opts, false);\n  }\n\n  /** Register an event handler function to be called on `event`, then remove it */\n  once(events: MjolnirEventHandlers, opts?: HandlerOptions): void;\n  once<EventT extends MjolnirEvent>(\n    event: EventT['type'],\n    handler: (ev: EventT) => void,\n    opts?: HandlerOptions\n  ): void;\n\n  once(event: any, handler: any, opts?: any) {\n    this._addEventHandler(event, handler, opts, true);\n  }\n\n  /** Register an event handler function to be called on `event`\n   * This handler does not ask the event to be recognized at all times.\n   * Instead, it only \"intercepts\" the event if some other handler is getting it.\n   */\n  watch(events: MjolnirEventHandlers, opts?: HandlerOptions): void;\n  watch<EventT extends MjolnirEvent>(\n    event: EventT['type'],\n    handler: (ev: EventT) => void,\n    opts?: HandlerOptions\n  ): void;\n\n  watch(event: any, handler: any, opts?: any) {\n    this._addEventHandler(event, handler, opts, false, true);\n  }\n\n  /**\n   * Deregister a previously-registered event handler.\n   */\n  off(events: MjolnirEventHandlers): void;\n  off<EventT extends MjolnirEvent>(event: EventT['type'], handler: (ev: EventT) => void): void;\n\n  off(event: any, handler?: any) {\n    this._removeEventHandler(event, handler);\n  }\n\n  /*\n   * Enable/disable recognizer for the given event\n   */\n  private _toggleRecognizer(name: string, enabled: boolean): void {\n    const {manager} = this;\n    if (!manager) {\n      return;\n    }\n    const recognizer = manager.get(name);\n    if (recognizer) {\n      recognizer.set({enable: enabled});\n      manager.touchAction.update();\n    }\n    this.wheelInput?.enableEventType(name, enabled);\n    this.moveInput?.enableEventType(name, enabled);\n    this.keyInput?.enableEventType(name, enabled);\n    this.contextmenuInput?.enableEventType(name, enabled);\n  }\n\n  /**\n   * Process the event registration for a single event + handler.\n   */\n  private _addEventHandler(\n    event: string | MjolnirEventHandlers,\n    handler: MjolnirEventHandler,\n    opts?: HandlerOptions,\n    once?: boolean,\n    passive?: boolean\n  ) {\n    if (typeof event !== 'string') {\n      // @ts-ignore\n      opts = handler;\n      // If `event` is a map, call `on()` for each entry.\n      for (const [eventName, eventHandler] of Object.entries(event)) {\n        this._addEventHandler(eventName, eventHandler, opts, once, passive);\n      }\n      return;\n    }\n\n    const {manager, events} = this;\n    if (!manager) return;\n\n    let eventRegistrar = events.get(event);\n    if (!eventRegistrar) {\n      // Enable recognizer for this event.\n      const recognizerName = this._getRecognizerName(event) || event;\n\n      eventRegistrar = new EventRegistrar(this, recognizerName);\n      events.set(event, eventRegistrar);\n      // Listen to the event\n      if (manager) {\n        manager.on(event, eventRegistrar.handleEvent);\n      }\n    }\n    eventRegistrar.add(event, handler, opts, once, passive);\n    if (!eventRegistrar.isEmpty()) {\n      this._toggleRecognizer(eventRegistrar.recognizerName, true);\n    }\n  }\n\n  /**\n   * Process the event deregistration for a single event + handler.\n   */\n  private _removeEventHandler(event: string | MjolnirEventHandlers, handler?: MjolnirEventHandler) {\n    if (typeof event !== 'string') {\n      // If `event` is a map, call `off()` for each entry.\n      for (const [eventName, eventHandler] of Object.entries(event)) {\n        this._removeEventHandler(eventName, eventHandler);\n      }\n      return;\n    }\n\n    const {events} = this;\n\n    const eventRegistrar = events.get(event);\n\n    if (!eventRegistrar) {\n      return;\n    }\n\n    eventRegistrar.remove(event, handler!);\n\n    if (eventRegistrar.isEmpty()) {\n      const {recognizerName} = eventRegistrar;\n      // Disable recognizer if no more handlers are attached to its events\n      let isRecognizerUsed = false;\n      for (const eh of events.values()) {\n        if (eh.recognizerName === recognizerName && !eh.isEmpty()) {\n          isRecognizerUsed = true;\n          break;\n        }\n      }\n      if (!isRecognizerUsed) {\n        this._toggleRecognizer(recognizerName, false);\n      }\n    }\n  }\n\n  private _getRecognizerName(event: string): string | undefined {\n    return this.manager.recognizers.find((recognizer) => {\n      return recognizer.getEventNames().includes(event);\n    })?.options.event;\n  }\n\n  /**\n   * Handle basic events using the 'hammer.input' Hammer.js API:\n   * Before running Recognizers, Hammer emits a 'hammer.input' event\n   * with the basic event info. This function emits all basic events\n   * aliased to the \"class\" of event received.\n   * See constants.BASIC_EVENT_CLASSES basic event class definitions.\n   */\n  private _onBasicInput = (event: MjolnirEventRaw) => {\n    this.manager.emit(event.srcEvent.type, event as any);\n  };\n\n  /**\n   * Handle events not supported by Hammer.js,\n   * and pipe back out through same (Hammer) channel used by other events.\n   */\n  private _onOtherEvent = (event: MjolnirEventRaw) => {\n    // console.log('onotherevent', event.type, event)\n    this.manager.emit(event.type, event as any);\n  };\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Note: The numeric values here are matched by shader code in the\n// \"project\" and \"project64\" shader modules. Both places need to be\n// updated.\nimport log from '../utils/log';\nimport {Pan, InputDirection, Pinch, Tap} from 'mjolnir.js';\nimport type {PanRecognizerOptions, PinchRecognizerOptions, TapRecognizerOptions} from 'mjolnir.js';\n\n/**\n * The coordinate system that positions/dimensions are defined in.\n */\nexport const COORDINATE_SYSTEM = {\n  /**\n   * `LNGLAT` if rendering into a geospatial viewport, `CARTESIAN` otherwise\n   */\n  DEFAULT: -1,\n  /**\n   * Positions are interpreted as [longitude, latitude, elevation]\n   * longitude/latitude are in degrees, elevation is in meters.\n   * Dimensions are in meters.\n   */\n  LNGLAT: 1,\n\n  /**\n   * Positions are interpreted as [x, y, z] in meter offsets from the coordinate origin.\n   * Dimensions are in meters.\n   */\n  METER_OFFSETS: 2,\n\n  /**\n   * Positions are interpreted as [deltaLng, deltaLat, elevation] from the coordinate origin.\n   * deltaLng/deltaLat are in degrees, elevation is in meters.\n   * Dimensions are in meters.\n   */\n  LNGLAT_OFFSETS: 3,\n\n  /**\n   * Positions and dimensions are in the common units of the viewport.\n   */\n  CARTESIAN: 0\n} as const;\n\n// Enums cannot be directly exported as they are not transpiled correctly into ES5, see https://github.com/visgl/deck.gl/issues/7130\nexport type CoordinateSystem = -1 | 0 | 1 | 2 | 3;\n\n// Deprecated\n/* eslint-disable accessor-pairs */\nObject.defineProperty(COORDINATE_SYSTEM, 'IDENTITY', {\n  get: () => {\n    log.deprecated('COORDINATE_SYSTEM.IDENTITY', 'COORDINATE_SYSTEM.CARTESIAN')();\n    return 0;\n  }\n});\n/* eslint-enable accessor-pairs */\n\n/**\n * How coordinates are transformed from the world space into the common space.\n */\nexport const PROJECTION_MODE = {\n  /**\n   * Render geospatial data in Web Mercator projection\n   */\n  WEB_MERCATOR: 1,\n  /**\n   * Render geospatial data as a 3D globe\n   */\n  GLOBE: 2,\n\n  /**\n   * (Internal use only) Web Mercator projection at high zoom\n   */\n  WEB_MERCATOR_AUTO_OFFSET: 4,\n\n  /**\n   * No transformation\n   */\n  IDENTITY: 0\n} as const;\n\nexport const UNIT = {\n  common: 0,\n  meters: 1,\n  pixels: 2\n} as const;\n\nexport const EVENT_HANDLERS: {[eventName: string]: string} = {\n  click: 'onClick',\n  dblclick: 'onClick',\n  panstart: 'onDragStart',\n  panmove: 'onDrag',\n  panend: 'onDragEnd'\n} as const;\n\nexport const RECOGNIZERS = {\n  multipan: [Pan, {threshold: 10, direction: InputDirection.Vertical, pointers: 2}],\n  pinch: [Pinch, {}, null, ['multipan']],\n  pan: [Pan, {threshold: 1}, ['pinch'], ['multipan']],\n  dblclick: [Tap, {event: 'dblclick', taps: 2}],\n  click: [Tap, {event: 'click'}, null, ['dblclick']]\n} as const;\nexport type RecognizerOptions = {\n  pinch?: Omit<PinchRecognizerOptions, 'event' | 'enable'>;\n  multipan?: Omit<PanRecognizerOptions, 'event' | 'enable'>;\n  pan?: Omit<PanRecognizerOptions, 'event' | 'enable'>;\n  dblclick?: Omit<TapRecognizerOptions, 'event' | 'enable'>;\n  click?: Omit<TapRecognizerOptions, 'event' | 'enable'>;\n};\n\n/**\n * @deprecated Use string constants directly\n */\nexport const OPERATION = {\n  DRAW: 'draw',\n  MASK: 'mask',\n  TERRAIN: 'terrain'\n} as const;\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nfunction isEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (Array.isArray(a)) {\n    // Special treatment for arrays: compare 1-level deep\n    // This is to support equality of matrix/coordinate props\n    const len = a.length;\n    if (!b || b.length !== len) {\n      return false;\n    }\n\n    for (let i = 0; i < len; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n/**\n * Speed up consecutive function calls by caching the result of calls with identical input\n * https://en.wikipedia.org/wiki/Memoization\n * @param {function} compute - the function to be memoized\n */\nexport default function memoize<In, Out>(compute: (args: In) => Out): (args: In) => Out {\n  let cachedArgs: any = {};\n  let cachedResult: Out;\n\n  return (args: In) => {\n    for (const key in args) {\n      if (!isEqual(args[key], cachedArgs[key])) {\n        cachedResult = compute(args);\n        cachedArgs = args;\n        break;\n      }\n    }\n    return cachedResult;\n  };\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* eslint-disable complexity, camelcase */\n\nimport {mat4, Matrix4Like, vec4} from '@math.gl/core';\n\nimport {COORDINATE_SYSTEM, PROJECTION_MODE} from '../../lib/constants';\n\nimport memoize from '../../utils/memoize';\n\nimport type Viewport from '../../viewports/viewport';\nimport type {CoordinateSystem} from '../../lib/constants';\n\ntype Vec3 = [number, number, number];\ntype Vec4 = [number, number, number, number];\n\n// To quickly set a vector to zero\nconst ZERO_VECTOR: Vec4 = [0, 0, 0, 0];\n// 4x4 matrix that drops 4th component of vector\nconst VECTOR_TO_POINT_MATRIX: Matrix4Like = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0];\nconst IDENTITY_MATRIX: Matrix4Like = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\nconst DEFAULT_PIXELS_PER_UNIT2: Vec3 = [0, 0, 0];\nconst DEFAULT_COORDINATE_ORIGIN: Vec3 = [0, 0, 0];\n\nconst getMemoizedViewportUniforms = memoize(calculateViewportUniforms);\n\nexport function getOffsetOrigin(\n  viewport: Viewport,\n  coordinateSystem: CoordinateSystem,\n  coordinateOrigin: Vec3 = DEFAULT_COORDINATE_ORIGIN\n): {\n  geospatialOrigin: Vec3 | null;\n  shaderCoordinateOrigin: Vec3;\n  offsetMode: boolean;\n} {\n  if (coordinateOrigin.length < 3) {\n    coordinateOrigin = [coordinateOrigin[0], coordinateOrigin[1], 0];\n  }\n\n  let shaderCoordinateOrigin = coordinateOrigin;\n  let geospatialOrigin: Vec3 | null;\n  let offsetMode = true;\n\n  if (\n    coordinateSystem === COORDINATE_SYSTEM.LNGLAT_OFFSETS ||\n    coordinateSystem === COORDINATE_SYSTEM.METER_OFFSETS\n  ) {\n    geospatialOrigin = coordinateOrigin;\n  } else {\n    geospatialOrigin = viewport.isGeospatial\n      ? // @ts-expect-error longitude and latitude are not defined on the base Viewport, but is expected on geospatial viewports\n        [Math.fround(viewport.longitude), Math.fround(viewport.latitude), 0]\n      : null;\n  }\n\n  switch (viewport.projectionMode) {\n    case PROJECTION_MODE.WEB_MERCATOR:\n      if (\n        coordinateSystem === COORDINATE_SYSTEM.LNGLAT ||\n        coordinateSystem === COORDINATE_SYSTEM.CARTESIAN\n      ) {\n        geospatialOrigin = [0, 0, 0];\n        offsetMode = false;\n      }\n      break;\n\n    case PROJECTION_MODE.WEB_MERCATOR_AUTO_OFFSET:\n      if (coordinateSystem === COORDINATE_SYSTEM.LNGLAT) {\n        // viewport center in world space\n        // @ts-expect-error when using LNGLAT coordinates, we expect the viewport to be geospatial, in which case geospatialOrigin is defined\n        shaderCoordinateOrigin = geospatialOrigin;\n      } else if (coordinateSystem === COORDINATE_SYSTEM.CARTESIAN) {\n        // viewport center in common space\n        shaderCoordinateOrigin = [\n          Math.fround(viewport.center[0]),\n          Math.fround(viewport.center[1]),\n          0\n        ];\n        // Geospatial origin (wgs84) must match shaderCoordinateOrigin (common)\n        geospatialOrigin = viewport.unprojectPosition(shaderCoordinateOrigin);\n        shaderCoordinateOrigin[0] -= coordinateOrigin[0];\n        shaderCoordinateOrigin[1] -= coordinateOrigin[1];\n        shaderCoordinateOrigin[2] -= coordinateOrigin[2];\n      }\n      break;\n\n    case PROJECTION_MODE.IDENTITY:\n      shaderCoordinateOrigin = viewport.position.map(Math.fround) as Vec3;\n      shaderCoordinateOrigin[2] = shaderCoordinateOrigin[2] || 0;\n      break;\n\n    case PROJECTION_MODE.GLOBE:\n      offsetMode = false;\n      geospatialOrigin = null;\n      break;\n\n    default:\n      // Unknown projection mode\n      offsetMode = false;\n  }\n\n  return {geospatialOrigin, shaderCoordinateOrigin, offsetMode};\n}\n\n// The code that utilizes Matrix4 does the same calculation as their mat4 counterparts,\n// has lower performance but provides error checking.\nfunction calculateMatrixAndOffset(\n  viewport: Viewport,\n  coordinateSystem: CoordinateSystem,\n  coordinateOrigin: Vec3\n): {\n  viewMatrix: Matrix4Like;\n  viewProjectionMatrix: Matrix4Like;\n  projectionCenter: Vec4;\n  originCommon: Vec4;\n  cameraPosCommon: Vec3;\n  shaderCoordinateOrigin: Vec3;\n  geospatialOrigin: Vec3 | null;\n} {\n  const {viewMatrixUncentered, projectionMatrix} = viewport;\n  let {viewMatrix, viewProjectionMatrix} = viewport;\n\n  let projectionCenter = ZERO_VECTOR;\n  let originCommon: Vec4 = ZERO_VECTOR;\n  let cameraPosCommon: Vec3 = viewport.cameraPosition as Vec3;\n  const {geospatialOrigin, shaderCoordinateOrigin, offsetMode} = getOffsetOrigin(\n    viewport,\n    coordinateSystem,\n    coordinateOrigin\n  );\n\n  if (offsetMode) {\n    // Calculate transformed projectionCenter (using 64 bit precision JS)\n    // This is the key to offset mode precision\n    // (avoids doing this addition in 32 bit precision in GLSL)\n    // @ts-expect-error the 4th component is assigned below\n    originCommon = viewport.projectPosition(geospatialOrigin || shaderCoordinateOrigin);\n\n    cameraPosCommon = [\n      cameraPosCommon[0] - originCommon[0],\n      cameraPosCommon[1] - originCommon[1],\n      cameraPosCommon[2] - originCommon[2]\n    ];\n\n    originCommon[3] = 1;\n\n    // projectionCenter = new Matrix4(viewProjectionMatrix)\n    //   .transformVector([positionPixels[0], positionPixels[1], 0.0, 1.0]);\n    projectionCenter = vec4.transformMat4([], originCommon, viewProjectionMatrix);\n\n    // Always apply uncentered projection matrix if available (shader adds center)\n    viewMatrix = viewMatrixUncentered || viewMatrix;\n\n    // Zero out 4th coordinate (\"after\" model matrix) - avoids further translations\n    // viewMatrix = new Matrix4(viewMatrixUncentered || viewMatrix)\n    //   .multiplyRight(VECTOR_TO_POINT_MATRIX);\n    viewProjectionMatrix = mat4.multiply([], projectionMatrix, viewMatrix);\n    viewProjectionMatrix = mat4.multiply([], viewProjectionMatrix, VECTOR_TO_POINT_MATRIX);\n  }\n\n  return {\n    viewMatrix: viewMatrix as Matrix4Like,\n    viewProjectionMatrix: viewProjectionMatrix as Matrix4Like,\n    projectionCenter,\n    originCommon,\n    cameraPosCommon,\n    shaderCoordinateOrigin,\n    geospatialOrigin\n  };\n}\n\nexport type ProjectUniforms = {\n  coordinateSystem: number;\n  projectionMode: number;\n  coordinateOrigin: Vec3;\n  commonOrigin: Vec3;\n  center: Vec4;\n  // Backward compatibility\n  // TODO: remove in v9\n  pseudoMeters: boolean;\n\n  // Screen size\n  viewportSize: [number, number];\n  devicePixelRatio: number;\n\n  focalDistance: number;\n  commonUnitsPerMeter: Vec3;\n  commonUnitsPerWorldUnit: Vec3;\n  commonUnitsPerWorldUnit2: Vec3;\n  /** 2^zoom */\n  scale: number;\n  wrapLongitude: boolean;\n\n  viewProjectionMatrix: Matrix4Like;\n  modelMatrix: Matrix4Like;\n\n  // This is for lighting calculations\n  cameraPosition: Vec3;\n};\n\nexport type ProjectProps = {\n  viewport: Viewport;\n  devicePixelRatio?: number;\n  modelMatrix?: Matrix4Like | null;\n  coordinateSystem?: CoordinateSystem;\n  coordinateOrigin?: Vec3;\n  autoWrapLongitude?: boolean;\n};\n\n/**\n * Returns uniforms for shaders based on current projection\n * includes: projection matrix suitable for shaders\n *\n * TODO - Ensure this works with any viewport, not just WebMercatorViewports\n *\n * @param {WebMercatorViewport} viewport -\n * @return {Float32Array} - 4x4 projection matrix that can be used in shaders\n */\nexport function getUniformsFromViewport({\n  viewport,\n  devicePixelRatio = 1,\n  modelMatrix = null,\n  // Match Layer.defaultProps\n  coordinateSystem = COORDINATE_SYSTEM.DEFAULT,\n  coordinateOrigin = DEFAULT_COORDINATE_ORIGIN,\n  autoWrapLongitude = false\n}: ProjectProps): ProjectUniforms {\n  if (coordinateSystem === COORDINATE_SYSTEM.DEFAULT) {\n    coordinateSystem = viewport.isGeospatial\n      ? COORDINATE_SYSTEM.LNGLAT\n      : COORDINATE_SYSTEM.CARTESIAN;\n  }\n\n  const uniforms = getMemoizedViewportUniforms({\n    viewport,\n    devicePixelRatio,\n    coordinateSystem,\n    coordinateOrigin\n  });\n\n  uniforms.wrapLongitude = autoWrapLongitude;\n  uniforms.modelMatrix = modelMatrix || IDENTITY_MATRIX;\n\n  return uniforms;\n}\n\nfunction calculateViewportUniforms({\n  viewport,\n  devicePixelRatio,\n  coordinateSystem,\n  coordinateOrigin\n}: {\n  viewport: Viewport;\n  devicePixelRatio: number;\n  coordinateSystem: CoordinateSystem;\n  coordinateOrigin: Vec3;\n}): ProjectUniforms {\n  const {\n    projectionCenter,\n    viewProjectionMatrix,\n    originCommon,\n    cameraPosCommon,\n    shaderCoordinateOrigin,\n    geospatialOrigin\n  } = calculateMatrixAndOffset(viewport, coordinateSystem, coordinateOrigin);\n\n  // Calculate projection pixels per unit\n  const distanceScales = viewport.getDistanceScales();\n\n  const viewportSize: [number, number] = [\n    viewport.width * devicePixelRatio,\n    viewport.height * devicePixelRatio\n  ];\n\n  // Distance at which screen pixels are projected.\n  // Used to scale sizes in clipspace to match screen pixels.\n  // When using Viewport class's default projection matrix, this yields 1 for orthographic\n  // and `viewport.focalDistance` for perspective views\n  const focalDistance =\n    vec4.transformMat4([], [0, 0, -viewport.focalDistance, 1], viewport.projectionMatrix)[3] || 1;\n\n  const uniforms: ProjectUniforms = {\n    // Projection mode values\n    coordinateSystem,\n    projectionMode: viewport.projectionMode,\n    coordinateOrigin: shaderCoordinateOrigin,\n    commonOrigin: originCommon.slice(0, 3) as Vec3,\n    center: projectionCenter,\n\n    // Backward compatibility\n    // TODO: remove in v9\n    // @ts-expect-error _pseudoMeters is only defined on WebMercator viewport\n    pseudoMeters: Boolean(viewport._pseudoMeters),\n\n    // Screen size\n    viewportSize,\n    devicePixelRatio,\n\n    focalDistance,\n    commonUnitsPerMeter: distanceScales.unitsPerMeter as Vec3,\n    commonUnitsPerWorldUnit: distanceScales.unitsPerMeter as Vec3,\n    commonUnitsPerWorldUnit2: DEFAULT_PIXELS_PER_UNIT2,\n    scale: viewport.scale, // This is the mercator scale (2 ** zoom)\n    wrapLongitude: false,\n\n    viewProjectionMatrix,\n    modelMatrix: IDENTITY_MATRIX,\n\n    // This is for lighting calculations\n    cameraPosition: cameraPosCommon\n  };\n\n  if (geospatialOrigin) {\n    // Get high-precision DistanceScales from geospatial viewport\n    // TODO: stricter types in Viewport classes\n    const distanceScalesAtOrigin = viewport.getDistanceScales(geospatialOrigin) as {\n      unitsPerMeter: Vec3;\n      metersPerUnit: Vec3;\n      unitsPerMeter2: Vec3;\n      unitsPerDegree: Vec3;\n      degreesPerUnit: Vec3;\n      unitsPerDegree2: Vec3;\n    };\n    switch (coordinateSystem) {\n      case COORDINATE_SYSTEM.METER_OFFSETS:\n        uniforms.commonUnitsPerWorldUnit = distanceScalesAtOrigin.unitsPerMeter;\n        uniforms.commonUnitsPerWorldUnit2 = distanceScalesAtOrigin.unitsPerMeter2;\n        break;\n\n      case COORDINATE_SYSTEM.LNGLAT:\n      case COORDINATE_SYSTEM.LNGLAT_OFFSETS:\n        // @ts-expect-error _pseudoMeters only exists on WebMercatorView\n        if (!viewport._pseudoMeters) {\n          uniforms.commonUnitsPerMeter = distanceScalesAtOrigin.unitsPerMeter;\n        }\n        uniforms.commonUnitsPerWorldUnit = distanceScalesAtOrigin.unitsPerDegree;\n        uniforms.commonUnitsPerWorldUnit2 = distanceScalesAtOrigin.unitsPerDegree2;\n        break;\n\n      // a.k.a \"preprojected\" positions\n      case COORDINATE_SYSTEM.CARTESIAN:\n        uniforms.commonUnitsPerWorldUnit = [1, 1, distanceScalesAtOrigin.unitsPerMeter[2]];\n        uniforms.commonUnitsPerWorldUnit2 = [0, 0, distanceScalesAtOrigin.unitsPerMeter2[2]];\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return uniforms;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {COORDINATE_SYSTEM, PROJECTION_MODE, UNIT} from '../../lib/constants';\n\n// We are generating these from the js code in constants.js\nconst COORDINATE_SYSTEM_WGSL_CONSTANTS = Object.keys(COORDINATE_SYSTEM)\n  .map(key => `const COORDINATE_SYSTEM_${key}: i32 = ${COORDINATE_SYSTEM[key]};`)\n  .join('');\nconst PROJECTION_MODE_WGSL_CONSTANTS = Object.keys(PROJECTION_MODE)\n  .map(key => `const PROJECTION_MODE_${key}: i32 = ${PROJECTION_MODE[key]};`)\n  .join('');\nconst UNIT_WGSL_CONSTANTS = Object.keys(UNIT)\n  .map(key => `const UNIT_${key.toUpperCase()}: i32 = ${UNIT[key]};`)\n  .join('');\n\nexport const projectWGSLHeader = /* wgsl */ `\\\n${COORDINATE_SYSTEM_WGSL_CONSTANTS}\n${PROJECTION_MODE_WGSL_CONSTANTS}\n${UNIT_WGSL_CONSTANTS}\n\nconst TILE_SIZE: f32 = 512.0;\nconst PI: f32 = 3.1415926536;\nconst WORLD_SCALE: f32 = TILE_SIZE / (PI * 2.0);\nconst ZERO_64_LOW: vec3<f32> = vec3<f32>(0.0, 0.0, 0.0);\nconst EARTH_RADIUS: f32 = 6370972.0; // meters\nconst GLOBE_RADIUS: f32 = 256.0;\n\n// -----------------------------------------------------------------------------\n// Uniform block (converted from GLSL uniform block)\n// -----------------------------------------------------------------------------\nstruct ProjectUniforms {\n  wrapLongitude: i32,\n  coordinateSystem: i32,\n  commonUnitsPerMeter: vec3<f32>,\n  projectionMode: i32,\n  scale: f32,\n  commonUnitsPerWorldUnit: vec3<f32>,\n  commonUnitsPerWorldUnit2: vec3<f32>,\n  center: vec4<f32>,\n  modelMatrix: mat4x4<f32>,\n  viewProjectionMatrix: mat4x4<f32>,\n  viewportSize: vec2<f32>,\n  devicePixelRatio: f32,\n  focalDistance: f32,\n  cameraPosition: vec3<f32>,\n  coordinateOrigin: vec3<f32>,\n  commonOrigin: vec3<f32>,\n  pseudoMeters: i32,\n};\n\n@group(0) @binding(0)\nvar<uniform> project: ProjectUniforms;\n\n// -----------------------------------------------------------------------------\n// Geometry data\n// (In your GLSL code, \"geometry\" was assumed to be available globally. In WGSL,\n// you might supply this via vertex attributes or a uniform. Here we define a\n// uniform struct for demonstration.)\n// -----------------------------------------------------------------------------\n\n// Structure to carry additional geometry data used by deck.gl filters.\nstruct Geometry {\n  worldPosition: vec3<f32>,\n  worldPositionAlt: vec3<f32>,\n  position: vec4<f32>,\n  uv: vec2<f32>,\n  pickingColor: vec3<f32>,\n};\n\n// @group(0) @binding(1)\nvar<private> geometry: Geometry;\n`;\n\nexport const projectWGSL = /* wgsl */ `\\\n${projectWGSLHeader}\n\n// -----------------------------------------------------------------------------\n// Functions\n// -----------------------------------------------------------------------------\n\n// Returns an adjustment factor for commonUnitsPerMeter\nfn _project_size_at_latitude(lat: f32) -> f32 {\n  let y = clamp(lat, -89.9, 89.9);\n  return 1.0 / cos(radians(y));\n}\n\n// Overloaded version: scales a value in meters at a given latitude.\nfn _project_size_at_latitude_m(meters: f32, lat: f32) -> f32 {\n  return meters * project.commonUnitsPerMeter.z * _project_size_at_latitude(lat);\n}\n\n// Computes a non-linear scale factor based on geometry.\n// (Note: This function relies on \"geometry\" being provided.)\nfn project_size() -> f32 {\n  if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR &&\n      project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT &&\n      project.pseudoMeters == 0) {\n    if (geometry.position.w == 0.0) {\n      return _project_size_at_latitude(geometry.worldPosition.y);\n    }\n    let y: f32 = geometry.position.y / TILE_SIZE * 2.0 - 1.0;\n    let y2 = y * y;\n    let y4 = y2 * y2;\n    let y6 = y4 * y2;\n    return 1.0 + 4.9348 * y2 + 4.0587 * y4 + 1.5642 * y6;\n  }\n  return 1.0;\n}\n\n// Overloads to scale offsets (meters to world units)\nfn project_size_float(meters: f32) -> f32 {\n  return meters * project.commonUnitsPerMeter.z * project_size();\n}\n\nfn project_size_vec2(meters: vec2<f32>) -> vec2<f32> {\n  return meters * project.commonUnitsPerMeter.xy * project_size();\n}\n\nfn project_size_vec3(meters: vec3<f32>) -> vec3<f32> {\n  return meters * project.commonUnitsPerMeter * project_size();\n}\n\nfn project_size_vec4(meters: vec4<f32>) -> vec4<f32> {\n  return vec4<f32>(meters.xyz * project.commonUnitsPerMeter, meters.w);\n}\n\n// Returns a rotation matrix aligning the z‑axis with the given up vector.\nfn project_get_orientation_matrix(up: vec3<f32>) -> mat3x3<f32> {\n  let uz = normalize(up);\n  let ux = select(\n    vec3<f32>(1.0, 0.0, 0.0),\n    normalize(vec3<f32>(uz.y, -uz.x, 0.0)),\n    abs(uz.z) == 1.0\n  );\n  let uy = cross(uz, ux);\n  return mat3x3<f32>(ux, uy, uz);\n}\n\n// Since WGSL does not support \"out\" parameters, we return a struct.\nstruct RotationResult {\n  needsRotation: bool,\n  transform: mat3x3<f32>,\n};\n\nfn project_needs_rotation(commonPosition: vec3<f32>) -> RotationResult {\n  if (project.projectionMode == PROJECTION_MODE_GLOBE) {\n    return RotationResult(true, project_get_orientation_matrix(commonPosition));\n  } else {\n    return RotationResult(false, mat3x3<f32>());  // identity alternative if needed\n  };\n}\n\n// Projects a normal vector from the current coordinate system to world space.\nfn project_normal(vector: vec3<f32>) -> vec3<f32> {\n  let normal_modelspace = project.modelMatrix * vec4<f32>(vector, 0.0);\n  var n = normalize(normal_modelspace.xyz * project.commonUnitsPerMeter);\n  let rotResult = project_needs_rotation(geometry.position.xyz);\n  if (rotResult.needsRotation) {\n    n = rotResult.transform * n;\n  }\n  return n;\n}\n\n// Applies a scale offset based on y-offset (dy)\nfn project_offset_(offset: vec4<f32>) -> vec4<f32> {\n  let dy: f32 = offset.y;\n  let commonUnitsPerWorldUnit = project.commonUnitsPerWorldUnit + project.commonUnitsPerWorldUnit2 * dy;\n  return vec4<f32>(offset.xyz * commonUnitsPerWorldUnit, offset.w);\n}\n\n// Projects lng/lat coordinates to a unit tile [0,1]\nfn project_mercator_(lnglat: vec2<f32>) -> vec2<f32> {\n  var x = lnglat.x;\n  if (project.wrapLongitude != 0) {\n    x = ((x + 180.0) % 360.0) - 180.0;\n  }\n  let y = clamp(lnglat.y, -89.9, 89.9);\n  return vec2<f32>(\n    radians(x) + PI,\n    PI + log(tan(PI * 0.25 + radians(y) * 0.5))\n  ) * WORLD_SCALE;\n}\n\n// Projects lng/lat/z coordinates for a globe projection.\nfn project_globe_(lnglatz: vec3<f32>) -> vec3<f32> {\n  let lambda = radians(lnglatz.x);\n  let phi = radians(lnglatz.y);\n  let cosPhi = cos(phi);\n  let D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;\n  return vec3<f32>(\n    sin(lambda) * cosPhi,\n    -cos(lambda) * cosPhi,\n    sin(phi)\n  ) * D;\n}\n\n// Projects positions (with an optional 64-bit low part) from the input\n// coordinate system to the common space.\nfn project_position_vec4_f64(position: vec4<f32>, position64Low: vec3<f32>) -> vec4<f32> {\n  var position_world = project.modelMatrix * position;\n\n  // Work around for a Mac+NVIDIA bug:\n  if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR) {\n    if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4<f32>(\n        project_mercator_(position_world.xy),\n        _project_size_at_latitude_m(position_world.z, position_world.y),\n        position_world.w\n      );\n    }\n    if (project.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {\n      position_world = vec4f(position_world.xyz + project.coordinateOrigin, position_world.w);\n    }\n  }\n  if (project.projectionMode == PROJECTION_MODE_GLOBE) {\n    if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4<f32>(\n        project_globe_(position_world.xyz),\n        position_world.w\n      );\n    }\n  }\n  if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\n    if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      if (abs(position_world.y - project.coordinateOrigin.y) > 0.25) {\n        return vec4<f32>(\n          project_mercator_(position_world.xy) - project.commonOrigin.xy,\n          project_size_float(position_world.z),\n          position_world.w\n        );\n      }\n    }\n  }\n  if (project.projectionMode == PROJECTION_MODE_IDENTITY ||\n      (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&\n       (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\n        project.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {\n    position_world = vec4f(position_world.xyz - project.coordinateOrigin, position_world.w);\n  }\n\n  return project_offset_(position_world) +\n         project_offset_(project.modelMatrix * vec4<f32>(position64Low, 0.0));\n}\n\n// Overloaded versions for different input types.\nfn project_position_vec4_f32(position: vec4<f32>) -> vec4<f32> {\n  return project_position_vec4_f64(position, ZERO_64_LOW);\n}\n\nfn project_position_vec3_f64(position: vec3<f32>, position64Low: vec3<f32>) -> vec3<f32> {\n  let projected_position = project_position_vec4_f64(vec4<f32>(position, 1.0), position64Low);\n  return projected_position.xyz;\n}\n\nfn project_position_vec3_f32(position: vec3<f32>) -> vec3<f32> {\n  let projected_position = project_position_vec4_f64(vec4<f32>(position, 1.0), ZERO_64_LOW);\n  return projected_position.xyz;\n}\n\nfn project_position_vec2_f32(position: vec2<f32>) -> vec2<f32> {\n  let projected_position = project_position_vec4_f64(vec4<f32>(position, 0.0, 1.0), ZERO_64_LOW);\n  return projected_position.xy;\n}\n\n// Transforms a common space position to clip space.\nfn project_common_position_to_clipspace_with_projection(position: vec4<f32>, viewProjectionMatrix: mat4x4<f32>, center: vec4<f32>) -> vec4<f32> {\n  return viewProjectionMatrix * position + center;\n}\n\n// Uses the project viewProjectionMatrix and center.\nfn project_common_position_to_clipspace(position: vec4<f32>) -> vec4<f32> {\n  return project_common_position_to_clipspace_with_projection(position, project.viewProjectionMatrix, project.center);\n}\n\n// Returns a clip space offset corresponding to a given number of screen pixels.\nfn project_pixel_size_to_clipspace(pixels: vec2<f32>) -> vec2<f32> {\n  let offset = pixels / project.viewportSize * project.devicePixelRatio * 2.0;\n  return offset * project.focalDistance;\n}\n\nfn project_meter_size_to_pixel(meters: f32) -> f32 {\n  return project_size_float(meters) * project.scale;\n}\n\nfn project_unit_size_to_pixel(size: f32, unit: i32) -> f32 {\n  if (unit == UNIT_METERS) {\n    return project_meter_size_to_pixel(size);\n  } else if (unit == UNIT_COMMON) {\n    return size * project.scale;\n  }\n  // UNIT_PIXELS: no scaling applied.\n  return size;\n}\n\nfn project_pixel_size_float(pixels: f32) -> f32 {\n  return pixels / project.scale;\n}\n\nfn project_pixel_size_vec2(pixels: vec2<f32>) -> vec2<f32> {\n  return pixels / project.scale;\n}\n`;\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {COORDINATE_SYSTEM, PROJECTION_MODE, UNIT} from '../../lib/constants';\n\n// We are generating these from the js code in constants.js\nconst COORDINATE_SYSTEM_GLSL_CONSTANTS = Object.keys(COORDINATE_SYSTEM)\n  .map(key => `const int COORDINATE_SYSTEM_${key} = ${COORDINATE_SYSTEM[key]};`)\n  .join('');\nconst PROJECTION_MODE_GLSL_CONSTANTS = Object.keys(PROJECTION_MODE)\n  .map(key => `const int PROJECTION_MODE_${key} = ${PROJECTION_MODE[key]};`)\n  .join('');\nconst UNIT_GLSL_CONSTANTS = Object.keys(UNIT)\n  .map(key => `const int UNIT_${key.toUpperCase()} = ${UNIT[key]};`)\n  .join('');\n\nexport const projectGLSL = /* glsl */ `\\\n${COORDINATE_SYSTEM_GLSL_CONSTANTS}\n${PROJECTION_MODE_GLSL_CONSTANTS}\n${UNIT_GLSL_CONSTANTS}\n\nuniform projectUniforms {\n  bool wrapLongitude;\n  int coordinateSystem;\n  vec3 commonUnitsPerMeter;\n  int projectionMode;\n  float scale;\n  vec3 commonUnitsPerWorldUnit;\n  vec3 commonUnitsPerWorldUnit2;\n  vec4 center;\n  mat4 modelMatrix;\n  mat4 viewProjectionMatrix;\n  vec2 viewportSize;\n  float devicePixelRatio;\n  float focalDistance;\n  vec3 cameraPosition;\n  vec3 coordinateOrigin;\n  vec3 commonOrigin;\n  bool pseudoMeters;\n} project;\n\n\nconst float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / (PI * 2.0);\nconst vec3 ZERO_64_LOW = vec3(0.0);\nconst float EARTH_RADIUS = 6370972.0; // meters\nconst float GLOBE_RADIUS = 256.0;\n\n// returns an adjustment factor for uCommonUnitsPerMeter\nfloat project_size_at_latitude(float lat) {\n  float y = clamp(lat, -89.9, 89.9);\n  return 1.0 / cos(radians(y));\n}\n\nfloat project_size() {\n  if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR &&\n    project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT &&\n    project.pseudoMeters == false) {\n\n    // uCommonUnitsPerMeter in low-zoom Web Mercator is non-linear\n    // Adjust by 1 / cos(latitude)\n    // If geometry.position (vertex in common space) is populated, use it\n    // Otherwise use geometry.worldPosition (anchor in world space)\n    \n    if (geometry.position.w == 0.0) {\n      return project_size_at_latitude(geometry.worldPosition.y);\n    }\n\n    // latitude from common y: 2.0 * (atan(exp(y / TILE_SIZE * 2.0 * PI - PI)) - PI / 4.0)\n    // Taylor series of 1 / cos(latitude)\n    // Max error < 0.003\n  \n    float y = geometry.position.y / TILE_SIZE * 2.0 - 1.0;\n    float y2 = y * y;\n    float y4 = y2 * y2;\n    float y6 = y4 * y2;\n    return 1.0 + 4.9348 * y2 + 4.0587 * y4 + 1.5642 * y6;\n  }\n  return 1.0;\n}\n\nfloat project_size_at_latitude(float meters, float lat) {\n  return meters * project.commonUnitsPerMeter.z * project_size_at_latitude(lat);\n}\n\n//\n// Scaling offsets - scales meters to \"world distance\"\n// Note the scalar version of project_size is for scaling the z component only\n//\nfloat project_size(float meters) {\n  // For scatter relevant\n  return meters * project.commonUnitsPerMeter.z * project_size();\n}\n\nvec2 project_size(vec2 meters) {\n  return meters * project.commonUnitsPerMeter.xy * project_size();\n}\n\nvec3 project_size(vec3 meters) {\n  return meters * project.commonUnitsPerMeter * project_size();\n}\n\nvec4 project_size(vec4 meters) {\n  return vec4(meters.xyz * project.commonUnitsPerMeter, meters.w);\n}\n\n// Get rotation matrix that aligns the z axis with the given up vector\n// Find 3 unit vectors ux, uy, uz that are perpendicular to each other and uz == up\nmat3 project_get_orientation_matrix(vec3 up) {\n  vec3 uz = normalize(up);\n  // Tangent on XY plane\n  vec3 ux = abs(uz.z) == 1.0 ? vec3(1.0, 0.0, 0.0) : normalize(vec3(uz.y, -uz.x, 0));\n  vec3 uy = cross(uz, ux);\n  return mat3(ux, uy, uz);\n}\n\nbool project_needs_rotation(vec3 commonPosition, out mat3 transform) {\n  if (project.projectionMode == PROJECTION_MODE_GLOBE) {\n    transform = project_get_orientation_matrix(commonPosition);\n    return true;\n  }\n  return false;\n}\n\n//\n// Projecting normal - transform deltas from current coordinate system to\n// normals in the worldspace\n//\nvec3 project_normal(vec3 vector) {\n  // Apply model matrix\n  vec4 normal_modelspace = project.modelMatrix * vec4(vector, 0.0);\n  vec3 n = normalize(normal_modelspace.xyz * project.commonUnitsPerMeter);\n  mat3 rotation;\n  if (project_needs_rotation(geometry.position.xyz, rotation)) {\n    n = rotation * n;\n  }\n  return n;\n}\n\nvec4 project_offset_(vec4 offset) {\n  float dy = offset.y;\n  vec3 commonUnitsPerWorldUnit = project.commonUnitsPerWorldUnit + project.commonUnitsPerWorldUnit2 * dy;\n  return vec4(offset.xyz * commonUnitsPerWorldUnit, offset.w);\n}\n\n//\n// Projecting positions - non-linear projection: lnglats => unit tile [0-1, 0-1]\n//\nvec2 project_mercator_(vec2 lnglat) {\n  float x = lnglat.x;\n  if (project.wrapLongitude) {\n    x = mod(x + 180., 360.0) - 180.;\n  }\n  float y = clamp(lnglat.y, -89.9, 89.9);\n  return vec2(\n    radians(x) + PI,\n    PI + log(tan_fp32(PI * 0.25 + radians(y) * 0.5))\n  ) * WORLD_SCALE;\n}\n\nvec3 project_globe_(vec3 lnglatz) {\n  float lambda = radians(lnglatz.x);\n  float phi = radians(lnglatz.y);\n  float cosPhi = cos(phi);\n  float D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;\n\n  return vec3(\n    sin(lambda) * cosPhi,\n    -cos(lambda) * cosPhi,\n    sin(phi)\n  ) * D;\n}\n\n//\n// Projects positions (defined by project.coordinateSystem) to common space (defined by project.projectionMode)\n//\nvec4 project_position(vec4 position, vec3 position64Low) {\n  vec4 position_world = project.modelMatrix * position;\n\n  // Work around for a Mac+NVIDIA bug https://github.com/visgl/deck.gl/issues/4145\n  if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR) {\n    if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4(\n        project_mercator_(position_world.xy),\n        project_size_at_latitude(position_world.z, position_world.y),\n        position_world.w\n      );\n    }\n    if (project.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {\n      position_world.xyz += project.coordinateOrigin;\n    }\n  }\n  if (project.projectionMode == PROJECTION_MODE_GLOBE) {\n    if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4(\n        project_globe_(position_world.xyz),\n        position_world.w\n      );\n    }\n  }\n  if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\n    if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      if (abs(position_world.y - project.coordinateOrigin.y) > 0.25) {\n        // Too far from the projection center for offset mode to be accurate\n        // Only use high parts\n        return vec4(\n          project_mercator_(position_world.xy) - project.commonOrigin.xy,\n          project_size(position_world.z),\n          position_world.w\n        );\n      }\n    }\n  }\n  if (project.projectionMode == PROJECTION_MODE_IDENTITY ||\n    (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&\n    (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\n     project.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {\n    // Subtract high part of 64 bit value. Convert remainder to float32, preserving precision.\n    position_world.xyz -= project.coordinateOrigin;\n  }\n\n  // Translation is already added to the high parts\n  return project_offset_(position_world) + project_offset_(project.modelMatrix * vec4(position64Low, 0.0));\n}\n\nvec4 project_position(vec4 position) {\n  return project_position(position, ZERO_64_LOW);\n}\n\nvec3 project_position(vec3 position, vec3 position64Low) {\n  vec4 projected_position = project_position(vec4(position, 1.0), position64Low);\n  return projected_position.xyz;\n}\n\nvec3 project_position(vec3 position) {\n  vec4 projected_position = project_position(vec4(position, 1.0), ZERO_64_LOW);\n  return projected_position.xyz;\n}\n\nvec2 project_position(vec2 position) {\n  vec4 projected_position = project_position(vec4(position, 0.0, 1.0), ZERO_64_LOW);\n  return projected_position.xy;\n}\n\nvec4 project_common_position_to_clipspace(vec4 position, mat4 viewProjectionMatrix, vec4 center) {\n  return viewProjectionMatrix * position + center;\n}\n\n//\n// Projects from common space coordinates to clip space.\n// Uses project.viewProjectionMatrix\n//\nvec4 project_common_position_to_clipspace(vec4 position) {\n  return project_common_position_to_clipspace(position, project.viewProjectionMatrix, project.center);\n}\n\n// Returns a clip space offset that corresponds to a given number of screen pixels\nvec2 project_pixel_size_to_clipspace(vec2 pixels) {\n  vec2 offset = pixels / project.viewportSize * project.devicePixelRatio * 2.0;\n  return offset * project.focalDistance;\n}\n\nfloat project_size_to_pixel(float meters) {\n  return project_size(meters) * project.scale;\n}\nfloat project_size_to_pixel(float size, int unit) {\n  if (unit == UNIT_METERS) return project_size_to_pixel(size);\n  if (unit == UNIT_COMMON) return size * project.scale;\n  // UNIT_PIXELS\n  return size;\n}\nfloat project_pixel_size(float pixels) {\n  return pixels / project.scale;\n}\nvec2 project_pixel_size(vec2 pixels) {\n  return pixels / project.scale;\n}\n`;\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {fp32, ShaderModule} from '@luma.gl/shadertools';\nimport geometry from '../misc/geometry';\nimport {getUniformsFromViewport} from './viewport-uniforms';\nimport {projectWGSL} from './project.wgsl';\nimport {projectGLSL} from './project.glsl';\n\nimport type {ProjectProps, ProjectUniforms} from './viewport-uniforms';\n\nconst INITIAL_MODULE_OPTIONS = {};\n\nfunction getUniforms(opts: ProjectProps | {} = INITIAL_MODULE_OPTIONS) {\n  if ('viewport' in opts) {\n    return getUniformsFromViewport(opts);\n  }\n  return {};\n}\n\nexport default {\n  name: 'project',\n  dependencies: [fp32, geometry],\n  source: projectWGSL,\n  vs: projectGLSL,\n  getUniforms,\n  uniformTypes: {\n    wrapLongitude: 'f32',\n    coordinateSystem: 'i32',\n    commonUnitsPerMeter: 'vec3<f32>',\n    projectionMode: 'i32',\n    scale: 'f32',\n    commonUnitsPerWorldUnit: 'vec3<f32>',\n    commonUnitsPerWorldUnit2: 'vec3<f32>',\n    center: 'vec4<f32>',\n    modelMatrix: 'mat4x4<f32>',\n    viewProjectionMatrix: 'mat4x4<f32>',\n    viewportSize: 'vec2<f32>',\n    devicePixelRatio: 'f32',\n    focalDistance: 'f32',\n    cameraPosition: 'vec3<f32>',\n    coordinateOrigin: 'vec3<f32>',\n    commonOrigin: 'vec3<f32>',\n    pseudoMeters: 'f32'\n  }\n  // @ts-ignore TODO v9.1\n} as const satisfies ShaderModule<ProjectProps, ProjectUniforms, {}>;\n", "import {vec4} from '@math.gl/core';\n\n// Helper, avoids low-precision 32 bit matrices from gl-matrix mat4.create()\nexport function createMat4(): number[] {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n// Transforms a vec4 with a projection matrix\nexport function transformVector(matrix: number[], vector: number[]): number[] {\n  const result = vec4.transformMat4([] as number[], vector, matrix);\n  vec4.scale(result, result, 1 / result[3]);\n  return result;\n}\n\nexport function mod(value: number, divisor: number): number {\n  const modulus = value % divisor;\n  return modulus < 0 ? divisor + modulus : modulus;\n}\n\nexport function lerp(start: number, end: number, step: number): number {\n  return step * end + (1 - step) * start;\n}\n\nexport function clamp(x: number, min: number, max: number): number {\n  return x < min ? min : x > max ? max : x;\n}\n\nfunction ieLog2(x: number): number {\n  return Math.log(x) * Math.LOG2E;\n}\n// Handle missing log2 in IE 11\nexport const log2 = Math.log2 || ieLog2;\n", "// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\nexport function assert(condition: unknown, message?: string): void {\n  if (!condition) {\n    throw new Error(message || '@math.gl/web-mercator: assertion failed.');\n  }\n}\n", "// TODO - THE UTILITIES IN THIS FILE SHOULD BE IMPORTED FROM WEB-MERCATOR-VIEWPORT MODULE\n\nimport {createMat4, transformVector, clamp, log2} from './math-utils';\n\nimport {mat4, vec2, vec3} from '@math.gl/core';\nimport {assert} from './assert';\n\n// CONSTANTS\nconst PI = Math.PI;\nconst PI_4 = PI / 4;\nconst DEGREES_TO_RADIANS = PI / 180;\nconst RADIANS_TO_DEGREES = 180 / PI;\nconst TILE_SIZE = 512;\n// Average circumference (40075 km equatorial, 40007 km meridional)\nconst EARTH_CIRCUMFERENCE = 40.03e6;\n// Latitude that makes a square world, 2 * atan(E ** PI) - PI / 2\nexport const MAX_LATITUDE = 85.051129;\n\n// Mapbox default altitude\nexport const DEFAULT_ALTITUDE = 1.5;\n\nexport type DistanceScales = {\n  unitsPerMeter: number[];\n  metersPerUnit: number[];\n  unitsPerMeter2?: number[];\n  unitsPerDegree: number[];\n  degreesPerUnit: number[];\n  unitsPerDegree2?: number[];\n};\n\n/**\n * PROJECTION MATRIX PARAMETERS\n *\n * TODO how to document mebers\n * @param fov in radians. fov is variable, depends on pitch and altitude\n * @param aspect width/height\n * @param focalDistance distance at which visual scale factor is 1\n * @param near near clipping plane\n * @param far far clipping plane\n */\ntype ProjectionParameters = {\n  fov: number;\n  aspect: number;\n  focalDistance: number;\n  near: number;\n  far: number;\n};\n\n/** Logarithimic zoom to linear scale **/\nexport function zoomToScale(zoom: number): number {\n  return Math.pow(2, zoom);\n}\n\n/** Linear scale to logarithimic zoom **/\nexport function scaleToZoom(scale: number): number {\n  return log2(scale);\n}\n\n/**\n * Project [lng,lat] on sphere onto [x,y] on 512*512 Mercator Zoom 0 tile.\n * Performs the nonlinear part of the web mercator projection.\n * Remaining projection is done with 4x4 matrices which also handles\n * perspective.\n *\n * @param lngLat - [lng, lat] coordinates\n *   Specifies a point on the sphere to project onto the map.\n * @return [x,y] coordinates.\n */\nexport function lngLatToWorld(lngLat: number[]): [number, number] {\n  const [lng, lat] = lngLat;\n  assert(Number.isFinite(lng));\n  assert(Number.isFinite(lat) && lat >= -90 && lat <= 90, 'invalid latitude');\n\n  const lambda2 = lng * DEGREES_TO_RADIANS;\n  const phi2 = lat * DEGREES_TO_RADIANS;\n  const x = (TILE_SIZE * (lambda2 + PI)) / (2 * PI);\n  const y = (TILE_SIZE * (PI + Math.log(Math.tan(PI_4 + phi2 * 0.5)))) / (2 * PI);\n  return [x, y];\n}\n\n/**\n * Unproject world point [x,y] on map onto {lat, lon} on sphere\n *\n * @param xy - array with [x,y] members\n *  representing point on projected map plane\n * @return - array with [x,y] of point on sphere.\n *   Has toArray method if you need a GeoJSON Array.\n *   Per cartographic tradition, lat and lon are specified as degrees.\n */\nexport function worldToLngLat(xy: number[]): [number, number] {\n  const [x, y] = xy;\n  const lambda2 = (x / TILE_SIZE) * (2 * PI) - PI;\n  const phi2 = 2 * (Math.atan(Math.exp((y / TILE_SIZE) * (2 * PI) - PI)) - PI_4);\n  return [lambda2 * RADIANS_TO_DEGREES, phi2 * RADIANS_TO_DEGREES];\n}\n\n/**\n * Returns the zoom level that gives a 1 meter pixel at a certain latitude\n * 1 = C*cos(y)/2^z/TILE_SIZE = C*cos(y)/2^(z+9)\n */\nexport function getMeterZoom(options: {latitude: number}): number {\n  const {latitude} = options;\n  assert(Number.isFinite(latitude));\n  const latCosine = Math.cos(latitude * DEGREES_TO_RADIANS);\n  return scaleToZoom(EARTH_CIRCUMFERENCE * latCosine) - 9;\n}\n\n/**\n * Calculate the conversion from meter to common units at a given latitude\n * This is a cheaper version of `getDistanceScales`\n * @param latitude center latitude in degrees\n * @returns common units per meter\n */\nexport function unitsPerMeter(latitude: number): number {\n  const latCosine = Math.cos(latitude * DEGREES_TO_RADIANS);\n  return TILE_SIZE / EARTH_CIRCUMFERENCE / latCosine;\n}\n\n/**\n * Calculate distance scales in meters around current lat/lon, both for\n * degrees and pixels.\n * In mercator projection mode, the distance scales vary significantly\n * with latitude.\n */\nexport function getDistanceScales(options: {\n  latitude: number;\n  longitude: number;\n  highPrecision?: boolean;\n}): DistanceScales {\n  const {latitude, longitude, highPrecision = false} = options;\n  assert(Number.isFinite(latitude) && Number.isFinite(longitude));\n\n  const worldSize = TILE_SIZE;\n  const latCosine = Math.cos(latitude * DEGREES_TO_RADIANS);\n\n  /**\n   * Number of pixels occupied by one degree longitude around current lat/lon:\n     unitsPerDegreeX = d(lngLatToWorld([lng, lat])[0])/d(lng)\n       = scale * TILE_SIZE * DEGREES_TO_RADIANS / (2 * PI)\n     unitsPerDegreeY = d(lngLatToWorld([lng, lat])[1])/d(lat)\n       = -scale * TILE_SIZE * DEGREES_TO_RADIANS / cos(lat * DEGREES_TO_RADIANS)  / (2 * PI)\n   */\n  const unitsPerDegreeX = worldSize / 360;\n  const unitsPerDegreeY = unitsPerDegreeX / latCosine;\n\n  /**\n   * Number of pixels occupied by one meter around current lat/lon:\n   */\n  const altUnitsPerMeter = worldSize / EARTH_CIRCUMFERENCE / latCosine;\n\n  /**\n   * LngLat: longitude -> east and latitude -> north (bottom left)\n   * UTM meter offset: x -> east and y -> north (bottom left)\n   * World space: x -> east and y -> south (top left)\n   *\n   * Y needs to be flipped when converting delta degree/meter to delta pixels\n   */\n  const result: DistanceScales = {\n    unitsPerMeter: [altUnitsPerMeter, altUnitsPerMeter, altUnitsPerMeter],\n    metersPerUnit: [1 / altUnitsPerMeter, 1 / altUnitsPerMeter, 1 / altUnitsPerMeter],\n\n    unitsPerDegree: [unitsPerDegreeX, unitsPerDegreeY, altUnitsPerMeter],\n    degreesPerUnit: [1 / unitsPerDegreeX, 1 / unitsPerDegreeY, 1 / altUnitsPerMeter]\n  };\n\n  /**\n   * Taylor series 2nd order for 1/latCosine\n     f'(a) * (x - a)\n       = d(1/cos(lat * DEGREES_TO_RADIANS))/d(lat) * dLat\n       = DEGREES_TO_RADIANS * tan(lat * DEGREES_TO_RADIANS) / cos(lat * DEGREES_TO_RADIANS) * dLat\n   */\n  if (highPrecision) {\n    const latCosine2 = (DEGREES_TO_RADIANS * Math.tan(latitude * DEGREES_TO_RADIANS)) / latCosine;\n    const unitsPerDegreeY2 = (unitsPerDegreeX * latCosine2) / 2;\n    const altUnitsPerDegree2 = (worldSize / EARTH_CIRCUMFERENCE) * latCosine2;\n    const altUnitsPerMeter2 = (altUnitsPerDegree2 / unitsPerDegreeY) * altUnitsPerMeter;\n\n    result.unitsPerDegree2 = [0, unitsPerDegreeY2, altUnitsPerDegree2];\n    result.unitsPerMeter2 = [altUnitsPerMeter2, 0, altUnitsPerMeter2];\n  }\n\n  // Main results, used for converting meters to latlng deltas and scaling offsets\n  return result;\n}\n\n/**\n * Offset a lng/lat position by meterOffset (northing, easting)\n */\nexport function addMetersToLngLat(lngLatZ: number[], xyz: number[]): number[] {\n  const [longitude, latitude, z0] = lngLatZ;\n  const [x, y, z] = xyz;\n\n  // eslint-disable-next-line no-shadow\n  const {unitsPerMeter, unitsPerMeter2} = getDistanceScales({\n    longitude,\n    latitude,\n    highPrecision: true\n  });\n\n  const worldspace = lngLatToWorld(lngLatZ);\n  worldspace[0] += x * (unitsPerMeter[0] + unitsPerMeter2[0] * y);\n  worldspace[1] += y * (unitsPerMeter[1] + unitsPerMeter2[1] * y);\n\n  const newLngLat = worldToLngLat(worldspace);\n  const newZ = (z0 || 0) + (z || 0);\n\n  return Number.isFinite(z0) || Number.isFinite(z) ? [newLngLat[0], newLngLat[1], newZ] : newLngLat;\n}\n\n/**\n *\n * view and projection matrix creation is intentionally kept compatible with\n * mapbox-gl's implementation to ensure that seamless interoperation\n * with mapbox and react-map-gl. See: https://github.com/mapbox/mapbox-gl-js\n */\nexport function getViewMatrix(options: {\n  // Viewport props\n  height: number;\n  pitch: number;\n  bearing: number;\n  altitude: number;\n  // Pre-calculated parameters\n  scale: number;\n  center?: number[];\n}): number[] {\n  const {\n    // Viewport props\n    height,\n    pitch,\n    bearing,\n    altitude,\n    // Pre-calculated parameters\n    scale,\n    center\n  } = options;\n  // VIEW MATRIX: PROJECTS MERCATOR WORLD COORDINATES\n  // Note that mercator world coordinates typically need to be flipped\n  //\n  // Note: As usual, matrix operation orders should be read in reverse\n  // since vectors will be multiplied from the right during transformation\n  const vm = createMat4();\n\n  // Move camera to altitude (along the pitch & bearing direction)\n  mat4.translate(vm, vm, [0, 0, -altitude]);\n\n  // Rotate by bearing, and then by pitch (which tilts the view)\n  mat4.rotateX(vm, vm, -pitch * DEGREES_TO_RADIANS);\n  mat4.rotateZ(vm, vm, bearing * DEGREES_TO_RADIANS);\n\n  const relativeScale = scale / height;\n  mat4.scale(vm, vm, [relativeScale, relativeScale, relativeScale]);\n\n  if (center) {\n    mat4.translate(vm, vm, vec3.negate([], center));\n  }\n\n  return vm;\n}\n\n/**\n * Calculates mapbox compatible projection matrix from parameters\n *\n * @param options.width Width of \"viewport\" or window\n * @param options.height Height of \"viewport\" or window\n * @param options.scale Scale at the current zoom\n * @param options.center Offset of the target, vec3 in world space\n * @param options.offset Offset of the focal point, vec2 in screen space\n * @param options.pitch Camera angle in degrees (0 is straight down)\n * @param options.fovy field of view in degrees\n * @param options.altitude if provided, field of view is calculated using `altitudeToFovy()`\n * @param options.nearZMultiplier control z buffer\n * @param options.farZMultiplier control z buffer\n * @returns project parameters object\n */\nexport function getProjectionParameters(options: {\n  width: number;\n  height: number;\n  scale?: number;\n  center?: number[];\n  offset?: [number, number];\n  fovy?: number;\n  altitude?: number;\n  pitch?: number;\n  nearZMultiplier?: number;\n  farZMultiplier?: number;\n}): ProjectionParameters {\n  const {\n    width,\n    height,\n    altitude,\n    pitch = 0,\n    offset,\n    center,\n    scale,\n    nearZMultiplier = 1,\n    farZMultiplier = 1\n  } = options;\n  let {fovy = altitudeToFovy(DEFAULT_ALTITUDE)} = options;\n\n  // For back-compatibility allow field of view to be\n  // derived from altitude\n  if (altitude !== undefined) {\n    fovy = altitudeToFovy(altitude);\n  }\n\n  const fovRadians = fovy * DEGREES_TO_RADIANS;\n  const pitchRadians = pitch * DEGREES_TO_RADIANS;\n\n  // Distance from camera to the target\n  const focalDistance = fovyToAltitude(fovy);\n\n  let cameraToSeaLevelDistance = focalDistance;\n\n  if (center) {\n    cameraToSeaLevelDistance += (center[2] * scale) / Math.cos(pitchRadians) / height;\n  }\n\n  const fovAboveCenter = fovRadians * (0.5 + (offset ? offset[1] : 0) / height);\n\n  // Find the distance from the center point to the center top\n  // in focal distance units using law of sines.\n  const topHalfSurfaceDistance =\n    (Math.sin(fovAboveCenter) * cameraToSeaLevelDistance) /\n    Math.sin(clamp(Math.PI / 2 - pitchRadians - fovAboveCenter, 0.01, Math.PI - 0.01));\n\n  // Calculate z distance of the farthest fragment that should be rendered.\n  const furthestDistance =\n    Math.sin(pitchRadians) * topHalfSurfaceDistance + cameraToSeaLevelDistance;\n  // Matches mapbox limit\n  const horizonDistance = cameraToSeaLevelDistance * 10;\n\n  // Calculate z value of the farthest fragment that should be rendered.\n  const farZ = Math.min(furthestDistance * farZMultiplier, horizonDistance);\n\n  return {\n    fov: fovRadians,\n    aspect: width / height,\n    focalDistance,\n    near: nearZMultiplier,\n    far: farZ\n  };\n}\n\n/**\n * CALCULATE PROJECTION MATRIX: PROJECTS FROM CAMERA (VIEW) SPACE TO CLIPSPACE\n *\n * To match mapbox's z buffer:\n *  - \\<= 0.28: nearZMultiplier: 0.1, farZmultiplier: 1\n *  - \\>= 0.29: nearZMultiplier: 1 / height, farZMultiplier: 1.01\n *\n * @param options Viewport options\n * @param options.width Width of \"viewport\" or window\n * @param options.height Height of \"viewport\" or window\n * @param options.scale Scale at the current zoom\n * @param options.center Offset of the target, vec3 in world space\n * @param options.offset Offset of the focal point, vec2 in screen space\n * @param options.pitch Camera angle in degrees (0 is straight down)\n * @param options.fovy field of view in degrees\n * @param options.altitude if provided, field of view is calculated using `altitudeToFovy()`\n * @param options.nearZMultiplier control z buffer\n * @param options.farZMultiplier control z buffer\n * @returns 4x4 projection matrix\n */\nexport function getProjectionMatrix(options: {\n  width: number;\n  height: number;\n  pitch: number;\n  scale?: number;\n  center?: number[];\n  offset?: [number, number];\n  fovy?: number;\n  altitude?: number;\n  nearZMultiplier: number;\n  farZMultiplier: number;\n}): number[] {\n  const {fov, aspect, near, far} = getProjectionParameters(options);\n\n  const projectionMatrix = mat4.perspective(\n    [] as number[],\n    fov, // fov in radians\n    aspect, // aspect ratio\n    near, // near plane\n    far // far plane\n  );\n\n  return projectionMatrix;\n}\n\n/**\n *\n * Convert an altitude to field of view such that the\n * focal distance is equal to the altitude\n *\n * @param altitude - altitude of camera in screen units\n * @return fovy field of view in degrees\n */\nexport function altitudeToFovy(altitude: number): number {\n  return 2 * Math.atan(0.5 / altitude) * RADIANS_TO_DEGREES;\n}\n\n/**\n *\n * Convert an field of view such that the\n * focal distance is equal to the altitude\n *\n * @param fovy - field of view in degrees\n * @return altitude altitude of camera in screen units\n */\nexport function fovyToAltitude(fovy: number): number {\n  return 0.5 / Math.tan(0.5 * fovy * DEGREES_TO_RADIANS);\n}\n\n/**\n * Project flat coordinates to pixels on screen.\n *\n * @param xyz - flat coordinate on 512*512 Mercator Zoom 0 tile\n * @param pixelProjectionMatrix - projection matrix 4x4\n * @return [x, y, depth] pixel coordinate on screen.\n */\nexport function worldToPixels(xyz: number[], pixelProjectionMatrix: number[]): number[];\n\n// Project flat coordinates to pixels on screen.\nexport function worldToPixels(xyz: number[], pixelProjectionMatrix: number[]): number[] {\n  const [x, y, z = 0] = xyz;\n  assert(Number.isFinite(x) && Number.isFinite(y) && Number.isFinite(z));\n\n  return transformVector(pixelProjectionMatrix, [x, y, z, 1]);\n}\n\n/**\n * Unproject pixels on screen to flat coordinates.\n *\n * @param xyz - pixel coordinate on screen.\n * @param pixelUnprojectionMatrix - unprojection matrix 4x4\n * @param targetZ - if pixel coordinate does not have a 3rd component (depth),\n *    targetZ is used as the elevation plane to unproject onto\n * @return [x, y, Z] flat coordinates on 512*512 Mercator Zoom 0 tile.\n */\nexport function pixelsToWorld(\n  xyz: number[],\n  pixelUnprojectionMatrix: number[],\n  targetZ: number = 0\n): number[] {\n  const [x, y, z] = xyz;\n  assert(Number.isFinite(x) && Number.isFinite(y), 'invalid pixel coordinate');\n\n  if (Number.isFinite(z)) {\n    // Has depth component\n    const coord = transformVector(pixelUnprojectionMatrix, [x, y, z, 1]);\n    return coord;\n  }\n\n  // since we don't know the correct projected z value for the point,\n  // unproject two points to get a line and then find the point on that line with z=0\n  const coord0 = transformVector(pixelUnprojectionMatrix, [x, y, 0, 1]);\n  const coord1 = transformVector(pixelUnprojectionMatrix, [x, y, 1, 1]);\n\n  const z0 = coord0[2];\n  const z1 = coord1[2];\n\n  const t = z0 === z1 ? 0 : ((targetZ || 0) - z0) / (z1 - z0);\n  return vec2.lerp([] as number[], coord0, coord1, t);\n}\n", "import {assert} from './assert';\nimport {log2, clamp} from './math-utils';\nimport {MAX_LATITUDE, lngLatToWorld, worldToLngLat} from './web-mercator-utils';\n\n/**\n * Options for fitBounds\n */\nexport type FitBoundsOptions = {\n  /**  viewport width  */\n  width: number;\n  /**  viewport height  */\n  height: number;\n  /**  [[lon, lat], [lon, lat]]  */\n  bounds: [[number, number], [number, number]];\n  /**  The width/height of the bounded area will never be smaller than this. 0.01 would be about 1000 meters (degree is ~110KM)  */\n  minExtent?: number;\n  /**  The maximum zoom level to fit the bounds within. */\n  maxZoom?: number; // ~x4,000,000 => About 10 meter extents\n  /**\n   * padding - The amount of padding in pixels to add to the given bounds.\n   * Can also be an object with top, bottom, left and right properties defining the padding.\n   */\n  padding?: number | Padding;\n  /** The center of the given bounds relative to the map's center,  */\n  offset?: number[];\n};\n\n/**\n * An object describing the padding to add to the bounds.\n */\nexport type Padding = {\n  /** Padding from top in pixels to add to the given bounds */\n  top: number;\n  /** Padding from bottom in pixels to add to the given bounds */\n  bottom: number;\n  /** Padding from left in pixels to add to the given bounds */\n  left: number;\n  /** Padding from right in pixels to add to the given bounds */\n  right: number;\n};\n\ntype ViewportProps = {\n  longitude: number;\n  latitude: number;\n  zoom: number;\n};\n\n/**\n * Returns map settings {latitude, longitude, zoom}\n * that will contain the provided corners within the provided width.\n *\n * > _Note: Only supports non-perspective mode._\n *\n * @param options fit bounds parameters\n * @returns - latitude, longitude and zoom\n */\nexport function fitBounds(options: FitBoundsOptions): ViewportProps {\n  const {\n    width,\n    height,\n    bounds,\n    minExtent = 0, // 0.01 would be about 1000 meters (degree is ~110KM)\n    maxZoom = 24, // ~x4,000,000 => About 10 meter extents\n    offset = [0, 0]\n  } = options;\n\n  const [[west, south], [east, north]] = bounds;\n  const padding = getPaddingObject(options.padding);\n\n  const nw = lngLatToWorld([west, clamp(north, -MAX_LATITUDE, MAX_LATITUDE)]);\n  const se = lngLatToWorld([east, clamp(south, -MAX_LATITUDE, MAX_LATITUDE)]);\n\n  // width/height on the Web Mercator plane\n  const size = [\n    Math.max(Math.abs(se[0] - nw[0]), minExtent),\n    Math.max(Math.abs(se[1] - nw[1]), minExtent)\n  ];\n\n  const targetSize = [\n    width - padding.left - padding.right - Math.abs(offset[0]) * 2,\n    height - padding.top - padding.bottom - Math.abs(offset[1]) * 2\n  ];\n\n  assert(targetSize[0] > 0 && targetSize[1] > 0);\n\n  // scale = screen pixels per unit on the Web Mercator plane\n  const scaleX = targetSize[0] / size[0];\n  const scaleY = targetSize[1] / size[1];\n\n  // Find how much we need to shift the center\n  const offsetX = (padding.right - padding.left) / 2 / scaleX;\n  const offsetY = (padding.top - padding.bottom) / 2 / scaleY;\n\n  const center = [(se[0] + nw[0]) / 2 + offsetX, (se[1] + nw[1]) / 2 + offsetY];\n\n  const centerLngLat = worldToLngLat(center);\n  const zoom = Math.min(maxZoom, log2(Math.abs(Math.min(scaleX, scaleY))));\n\n  assert(Number.isFinite(zoom));\n\n  return {\n    longitude: centerLngLat[0],\n    latitude: centerLngLat[1],\n    zoom\n  };\n}\n\n// Helpers\nfunction getPaddingObject(padding: number | Padding = 0): Padding {\n  if (typeof padding === 'number') {\n    return {\n      top: padding,\n      bottom: padding,\n      left: padding,\n      right: padding\n    };\n  }\n\n  // Make sure all the required properties are set\n  assert(\n    Number.isFinite(padding.top) &&\n      Number.isFinite(padding.bottom) &&\n      Number.isFinite(padding.left) &&\n      Number.isFinite(padding.right)\n  );\n\n  return padding;\n}\n", "/* eslint-disable camelcase */\nimport {vec2} from '@math.gl/core';\nimport type {WebMercatorViewport} from './web-mercator-viewport';\nimport {worldToLngLat} from './web-mercator-utils';\nimport {transformVector} from './math-utils';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\n/*\n * Returns the quad at the intersection of the frustum and the given z plane\n * @param {WebMercatorViewport} viewport\n * @param {Number} z - elevation in meters\n */\nexport function getBounds(viewport: WebMercatorViewport, z: number = 0): number[][] {\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const {width, height, unproject} = viewport;\n  const unprojectOps = {targetZ: z};\n  const bottomLeft = unproject([0, height], unprojectOps);\n  const bottomRight = unproject([width, height], unprojectOps);\n  let topLeft: number[];\n  let topRight: number[];\n\n  const halfFov = viewport.fovy\n    ? 0.5 * viewport.fovy * DEGREES_TO_RADIANS\n    : Math.atan(0.5 / viewport.altitude);\n  const angleToGround = (90 - viewport.pitch) * DEGREES_TO_RADIANS;\n  // The top plane is parallel to the ground if halfFov == angleToGround\n  if (halfFov > angleToGround - 0.01) {\n    // intersect with the far plane\n    topLeft = unprojectOnFarPlane(viewport, 0, z);\n    topRight = unprojectOnFarPlane(viewport, width, z);\n  } else {\n    // intersect with the top plane\n    topLeft = unproject([0, 0], unprojectOps);\n    topRight = unproject([width, 0], unprojectOps);\n  }\n\n  return [bottomLeft, bottomRight, topRight, topLeft];\n}\n\n/*\n * Find a point on the far clipping plane of the viewport\n * @param {WebMercatorViewport} viewport\n * @param {Number} x - projected x in screen space\n * @param {Number} targetZ - the elevation of the point in meters\n */\nfunction unprojectOnFarPlane(viewport: WebMercatorViewport, x: number, targetZ: number): number[] {\n  const {pixelUnprojectionMatrix} = viewport;\n  const coord0 = transformVector(pixelUnprojectionMatrix, [x, 0, 1, 1]);\n  const coord1 = transformVector(pixelUnprojectionMatrix, [x, viewport.height, 1, 1]);\n\n  const z = targetZ * viewport.distanceScales.unitsPerMeter[2];\n  const t = (z - coord0[2]) / (coord1[2] - coord0[2]);\n  const coord = vec2.lerp([], coord0, coord1, t);\n\n  const result = worldToLngLat(coord);\n  result.push(targetZ);\n  return result;\n}\n", "import {worldToLngLat} from './web-mercator-utils';\nimport {mod, log2} from './math-utils';\n\n// defined by mapbox-gl\nconst TILE_SIZE = 512;\n\n/** Description of viewport */\nexport type ViewportProps = {\n  width: number;\n  height: number;\n  longitude: number;\n  latitude: number;\n  zoom: number;\n  pitch?: number;\n  bearing?: number;\n};\n\n/**\n * Apply mathematical constraints to viewport props\n * @param props\n */\n// eslint-disable-next-line complexity\nexport function normalizeViewportProps(props: ViewportProps): ViewportProps {\n  const {width, height, pitch = 0} = props;\n  let {longitude, latitude, zoom, bearing = 0} = props;\n\n  // Normalize degrees\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n\n  // Constrain zoom and shift center at low zoom levels\n  const minZoom = log2(height / TILE_SIZE);\n  if (zoom <= minZoom) {\n    zoom = minZoom;\n    latitude = 0;\n  } else {\n    // Eliminate white space above and below the map\n    const halfHeightPixels = height / 2 / Math.pow(2, zoom);\n    const minLatitude = worldToLngLat([0, halfHeightPixels])[1];\n    if (latitude < minLatitude) {\n      latitude = minLatitude;\n    } else {\n      const maxLatitude = worldToLngLat([0, TILE_SIZE - halfHeightPixels])[1];\n      if (latitude > maxLatitude) {\n        latitude = maxLatitude;\n      }\n    }\n  }\n\n  return {width, height, longitude, latitude, zoom, pitch, bearing};\n}\n", "import {lerp} from './math-utils';\nimport {scaleToZoom, zoomToScale, lngLatToWorld, worldToLngLat} from './web-mercator-utils';\nimport {vec2} from '@math.gl/core';\n\nimport type {ViewportProps} from './normalize-viewport-props';\n\nconst EPSILON = 0.01;\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom'] as const;\nconst DEFAULT_OPTS = {\n  curve: 1.414,\n  speed: 1.2\n  // screenSpeed and maxDuration are used only if specified\n};\n\nexport type FlytoTransitionOptions = {\n  curve?: number;\n  speed?: number;\n  screenSpeed?: number;\n  maxDuration?: number;\n};\n\n/**\n * mapbox-gl-js flyTo : https://www.mapbox.com/mapbox-gl-js/api/#map#flyto.\n * It implements “Smooth and efficient zooming and panning.” algorithm by\n * \"Jarke J. van Wijk and Wim A.A. Nuij\"\n */\nexport function flyToViewport(\n  startProps: ViewportProps,\n  endProps: ViewportProps,\n  t: number,\n  options?: FlytoTransitionOptions\n): {\n  longitude: number;\n  latitude: number;\n  zoom: number;\n} {\n  // Equations from above paper are referred where needed.\n\n  const {startZoom, startCenterXY, uDelta, w0, u1, S, rho, rho2, r0} = getFlyToTransitionParams(\n    startProps,\n    endProps,\n    options\n  );\n\n  // If change in center is too small, do linear interpolaiton.\n  if (u1 < EPSILON) {\n    const viewport = {};\n    for (const key of VIEWPORT_TRANSITION_PROPS) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      // @ts-ignore-error properties are populated dynamically\n      viewport[key] = lerp(startValue, endValue, t);\n    }\n    // @ts-expect-error properties are populated dynamically\n    return viewport;\n  }\n\n  const s = t * S;\n\n  const w = Math.cosh(r0) / Math.cosh(r0 + rho * s);\n  const u = (w0 * ((Math.cosh(r0) * Math.tanh(r0 + rho * s) - Math.sinh(r0)) / rho2)) / u1;\n\n  const scaleIncrement = 1 / w; // Using w method for scaling.\n  const newZoom = startZoom + scaleToZoom(scaleIncrement);\n\n  const newCenterWorld = vec2.scale([], uDelta, u);\n  vec2.add(newCenterWorld, newCenterWorld, startCenterXY);\n\n  const newCenter = worldToLngLat(newCenterWorld);\n  return {\n    longitude: newCenter[0],\n    latitude: newCenter[1],\n    zoom: newZoom\n  };\n}\n\n// returns transition duration in milliseconds\nexport function getFlyToDuration(\n  startProps: ViewportProps,\n  endProps: ViewportProps,\n  options?: FlytoTransitionOptions\n): number {\n  const opts = {...DEFAULT_OPTS, ...options};\n  const {screenSpeed, speed, maxDuration} = opts;\n  const {S, rho} = getFlyToTransitionParams(startProps, endProps, opts);\n  const length = 1000 * S;\n  let duration: number;\n  if (Number.isFinite(screenSpeed)) {\n    duration = length / (screenSpeed / rho);\n  } else {\n    duration = length / speed;\n  }\n\n  return Number.isFinite(maxDuration) && duration > maxDuration ? 0 : duration;\n}\n\n// Private Methods\n\n// Calculate all parameters that are static for given startProps and endProps\nfunction getFlyToTransitionParams(\n  startProps: ViewportProps,\n  endProps: ViewportProps,\n  opts: FlytoTransitionOptions\n): {\n  startZoom: number;\n  startCenterXY: number[];\n  uDelta: number[];\n  w0: number;\n  u1: number;\n  S: number;\n  rho: number;\n  rho2: number;\n  r0: number;\n  r1: number;\n} {\n  opts = Object.assign({}, DEFAULT_OPTS, opts);\n  const rho = opts.curve;\n  const startZoom = startProps.zoom;\n  const startCenter = [startProps.longitude, startProps.latitude];\n  const startScale = zoomToScale(startZoom);\n  const endZoom = endProps.zoom;\n  const endCenter = [endProps.longitude, endProps.latitude];\n  const scale = zoomToScale(endZoom - startZoom);\n\n  const startCenterXY = lngLatToWorld(startCenter);\n  const endCenterXY = lngLatToWorld(endCenter);\n  const uDelta = vec2.sub([] as number[], endCenterXY, startCenterXY);\n\n  const w0 = Math.max(startProps.width, startProps.height);\n  const w1 = w0 / scale;\n  const u1 = vec2.length(uDelta) * startScale;\n  // u0 is treated as '0' in Eq (9).\n\n  // If u1 is too small, will generate invalid number\n  const _u1 = Math.max(u1, EPSILON);\n\n  // Implement Equation (9) from above algorithm.\n  const rho2 = rho * rho;\n  const b0 = (w1 * w1 - w0 * w0 + rho2 * rho2 * _u1 * _u1) / (2 * w0 * rho2 * _u1);\n  const b1 = (w1 * w1 - w0 * w0 - rho2 * rho2 * _u1 * _u1) / (2 * w1 * rho2 * _u1);\n  const r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0);\n  const r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n  const S = (r1 - r0) / rho;\n\n  return {startZoom, startCenterXY, uDelta, w0, u1, S, rho, rho2, r0, r1};\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {COORDINATE_SYSTEM, PROJECTION_MODE} from '../../lib/constants';\nimport project from '../project/project';\nimport {Vector3, Matrix4} from '@math.gl/core';\nimport type {NumericArray} from '@math.gl/core';\nimport memoize from '../../utils/memoize';\nimport {pixelsToWorld} from '@math.gl/web-mercator';\n\nimport type {Texture} from '@luma.gl/core';\nimport {ShaderModule} from '@luma.gl/shadertools';\nimport type Viewport from '../../viewports/viewport';\nimport type {ProjectProps, ProjectUniforms} from '../project/viewport-uniforms';\n\nconst uniformBlock = /* glsl */ `\nuniform shadowUniforms {\n  bool drawShadowMap;\n  bool useShadowMap;\n  vec4 color;\n  highp int lightId;\n  float lightCount;\n  mat4 viewProjectionMatrix0;\n  mat4 viewProjectionMatrix1;\n  vec4 projectCenter0;\n  vec4 projectCenter1;\n} shadow;\n`;\n\nconst vertex = /* glsl */ `\nconst int max_lights = 2;\n\nout vec3 shadow_vPosition[max_lights];\n\nvec4 shadow_setVertexPosition(vec4 position_commonspace) {\n  mat4 viewProjectionMatrices[max_lights];\n  viewProjectionMatrices[0] = shadow.viewProjectionMatrix0;\n  viewProjectionMatrices[1] = shadow.viewProjectionMatrix1;\n  vec4 projectCenters[max_lights];\n  projectCenters[0] = shadow.projectCenter0;\n  projectCenters[1] = shadow.projectCenter1;\n\n  if (shadow.drawShadowMap) {\n    return project_common_position_to_clipspace(position_commonspace, viewProjectionMatrices[shadow.lightId], projectCenters[shadow.lightId]);\n  }\n  if (shadow.useShadowMap) {\n    for (int i = 0; i < max_lights; i++) {\n      if(i < int(shadow.lightCount)) {\n        vec4 shadowMap_position = project_common_position_to_clipspace(position_commonspace, viewProjectionMatrices[i], projectCenters[i]);\n        shadow_vPosition[i] = (shadowMap_position.xyz / shadowMap_position.w + 1.0) / 2.0;\n      }\n    }\n  }\n  return gl_Position;\n}\n`;\n\nconst vs = `\n${uniformBlock}\n${vertex}\n`;\n\nconst fragment = /* glsl */ `\nconst int max_lights = 2;\nuniform sampler2D shadow_uShadowMap0;\nuniform sampler2D shadow_uShadowMap1;\n\nin vec3 shadow_vPosition[max_lights];\n\nconst vec4 bitPackShift = vec4(1.0, 255.0, 65025.0, 16581375.0);\nconst vec4 bitUnpackShift = 1.0 / bitPackShift;\nconst vec4 bitMask = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0,  0.0);\n\nfloat shadow_getShadowWeight(vec3 position, sampler2D shadowMap) {\n  vec4 rgbaDepth = texture(shadowMap, position.xy);\n\n  float z = dot(rgbaDepth, bitUnpackShift);\n  return smoothstep(0.001, 0.01, position.z - z);\n}\n\nvec4 shadow_filterShadowColor(vec4 color) {\n  if (shadow.drawShadowMap) {\n    vec4 rgbaDepth = fract(gl_FragCoord.z * bitPackShift);\n    rgbaDepth -= rgbaDepth.gbaa * bitMask;\n    return rgbaDepth;\n  }\n  if (shadow.useShadowMap) {\n    float shadowAlpha = 0.0;\n    shadowAlpha += shadow_getShadowWeight(shadow_vPosition[0], shadow_uShadowMap0);\n    if(shadow.lightCount > 1.0) {\n      shadowAlpha += shadow_getShadowWeight(shadow_vPosition[1], shadow_uShadowMap1);\n    }\n    shadowAlpha *= shadow.color.a / shadow.lightCount;\n    float blendedAlpha = shadowAlpha + color.a * (1.0 - shadowAlpha);\n\n    return vec4(\n      mix(color.rgb, shadow.color.rgb, shadowAlpha / blendedAlpha),\n      blendedAlpha\n    );\n  }\n  return color;\n}\n`;\n\nconst fs = `\n${uniformBlock}\n${fragment}\n`;\n\nconst getMemoizedViewportCenterPosition = memoize(getViewportCenterPosition);\nconst getMemoizedViewProjectionMatrices = memoize(getViewProjectionMatrices);\n\nconst DEFAULT_SHADOW_COLOR: NumberArray4 = [0, 0, 0, 1.0];\nconst VECTOR_TO_POINT_MATRIX = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0];\n\nexport type ShadowModuleProps = {\n  project: ProjectProps;\n  shadowEnabled?: boolean;\n  drawToShadowMap?: boolean;\n  shadowMaps?: Texture[];\n  dummyShadowMap: Texture;\n  shadowColor?: NumberArray4;\n  shadowMatrices?: Matrix4[];\n  shadowLightId?: number;\n};\n\ntype ShadowModuleUniforms = {\n  drawShadowMap: boolean;\n  useShadowMap: boolean;\n  color?: NumberArray4;\n  lightId?: number;\n  lightCount?: number;\n  viewProjectionMatrix0?: NumberArray16;\n  viewProjectionMatrix1?: NumberArray16;\n  projectCenter0?: NumberArray4;\n  projectCenter1?: NumberArray4;\n};\n\ntype ShadowModuleBindings = {\n  shadow_uShadowMap0: Texture;\n  shadow_uShadowMap1: Texture;\n};\n\nfunction screenToCommonSpace(xyz: number[], pixelUnprojectionMatrix: number[]): number[] {\n  const [x, y, z] = xyz;\n  const coord = pixelsToWorld([x, y, z], pixelUnprojectionMatrix);\n\n  if (Number.isFinite(z)) {\n    return coord;\n  }\n  return [coord[0], coord[1], 0];\n}\n\nfunction getViewportCenterPosition({\n  viewport,\n  center\n}: {\n  viewport: Viewport;\n  center: NumericArray;\n}): NumericArray {\n  return new Matrix4(viewport.viewProjectionMatrix).invert().transform(center);\n}\n\nfunction getViewProjectionMatrices({\n  viewport,\n  shadowMatrices\n}: {\n  viewport: Viewport;\n  shadowMatrices: Matrix4[];\n}): Matrix4[] {\n  const projectionMatrices: Matrix4[] = [];\n  const pixelUnprojectionMatrix = viewport.pixelUnprojectionMatrix;\n  const farZ = viewport.isGeospatial ? undefined : 1;\n  const corners = [\n    [0, 0, farZ], // top left ground\n    [viewport.width, 0, farZ], // top right ground\n    [0, viewport.height, farZ], // bottom left ground\n    [viewport.width, viewport.height, farZ], // bottom right ground\n    [0, 0, -1], // top left near\n    [viewport.width, 0, -1], // top right near\n    [0, viewport.height, -1], // bottom left near\n    [viewport.width, viewport.height, -1] // bottom right near\n  ].map(pixel =>\n    // @ts-expect-error z may be undefined\n    screenToCommonSpace(pixel, pixelUnprojectionMatrix)\n  );\n\n  for (const shadowMatrix of shadowMatrices) {\n    const viewMatrix = shadowMatrix.clone().translate(new Vector3(viewport.center).negate());\n    const positions = corners.map(corner => viewMatrix.transform(corner));\n    const projectionMatrix = new Matrix4().ortho({\n      left: Math.min(...positions.map(position => position[0])),\n      right: Math.max(...positions.map(position => position[0])),\n      bottom: Math.min(...positions.map(position => position[1])),\n      top: Math.max(...positions.map(position => position[1])),\n      near: Math.min(...positions.map(position => -position[2])),\n      far: Math.max(...positions.map(position => -position[2]))\n    });\n    projectionMatrices.push(projectionMatrix.multiplyRight(shadowMatrix));\n  }\n  return projectionMatrices;\n}\n\n/* eslint-disable camelcase */\n\n// eslint-disable-next-line complexity\nfunction createShadowUniforms(\n  opts: Partial<ShadowModuleProps>\n): ShadowModuleBindings & ShadowModuleUniforms {\n  const {shadowEnabled = true, project: projectProps} = opts;\n  if (!shadowEnabled || !projectProps || !opts.shadowMatrices || !opts.shadowMatrices.length) {\n    return {\n      drawShadowMap: false,\n      useShadowMap: false,\n      shadow_uShadowMap0: opts.dummyShadowMap!,\n      shadow_uShadowMap1: opts.dummyShadowMap!\n    };\n  }\n  const projectUniforms = project.getUniforms(projectProps) as ProjectUniforms;\n  const center = getMemoizedViewportCenterPosition({\n    viewport: projectProps.viewport,\n    center: projectUniforms.center\n  });\n\n  const projectCenters: NumericArray[] = [];\n  const viewProjectionMatrices = getMemoizedViewProjectionMatrices({\n    shadowMatrices: opts.shadowMatrices,\n    viewport: projectProps.viewport\n  }).slice();\n\n  for (let i = 0; i < opts.shadowMatrices.length; i++) {\n    const viewProjectionMatrix = viewProjectionMatrices[i];\n    const viewProjectionMatrixCentered = viewProjectionMatrix\n      .clone()\n      .translate(new Vector3(projectProps.viewport.center).negate());\n\n    if (\n      projectUniforms.coordinateSystem === COORDINATE_SYSTEM.LNGLAT &&\n      projectUniforms.projectionMode === PROJECTION_MODE.WEB_MERCATOR\n    ) {\n      viewProjectionMatrices[i] = viewProjectionMatrixCentered;\n      projectCenters[i] = center;\n    } else {\n      viewProjectionMatrices[i] = viewProjectionMatrix\n        .clone()\n        .multiplyRight(VECTOR_TO_POINT_MATRIX);\n      projectCenters[i] = viewProjectionMatrixCentered.transform(center);\n    }\n  }\n\n  const uniforms: ShadowModuleUniforms & ShadowModuleBindings = {\n    drawShadowMap: Boolean(opts.drawToShadowMap),\n    useShadowMap: opts.shadowMaps ? opts.shadowMaps.length > 0 : false,\n    color: opts.shadowColor || DEFAULT_SHADOW_COLOR,\n    lightId: opts.shadowLightId || 0,\n    lightCount: opts.shadowMatrices.length,\n    shadow_uShadowMap0: opts.dummyShadowMap!,\n    shadow_uShadowMap1: opts.dummyShadowMap!\n  };\n\n  for (let i = 0; i < viewProjectionMatrices.length; i++) {\n    uniforms[`viewProjectionMatrix${i}`] = viewProjectionMatrices[i];\n    uniforms[`projectCenter${i}`] = projectCenters[i];\n  }\n\n  for (let i = 0; i < 2; i++) {\n    uniforms[`shadow_uShadowMap${i}`] =\n      (opts.shadowMaps && opts.shadowMaps[i]) || opts.dummyShadowMap;\n  }\n  return uniforms;\n}\n\nexport default {\n  name: 'shadow',\n  dependencies: [project],\n  vs,\n  fs,\n  inject: {\n    'vs:DECKGL_FILTER_GL_POSITION': `\n    position = shadow_setVertexPosition(geometry.position);\n    `,\n    'fs:DECKGL_FILTER_COLOR': `\n    color = shadow_filterShadowColor(color);\n    `\n  },\n  getUniforms: createShadowUniforms,\n  uniformTypes: {\n    drawShadowMap: 'f32',\n    useShadowMap: 'f32',\n    color: 'vec4<f32>',\n    lightId: 'i32',\n    lightCount: 'f32',\n    viewProjectionMatrix0: 'mat4x4<f32>',\n    viewProjectionMatrix1: 'mat4x4<f32>',\n    projectCenter0: 'vec4<f32>',\n    projectCenter1: 'vec4<f32>'\n  }\n} as const satisfies ShaderModule<ShadowModuleProps, ShadowModuleUniforms, ShadowModuleBindings>;\n\n// TODO replace with type from math.gl\ntype NumberArray4 = [number, number, number, number];\ntype NumberArray16 = [\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number\n];\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {picking} from '@luma.gl/shadertools';\n\nexport default {\n  ...picking,\n  defaultUniforms: {...picking.defaultUniforms, useFloatColors: false},\n  inject: {\n    'vs:DECKGL_FILTER_GL_POSITION': `\n    // for picking depth values\n    picking_setPickingAttribute(position.z / position.w);\n  `,\n    'vs:DECKGL_FILTER_COLOR': `\n  picking_setPickingColor(geometry.pickingColor);\n  `,\n    'fs:DECKGL_FILTER_COLOR': {\n      order: 99,\n      injection: `\n  // use highlight color if this fragment belongs to the selected object.\n  color = picking_filterHighlightColor(color);\n\n  // use picking color if rendering to picking FBO.\n  color = picking_filterPickingColor(color);\n    `\n    }\n  }\n};\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {ShaderAssembler} from '@luma.gl/shadertools';\n\nimport {gouraudLighting, phongLighting} from '@luma.gl/shadertools';\nimport {layerUniforms} from './misc/layer-uniforms';\nimport geometry from './misc/geometry';\nimport project from './project/project';\nimport project32 from './project32/project32';\nimport shadow from './shadow/shadow';\nimport picking from './picking/picking';\n\nconst DEFAULT_MODULES = [geometry];\n\nconst SHADER_HOOKS_GLSL = [\n  'vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)',\n  'vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)',\n  'vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)',\n  'fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)'\n];\n\nconst SHADER_HOOKS_WGSL = [\n  // Not yet supported\n];\n\nexport function getShaderAssembler(language: 'glsl' | 'wgsl'): ShaderAssembler {\n  const shaderAssembler = ShaderAssembler.getDefaultShaderAssembler();\n\n  for (const shaderModule of DEFAULT_MODULES) {\n    shaderAssembler.addDefaultModule(shaderModule);\n  }\n\n  // Add shader hooks based on language\n  // TODO(ibgreen) - should the luma shader assembler support both sets of hooks?\n  const shaderHooks = language === 'glsl' ? SHADER_HOOKS_GLSL : SHADER_HOOKS_WGSL;\n  for (const shaderHook of shaderHooks) {\n    shaderAssembler.addShaderHook(shaderHook);\n  }\n\n  return shaderAssembler;\n}\n\nexport {layerUniforms, picking, project, project32, gouraudLighting, phongLighting, shadow};\n\n// Useful for custom shader modules\nexport type {ProjectProps, ProjectUniforms} from './project/viewport-uniforms';\n\n// TODO - these should be imported from luma.gl\n/* eslint-disable camelcase */\nexport type PickingUniforms = {\n  picking_uActive: boolean;\n  picking_uAttribute: boolean;\n  picking_uSelectedColor: [number, number, number];\n  picking_uSelectedColorValid: boolean;\n  picking_uHighlightColor: [number, number, number, number];\n};\n\nexport type LightingModuleSettings = {\n  material:\n    | boolean\n    | {\n        ambient?: number;\n        diffuse?: number;\n        shininess?: number;\n        specularColor?: [number, number, number];\n      };\n};\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nconst DEFAULT_LIGHT_COLOR = [255, 255, 255] as [number, number, number];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\n\nlet idCount = 0;\n\nexport type AmbientLightOptions = {\n  id?: string;\n  /** Light color, [r, g, b] in the 0-255 range\n   * @default [255, 255, 255]\n   */\n  color?: [number, number, number];\n  /** Light intensity, higher number is brighter\n   * @default 1.0\n   */\n  intensity?: number;\n};\n\nexport class AmbientLight {\n  id: string;\n  color: [number, number, number];\n  intensity: number;\n  type = 'ambient' as const;\n\n  constructor(props: AmbientLightOptions = {}) {\n    const {color = DEFAULT_LIGHT_COLOR} = props;\n    const {intensity = DEFAULT_LIGHT_INTENSITY} = props;\n\n    this.id = props.id || `ambient-${idCount++}`;\n    this.color = color;\n    this.intensity = intensity;\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Vector3} from '@math.gl/core';\nimport type Layer from '../../lib/layer';\n\nconst DEFAULT_LIGHT_COLOR = [255, 255, 255] as [number, number, number];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\nconst DEFAULT_LIGHT_DIRECTION = [0.0, 0.0, -1.0] as [number, number, number];\n\nlet idCount = 0;\n\nexport type DirectionalLightOptions = {\n  id?: string;\n  /** Light color, [r, g, b] in the 0-255 range\n   * @default [255, 255, 255]\n   */\n  color?: [number, number, number];\n  /** Light intensity, higher number is brighter\n   * @default 1.0\n   */\n  intensity?: number;\n  /** Light direction in the common space\n   * @default [0.0, 0.0, -1.0]\n   */\n  direction?: [number, number, number];\n  /** (Experimental) render shadows cast by this light\n   * @default false\n   */\n  _shadow?: boolean;\n};\n\nexport class DirectionalLight {\n  id: string;\n  color: [number, number, number];\n  intensity: number;\n  type = 'directional' as const;\n  direction: [number, number, number];\n  shadow: boolean;\n\n  constructor(props: DirectionalLightOptions = {}) {\n    const {color = DEFAULT_LIGHT_COLOR} = props;\n    const {intensity = DEFAULT_LIGHT_INTENSITY} = props;\n    const {direction = DEFAULT_LIGHT_DIRECTION} = props;\n    const {_shadow = false} = props;\n\n    this.id = props.id || `directional-${idCount++}`;\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'directional';\n    this.direction = new Vector3(direction).normalize().toArray() as [number, number, number];\n    this.shadow = _shadow;\n  }\n\n  getProjectedLight(opts: {layer: Layer}): DirectionalLight {\n    return this;\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device} from '@luma.gl/core';\n\n/**\n * Base class for passes\n * @todo v9 - should the luma.gl RenderPass be owned by this class?\n * Currently owned by subclasses\n */\nexport default class Pass {\n  /** string id, mainly for debugging */\n  id: string;\n  /** The luma.gl Device that this pass is associated with */\n  device: Device;\n  /** TODO v9 - inject prop types from parent */\n  props: any;\n\n  /** Create a new Pass instance */\n  constructor(device: Device, props: {id: string} = {id: 'pass'}) {\n    const {id} = props;\n    this.id = id; // id of this pass\n    this.device = device;\n    this.props = {...props};\n  }\n\n  setProps(props): void {\n    Object.assign(this.props, props);\n  }\n\n  render(params): void {} // eslint-disable-line @typescript-eslint/no-empty-function\n\n  cleanup() {} // eslint-disable-line @typescript-eslint/no-empty-function\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device, Parameters, RenderPassParameters} from '@luma.gl/core';\nimport type {Framebuffer, RenderPass} from '@luma.gl/core';\n\nimport Pass from './pass';\nimport type Viewport from '../viewports/viewport';\nimport type View from '../views/view';\nimport type Layer from '../lib/layer';\nimport type {Effect} from '../lib/effect';\nimport type {ProjectProps} from '../shaderlib/project/viewport-uniforms';\nimport type {PickingProps} from '@luma.gl/shadertools';\n\nexport type Rect = {x: number; y: number; width: number; height: number};\n\nexport type LayersPassRenderOptions = {\n  /** @deprecated TODO v9 recommend we rename this to framebuffer to minimize confusion */\n  target?: Framebuffer | null;\n  isPicking?: boolean;\n  pass: string;\n  layers: Layer[];\n  viewports: Viewport[];\n  onViewportActive?: (viewport: Viewport) => void;\n  cullRect?: Rect;\n  views?: Record<string, View>;\n  effects?: Effect[];\n  /** If true, recalculates render index (z) from 0. Set to false if a stack of layers are rendered in multiple passes. */\n  clearStack?: boolean;\n  clearCanvas?: boolean;\n  clearColor?: number[];\n  colorMask?: number;\n  scissorRect?: number[];\n  layerFilter?: ((context: FilterContext) => boolean) | null;\n  shaderModuleProps?: any;\n  /** Stores returned results from Effect.preRender, for use downstream in the render pipeline */\n  preRenderStats?: Record<string, any>;\n};\n\nexport type DrawLayerParameters = {\n  shouldDrawLayer: boolean;\n  layerRenderIndex: number;\n  shaderModuleProps: any;\n  layerParameters: Parameters;\n};\n\nexport type FilterContext = {\n  layer: Layer;\n  viewport: Viewport;\n  isPicking: boolean;\n  renderPass: string;\n  cullRect?: Rect;\n};\n\nexport type RenderStats = {\n  totalCount: number;\n  visibleCount: number;\n  compositeCount: number;\n  pickableCount: number;\n};\n\n/** A Pass that renders all layers */\nexport default class LayersPass extends Pass {\n  _lastRenderIndex: number = -1;\n\n  render(options: LayersPassRenderOptions): any {\n    // @ts-expect-error TODO - assuming WebGL context\n    const [width, height] = this.device.canvasContext.getDrawingBufferSize();\n\n    // Explicitly specify clearColor and clearDepth, overriding render pass defaults.\n    const clearCanvas = options.clearCanvas ?? true;\n    const clearColor = options.clearColor ?? (clearCanvas ? [0, 0, 0, 0] : false);\n    const clearDepth = clearCanvas ? 1 : false;\n    const clearStencil = clearCanvas ? 0 : false;\n    const colorMask = options.colorMask ?? 0xf;\n\n    const parameters: RenderPassParameters = {viewport: [0, 0, width, height]};\n    if (options.colorMask) {\n      parameters.colorMask = colorMask;\n    }\n    if (options.scissorRect) {\n      parameters.scissorRect = options.scissorRect as [number, number, number, number];\n    }\n\n    const renderPass = this.device.beginRenderPass({\n      framebuffer: options.target,\n      parameters,\n      clearColor: clearColor as [number, number, number, number],\n      clearDepth,\n      clearStencil\n    });\n\n    try {\n      return this._drawLayers(renderPass, options);\n    } finally {\n      renderPass.end();\n      // TODO(ibgreen): WebGPU - submit may not be needed here but initial port had issues with out of render loop rendering\n      this.device.submit();\n    }\n  }\n\n  /** Draw a list of layers in a list of viewports */\n  private _drawLayers(renderPass: RenderPass, options: LayersPassRenderOptions) {\n    const {\n      target,\n      shaderModuleProps,\n      viewports,\n      views,\n      onViewportActive,\n      clearStack = true\n    } = options;\n    options.pass = options.pass || 'unknown';\n\n    if (clearStack) {\n      this._lastRenderIndex = -1;\n    }\n\n    const renderStats: RenderStats[] = [];\n\n    for (const viewport of viewports) {\n      const view = views && views[viewport.id];\n\n      // Update context to point to this viewport\n      onViewportActive?.(viewport);\n\n      const drawLayerParams = this._getDrawLayerParams(viewport, options);\n\n      // render this viewport\n      const subViewports = viewport.subViewports || [viewport];\n      for (const subViewport of subViewports) {\n        const stats = this._drawLayersInViewport(\n          renderPass,\n          {\n            target,\n            shaderModuleProps,\n            viewport: subViewport,\n            view,\n            pass: options.pass,\n            layers: options.layers\n          },\n          drawLayerParams\n        );\n        renderStats.push(stats);\n      }\n    }\n    return renderStats;\n  }\n\n  // When a viewport contains multiple subviewports (e.g. repeated web mercator map),\n  // this is only done once for the parent viewport\n  /* Resolve the parameters needed to draw each layer */\n  protected _getDrawLayerParams(\n    viewport: Viewport,\n    {\n      layers,\n      pass,\n      isPicking = false,\n      layerFilter,\n      cullRect,\n      effects,\n      shaderModuleProps\n    }: LayersPassRenderOptions,\n    /** Internal flag, true if only used to determine whether each layer should be drawn */\n    evaluateShouldDrawOnly: boolean = false\n  ): DrawLayerParameters[] {\n    const drawLayerParams: DrawLayerParameters[] = [];\n    const indexResolver = layerIndexResolver(this._lastRenderIndex + 1);\n    const drawContext: FilterContext = {\n      layer: layers[0],\n      viewport,\n      isPicking,\n      renderPass: pass,\n      cullRect\n    };\n    const layerFilterCache = {};\n    for (let layerIndex = 0; layerIndex < layers.length; layerIndex++) {\n      const layer = layers[layerIndex];\n      // Check if we should draw layer\n      const shouldDrawLayer = this._shouldDrawLayer(\n        layer,\n        drawContext,\n        layerFilter,\n        layerFilterCache\n      );\n\n      const layerParam = {shouldDrawLayer} as DrawLayerParameters;\n\n      if (shouldDrawLayer && !evaluateShouldDrawOnly) {\n        layerParam.shouldDrawLayer = true;\n\n        // This is the \"logical\" index for ordering this layer in the stack\n        // used to calculate polygon offsets\n        // It can be the same as another layer\n        layerParam.layerRenderIndex = indexResolver(layer, shouldDrawLayer);\n\n        layerParam.shaderModuleProps = this._getShaderModuleProps(\n          layer,\n          effects,\n          pass,\n          shaderModuleProps\n        );\n        layerParam.layerParameters = {\n          ...layer.context.deck?.props.parameters,\n          ...this.getLayerParameters(layer, layerIndex, viewport)\n        };\n      }\n\n      drawLayerParams[layerIndex] = layerParam;\n    }\n    return drawLayerParams;\n  }\n\n  // Draws a list of layers in one viewport\n  // TODO - when picking we could completely skip rendering viewports that dont\n  // intersect with the picking rect\n  /* eslint-disable max-depth, max-statements */\n  private _drawLayersInViewport(\n    renderPass: RenderPass,\n    {layers, shaderModuleProps: globalModuleParameters, pass, target, viewport, view},\n    drawLayerParams: DrawLayerParameters[]\n  ): RenderStats {\n    const glViewport = getGLViewport(this.device, {\n      shaderModuleProps: globalModuleParameters,\n      target,\n      viewport\n    });\n\n    if (view && view.props.clear) {\n      const clearOpts = view.props.clear === true ? {color: true, depth: true} : view.props.clear;\n      const clearRenderPass = this.device.beginRenderPass({\n        framebuffer: target,\n        parameters: {\n          viewport: glViewport,\n          scissorRect: glViewport\n        },\n        clearColor: clearOpts.color ? [0, 0, 0, 0] : false,\n        clearDepth: clearOpts.depth ? 1 : false\n      });\n      clearRenderPass.end();\n    }\n\n    // render layers in normal colors\n    const renderStatus = {\n      totalCount: layers.length,\n      visibleCount: 0,\n      compositeCount: 0,\n      pickableCount: 0\n    };\n\n    renderPass.setParameters({viewport: glViewport});\n\n    // render layers in normal colors\n    for (let layerIndex = 0; layerIndex < layers.length; layerIndex++) {\n      const layer = layers[layerIndex] as Layer;\n      const drawLayerParameters = drawLayerParams[layerIndex];\n      const {shouldDrawLayer} = drawLayerParameters;\n\n      // Calculate stats\n      if (shouldDrawLayer && layer.props.pickable) {\n        renderStatus.pickableCount++;\n      }\n      if (layer.isComposite) {\n        renderStatus.compositeCount++;\n      }\n      if (layer.isDrawable && drawLayerParameters.shouldDrawLayer) {\n        const {layerRenderIndex, shaderModuleProps, layerParameters} = drawLayerParameters;\n        // Draw the layer\n        renderStatus.visibleCount++;\n\n        this._lastRenderIndex = Math.max(this._lastRenderIndex, layerRenderIndex);\n\n        // overwrite layer.context.viewport with the sub viewport\n        if (shaderModuleProps.project) {\n          shaderModuleProps.project.viewport = viewport;\n        }\n\n        // TODO v9 - we are sending renderPass both as a parameter and through the context.\n        // Long-term, it is likely better not to have user defined layer methods have to access\n        // the \"global\" layer context.\n        layer.context.renderPass = renderPass;\n\n        try {\n          layer._drawLayer({\n            renderPass,\n            shaderModuleProps,\n            uniforms: {layerIndex: layerRenderIndex},\n            parameters: layerParameters\n          });\n        } catch (err) {\n          layer.raiseError(err as Error, `drawing ${layer} to ${pass}`);\n        }\n      }\n    }\n\n    return renderStatus;\n  }\n  /* eslint-enable max-depth, max-statements */\n\n  /* Methods for subclass overrides */\n  shouldDrawLayer(layer: Layer): boolean {\n    return true;\n  }\n\n  protected getShaderModuleProps(\n    layer: Layer,\n    effects: Effect[] | undefined,\n    otherShaderModuleProps: Record<string, any>\n  ): any {\n    return null;\n  }\n\n  protected getLayerParameters(layer: Layer, layerIndex: number, viewport: Viewport): Parameters {\n    return layer.props.parameters;\n  }\n\n  /* Private */\n  private _shouldDrawLayer(\n    layer: Layer,\n    drawContext: FilterContext,\n    layerFilter: ((params: FilterContext) => boolean) | undefined | null,\n    layerFilterCache: Record<string, boolean>\n  ) {\n    const shouldDrawLayer = layer.props.visible && this.shouldDrawLayer(layer);\n\n    if (!shouldDrawLayer) {\n      return false;\n    }\n\n    drawContext.layer = layer;\n\n    let parent = layer.parent;\n    while (parent) {\n      // @ts-ignore\n      if (!parent.props.visible || !parent.filterSubLayer(drawContext)) {\n        return false;\n      }\n      drawContext.layer = parent;\n      parent = parent.parent;\n    }\n\n    if (layerFilter) {\n      const rootLayerId = drawContext.layer.id;\n      if (!(rootLayerId in layerFilterCache)) {\n        layerFilterCache[rootLayerId] = layerFilter(drawContext);\n      }\n      if (!layerFilterCache[rootLayerId]) {\n        return false;\n      }\n    }\n\n    // If a layer is drawn, update its viewportChanged flag\n    layer.activateViewport(drawContext.viewport);\n\n    return true;\n  }\n\n  private _getShaderModuleProps(\n    layer: Layer,\n    effects: Effect[] | undefined,\n    pass: string,\n    overrides: any\n  ): any {\n    // @ts-expect-error TODO - assuming WebGL context\n    const devicePixelRatio = this.device.canvasContext.cssToDeviceRatio();\n    const layerProps = layer.internalState?.propsInTransition || layer.props;\n\n    const shaderModuleProps = {\n      layer: layerProps,\n      picking: {\n        isActive: false\n      } satisfies PickingProps,\n      project: {\n        viewport: layer.context.viewport,\n        devicePixelRatio,\n        modelMatrix: layerProps.modelMatrix,\n        coordinateSystem: layerProps.coordinateSystem,\n        coordinateOrigin: layerProps.coordinateOrigin,\n        autoWrapLongitude: layer.wrapLongitude\n      } satisfies ProjectProps\n    };\n\n    if (effects) {\n      for (const effect of effects) {\n        mergeModuleParameters(\n          shaderModuleProps,\n          effect.getShaderModuleProps?.(layer, shaderModuleProps)\n        );\n      }\n    }\n\n    return mergeModuleParameters(\n      shaderModuleProps,\n      this.getShaderModuleProps(layer, effects, shaderModuleProps),\n      overrides\n    );\n  }\n}\n\n// If the _index prop is defined, return a layer index that's relative to its parent\n// Otherwise return the index of the layer among all rendered layers\n// This is done recursively, i.e. if the user overrides a layer's default index,\n// all its descendants will be resolved relative to that index.\n// This implementation assumes that parent layers always appear before its children\n// which is true if the layer array comes from the LayerManager\nexport function layerIndexResolver(\n  startIndex: number = 0,\n  layerIndices: Record<string, number> = {}\n): (layer: Layer, isDrawn: boolean) => number {\n  const resolvers = {};\n\n  const resolveLayerIndex = (layer, isDrawn) => {\n    const indexOverride = layer.props._offset;\n    const layerId = layer.id;\n    const parentId = layer.parent && layer.parent.id;\n\n    let index;\n\n    if (parentId && !(parentId in layerIndices)) {\n      // Populate layerIndices with the parent layer's index\n      resolveLayerIndex(layer.parent, false);\n    }\n\n    if (parentId in resolvers) {\n      const resolver = (resolvers[parentId] =\n        resolvers[parentId] || layerIndexResolver(layerIndices[parentId], layerIndices));\n      index = resolver(layer, isDrawn);\n      resolvers[layerId] = resolver;\n    } else if (Number.isFinite(indexOverride)) {\n      index = indexOverride + (layerIndices[parentId] || 0);\n      // Mark layer as needing its own resolver\n      // We don't actually create it until it's used for the first time\n      resolvers[layerId] = null;\n    } else {\n      index = startIndex;\n    }\n\n    if (isDrawn && index >= startIndex) {\n      startIndex = index + 1;\n    }\n\n    layerIndices[layerId] = index;\n    return index;\n  };\n  return resolveLayerIndex;\n}\n\n// Convert viewport top-left CSS coordinates to bottom up WebGL coordinates\nfunction getGLViewport(\n  device: Device,\n  {\n    shaderModuleProps,\n    target,\n    viewport\n  }: {\n    shaderModuleProps: any;\n    target?: Framebuffer;\n    viewport: Viewport;\n  }\n): [number, number, number, number] {\n  const pixelRatio =\n    shaderModuleProps?.project?.devicePixelRatio ??\n    // @ts-expect-error TODO - assuming WebGL context\n    device.canvasContext.cssToDeviceRatio();\n\n  // Default framebuffer is used when writing to canvas\n  // @ts-expect-error TODO - assuming WebGL context\n  const [, drawingBufferHeight] = device.canvasContext.getDrawingBufferSize();\n  const height = target ? target.height : drawingBufferHeight;\n\n  // Convert viewport top-left CSS coordinates to bottom up WebGL coordinates\n  const dimensions = viewport;\n  return [\n    dimensions.x * pixelRatio,\n    height - (dimensions.y + dimensions.height) * pixelRatio,\n    dimensions.width * pixelRatio,\n    dimensions.height * pixelRatio\n  ];\n}\n\nfunction mergeModuleParameters(\n  target: Record<string, any>,\n  ...sources: Record<string, any>[]\n): Record<string, any> {\n  for (const source of sources) {\n    if (source) {\n      for (const key in source) {\n        if (target[key]) {\n          Object.assign(target[key], source[key]);\n        } else {\n          target[key] = source[key];\n        }\n      }\n    }\n  }\n  return target;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Device, Framebuffer, Parameters, Texture} from '@luma.gl/core';\nimport type Layer from '../lib/layer';\nimport type Viewport from '../viewports/viewport';\nimport LayersPass from './layers-pass';\n\nexport default class ShadowPass extends LayersPass {\n  fbo: Framebuffer;\n\n  constructor(\n    device: Device,\n    props?: {\n      id;\n    }\n  ) {\n    super(device, props);\n\n    // The shadowMap texture\n    const shadowMap = device.createTexture({\n      format: 'rgba8unorm',\n      width: 1,\n      height: 1,\n      sampler: {\n        minFilter: 'linear',\n        magFilter: 'linear',\n        addressModeU: 'clamp-to-edge',\n        addressModeV: 'clamp-to-edge'\n      },\n      mipmaps: true\n    });\n\n    const depthBuffer = device.createTexture({\n      format: 'depth16unorm',\n      width: 1,\n      height: 1,\n      mipmaps: false\n    });\n\n    this.fbo = device.createFramebuffer({\n      id: 'shadowmap',\n      width: 1,\n      height: 1,\n      colorAttachments: [shadowMap],\n      // Depth attachment has to be specified for depth test to work\n      depthStencilAttachment: depthBuffer\n    });\n  }\n\n  delete() {\n    if (this.fbo) {\n      this.fbo.destroy();\n      this.fbo = null!;\n    }\n  }\n\n  getShadowMap(): Texture {\n    return this.fbo.colorAttachments[0].texture;\n  }\n\n  render(params) {\n    const target = this.fbo;\n\n    // @ts-expect-error TODO - assuming WebGL context\n    const pixelRatio = this.device.canvasContext.cssToDeviceRatio();\n\n    const viewport = params.viewports[0];\n    const width = viewport.width * pixelRatio;\n    const height = viewport.height * pixelRatio;\n    const clearColor = [1, 1, 1, 1];\n    if (width !== target.width || height !== target.height) {\n      target.resize({width, height});\n    }\n\n    super.render({...params, clearColor, target, pass: 'shadow'});\n  }\n\n  protected getLayerParameters(\n    layer: Layer<{}>,\n    layerIndex: number,\n    viewport: Viewport\n  ): Parameters {\n    return {\n      ...layer.props.parameters,\n      blend: false,\n      depthWriteEnabled: true,\n      depthCompare: 'less-equal'\n    };\n  }\n\n  shouldDrawLayer(layer) {\n    return layer.props.shadowEnabled !== false;\n  }\n\n  getShaderModuleProps(layer: Layer, effects: any, otherShaderModuleProps: Record<string, any>) {\n    return {\n      shadow: {\n        project: otherShaderModuleProps.project,\n        drawToShadowMap: true\n      }\n    };\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device} from '@luma.gl/core';\nimport {Texture} from '@luma.gl/core';\nimport {AmbientLight} from './ambient-light';\nimport {DirectionalLight} from './directional-light';\nimport {PointLight} from './point-light';\nimport {Matrix4, Vector3} from '@math.gl/core';\nimport ShadowPass from '../../passes/shadow-pass';\nimport shadow from '../../shaderlib/shadow/shadow';\n\nimport type {LightingProps} from '@luma.gl/shadertools';\nimport type {ShadowModuleProps} from '../../shaderlib/shadow/shadow';\nimport type Layer from '../../lib/layer';\nimport type {Effect, EffectContext, PreRenderOptions} from '../../lib/effect';\n\nconst DEFAULT_AMBIENT_LIGHT_PROPS = {\n  color: [255, 255, 255] as [number, number, number],\n  intensity: 1.0\n};\nconst DEFAULT_DIRECTIONAL_LIGHT_PROPS = [\n  {\n    color: [255, 255, 255] as [number, number, number],\n    intensity: 1.0,\n    direction: [-1, 3, -1] as [number, number, number]\n  },\n  {\n    color: [255, 255, 255] as [number, number, number],\n    intensity: 0.9,\n    direction: [1, -8, -2.5] as [number, number, number]\n  }\n];\nconst DEFAULT_SHADOW_COLOR = [0, 0, 0, 200 / 255] as [number, number, number, number];\n\nexport type LightingEffectProps = Record<string, PointLight | DirectionalLight | AmbientLight>;\n\n// Class to manage ambient, point and directional light sources in deck\nexport default class LightingEffect implements Effect {\n  id = 'lighting-effect';\n  props!: LightingEffectProps;\n  shadowColor: [number, number, number, number] = DEFAULT_SHADOW_COLOR;\n  context?: EffectContext;\n\n  private shadow: boolean = false;\n  private ambientLight?: AmbientLight;\n  private directionalLights: DirectionalLight[] = [];\n  private pointLights: PointLight[] = [];\n  private shadowPasses: ShadowPass[] = [];\n  private dummyShadowMap: Texture | null = null;\n  private shadowMatrices?: Matrix4[];\n\n  constructor(props: LightingEffectProps = {}) {\n    this.setProps(props);\n  }\n\n  setup(context: EffectContext) {\n    this.context = context;\n    const {device, deck} = context;\n\n    if (this.shadow && !this.dummyShadowMap) {\n      this._createShadowPasses(device);\n\n      deck._addDefaultShaderModule(shadow);\n\n      this.dummyShadowMap = device.createTexture({\n        width: 1,\n        height: 1\n      });\n    }\n  }\n\n  setProps(props: LightingEffectProps) {\n    this.ambientLight = undefined;\n    this.directionalLights = [];\n    this.pointLights = [];\n\n    for (const key in props) {\n      const lightSource = props[key];\n\n      switch (lightSource.type) {\n        case 'ambient':\n          this.ambientLight = lightSource;\n          break;\n\n        case 'directional':\n          this.directionalLights.push(lightSource);\n          break;\n\n        case 'point':\n          this.pointLights.push(lightSource);\n          break;\n        default:\n      }\n    }\n    this._applyDefaultLights();\n\n    this.shadow = this.directionalLights.some(light => light.shadow);\n    if (this.context) {\n      // Create resources if necessary\n      this.setup(this.context);\n    }\n    this.props = props;\n  }\n\n  preRender({layers, layerFilter, viewports, onViewportActive, views}: PreRenderOptions) {\n    if (!this.shadow) return;\n\n    // create light matrix every frame to make sure always updated from light source\n    this.shadowMatrices = this._calculateMatrices();\n\n    for (let i = 0; i < this.shadowPasses.length; i++) {\n      const shadowPass = this.shadowPasses[i];\n      shadowPass.render({\n        layers,\n        layerFilter,\n        viewports,\n        onViewportActive,\n        views,\n        shaderModuleProps: {\n          shadow: {\n            shadowLightId: i,\n            dummyShadowMap: this.dummyShadowMap,\n            shadowMatrices: this.shadowMatrices\n          }\n        }\n      });\n    }\n  }\n\n  getShaderModuleProps(layer: Layer, otherShaderModuleProps: Record<string, any>) {\n    const shadowProps = this.shadow\n      ? ({\n          project: otherShaderModuleProps.project,\n          shadowMaps: this.shadowPasses.map(shadowPass => shadowPass.getShadowMap()),\n          dummyShadowMap: this.dummyShadowMap!,\n          shadowColor: this.shadowColor,\n          shadowMatrices: this.shadowMatrices\n        } satisfies ShadowModuleProps)\n      : {};\n\n    // when not rendering to screen, turn off lighting by adding empty light source object\n    // lights shader module relies on the `lightSources` to turn on/off lighting\n    const lightingProps: LightingProps = {\n      enabled: true,\n      ambientLight: this.ambientLight,\n      directionalLights: this.directionalLights.map(directionalLight =>\n        directionalLight.getProjectedLight({layer})\n      ),\n      pointLights: this.pointLights.map(pointLight => pointLight.getProjectedLight({layer}))\n    };\n    // @ts-expect-error material is not a Layer prop\n    const materialProps = layer.props.material;\n\n    return {\n      shadow: shadowProps,\n      lighting: lightingProps,\n      phongMaterial: materialProps,\n      gouraudMaterial: materialProps\n    };\n  }\n\n  cleanup(context: EffectContext): void {\n    for (const shadowPass of this.shadowPasses) {\n      shadowPass.delete();\n    }\n    this.shadowPasses.length = 0;\n\n    if (this.dummyShadowMap) {\n      this.dummyShadowMap.destroy();\n      this.dummyShadowMap = null;\n      context.deck._removeDefaultShaderModule(shadow);\n    }\n  }\n\n  private _calculateMatrices(): Matrix4[] {\n    const lightMatrices: Matrix4[] = [];\n    for (const light of this.directionalLights) {\n      const viewMatrix = new Matrix4().lookAt({\n        eye: new Vector3(light.direction).negate()\n      });\n\n      lightMatrices.push(viewMatrix);\n    }\n    return lightMatrices;\n  }\n\n  private _createShadowPasses(device: Device): void {\n    for (let i = 0; i < this.directionalLights.length; i++) {\n      const shadowPass = new ShadowPass(device);\n      this.shadowPasses[i] = shadowPass;\n    }\n  }\n\n  private _applyDefaultLights(): void {\n    const {ambientLight, pointLights, directionalLights} = this;\n    if (!ambientLight && pointLights.length === 0 && directionalLights.length === 0) {\n      this.ambientLight = new AmbientLight(DEFAULT_AMBIENT_LIGHT_PROPS);\n      this.directionalLights.push(\n        new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[0]),\n        new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[1])\n      );\n    }\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {TypedArray, TypedArrayConstructor} from '../types/types';\n\nexport type TypedArrayManagerOptions = {\n  overAlloc?: number;\n  poolSize?: number;\n};\n\nexport class TypedArrayManager {\n  private _pool: ArrayBuffer[] = [];\n  opts: {\n    overAlloc: number;\n    poolSize: number;\n  } = {overAlloc: 2, poolSize: 100};\n\n  constructor(options: TypedArrayManagerOptions = {}) {\n    this.setOptions(options);\n  }\n\n  setOptions(options: TypedArrayManagerOptions) {\n    Object.assign(this.opts, options);\n  }\n\n  allocate<T extends TypedArray>(\n    typedArray: T | null | undefined,\n    count: number,\n    {\n      size = 1,\n      type,\n      padding = 0,\n      copy = false,\n      initialize = false,\n      maxCount\n    }: {\n      size?: number;\n      type?: TypedArrayConstructor;\n      padding?: number;\n      copy?: boolean;\n      initialize?: boolean;\n      maxCount?: number;\n    }\n  ): T {\n    const Type =\n      type || (typedArray && (typedArray.constructor as TypedArrayConstructor)) || Float32Array;\n\n    const newSize = count * size + padding;\n    if (ArrayBuffer.isView(typedArray)) {\n      if (newSize <= typedArray.length) {\n        return typedArray;\n      }\n      if (newSize * typedArray.BYTES_PER_ELEMENT <= typedArray.buffer.byteLength) {\n        return new Type(typedArray.buffer, 0, newSize) as T;\n      }\n    }\n\n    let maxSize: number = Infinity;\n    if (maxCount) {\n      maxSize = maxCount * size + padding;\n    }\n\n    const newArray = this._allocate(Type, newSize, initialize, maxSize);\n\n    if (typedArray && copy) {\n      newArray.set(typedArray);\n    } else if (!initialize) {\n      // Hack - always initialize the first 4 elements. NaNs crash the Attribute validation\n      newArray.fill(0, 0, 4);\n    }\n\n    this._release(typedArray);\n    return newArray as T;\n  }\n\n  release(typedArray: TypedArray | null | undefined) {\n    this._release(typedArray);\n  }\n\n  private _allocate(\n    Type: TypedArrayConstructor,\n    size: number,\n    initialize: boolean,\n    maxSize: number\n  ): TypedArray {\n    // Allocate at least one element to ensure a valid buffer\n    let sizeToAllocate = Math.max(Math.ceil(size * this.opts.overAlloc), 1);\n    // Don't over allocate after certain specified number of elements\n    if (sizeToAllocate > maxSize) {\n      sizeToAllocate = maxSize;\n    }\n\n    // Check if available in pool\n    const pool = this._pool;\n    const byteLength = Type.BYTES_PER_ELEMENT * sizeToAllocate;\n    const i = pool.findIndex(b => b.byteLength >= byteLength);\n    if (i >= 0) {\n      // Create a new array using an existing buffer\n      const array = new Type(pool.splice(i, 1)[0], 0, sizeToAllocate);\n      if (initialize) {\n        // Viewing a buffer with a different type may create NaNs\n        array.fill(0);\n      }\n      return array;\n    }\n    return new Type(sizeToAllocate);\n  }\n\n  private _release(typedArray: TypedArray | null | undefined): void {\n    if (!ArrayBuffer.isView(typedArray)) {\n      return;\n    }\n    const pool = this._pool;\n    const {buffer} = typedArray;\n    // Save the buffer of the released array into the pool\n    // Sort buffers by size\n    // TODO - implement binary search?\n    const {byteLength} = buffer;\n    const i = pool.findIndex(b => b.byteLength >= byteLength);\n    if (i < 0) {\n      pool.push(buffer);\n    } else if (i > 0 || pool.length < this.opts.poolSize) {\n      pool.splice(i, 0, buffer);\n    }\n    if (pool.length > this.opts.poolSize) {\n      // Drop the smallest one\n      pool.shift();\n    }\n  }\n}\n\nexport default new TypedArrayManager();\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Extensions to math.gl library. Intended to be folded back.\nimport typedArrayManager from './typed-array-manager';\nimport {Vector3, NumericArray} from '@math.gl/core';\n\nimport type {Matrix4} from '@math.gl/core';\n\n// Helper, avoids low-precision 32 bit matrices from gl-matrix mat4.create()\nexport function createMat4(): number[] {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\nexport function mod(value: number, divisor: number): number {\n  const modulus = value % divisor;\n  return modulus < 0 ? divisor + modulus : modulus;\n}\n\n// Extract camera vectors (move to math library?)\nexport function getCameraPosition(\n  viewMatrixInverse: Matrix4 | NumericArray\n): [number, number, number] {\n  // Read the translation from the inverse view matrix\n  return [viewMatrixInverse[12], viewMatrixInverse[13], viewMatrixInverse[14]];\n}\n\nexport type FrustumPlane = {\n  distance: number;\n  normal: Vector3;\n};\n\n// https://www.gamedevs.org/uploads/fast-extraction-viewing-frustum-planes-from-world-view-projection-matrix.pdf\nexport function getFrustumPlanes(viewProjectionMatrix: Matrix4 | NumericArray): {\n  left: FrustumPlane;\n  right: FrustumPlane;\n  top: FrustumPlane;\n  bottom: FrustumPlane;\n  near: FrustumPlane;\n  far: FrustumPlane;\n} {\n  return {\n    left: getFrustumPlane(\n      viewProjectionMatrix[3] + viewProjectionMatrix[0],\n      viewProjectionMatrix[7] + viewProjectionMatrix[4],\n      viewProjectionMatrix[11] + viewProjectionMatrix[8],\n      viewProjectionMatrix[15] + viewProjectionMatrix[12]\n    ),\n    right: getFrustumPlane(\n      viewProjectionMatrix[3] - viewProjectionMatrix[0],\n      viewProjectionMatrix[7] - viewProjectionMatrix[4],\n      viewProjectionMatrix[11] - viewProjectionMatrix[8],\n      viewProjectionMatrix[15] - viewProjectionMatrix[12]\n    ),\n    bottom: getFrustumPlane(\n      viewProjectionMatrix[3] + viewProjectionMatrix[1],\n      viewProjectionMatrix[7] + viewProjectionMatrix[5],\n      viewProjectionMatrix[11] + viewProjectionMatrix[9],\n      viewProjectionMatrix[15] + viewProjectionMatrix[13]\n    ),\n    top: getFrustumPlane(\n      viewProjectionMatrix[3] - viewProjectionMatrix[1],\n      viewProjectionMatrix[7] - viewProjectionMatrix[5],\n      viewProjectionMatrix[11] - viewProjectionMatrix[9],\n      viewProjectionMatrix[15] - viewProjectionMatrix[13]\n    ),\n    near: getFrustumPlane(\n      viewProjectionMatrix[3] + viewProjectionMatrix[2],\n      viewProjectionMatrix[7] + viewProjectionMatrix[6],\n      viewProjectionMatrix[11] + viewProjectionMatrix[10],\n      viewProjectionMatrix[15] + viewProjectionMatrix[14]\n    ),\n    far: getFrustumPlane(\n      viewProjectionMatrix[3] - viewProjectionMatrix[2],\n      viewProjectionMatrix[7] - viewProjectionMatrix[6],\n      viewProjectionMatrix[11] - viewProjectionMatrix[10],\n      viewProjectionMatrix[15] - viewProjectionMatrix[14]\n    )\n  };\n}\n\nconst scratchVector = new Vector3();\n\nfunction getFrustumPlane(a: number, b: number, c: number, d: number): FrustumPlane {\n  scratchVector.set(a, b, c);\n  const L = scratchVector.len();\n  return {distance: d / L, normal: new Vector3(-a / L, -b / L, -c / L)};\n}\n\n/**\n * Calculate the low part of a WebGL 64 bit float\n * @param x {number} - the input float number\n * @returns {number} - the lower 32 bit of the number\n */\nexport function fp64LowPart(x: number): number {\n  return x - Math.fround(x);\n}\n\nlet scratchArray;\n\n/**\n * Split a Float64Array into a double-length Float32Array\n * @param typedArray\n * @param options\n * @param options.size  - per attribute size\n * @param options.startIndex - start index in the source array\n * @param options.endIndex  - end index in the source array\n * @returns {} - high part, low part for each attribute:\n    [1xHi, 1yHi, 1zHi, 1xLow, 1yLow, 1zLow, 2xHi, ...]\n */\nexport function toDoublePrecisionArray(\n  typedArray: Float64Array,\n  options: {size?: number; startIndex?: number; endIndex?: number}\n): Float32Array {\n  const {size = 1, startIndex = 0} = options;\n\n  const endIndex = options.endIndex !== undefined ? options.endIndex : typedArray.length;\n\n  const count = (endIndex - startIndex) / size;\n  scratchArray = typedArrayManager.allocate(scratchArray, count, {\n    type: Float32Array,\n    size: size * 2\n  });\n\n  let sourceIndex = startIndex;\n  let targetIndex = 0;\n  while (sourceIndex < endIndex) {\n    for (let j = 0; j < size; j++) {\n      const value = typedArray[sourceIndex++];\n      scratchArray[targetIndex + j] = value;\n      scratchArray[targetIndex + j + size] = fp64LowPart(value);\n    }\n    targetIndex += size * 2;\n  }\n\n  return scratchArray.subarray(0, count * size * 2);\n}\n\ntype LayerBounds = [number[], number[]];\nexport function mergeBounds(boundsList: (LayerBounds | null)[]): LayerBounds | null {\n  let mergedBounds: LayerBounds | null = null;\n  let isMerged = false;\n\n  for (const bounds of boundsList) {\n    /* eslint-disable-next-line no-continue */\n    if (!bounds) continue;\n    if (!mergedBounds) {\n      mergedBounds = bounds;\n    } else {\n      if (!isMerged) {\n        // Copy to avoid mutating input bounds\n        mergedBounds = [\n          [mergedBounds[0][0], mergedBounds[0][1]],\n          [mergedBounds[1][0], mergedBounds[1][1]]\n        ];\n        isMerged = true;\n      }\n\n      mergedBounds[0][0] = Math.min(mergedBounds[0][0], bounds[0][0]);\n      mergedBounds[0][1] = Math.min(mergedBounds[0][1], bounds[0][1]);\n      mergedBounds[1][0] = Math.max(mergedBounds[1][0], bounds[1][0]);\n      mergedBounds[1][1] = Math.max(mergedBounds[1][1], bounds[1][1]);\n    }\n  }\n\n  return mergedBounds;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport log from '../utils/log';\nimport {createMat4, getCameraPosition, getFrustumPlanes, FrustumPlane} from '../utils/math-utils';\n\nimport {Matrix4, Vector3, equals, clamp, mat4} from '@math.gl/core';\n\nimport {\n  getDistanceScales,\n  getMeterZoom,\n  lngLatToWorld,\n  worldToLngLat,\n  worldToPixels,\n  pixelsToWorld\n} from '@math.gl/web-mercator';\n\nimport {PROJECTION_MODE} from '../lib/constants';\n\nexport type DistanceScales = {\n  unitsPerMeter: number[];\n  metersPerUnit: number[];\n};\n\nexport type Padding = {\n  left?: number;\n  right?: number;\n  top?: number;\n  bottom?: number;\n};\n\nexport type ViewportOptions = {\n  /** Name of the viewport */\n  id?: string;\n  /** Left offset from the canvas edge, in pixels */\n  x?: number;\n  /** Top offset from the canvas edge, in pixels */\n  y?: number;\n  /** Viewport width in pixels */\n  width?: number;\n  /** Viewport height in pixels */\n  height?: number;\n  /** Longitude in degrees (geospatial only) */\n  longitude?: number;\n  /** Latitude in degrees (geospatial only) */\n  latitude?: number;\n  /** Viewport center in world space. If geospatial, refers to meter offsets from lng, lat, elevation */\n  position?: number[];\n  /** Zoom level */\n  zoom?: number;\n  /** Padding around the viewport, in pixels. */\n  padding?: Padding | null;\n  distanceScales?: DistanceScales;\n  /** Model matrix of viewport center */\n  modelMatrix?: number[] | null;\n  /** Custom view matrix */\n  viewMatrix?: number[];\n  /** Custom projection matrix */\n  projectionMatrix?: number[];\n  /** Modifier of viewport scale. Corresponds to the number of pixels per common unit at zoom 0. */\n  focalDistance?: number;\n  /** Use orthographic projection */\n  orthographic?: boolean;\n  /** fovy in radians. If supplied, overrides fovy */\n  fovyRadians?: number;\n  /** fovy in degrees. */\n  fovy?: number;\n  /** Near plane of the projection matrix */\n  near?: number;\n  /** Far plane of the projection matrix */\n  far?: number;\n};\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\nconst IDENTITY = createMat4();\n\nconst ZERO_VECTOR = [0, 0, 0];\n\nconst DEFAULT_DISTANCE_SCALES: DistanceScales = {\n  unitsPerMeter: [1, 1, 1],\n  metersPerUnit: [1, 1, 1]\n};\n\n// / Helpers\nfunction createProjectionMatrix({\n  width,\n  height,\n  orthographic,\n  fovyRadians,\n  focalDistance,\n  padding,\n  near,\n  far\n}: {\n  width: number;\n  height: number;\n  orthographic: boolean;\n  fovyRadians: number;\n  focalDistance: number;\n  padding: Padding | null;\n  near: number;\n  far: number;\n}) {\n  const aspect = width / height;\n  const matrix = orthographic\n    ? new Matrix4().orthographic({fovy: fovyRadians, aspect, focalDistance, near, far})\n    : new Matrix4().perspective({fovy: fovyRadians, aspect, near, far});\n  if (padding) {\n    const {left = 0, right = 0, top = 0, bottom = 0} = padding;\n    const offsetX = clamp((left + width - right) / 2, 0, width) - width / 2;\n    const offsetY = clamp((top + height - bottom) / 2, 0, height) - height / 2;\n    // pixels to clip space\n    matrix[8] -= (offsetX * 2) / width;\n    matrix[9] += (offsetY * 2) / height;\n  }\n  return matrix;\n}\n\n/**\n * Manages coordinate system transformations.\n *\n * Note: The Viewport is immutable in the sense that it only has accessors.\n * A new viewport instance should be created if any parameters have changed.\n */\nexport default class Viewport {\n  static displayName = 'Viewport';\n\n  /** Init parameters */\n\n  id: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  padding?: Padding | null;\n  isGeospatial: boolean;\n  zoom: number;\n  focalDistance: number;\n  position: number[];\n  modelMatrix: number[] | null;\n\n  /** Derived parameters */\n\n  // `!` post-fix expression operator asserts that its operand is non-null and non-undefined in contexts\n  // where the type checker is unable to conclude that fact.\n\n  distanceScales: DistanceScales; /** scale factors between world space and common space */\n  scale!: number; /** scale factor, equals 2^zoom */\n  center!: number[]; /** viewport center in common space */\n  cameraPosition!: number[]; /** Camera position in common space */\n  projectionMatrix!: number[];\n  viewMatrix!: number[];\n  viewMatrixUncentered!: number[];\n  viewMatrixInverse!: number[];\n  viewProjectionMatrix!: number[];\n  pixelProjectionMatrix!: number[];\n  pixelUnprojectionMatrix!: number[];\n  resolution?: number;\n\n  private _frustumPlanes: {[name: string]: FrustumPlane} = {};\n\n  // eslint-disable-next-line complexity\n  constructor(opts: ViewportOptions = {}) {\n    // @ts-ignore\n    this.id = opts.id || this.constructor.displayName || 'viewport';\n\n    this.x = opts.x || 0;\n    this.y = opts.y || 0;\n    // Silently allow apps to send in w,h = 0,0\n    this.width = opts.width || 1;\n    this.height = opts.height || 1;\n    this.zoom = opts.zoom || 0;\n    this.padding = opts.padding;\n    this.distanceScales = opts.distanceScales || DEFAULT_DISTANCE_SCALES;\n    this.focalDistance = opts.focalDistance || 1;\n    this.position = opts.position || ZERO_VECTOR;\n    this.modelMatrix = opts.modelMatrix || null;\n\n    const {longitude, latitude} = opts;\n    this.isGeospatial = Number.isFinite(latitude) && Number.isFinite(longitude);\n\n    this._initProps(opts);\n    this._initMatrices(opts);\n\n    // Bind methods for easy access\n    this.equals = this.equals.bind(this);\n    this.project = this.project.bind(this);\n    this.unproject = this.unproject.bind(this);\n    this.projectPosition = this.projectPosition.bind(this);\n    this.unprojectPosition = this.unprojectPosition.bind(this);\n    this.projectFlat = this.projectFlat.bind(this);\n    this.unprojectFlat = this.unprojectFlat.bind(this);\n  }\n\n  get subViewports(): Viewport[] | null {\n    return null;\n  }\n\n  get metersPerPixel(): number {\n    return this.distanceScales.metersPerUnit[2] / this.scale;\n  }\n\n  get projectionMode(): number {\n    if (this.isGeospatial) {\n      return this.zoom < 12\n        ? PROJECTION_MODE.WEB_MERCATOR\n        : PROJECTION_MODE.WEB_MERCATOR_AUTO_OFFSET;\n    }\n    return PROJECTION_MODE.IDENTITY;\n  }\n\n  // Two viewports are equal if width and height are identical, and if\n  // their view and projection matrices are (approximately) equal.\n  equals(viewport: Viewport): boolean {\n    if (!(viewport instanceof Viewport)) {\n      return false;\n    }\n    if (this === viewport) {\n      return true;\n    }\n\n    return (\n      viewport.width === this.width &&\n      viewport.height === this.height &&\n      viewport.scale === this.scale &&\n      equals(viewport.projectionMatrix, this.projectionMatrix) &&\n      equals(viewport.viewMatrix, this.viewMatrix)\n    );\n    // TODO - check distance scales?\n  }\n\n  /**\n   * Projects xyz (possibly latitude and longitude) to pixel coordinates in window\n   * using viewport projection parameters\n   * - [longitude, latitude] to [x, y]\n   * - [longitude, latitude, Z] => [x, y, z]\n   * Note: By default, returns top-left coordinates for canvas/SVG type render\n   *\n   * @param {Array} lngLatZ - [lng, lat] or [lng, lat, Z]\n   * @param {Object} opts - options\n   * @param {Object} opts.topLeft=true - Whether projected coords are top left\n   * @return {Array} - [x, y] or [x, y, z] in top left coords\n   */\n  project(xyz: number[], {topLeft = true}: {topLeft?: boolean} = {}): number[] {\n    const worldPosition = this.projectPosition(xyz);\n    const coord = worldToPixels(worldPosition, this.pixelProjectionMatrix);\n\n    const [x, y] = coord;\n    const y2 = topLeft ? y : this.height - y;\n    return xyz.length === 2 ? [x, y2] : [x, y2, coord[2]];\n  }\n\n  /**\n   * Unproject pixel coordinates on screen onto world coordinates,\n   * (possibly [lon, lat]) on map.\n   * - [x, y] => [lng, lat]\n   * - [x, y, z] => [lng, lat, Z]\n   * @param {Array} xyz -\n   * @param {Object} opts - options\n   * @param {Object} opts.topLeft=true - Whether origin is top left\n   * @return {Array|null} - [lng, lat, Z] or [X, Y, Z]\n   */\n  unproject(\n    xyz: number[],\n    {topLeft = true, targetZ}: {topLeft?: boolean; targetZ?: number} = {}\n  ): number[] {\n    const [x, y, z] = xyz;\n\n    const y2 = topLeft ? y : this.height - y;\n    const targetZWorld = targetZ && targetZ * this.distanceScales.unitsPerMeter[2];\n    const coord = pixelsToWorld([x, y2, z], this.pixelUnprojectionMatrix, targetZWorld);\n    const [X, Y, Z] = this.unprojectPosition(coord);\n\n    if (Number.isFinite(z)) {\n      return [X, Y, Z];\n    }\n    return Number.isFinite(targetZ) ? [X, Y, targetZ as number] : [X, Y];\n  }\n\n  // NON_LINEAR PROJECTION HOOKS\n  // Used for web meractor projection\n\n  projectPosition(xyz: number[]): [number, number, number] {\n    const [X, Y] = this.projectFlat(xyz);\n    const Z = (xyz[2] || 0) * this.distanceScales.unitsPerMeter[2];\n    return [X, Y, Z];\n  }\n\n  unprojectPosition(xyz: number[]): [number, number, number] {\n    const [X, Y] = this.unprojectFlat(xyz);\n    const Z = (xyz[2] || 0) * this.distanceScales.metersPerUnit[2];\n    return [X, Y, Z];\n  }\n\n  /**\n   * Project [lng,lat] on sphere onto [x,y] on 512*512 Mercator Zoom 0 tile.\n   * Performs the nonlinear part of the web mercator projection.\n   * Remaining projection is done with 4x4 matrices which also handles\n   * perspective.\n   * @param {Array} lngLat - [lng, lat] coordinates\n   *   Specifies a point on the sphere to project onto the map.\n   * @return {Array} [x,y] coordinates.\n   */\n  projectFlat(xyz: number[]): [number, number] {\n    if (this.isGeospatial) {\n      // Shader clamps latitude to +-89.9, see /shaderlib/project/project.glsl.js\n      // lngLatToWorld([0, -89.9])[1] = -317.9934163758329\n      // lngLatToWorld([0, 89.9])[1] = 829.9934163758271\n      const result = lngLatToWorld(xyz);\n      result[1] = clamp(result[1], -318, 830);\n      return result;\n    }\n    return xyz as [number, number];\n  }\n\n  /**\n   * Unproject world point [x,y] on map onto {lat, lon} on sphere\n   * @param {object|Vector} xy - object with {x,y} members\n   *  representing point on projected map plane\n   * @return {GeoCoordinates} - object with {lat,lon} of point on sphere.\n   *   Has toArray method if you need a GeoJSON Array.\n   *   Per cartographic tradition, lat and lon are specified as degrees.\n   */\n  unprojectFlat(xyz: number[]): [number, number] {\n    if (this.isGeospatial) {\n      return worldToLngLat(xyz);\n    }\n    return xyz as [number, number];\n  }\n\n  /**\n   * Get bounds of the current viewport\n   * @return {Array} - [minX, minY, maxX, maxY]\n   */\n  getBounds(options: {z?: number} = {}): [number, number, number, number] {\n    const unprojectOption = {targetZ: options.z || 0};\n\n    const topLeft = this.unproject([0, 0], unprojectOption);\n    const topRight = this.unproject([this.width, 0], unprojectOption);\n    const bottomLeft = this.unproject([0, this.height], unprojectOption);\n    const bottomRight = this.unproject([this.width, this.height], unprojectOption);\n\n    return [\n      Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]),\n      Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]),\n      Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]),\n      Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1])\n    ];\n  }\n\n  getDistanceScales(coordinateOrigin?: number[]): DistanceScales {\n    if (coordinateOrigin && this.isGeospatial) {\n      return getDistanceScales({\n        longitude: coordinateOrigin[0],\n        latitude: coordinateOrigin[1],\n        highPrecision: true\n      });\n    }\n    return this.distanceScales;\n  }\n\n  containsPixel({\n    x,\n    y,\n    width = 1,\n    height = 1\n  }: {\n    x: number;\n    y: number;\n    width?: number;\n    height?: number;\n  }): boolean {\n    return (\n      x < this.x + this.width &&\n      this.x < x + width &&\n      y < this.y + this.height &&\n      this.y < y + height\n    );\n  }\n\n  // Extract frustum planes in common space\n  getFrustumPlanes(): {\n    left: FrustumPlane;\n    right: FrustumPlane;\n    bottom: FrustumPlane;\n    top: FrustumPlane;\n    near: FrustumPlane;\n    far: FrustumPlane;\n  } {\n    if (this._frustumPlanes.near) {\n      // @ts-ignore\n      return this._frustumPlanes;\n    }\n\n    Object.assign(this._frustumPlanes, getFrustumPlanes(this.viewProjectionMatrix));\n\n    // @ts-ignore\n    return this._frustumPlanes;\n  }\n\n  // EXPERIMENTAL METHODS\n\n  /**\n   * Needed by panning and linear transition\n   * Pan the viewport to place a given world coordinate at screen point [x, y]\n   *\n   * @param {Array} coords - world coordinates\n   * @param {Array} pixel - [x,y] coordinates on screen\n   * @return {Object} props of the new viewport\n   */\n  panByPosition(coords: number[], pixel: number[]): any {\n    return null;\n  }\n\n  // INTERNAL METHODS\n\n  /* eslint-disable complexity, max-statements */\n  private _initProps(opts: ViewportOptions) {\n    const longitude = opts.longitude as number;\n    const latitude = opts.latitude as number;\n\n    if (this.isGeospatial) {\n      if (!Number.isFinite(opts.zoom)) {\n        this.zoom = getMeterZoom({latitude}) + Math.log2(this.focalDistance);\n      }\n      this.distanceScales = opts.distanceScales || getDistanceScales({latitude, longitude});\n    }\n    const scale = Math.pow(2, this.zoom);\n    this.scale = scale;\n\n    const {position, modelMatrix} = opts;\n    let meterOffset: number[] = ZERO_VECTOR;\n    if (position) {\n      meterOffset = modelMatrix\n        ? (new Matrix4(modelMatrix).transformAsVector(position, []) as number[])\n        : position;\n    }\n\n    if (this.isGeospatial) {\n      // Determine camera center in common space\n      const center = this.projectPosition([longitude, latitude, 0]);\n\n      this.center = new Vector3(meterOffset)\n        // Convert to pixels in current zoom\n        .scale(this.distanceScales.unitsPerMeter)\n        .add(center);\n    } else {\n      this.center = this.projectPosition(meterOffset);\n    }\n  }\n  /* eslint-enable complexity, max-statements */\n\n  private _initMatrices(opts: ViewportOptions) {\n    const {\n      // View matrix\n      viewMatrix = IDENTITY,\n      // Projection matrix\n      projectionMatrix = null,\n\n      // Projection matrix parameters, used if projectionMatrix not supplied\n      orthographic = false,\n      fovyRadians,\n      fovy = 75,\n      near = 0.1, // Distance of near clipping plane\n      far = 1000, // Distance of far clipping plane\n      padding = null, // Center offset in pixels\n      focalDistance = 1\n    } = opts;\n\n    this.viewMatrixUncentered = viewMatrix;\n    // Make a centered version of the matrix for projection modes without an offset\n    this.viewMatrix = new Matrix4()\n      // Apply the uncentered view matrix\n      .multiplyRight(viewMatrix)\n      // And center it\n      .translate(new Vector3(this.center).negate());\n\n    this.projectionMatrix =\n      projectionMatrix ||\n      createProjectionMatrix({\n        width: this.width,\n        height: this.height,\n        orthographic,\n        fovyRadians: fovyRadians || fovy * DEGREES_TO_RADIANS,\n        focalDistance,\n        padding,\n        near,\n        far\n      });\n\n    // Note: As usual, matrix operations should be applied in \"reverse\" order\n    // since vectors will be multiplied in from the right during transformation\n    const vpm = createMat4();\n    mat4.multiply(vpm, vpm, this.projectionMatrix);\n    mat4.multiply(vpm, vpm, this.viewMatrix);\n    this.viewProjectionMatrix = vpm;\n\n    // console.log('VPM', this.viewMatrix, this.projectionMatrix, this.viewProjectionMatrix);\n\n    // Calculate inverse view matrix\n    this.viewMatrixInverse = mat4.invert([], this.viewMatrix) || this.viewMatrix;\n\n    // Decompose camera parameters\n    this.cameraPosition = getCameraPosition(this.viewMatrixInverse);\n\n    /*\n     * Builds matrices that converts preprojected lngLats to screen pixels\n     * and vice versa.\n     * Note: Currently returns bottom-left coordinates!\n     * Note: Starts with the GL projection matrix and adds steps to the\n     *       scale and translate that matrix onto the window.\n     * Note: WebGL controls clip space to screen projection with gl.viewport\n     *       and does not need this step.\n     */\n\n    // matrix for conversion from world location to screen (pixel) coordinates\n    const viewportMatrix = createMat4(); // matrix from NDC to viewport.\n    const pixelProjectionMatrix = createMat4(); // matrix from world space to viewport.\n    mat4.scale(viewportMatrix, viewportMatrix, [this.width / 2, -this.height / 2, 1]);\n    mat4.translate(viewportMatrix, viewportMatrix, [1, -1, 0]);\n    mat4.multiply(pixelProjectionMatrix, viewportMatrix, this.viewProjectionMatrix);\n    this.pixelProjectionMatrix = pixelProjectionMatrix;\n\n    this.pixelUnprojectionMatrix = mat4.invert(createMat4(), this.pixelProjectionMatrix);\n    if (!this.pixelUnprojectionMatrix) {\n      log.warn('Pixel project matrix not invertible')();\n      // throw new Error('Pixel project matrix not invertible');\n    }\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// View and Projection Matrix calculations for mapbox-js style\n// map view properties\nimport Viewport from './viewport';\n\nimport {\n  pixelsToWorld,\n  getViewMatrix,\n  addMetersToLngLat,\n  unitsPerMeter,\n  getProjectionParameters,\n  altitudeToFovy,\n  fovyToAltitude,\n  fitBounds,\n  getBounds\n} from '@math.gl/web-mercator';\nimport {Padding} from './viewport';\n\nimport {Matrix4, clamp, vec2} from '@math.gl/core';\n\nexport type WebMercatorViewportOptions = {\n  /** Name of the viewport */\n  id?: string;\n  /** Left offset from the canvas edge, in pixels */\n  x?: number;\n  /** Top offset from the canvas edge, in pixels */\n  y?: number;\n  /** Viewport width in pixels */\n  width?: number;\n  /** Viewport height in pixels */\n  height?: number;\n  /** Longitude in degrees */\n  longitude?: number;\n  /** Latitude in degrees */\n  latitude?: number;\n  /** Tilt of the camera in degrees */\n  pitch?: number;\n  /** Heading of the camera in degrees */\n  bearing?: number;\n  /** Camera altitude relative to the viewport height, legacy property used to control the FOV. Default `1.5` */\n  altitude?: number;\n  /** Camera fovy in degrees. If provided, overrides `altitude` */\n  fovy?: number;\n  /** Viewport center in world space. If geospatial, refers to meter offsets from lng, lat, elevation */\n  position?: number[];\n  /** Zoom level */\n  zoom?: number;\n  /** Padding around the viewport, in pixels. */\n  padding?: Padding | null;\n  /** Model matrix of viewport center */\n  modelMatrix?: number[] | null;\n  /** Custom projection matrix */\n  projectionMatrix?: number[];\n  /** Use orthographic projection */\n  orthographic?: boolean;\n  /** Scaler for the near plane, 1 unit equals to the height of the viewport. Default `0.1` */\n  nearZMultiplier?: number;\n  /** Scaler for the far plane, 1 unit equals to the distance from the camera to the edge of the screen. Default `1.01` */\n  farZMultiplier?: number;\n  /** Optionally override the near plane position. `nearZMultiplier` is ignored if `nearZ` is supplied. */\n  nearZ?: number;\n  /** Optionally override the far plane position. `farZMultiplier` is ignored if `farZ` is supplied. */\n  farZ?: number;\n  /** Render multiple copies of the world */\n  repeat?: boolean;\n  /** Internal use */\n  worldOffset?: number;\n  /** @deprecated Revert to approximated meter size calculation prior to v8.5 */\n  legacyMeterSizes?: boolean;\n};\n\n/**\n * Manages transformations to/from WGS84 coordinates using the Web Mercator Projection.\n */\nexport default class WebMercatorViewport extends Viewport {\n  static displayName = 'WebMercatorViewport';\n\n  longitude: number;\n  latitude: number;\n  pitch: number;\n  bearing: number;\n  altitude: number;\n  fovy: number;\n  orthographic: boolean;\n\n  /** Each sub viewport renders one copy of the world if repeat:true. The list is generated and cached on first request. */\n  private _subViewports: WebMercatorViewport[] | null;\n  /** @deprecated Revert to approximated meter size calculation prior to v8.5 */\n  private _pseudoMeters: boolean;\n\n  /* eslint-disable complexity, max-statements */\n  constructor(opts: WebMercatorViewportOptions = {}) {\n    const {\n      latitude = 0,\n      longitude = 0,\n      zoom = 0,\n      pitch = 0,\n      bearing = 0,\n      nearZMultiplier = 0.1,\n      farZMultiplier = 1.01,\n      nearZ,\n      farZ,\n      orthographic = false,\n      projectionMatrix,\n\n      repeat = false,\n      worldOffset = 0,\n      position,\n      padding,\n\n      // backward compatibility\n      // TODO: remove in v9\n      legacyMeterSizes = false\n    } = opts;\n\n    let {width, height, altitude = 1.5} = opts;\n    const scale = Math.pow(2, zoom);\n\n    // Silently allow apps to send in 0,0 to facilitate isomorphic render etc\n    width = width || 1;\n    height = height || 1;\n\n    let fovy;\n    let projectionParameters: any = null;\n    if (projectionMatrix) {\n      altitude = projectionMatrix[5] / 2;\n      fovy = altitudeToFovy(altitude);\n    } else {\n      if (opts.fovy) {\n        fovy = opts.fovy;\n        altitude = fovyToAltitude(fovy);\n      } else {\n        fovy = altitudeToFovy(altitude);\n      }\n\n      let offset: [number, number] | undefined;\n      if (padding) {\n        const {top = 0, bottom = 0} = padding;\n        offset = [0, clamp((top + height - bottom) / 2, 0, height) - height / 2];\n      }\n\n      projectionParameters = getProjectionParameters({\n        width,\n        height,\n        scale,\n        center: position && [0, 0, position[2] * unitsPerMeter(latitude)],\n        offset,\n        pitch,\n        fovy,\n        nearZMultiplier,\n        farZMultiplier\n      });\n\n      if (Number.isFinite(nearZ)) {\n        projectionParameters.near = nearZ;\n      }\n      if (Number.isFinite(farZ)) {\n        projectionParameters.far = farZ;\n      }\n    }\n\n    // The uncentered matrix allows us two move the center addition to the\n    // shader (cheap) which gives a coordinate system that has its center in\n    // the layer's center position. This makes rotations and other modelMatrx\n    // transforms much more useful.\n    let viewMatrixUncentered = getViewMatrix({\n      height,\n      pitch,\n      bearing,\n      scale,\n      altitude\n    });\n\n    if (worldOffset) {\n      const viewOffset = new Matrix4().translate([512 * worldOffset, 0, 0]);\n      viewMatrixUncentered = viewOffset.multiplyLeft(viewMatrixUncentered);\n    }\n\n    super({\n      ...opts,\n      // x, y,\n      width,\n      height,\n\n      // view matrix\n      viewMatrix: viewMatrixUncentered,\n      longitude,\n      latitude,\n      zoom,\n\n      // projection matrix parameters\n      ...projectionParameters,\n      fovy,\n      focalDistance: altitude\n    });\n\n    // Save parameters\n    this.latitude = latitude;\n    this.longitude = longitude;\n    this.zoom = zoom;\n    this.pitch = pitch;\n    this.bearing = bearing;\n    this.altitude = altitude;\n    this.fovy = fovy;\n\n    this.orthographic = orthographic;\n\n    this._subViewports = repeat ? [] : null;\n    this._pseudoMeters = legacyMeterSizes;\n\n    Object.freeze(this);\n  }\n  /* eslint-enable complexity, max-statements */\n\n  get subViewports(): WebMercatorViewport[] | null {\n    if (this._subViewports && !this._subViewports.length) {\n      // Cache sub viewports so that we only calculate them once\n      const bounds = this.getBounds();\n\n      const minOffset = Math.floor((bounds[0] + 180) / 360);\n      const maxOffset = Math.ceil((bounds[2] - 180) / 360);\n\n      for (let x = minOffset; x <= maxOffset; x++) {\n        const offsetViewport = x\n          ? new WebMercatorViewport({\n              ...this,\n              worldOffset: x\n            })\n          : this;\n        this._subViewports.push(offsetViewport);\n      }\n    }\n    return this._subViewports;\n  }\n\n  projectPosition(xyz: number[]): [number, number, number] {\n    if (this._pseudoMeters) {\n      // Backward compatibility\n      return super.projectPosition(xyz);\n    }\n    const [X, Y] = this.projectFlat(xyz);\n    const Z = (xyz[2] || 0) * unitsPerMeter(xyz[1]);\n    return [X, Y, Z];\n  }\n\n  unprojectPosition(xyz: number[]): [number, number, number] {\n    if (this._pseudoMeters) {\n      // Backward compatibility\n      return super.unprojectPosition(xyz);\n    }\n    const [X, Y] = this.unprojectFlat(xyz);\n    const Z = (xyz[2] || 0) / unitsPerMeter(Y);\n    return [X, Y, Z];\n  }\n\n  /**\n   * Add a meter delta to a base lnglat coordinate, returning a new lnglat array\n   *\n   * Note: Uses simple linear approximation around the viewport center\n   * Error increases with size of offset (roughly 1% per 100km)\n   *\n   * @param {[Number,Number]|[Number,Number,Number]) lngLatZ - base coordinate\n   * @param {[Number,Number]|[Number,Number,Number]) xyz - array of meter deltas\n   * @return {[Number,Number]|[Number,Number,Number]) array of [lng,lat,z] deltas\n   */\n  addMetersToLngLat(lngLatZ: number[], xyz: number[]): number[] {\n    return addMetersToLngLat(lngLatZ, xyz);\n  }\n\n  panByPosition(coords: number[], pixel: number[]): WebMercatorViewportOptions {\n    const fromLocation = pixelsToWorld(pixel, this.pixelUnprojectionMatrix);\n    const toLocation = this.projectFlat(coords);\n\n    const translate = vec2.add([], toLocation, vec2.negate([], fromLocation));\n    const newCenter = vec2.add([], this.center, translate);\n\n    const [longitude, latitude] = this.unprojectFlat(newCenter);\n    return {longitude, latitude};\n  }\n\n  getBounds(options: {z?: number} = {}): [number, number, number, number] {\n    // @ts-ignore\n    const corners = getBounds(this, options.z || 0);\n\n    return [\n      Math.min(corners[0][0], corners[1][0], corners[2][0], corners[3][0]),\n      Math.min(corners[0][1], corners[1][1], corners[2][1], corners[3][1]),\n      Math.max(corners[0][0], corners[1][0], corners[2][0], corners[3][0]),\n      Math.max(corners[0][1], corners[1][1], corners[2][1], corners[3][1])\n    ];\n  }\n\n  /**\n   * Returns a new viewport that fit around the given rectangle.\n   * Only supports non-perspective mode.\n   */\n  fitBounds(\n    /** [[lon, lat], [lon, lat]] */\n    bounds: [[number, number], [number, number]],\n    options: {\n      /** If not supplied, will use the current width of the viewport (default `1`) */\n      width?: number;\n      /** If not supplied, will use the current height of the viewport (default `1`) */\n      height?: number;\n      /** In degrees, 0.01 would be about 1000 meters */\n      minExtent?: number;\n      /** Max zoom level */\n      maxZoom?: number;\n      /** Extra padding in pixels */\n      padding?: number | Required<Padding>;\n      /** Center shift in pixels */\n      offset?: number[];\n    } = {}\n  ) {\n    const {width, height} = this;\n    const {longitude, latitude, zoom} = fitBounds({width, height, bounds, ...options});\n    return new WebMercatorViewport({width, height, longitude, latitude, zoom});\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/**\n * Projection utils\n * TODO: move to Viewport class?\n */\nimport {COORDINATE_SYSTEM} from '../../lib/constants';\nimport {getOffsetOrigin} from './viewport-uniforms';\nimport WebMercatorViewport from '../../viewports/web-mercator-viewport';\n\nimport {vec3, vec4} from '@math.gl/core';\nimport {addMetersToLngLat} from '@math.gl/web-mercator';\n\nimport type {CoordinateSystem} from '../../lib/constants';\nimport type Viewport from '../../viewports/viewport';\nimport type {NumericArray} from '../../types/types';\n\nconst DEFAULT_COORDINATE_ORIGIN = [0, 0, 0];\n\n// In project.glsl, offset modes calculate z differently from LNG_LAT mode.\n// offset modes apply the y adjustment (unitsPerMeter2) when projecting z\n// LNG_LAT mode only use the linear scale.\nfunction lngLatZToWorldPosition(\n  lngLatZ: [number, number, number],\n  viewport: Viewport,\n  offsetMode: boolean = false\n): [number, number, number] {\n  const p = viewport.projectPosition(lngLatZ);\n\n  // TODO - avoid using instanceof\n  if (offsetMode && viewport instanceof WebMercatorViewport) {\n    const [longitude, latitude, z = 0] = lngLatZ;\n    const distanceScales = viewport.getDistanceScales([longitude, latitude]);\n    p[2] = z * distanceScales.unitsPerMeter[2];\n  }\n  return p;\n}\n\nfunction normalizeParameters(opts: {\n  viewport: Viewport;\n  coordinateSystem: CoordinateSystem;\n  coordinateOrigin: [number, number, number];\n  modelMatrix?: NumericArray | null;\n  fromCoordinateSystem?: CoordinateSystem;\n  fromCoordinateOrigin?: [number, number, number];\n}): {\n  viewport: Viewport;\n  coordinateSystem: CoordinateSystem;\n  coordinateOrigin: [number, number, number];\n  modelMatrix?: NumericArray | null;\n  fromCoordinateSystem: CoordinateSystem;\n  fromCoordinateOrigin: [number, number, number];\n} {\n  const {viewport, modelMatrix, coordinateOrigin} = opts;\n  let {coordinateSystem, fromCoordinateSystem, fromCoordinateOrigin} = opts;\n\n  if (coordinateSystem === COORDINATE_SYSTEM.DEFAULT) {\n    coordinateSystem = viewport.isGeospatial\n      ? COORDINATE_SYSTEM.LNGLAT\n      : COORDINATE_SYSTEM.CARTESIAN;\n  }\n\n  if (fromCoordinateSystem === undefined) {\n    fromCoordinateSystem = coordinateSystem;\n  }\n  if (fromCoordinateOrigin === undefined) {\n    fromCoordinateOrigin = coordinateOrigin;\n  }\n\n  return {\n    viewport,\n    coordinateSystem,\n    coordinateOrigin,\n    modelMatrix,\n    fromCoordinateSystem,\n    fromCoordinateOrigin\n  };\n}\n\n/** Get the common space position from world coordinates in the given coordinate system */\nexport function getWorldPosition(\n  position: number[],\n  {\n    viewport,\n    modelMatrix,\n    coordinateSystem,\n    coordinateOrigin,\n    offsetMode\n  }: {\n    viewport: Viewport;\n    modelMatrix?: NumericArray | null;\n    coordinateSystem: CoordinateSystem;\n    coordinateOrigin: [number, number, number];\n    offsetMode?: boolean;\n  }\n): [number, number, number] {\n  let [x, y, z = 0] = position;\n\n  if (modelMatrix) {\n    [x, y, z] = vec4.transformMat4([], [x, y, z, 1.0], modelMatrix);\n  }\n\n  switch (coordinateSystem) {\n    case COORDINATE_SYSTEM.LNGLAT:\n      return lngLatZToWorldPosition([x, y, z], viewport, offsetMode);\n\n    case COORDINATE_SYSTEM.LNGLAT_OFFSETS:\n      return lngLatZToWorldPosition(\n        [x + coordinateOrigin[0], y + coordinateOrigin[1], z + (coordinateOrigin[2] || 0)],\n        viewport,\n        offsetMode\n      );\n\n    case COORDINATE_SYSTEM.METER_OFFSETS:\n      return lngLatZToWorldPosition(\n        addMetersToLngLat(coordinateOrigin, [x, y, z]) as [number, number, number],\n        viewport,\n        offsetMode\n      );\n\n    case COORDINATE_SYSTEM.CARTESIAN:\n    default:\n      return viewport.isGeospatial\n        ? [x + coordinateOrigin[0], y + coordinateOrigin[1], z + coordinateOrigin[2]]\n        : viewport.projectPosition([x, y, z]);\n  }\n}\n\n/**\n * Equivalent to project_position in project.glsl\n * projects a user supplied position to world position directly with or without\n * a reference coordinate system\n */\nexport function projectPosition(\n  position: number[],\n  params: {\n    /** The current viewport */\n    viewport: Viewport;\n    /** The reference coordinate system used to align world position */\n    coordinateSystem: CoordinateSystem;\n    /** The reference coordinate origin used to align world position */\n    coordinateOrigin: [number, number, number];\n    /** The model matrix of the supplied position */\n    modelMatrix?: NumericArray | null;\n    /** The coordinate system that the supplied position is in. Default to the same as `coordinateSystem`. */\n    fromCoordinateSystem?: CoordinateSystem;\n    /** The coordinate origin that the supplied position is in. Default to the same as `coordinateOrigin`. */\n    fromCoordinateOrigin?: [number, number, number];\n    /** Whether to apply offset mode automatically as does the project shader module.\n     * Offset mode places the origin of the common space at the given viewport's center. It is used in some use cases\n     * to improve precision in the vertex shader due to the fp32 float limitation.\n     * Use `autoOffset:false` if the returned position should not be dependent on the current viewport.\n     * Default `true` */\n    autoOffset?: boolean;\n  }\n): [number, number, number] {\n  const {\n    viewport,\n    coordinateSystem,\n    coordinateOrigin,\n    modelMatrix,\n    fromCoordinateSystem,\n    fromCoordinateOrigin\n  } = normalizeParameters(params);\n  const {autoOffset = true} = params;\n\n  const {\n    geospatialOrigin = DEFAULT_COORDINATE_ORIGIN,\n    shaderCoordinateOrigin = DEFAULT_COORDINATE_ORIGIN,\n    offsetMode = false\n  } = autoOffset ? getOffsetOrigin(viewport, coordinateSystem, coordinateOrigin) : {};\n\n  const worldPosition = getWorldPosition(position, {\n    viewport,\n    modelMatrix,\n    coordinateSystem: fromCoordinateSystem,\n    coordinateOrigin: fromCoordinateOrigin,\n    offsetMode\n  });\n\n  if (offsetMode) {\n    const positionCommonSpace = viewport.projectPosition(\n      geospatialOrigin || shaderCoordinateOrigin\n    );\n    vec3.sub(worldPosition, worldPosition, positionCommonSpace);\n  }\n\n  return worldPosition;\n}\n", "const DEGREES_TO_RADIANS = Math.PI / 180;\n\nconst DAY_IN_MS = 1000 * 60 * 60 * 24;\nconst JD1970 = 2440588; // Julian Day year 1970\nconst JD2000 = 2451545; // Julian Day year 2000\n\n// This angle ε [epsilon] is called the obliquity of the ecliptic and its value at the beginning of 2000 was 23.4397°\nconst e = DEGREES_TO_RADIANS * 23.4397; // obliquity of the Earth\n\n// Refer https://www.aa.quae.nl/en/reken/zonpositie.html\n// \"The Mean Anomaly\" section for explanation\nconst M0 = 357.5291; // Earth mean anomaly on start day\nconst M1 = 0.98560028; // Earth angle traverses on average per day seen from the sun\n\nconst THETA0 = 280.147; // The sidereal time (in degrees) at longitude 0° at the instant defined by JD2000\nconst THETA1 = 360.9856235; // The rate of change of the sidereal time, in degrees per day.\n\n/**\n * A position in the sky defined by two angles\n * The altitude is 0° at the horizon, +90° in the zenith (straight over your head), and −90° in the nadir (straight down).\n * The azimuth is the direction along the horizon, which we measure from south to west.\n * South has azimuth 0°, west +90°, north +180°, and east +270° (or −90°, that's the same thing).\n */\nexport type CelestialPosition = {\n  azimuth: number;\n  altitude: number;\n};\n\n/**\n * Calculate sun position\n * based on https://www.aa.quae.nl/en/reken/zonpositie.html\n * inspired by https://github.com/mourner/suncalc/blob/master/suncalc.js\n */\nexport function getSunPosition(\n  timestamp: number | Date,\n  latitude: number,\n  longitude: number\n): CelestialPosition {\n  const longitudeWestInRadians = DEGREES_TO_RADIANS * -longitude;\n  const phi = DEGREES_TO_RADIANS * latitude;\n  const d = toDays(timestamp);\n\n  const c = getSunCoords(d);\n  // hour angle\n  const H = getSiderealTime(d, longitudeWestInRadians) - c.rightAscension;\n\n  return {\n    azimuth: getAzimuth(H, phi, c.declination),\n    altitude: getAltitude(H, phi, c.declination)\n  };\n}\n\nexport function getSunDirection(\n  timestamp: number | Date,\n  latitude: number,\n  longitude: number\n): number[] {\n  const {azimuth, altitude} = getSunPosition(timestamp, latitude, longitude);\n\n  // solar position to light direction\n  return [\n    Math.sin(azimuth) * Math.cos(altitude),\n    Math.cos(azimuth) * Math.cos(altitude),\n    -Math.sin(altitude)\n  ];\n}\n\nfunction toJulianDay(timestamp: number | Date): number {\n  const ts = typeof timestamp === 'number' ? timestamp : timestamp.getTime();\n  return ts / DAY_IN_MS - 0.5 + JD1970;\n}\n\nfunction toDays(timestamp: number | Date): number {\n  return toJulianDay(timestamp) - JD2000;\n}\n\nfunction getRightAscension(eclipticLongitude: number, b: number): number {\n  const lambda = eclipticLongitude;\n  return Math.atan2(Math.sin(lambda) * Math.cos(e) - Math.tan(b) * Math.sin(e), Math.cos(lambda));\n}\n\nfunction getDeclination(eclipticLongitude: number, b: number): number {\n  const lambda = eclipticLongitude;\n  return Math.asin(Math.sin(b) * Math.cos(e) + Math.cos(b) * Math.sin(e) * Math.sin(lambda));\n}\n\nfunction getAzimuth(hourAngle: number, latitudeInRadians: number, declination: number): number {\n  const H = hourAngle;\n  const phi = latitudeInRadians;\n  const delta = declination;\n  return Math.atan2(Math.sin(H), Math.cos(H) * Math.sin(phi) - Math.tan(delta) * Math.cos(phi));\n}\n\nfunction getAltitude(hourAngle: number, latitudeInRadians: number, declination: number): number {\n  const H = hourAngle;\n  const phi = latitudeInRadians;\n  const delta = declination;\n  return Math.asin(Math.sin(phi) * Math.sin(delta) + Math.cos(phi) * Math.cos(delta) * Math.cos(H));\n}\n\n// https://www.aa.quae.nl/en/reken/zonpositie.html\n// \"The Observer section\"\nfunction getSiderealTime(dates: number, longitudeWestInRadians: number): number {\n  return DEGREES_TO_RADIANS * (THETA0 + THETA1 * dates) - longitudeWestInRadians;\n}\n\nfunction getSolarMeanAnomaly(days: number): number {\n  return DEGREES_TO_RADIANS * (M0 + M1 * days);\n}\n\nfunction getEclipticLongitude(meanAnomaly: number): number {\n  const M = meanAnomaly;\n  // equation of center\n  const C =\n    DEGREES_TO_RADIANS * (1.9148 * Math.sin(M) + 0.02 * Math.sin(2 * M) + 0.0003 * Math.sin(3 * M));\n  // perihelion of the Earth\n  const P = DEGREES_TO_RADIANS * 102.9372;\n\n  return M + C + P + Math.PI;\n}\n\nfunction getSunCoords(dates: number): {\n  declination: number;\n  rightAscension: number;\n} {\n  const M = getSolarMeanAnomaly(dates);\n  const L = getEclipticLongitude(M);\n\n  return {\n    declination: getDeclination(L, 0),\n    rightAscension: getRightAscension(L, 0)\n  };\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/**\n * Timeline channel properties\n * @param delay = 0;\n * @param duration = Number.POSITIVE_INFINITY;\n * @param rate = 1\n * @param repeat = 1\n */\nexport type ChannelOptions = {\n  delay?: number;\n  duration?: number;\n  rate?: number;\n  repeat?: number;\n};\n\nexport type AnimationOptions = {\n  setTime: (time: number) => void;\n};\n\ntype Channel = {\n  time: number;\n  delay: number;\n  duration: number;\n  rate: number;\n  repeat: number;\n};\n\ntype Animation = {\n  channel?: number;\n  animation: {\n    setTime: (time: number) => void;\n  };\n};\n\nlet channelHandles = 1;\nlet animationHandles = 1;\n\nexport class Timeline {\n  time: number = 0;\n  channels = new Map<number, Channel>();\n  animations = new Map<number, Animation>();\n  playing: boolean = false;\n  lastEngineTime: number = -1;\n\n  constructor() {}\n\n  addChannel(props: ChannelOptions): number {\n    const {delay = 0, duration = Number.POSITIVE_INFINITY, rate = 1, repeat = 1} = props;\n\n    const channelId = channelHandles++;\n    const channel: Channel = {\n      time: 0,\n      delay,\n      duration,\n      rate,\n      repeat\n    };\n    this._setChannelTime(channel, this.time);\n    this.channels.set(channelId, channel);\n\n    return channelId;\n  }\n\n  removeChannel(channelId: number): void {\n    this.channels.delete(channelId);\n\n    for (const [animationHandle, animation] of this.animations) {\n      if (animation.channel === channelId) {\n        this.detachAnimation(animationHandle);\n      }\n    }\n  }\n\n  isFinished(channelId: number): boolean {\n    const channel = this.channels.get(channelId);\n    if (channel === undefined) {\n      return false;\n    }\n\n    return this.time >= channel.delay + channel.duration * channel.repeat;\n  }\n\n  getTime(channelId?: number): number {\n    if (channelId === undefined) {\n      return this.time;\n    }\n\n    const channel = this.channels.get(channelId);\n\n    if (channel === undefined) {\n      return -1;\n    }\n\n    return channel.time;\n  }\n\n  setTime(time: number): void {\n    this.time = Math.max(0, time);\n\n    const channels = this.channels.values();\n    for (const channel of channels) {\n      this._setChannelTime(channel, this.time);\n    }\n\n    const animations = this.animations.values();\n    for (const animationData of animations) {\n      const {animation, channel} = animationData;\n      animation.setTime(this.getTime(channel));\n    }\n  }\n\n  play(): void {\n    this.playing = true;\n  }\n\n  pause(): void {\n    this.playing = false;\n    this.lastEngineTime = -1;\n  }\n\n  reset(): void {\n    this.setTime(0);\n  }\n\n  attachAnimation(animation: AnimationOptions, channelHandle?: number): number {\n    const animationHandle = animationHandles++;\n\n    this.animations.set(animationHandle, {\n      animation,\n      channel: channelHandle\n    });\n\n    animation.setTime(this.getTime(channelHandle));\n\n    return animationHandle;\n  }\n\n  detachAnimation(channelId: number): void {\n    this.animations.delete(channelId);\n  }\n\n  update(engineTime: number): void {\n    if (this.playing) {\n      if (this.lastEngineTime === -1) {\n        this.lastEngineTime = engineTime;\n      }\n      this.setTime(this.time + (engineTime - this.lastEngineTime));\n      this.lastEngineTime = engineTime;\n    }\n  }\n\n  _setChannelTime(channel: Channel, time: number): void {\n    const offsetTime = time - channel.delay;\n    const totalDuration = channel.duration * channel.repeat;\n    // Note(Tarek): Don't loop on final repeat.\n    if (offsetTime >= totalDuration) {\n      channel.time = channel.duration * channel.rate;\n    } else {\n      channel.time = Math.max(0, offsetTime) % channel.duration;\n      channel.time *= channel.rate;\n    }\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* global window, setTimeout, clearTimeout */\n\n/** Node.js polyfill for requestAnimationFrame */\n// / <reference types=\"@types/node\" />\nexport function requestAnimationFramePolyfill(callback: (time?: any) => void): any {\n  return typeof window !== 'undefined' && window.requestAnimationFrame\n    ? window.requestAnimationFrame(callback)\n    : setTimeout(callback, 1000 / 60);\n}\n\n/** Node.js polyfill for cancelAnimationFrame */\nexport function cancelAnimationFramePolyfill(timerId: any): void {\n  return typeof window !== 'undefined' && window.cancelAnimationFrame\n    ? window.cancelAnimationFrame(timerId)\n    : clearTimeout(timerId);\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {luma, Device} from '@luma.gl/core';\nimport {\n  requestAnimationFramePolyfill,\n  cancelAnimationFramePolyfill\n} from './request-animation-frame';\nimport {Timeline} from '../animation/timeline';\nimport {AnimationProps} from './animation-props';\nimport {Stats, Stat} from '@probe.gl/stats';\n\nlet statIdCounter = 0;\n\n/** AnimationLoop properties */\nexport type AnimationLoopProps = {\n  device: Device | Promise<Device>;\n\n  onAddHTML?: (div: HTMLDivElement) => string; // innerHTML\n  onInitialize?: (animationProps: AnimationProps) => Promise<unknown>;\n  onRender?: (animationProps: AnimationProps) => unknown;\n  onFinalize?: (animationProps: AnimationProps) => void;\n  onError?: (reason: Error) => void;\n\n  stats?: Stats;\n\n  // view parameters - TODO move to CanvasContext?\n  autoResizeViewport?: boolean;\n  autoResizeDrawingBuffer?: boolean;\n  useDevicePixels?: number | boolean;\n};\n\nexport type MutableAnimationLoopProps = {\n  // view parameters\n  autoResizeViewport?: boolean;\n  autoResizeDrawingBuffer?: boolean;\n  useDevicePixels?: number | boolean;\n};\n\nconst DEFAULT_ANIMATION_LOOP_PROPS: Required<AnimationLoopProps> = {\n  device: null!,\n\n  onAddHTML: () => '',\n  onInitialize: async () => {\n    return null;\n  },\n  onRender: () => {},\n  onFinalize: () => {},\n  onError: error => console.error(error), // eslint-disable-line no-console\n\n  stats: luma.stats.get(`animation-loop-${statIdCounter++}`),\n\n  // view parameters\n  useDevicePixels: true,\n  autoResizeViewport: false,\n  autoResizeDrawingBuffer: false\n};\n\n/** Convenient animation loop */\nexport class AnimationLoop {\n  device: Device | null = null;\n  canvas: HTMLCanvasElement | OffscreenCanvas | null = null;\n\n  props: Required<AnimationLoopProps>;\n  animationProps: AnimationProps | null = null;\n  timeline: Timeline | null = null;\n  stats: Stats;\n  cpuTime: Stat;\n  gpuTime: Stat;\n  frameRate: Stat;\n\n  display: any;\n\n  needsRedraw: string | false = 'initialized';\n\n  _initialized: boolean = false;\n  _running: boolean = false;\n  _animationFrameId: any = null;\n  _nextFramePromise: Promise<AnimationLoop> | null = null;\n  _resolveNextFrame: ((animationLoop: AnimationLoop) => void) | null = null;\n  _cpuStartTime: number = 0;\n  _error: Error | null = null;\n\n  // _gpuTimeQuery: Query | null = null;\n\n  /*\n   * @param {HTMLCanvasElement} canvas - if provided, width and height will be passed to context\n   */\n  constructor(props: AnimationLoopProps) {\n    this.props = {...DEFAULT_ANIMATION_LOOP_PROPS, ...props};\n    props = this.props;\n\n    if (!props.device) {\n      throw new Error('No device provided');\n    }\n\n    const {useDevicePixels = true} = this.props;\n\n    // state\n    this.stats = props.stats || new Stats({id: 'animation-loop-stats'});\n    this.cpuTime = this.stats.get('CPU Time');\n    this.gpuTime = this.stats.get('GPU Time');\n    this.frameRate = this.stats.get('Frame Rate');\n\n    this.setProps({\n      autoResizeViewport: props.autoResizeViewport,\n      autoResizeDrawingBuffer: props.autoResizeDrawingBuffer,\n      useDevicePixels\n    });\n\n    // Bind methods\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n\n    this._onMousemove = this._onMousemove.bind(this);\n    this._onMouseleave = this._onMouseleave.bind(this);\n  }\n\n  destroy(): void {\n    this.stop();\n    this._setDisplay(null);\n  }\n\n  /** @deprecated Use .destroy() */\n  delete(): void {\n    this.destroy();\n  }\n\n  setError(error: Error): void {\n    this.props.onError(error);\n    this._error = Error();\n    const canvas = this.device?.canvasContext?.canvas;\n    if (canvas instanceof HTMLCanvasElement) {\n      const errorDiv = document.createElement('h1');\n      errorDiv.innerHTML = error.message;\n      errorDiv.style.position = 'absolute';\n      errorDiv.style.top = '20%'; // left: 50%; transform: translate(-50%, -50%);';\n      errorDiv.style.left = '10px';\n      errorDiv.style.color = 'black';\n      errorDiv.style.backgroundColor = 'red';\n      document.body.appendChild(errorDiv);\n      // canvas.style.position = 'absolute';\n    }\n  }\n\n  /** Flags this animation loop as needing redraw */\n  setNeedsRedraw(reason: string): this {\n    this.needsRedraw = this.needsRedraw || reason;\n    return this;\n  }\n\n  /** TODO - move these props to CanvasContext? */\n  setProps(props: MutableAnimationLoopProps): this {\n    if ('autoResizeViewport' in props) {\n      this.props.autoResizeViewport = props.autoResizeViewport || false;\n    }\n    if ('autoResizeDrawingBuffer' in props) {\n      this.props.autoResizeDrawingBuffer = props.autoResizeDrawingBuffer || false;\n    }\n    if ('useDevicePixels' in props) {\n      this.props.useDevicePixels = props.useDevicePixels || false;\n    }\n    return this;\n  }\n\n  /** Starts a render loop if not already running */\n  async start() {\n    if (this._running) {\n      return this;\n    }\n    this._running = true;\n\n    try {\n      let appContext;\n      if (!this._initialized) {\n        this._initialized = true;\n        // Create the WebGL context\n        await this._initDevice();\n        this._initialize();\n\n        // Note: onIntialize can return a promise (e.g. in case app needs to load resources)\n        await this.props.onInitialize(this._getAnimationProps());\n      }\n\n      // check that we haven't been stopped\n      if (!this._running) {\n        return null;\n      }\n\n      // Start the loop\n      if (appContext !== false) {\n        // cancel any pending renders to ensure only one loop can ever run\n        this._cancelAnimationFrame();\n        this._requestAnimationFrame();\n      }\n\n      return this;\n    } catch (err: unknown) {\n      const error = err instanceof Error ? err : new Error('Unknown error');\n      this.props.onError(error);\n      // this._running = false; // TODO\n      throw error;\n    }\n  }\n\n  /** Stops a render loop if already running, finalizing */\n  stop() {\n    // console.debug(`Stopping ${this.constructor.name}`);\n    if (this._running) {\n      // call callback\n      // If stop is called immediately, we can end up in a state where props haven't been initialized...\n      if (this.animationProps && !this._error) {\n        this.props.onFinalize(this.animationProps);\n      }\n\n      this._cancelAnimationFrame();\n      this._nextFramePromise = null;\n      this._resolveNextFrame = null;\n      this._running = false;\n    }\n    return this;\n  }\n\n  /** Explicitly draw a frame */\n  redraw(): this {\n    if (this.device?.isLost || this._error) {\n      return this;\n    }\n\n    this._beginFrameTimers();\n\n    this._setupFrame();\n    this._updateAnimationProps();\n\n    this._renderFrame(this._getAnimationProps());\n\n    // clear needsRedraw flag\n    this._clearNeedsRedraw();\n\n    if (this._resolveNextFrame) {\n      this._resolveNextFrame(this);\n      this._nextFramePromise = null;\n      this._resolveNextFrame = null;\n    }\n\n    this._endFrameTimers();\n\n    return this;\n  }\n\n  /** Add a timeline, it will be automatically updated by the animation loop. */\n  attachTimeline(timeline: Timeline): Timeline {\n    this.timeline = timeline;\n    return this.timeline;\n  }\n\n  /** Remove a timeline */\n  detachTimeline(): void {\n    this.timeline = null;\n  }\n\n  /** Wait until a render completes */\n  waitForRender(): Promise<AnimationLoop> {\n    this.setNeedsRedraw('waitForRender');\n\n    if (!this._nextFramePromise) {\n      this._nextFramePromise = new Promise(resolve => {\n        this._resolveNextFrame = resolve;\n      });\n    }\n    return this._nextFramePromise;\n  }\n\n  /** TODO - should use device.deviceContext */\n  async toDataURL(): Promise<string> {\n    this.setNeedsRedraw('toDataURL');\n    await this.waitForRender();\n    if (this.canvas instanceof HTMLCanvasElement) {\n      return this.canvas.toDataURL();\n    }\n    throw new Error('OffscreenCanvas');\n  }\n\n  // PRIVATE METHODS\n\n  _initialize(): void {\n    this._startEventHandling();\n\n    // Initialize the callback data\n    this._initializeAnimationProps();\n    this._updateAnimationProps();\n\n    // Default viewport setup, in case onInitialize wants to render\n    this._resizeCanvasDrawingBuffer();\n    this._resizeViewport();\n\n    // this._gpuTimeQuery = Query.isSupported(this.gl, ['timers']) ? new Query(this.gl) : null;\n  }\n\n  _setDisplay(display: any): void {\n    if (this.display) {\n      this.display.destroy();\n      this.display.animationLoop = null;\n    }\n\n    // store animation loop on the display\n    if (display) {\n      display.animationLoop = this;\n    }\n\n    this.display = display;\n  }\n\n  _requestAnimationFrame(): void {\n    if (!this._running) {\n      return;\n    }\n\n    // VR display has a separate animation frame to sync with headset\n    // TODO WebVR API discontinued, replaced by WebXR: https://immersive-web.github.io/webxr/\n    // See https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/requestAnimationFrame\n    // if (this.display && this.display.requestAnimationFrame) {\n    //   this._animationFrameId = this.display.requestAnimationFrame(this._animationFrame.bind(this));\n    // }\n    this._animationFrameId = requestAnimationFramePolyfill(this._animationFrame.bind(this));\n  }\n\n  _cancelAnimationFrame(): void {\n    if (this._animationFrameId === null) {\n      return;\n    }\n\n    // VR display has a separate animation frame to sync with headset\n    // TODO WebVR API discontinued, replaced by WebXR: https://immersive-web.github.io/webxr/\n    // See https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/requestAnimationFrame\n    // if (this.display && this.display.cancelAnimationFramePolyfill) {\n    //   this.display.cancelAnimationFrame(this._animationFrameId);\n    // }\n    cancelAnimationFramePolyfill(this._animationFrameId);\n    this._animationFrameId = null;\n  }\n\n  _animationFrame(): void {\n    if (!this._running) {\n      return;\n    }\n    this.redraw();\n    this._requestAnimationFrame();\n  }\n\n  // Called on each frame, can be overridden to call onRender multiple times\n  // to support e.g. stereoscopic rendering\n  _renderFrame(animationProps: AnimationProps): void {\n    // Allow e.g. VR display to render multiple frames.\n    if (this.display) {\n      this.display._renderFrame(animationProps);\n      return;\n    }\n\n    // call callback\n    this.props.onRender(this._getAnimationProps());\n    // end callback\n\n    // Submit commands (necessary on WebGPU)\n    this.device?.submit();\n  }\n\n  _clearNeedsRedraw(): void {\n    this.needsRedraw = false;\n  }\n\n  _setupFrame(): void {\n    this._resizeCanvasDrawingBuffer();\n    this._resizeViewport();\n  }\n\n  // Initialize the  object that will be passed to app callbacks\n  _initializeAnimationProps(): void {\n    const canvas = this.device?.canvasContext?.canvas;\n\n    if (!this.device || !canvas) {\n      throw new Error('loop');\n    }\n    this.animationProps = {\n      animationLoop: this,\n\n      device: this.device,\n      canvas,\n      timeline: this.timeline,\n\n      // Initial values\n      useDevicePixels: this.props.useDevicePixels,\n      needsRedraw: false,\n\n      // Placeholders\n      width: 1,\n      height: 1,\n      aspect: 1,\n\n      // Animation props\n      time: 0,\n      startTime: Date.now(),\n      engineTime: 0,\n      tick: 0,\n      tock: 0,\n\n      // Experimental\n      _mousePosition: null // Event props\n    };\n  }\n\n  _getAnimationProps(): AnimationProps {\n    if (!this.animationProps) {\n      throw new Error('animationProps');\n    }\n    return this.animationProps;\n  }\n\n  // Update the context object that will be passed to app callbacks\n  _updateAnimationProps(): void {\n    if (!this.animationProps) {\n      return;\n    }\n\n    // Can this be replaced with canvas context?\n    const {width, height, aspect} = this._getSizeAndAspect();\n    if (width !== this.animationProps.width || height !== this.animationProps.height) {\n      this.setNeedsRedraw('drawing buffer resized');\n    }\n    if (aspect !== this.animationProps.aspect) {\n      this.setNeedsRedraw('drawing buffer aspect changed');\n    }\n\n    this.animationProps.width = width;\n    this.animationProps.height = height;\n    this.animationProps.aspect = aspect;\n\n    this.animationProps.needsRedraw = this.needsRedraw;\n\n    // Update time properties\n    this.animationProps.engineTime = Date.now() - this.animationProps.startTime;\n\n    if (this.timeline) {\n      this.timeline.update(this.animationProps.engineTime);\n    }\n\n    this.animationProps.tick = Math.floor((this.animationProps.time / 1000) * 60);\n    this.animationProps.tock++;\n\n    // For back compatibility\n    this.animationProps.time = this.timeline\n      ? this.timeline.getTime()\n      : this.animationProps.engineTime;\n  }\n\n  /** Wait for supplied device */\n  async _initDevice() {\n    this.device = await this.props.device;\n    if (!this.device) {\n      throw new Error('No device provided');\n    }\n    this.canvas = this.device.canvasContext?.canvas || null;\n    // this._createInfoDiv();\n  }\n\n  _createInfoDiv(): void {\n    if (this.canvas && this.props.onAddHTML) {\n      const wrapperDiv = document.createElement('div');\n      document.body.appendChild(wrapperDiv);\n      wrapperDiv.style.position = 'relative';\n      const div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '10px';\n      div.style.bottom = '10px';\n      div.style.width = '300px';\n      div.style.background = 'white';\n      if (this.canvas instanceof HTMLCanvasElement) {\n        wrapperDiv.appendChild(this.canvas);\n      }\n      wrapperDiv.appendChild(div);\n      const html = this.props.onAddHTML(div);\n      if (html) {\n        div.innerHTML = html;\n      }\n    }\n  }\n\n  _getSizeAndAspect(): {width: number; height: number; aspect: number} {\n    if (!this.device) {\n      return {width: 1, height: 1, aspect: 1};\n    }\n    // https://webglfundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html\n    const [width, height] = this.device?.canvasContext?.getPixelSize() || [1, 1];\n\n    // https://webglfundamentals.org/webgl/lessons/webgl-anti-patterns.html\n    let aspect = 1;\n    const canvas = this.device?.canvasContext?.canvas;\n\n    // @ts-expect-error\n    if (canvas && canvas.clientHeight) {\n      // @ts-expect-error\n      aspect = canvas.clientWidth / canvas.clientHeight;\n    } else if (width > 0 && height > 0) {\n      aspect = width / height;\n    }\n\n    return {width, height, aspect};\n  }\n\n  /** Default viewport setup */\n  _resizeViewport(): void {\n    // TODO can we use canvas context to code this in a portable way?\n    // @ts-expect-error Expose on canvasContext\n    if (this.props.autoResizeViewport && this.device.gl) {\n      // @ts-expect-error Expose canvasContext\n      this.device.gl.viewport(\n        0,\n        0,\n        // @ts-expect-error Expose canvasContext\n        this.device.gl.drawingBufferWidth,\n        // @ts-expect-error Expose canvasContext\n        this.device.gl.drawingBufferHeight\n      );\n    }\n  }\n\n  /**\n   * Resize the render buffer of the canvas to match canvas client size\n   * Optionally multiplying with devicePixel ratio\n   */\n  _resizeCanvasDrawingBuffer(): void {\n    if (this.props.autoResizeDrawingBuffer) {\n      this.device?.canvasContext?.resize({useDevicePixels: this.props.useDevicePixels});\n    }\n  }\n\n  _beginFrameTimers() {\n    this.frameRate.timeEnd();\n    this.frameRate.timeStart();\n\n    // Check if timer for last frame has completed.\n    // GPU timer results are never available in the same\n    // frame they are captured.\n    // if (\n    //   this._gpuTimeQuery &&\n    //   this._gpuTimeQuery.isResultAvailable() &&\n    //   !this._gpuTimeQuery.isTimerDisjoint()\n    // ) {\n    //   this.stats.get('GPU Time').addTime(this._gpuTimeQuery.getTimerMilliseconds());\n    // }\n\n    // if (this._gpuTimeQuery) {\n    //   // GPU time query start\n    //   this._gpuTimeQuery.beginTimeElapsedQuery();\n    // }\n\n    this.cpuTime.timeStart();\n  }\n\n  _endFrameTimers() {\n    this.cpuTime.timeEnd();\n\n    // if (this._gpuTimeQuery) {\n    //   // GPU time query end. Results will be available on next frame.\n    //   this._gpuTimeQuery.end();\n    // }\n  }\n\n  // Event handling\n\n  _startEventHandling() {\n    if (this.canvas) {\n      this.canvas.addEventListener('mousemove', this._onMousemove.bind(this));\n      this.canvas.addEventListener('mouseleave', this._onMouseleave.bind(this));\n    }\n  }\n\n  _onMousemove(event: Event) {\n    if (event instanceof MouseEvent) {\n      this._getAnimationProps()._mousePosition = [event.offsetX, event.offsetY];\n    }\n  }\n\n  _onMouseleave(event: Event) {\n    this._getAnimationProps()._mousePosition = null;\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nconst uidCounters: Record<string, number> = {};\n\n/**\n * Returns a UID.\n * @param id= - Identifier base name\n * @return uid\n **/\nexport function uid(id: string = 'id'): string {\n  uidCounters[id] = uidCounters[id] || 1;\n  const count = uidCounters[id]++;\n  return `${id}-${count}`;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {PrimitiveTopology, BufferLayout} from '@luma.gl/core';\nimport {Device, Buffer, getVertexFormatFromAttribute} from '@luma.gl/core';\nimport type {Geometry} from '../geometry/geometry';\nimport {uid} from '../utils/uid';\n\nexport type GPUGeometryProps = {\n  id?: string;\n  /** Determines how vertices are read from the 'vertex' attributes */\n  topology: 'point-list' | 'line-list' | 'line-strip' | 'triangle-list' | 'triangle-strip';\n  /** Auto calculated from attributes if not provided */\n  vertexCount: number;\n  bufferLayout: BufferLayout[];\n  indices?: Buffer | null;\n  attributes: Record<string, Buffer>;\n};\n\nexport class GPUGeometry {\n  readonly id: string;\n  userData: Record<string, unknown> = {};\n\n  /** Determines how vertices are read from the 'vertex' attributes */\n  readonly topology?: PrimitiveTopology;\n  readonly bufferLayout: BufferLayout[] = [];\n\n  readonly vertexCount: number;\n  readonly indices?: Buffer | null;\n  readonly attributes: Record<string, Buffer>;\n\n  constructor(props: GPUGeometryProps) {\n    this.id = props.id || uid('geometry');\n    this.topology = props.topology;\n    this.indices = props.indices || null;\n    this.attributes = props.attributes;\n\n    this.vertexCount = props.vertexCount;\n\n    this.bufferLayout = props.bufferLayout || [];\n\n    if (this.indices) {\n      if (!(this.indices.usage & Buffer.INDEX)) {\n        throw new Error('Index buffer must have INDEX usage');\n      }\n    }\n  }\n\n  destroy(): void {\n    this.indices?.destroy();\n    for (const attribute of Object.values(this.attributes)) {\n      attribute.destroy();\n    }\n  }\n\n  getVertexCount(): number {\n    return this.vertexCount;\n  }\n\n  getAttributes(): Record<string, Buffer> {\n    return this.attributes;\n  }\n\n  getIndexes(): Buffer | null {\n    return this.indices || null;\n  }\n\n  _calculateVertexCount(positions: Buffer): number {\n    // Assume that positions is a fully packed float32x3 buffer\n    const vertexCount = positions.byteLength / 12;\n    return vertexCount;\n  }\n}\n\nexport function makeGPUGeometry(device: Device, geometry: Geometry | GPUGeometry): GPUGeometry {\n  if (geometry instanceof GPUGeometry) {\n    return geometry;\n  }\n\n  const indices = getIndexBufferFromGeometry(device, geometry);\n  const {attributes, bufferLayout} = getAttributeBuffersFromGeometry(device, geometry);\n  return new GPUGeometry({\n    topology: geometry.topology || 'triangle-list',\n    bufferLayout,\n    vertexCount: geometry.vertexCount,\n    indices,\n    attributes\n  });\n}\n\nexport function getIndexBufferFromGeometry(device: Device, geometry: Geometry): Buffer | undefined {\n  if (!geometry.indices) {\n    return undefined;\n  }\n  const data = geometry.indices.value;\n  return device.createBuffer({usage: Buffer.INDEX, data});\n}\n\nexport function getAttributeBuffersFromGeometry(\n  device: Device,\n  geometry: Geometry\n): {attributes: Record<string, Buffer>; bufferLayout: BufferLayout[]; vertexCount: number} {\n  const bufferLayout: BufferLayout[] = [];\n\n  const attributes: Record<string, Buffer> = {};\n  for (const [attributeName, attribute] of Object.entries(geometry.attributes)) {\n    let name: string = attributeName;\n    // TODO Map some GLTF attribute names (is this still needed?)\n    switch (attributeName) {\n      case 'POSITION':\n        name = 'positions';\n        break;\n      case 'NORMAL':\n        name = 'normals';\n        break;\n      case 'TEXCOORD_0':\n        name = 'texCoords';\n        break;\n      case 'COLOR_0':\n        name = 'colors';\n        break;\n    }\n    if (attribute) {\n      attributes[name] = device.createBuffer({\n        data: attribute.value,\n        id: `${attributeName}-buffer`\n      });\n      const {value, size, normalized} = attribute;\n      // @ts-expect-error\n      bufferLayout.push({name, format: getVertexFormatFromAttribute(value, size, normalized)});\n    }\n  }\n\n  const vertexCount = geometry._calculateVertexCount(geometry.attributes, geometry.indices);\n\n  return {attributes, bufferLayout, vertexCount};\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {RenderPipelineProps, ComputePipelineProps} from '@luma.gl/core';\nimport {Device, RenderPipeline, ComputePipeline} from '@luma.gl/core';\n\nexport type PipelineFactoryProps = RenderPipelineProps;\n\ntype RenderPipelineCacheItem = {pipeline: RenderPipeline; useCount: number};\ntype ComputePipelineCacheItem = {pipeline: ComputePipeline; useCount: number};\n\n/**\n * Efficiently creates / caches pipelines\n */\nexport class PipelineFactory {\n  static defaultProps: Required<PipelineFactoryProps> = {...RenderPipeline.defaultProps};\n\n  /** Get the singleton default pipeline factory for the specified device */\n  static getDefaultPipelineFactory(device: Device): PipelineFactory {\n    device._lumaData.defaultPipelineFactory =\n      device._lumaData.defaultPipelineFactory || new PipelineFactory(device);\n    return device._lumaData.defaultPipelineFactory as PipelineFactory;\n  }\n\n  readonly device: Device;\n  readonly destroyPolicy: 'unused' | 'never';\n\n  private _hashCounter: number = 0;\n  private readonly _hashes: Record<string, number> = {};\n  private readonly _renderPipelineCache: Record<string, RenderPipelineCacheItem> = {};\n  private readonly _computePipelineCache: Record<string, ComputePipelineCacheItem> = {};\n\n  constructor(device: Device) {\n    this.device = device;\n    this.destroyPolicy = device.props._factoryDestroyPolicy;\n  }\n\n  /** Return a RenderPipeline matching props. Reuses a similar pipeline if already created. */\n  createRenderPipeline(props: RenderPipelineProps): RenderPipeline {\n    const allProps: Required<RenderPipelineProps> = {...RenderPipeline.defaultProps, ...props};\n\n    const hash = this._hashRenderPipeline(allProps);\n\n    if (!this._renderPipelineCache[hash]) {\n      const pipeline = this.device.createRenderPipeline({\n        ...allProps,\n        id: allProps.id ? `${allProps.id}-cached` : undefined\n      });\n      pipeline.hash = hash;\n      this._renderPipelineCache[hash] = {pipeline, useCount: 0};\n    }\n\n    this._renderPipelineCache[hash].useCount++;\n    return this._renderPipelineCache[hash].pipeline;\n  }\n\n  createComputePipeline(props: ComputePipelineProps): ComputePipeline {\n    const allProps: Required<ComputePipelineProps> = {...ComputePipeline.defaultProps, ...props};\n\n    const hash = this._hashComputePipeline(allProps);\n\n    if (!this._computePipelineCache[hash]) {\n      const pipeline = this.device.createComputePipeline({\n        ...allProps,\n        id: allProps.id ? `${allProps.id}-cached` : undefined\n      });\n      pipeline.hash = hash;\n      this._computePipelineCache[hash] = {pipeline, useCount: 0};\n    }\n\n    this._computePipelineCache[hash].useCount++;\n    return this._computePipelineCache[hash].pipeline;\n  }\n\n  release(pipeline: RenderPipeline | ComputePipeline): void {\n    const hash = pipeline.hash;\n    const cache =\n      pipeline instanceof ComputePipeline ? this._computePipelineCache : this._renderPipelineCache;\n    cache[hash].useCount--;\n    if (cache[hash].useCount === 0) {\n      if (this.destroyPolicy === 'unused') {\n        cache[hash].pipeline.destroy();\n        delete cache[hash];\n      }\n    }\n  }\n\n  // PRIVATE\n  private _hashComputePipeline(props: ComputePipelineProps): string {\n    const shaderHash = this._getHash(props.shader.source);\n    return `${shaderHash}`;\n  }\n\n  /** Calculate a hash based on all the inputs for a render pipeline */\n  private _hashRenderPipeline(props: RenderPipelineProps): string {\n    const vsHash = props.vs ? this._getHash(props.vs.source) : 0;\n    const fsHash = props.fs ? this._getHash(props.fs.source) : 0;\n\n    // WebGL specific\n    // const {varyings = [], bufferMode = {}} = props;\n    // const varyingHashes = varyings.map((v) => this._getHash(v));\n    const varyingHash = '-'; // `${varyingHashes.join('/')}B${bufferMode}`\n    const bufferLayoutHash = this._getHash(JSON.stringify(props.bufferLayout));\n\n    switch (this.device.type) {\n      case 'webgl':\n        // WebGL is more dynamic\n        return `${vsHash}/${fsHash}V${varyingHash}BL${bufferLayoutHash}`;\n\n      default:\n        // On WebGPU we need to rebuild the pipeline if topology, parameters or bufferLayout change\n        const parameterHash = this._getHash(JSON.stringify(props.parameters));\n        // TODO - Can json.stringify() generate different strings for equivalent objects if order of params is different?\n        // create a deepHash() to deduplicate?\n        return `${vsHash}/${fsHash}V${varyingHash}T${props.topology}P${parameterHash}BL${bufferLayoutHash}`;\n    }\n  }\n\n  private _getHash(key: string): number {\n    if (this._hashes[key] === undefined) {\n      this._hashes[key] = this._hashCounter++;\n    }\n    return this._hashes[key];\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Device, Shader, ShaderProps} from '@luma.gl/core';\n\n/** Manages a cached pool of Shaders for reuse. */\nexport class ShaderFactory {\n  static readonly defaultProps: Required<ShaderProps> = {...Shader.defaultProps};\n\n  /** Returns the default ShaderFactory for the given {@link Device}, creating one if necessary. */\n  static getDefaultShaderFactory(device: Device): ShaderFactory {\n    device._lumaData.defaultShaderFactory ||= new ShaderFactory(device);\n    return device._lumaData.defaultShaderFactory as ShaderFactory;\n  }\n\n  public readonly device: Device;\n  readonly destroyPolicy: 'unused' | 'never';\n  private readonly _cache: Record<string, {shader: Shader; useCount: number}> = {};\n\n  /** @internal */\n  constructor(device: Device) {\n    this.device = device;\n    this.destroyPolicy = device.props._factoryDestroyPolicy;\n  }\n\n  /** Requests a {@link Shader} from the cache, creating a new Shader only if necessary. */\n  createShader(props: ShaderProps): Shader {\n    const key = this._hashShader(props);\n\n    let cacheEntry = this._cache[key];\n    if (!cacheEntry) {\n      const shader = this.device.createShader({\n        ...props,\n        id: props.id ? `${props.id}-cached` : undefined\n      });\n      this._cache[key] = cacheEntry = {shader, useCount: 0};\n    }\n\n    cacheEntry.useCount++;\n    return cacheEntry.shader;\n  }\n\n  /** Releases a previously-requested {@link Shader}, destroying it if no users remain. */\n  release(shader: Shader): void {\n    const key = this._hashShader(shader);\n    const cacheEntry = this._cache[key];\n    if (cacheEntry) {\n      cacheEntry.useCount--;\n      if (cacheEntry.useCount === 0) {\n        if (this.destroyPolicy === 'unused') {\n          delete this._cache[key];\n          cacheEntry.shader.destroy();\n        }\n      }\n    }\n  }\n\n  // PRIVATE\n\n  private _hashShader(value: Shader | ShaderProps): string {\n    return `${value.stage}:${value.source}`;\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {ShaderLayout} from '@luma.gl/core';\n\n/**\n * Extracts a table suitable for `console.table()` from a shader layout to assist in debugging.\n * @param layout shader layout\n * @param name app should provide the most meaningful name, usually the model or pipeline name / id.\n * @returns\n */\nexport function getDebugTableForShaderLayout(\n  layout: ShaderLayout,\n  name: string\n): Record<string, Record<string, string>> {\n  const table: Record<string, Record<string, string>> = {};\n\n  const header = 'Values'; // '`Shader Layout for ${name}`;\n\n  if (layout.attributes.length === 0 && !layout.varyings?.length) {\n    return {'No attributes or varyings': {[header]: 'N/A'}};\n  }\n\n  for (const attributeDeclaration of layout.attributes) {\n    if (attributeDeclaration) {\n      const glslDeclaration = `${attributeDeclaration.location} ${attributeDeclaration.name}: ${attributeDeclaration.type}`;\n      table[`in ${glslDeclaration}`] = {[header]: attributeDeclaration.stepMode || 'vertex'};\n    }\n  }\n\n  for (const varyingDeclaration of layout.varyings || []) {\n    const glslDeclaration = `${varyingDeclaration.location} ${varyingDeclaration.name}`;\n    table[`out ${glslDeclaration}`] = {[header]: JSON.stringify(varyingDeclaration)};\n  }\n\n  return table;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Framebuffer, Texture} from '@luma.gl/core';\n// import {copyTextureToImage} from '../debug/copy-texture-to-image';\n\n/** Only works with 1st device? */\nlet canvas: HTMLCanvasElement | null = null;\nlet ctx: CanvasRenderingContext2D | null = null;\n// let targetImage: HTMLImageElement | null = null;\n\n/** Debug utility to draw FBO contents onto screen */\n// eslint-disable-next-line\nexport function debugFramebuffer(\n  fbo: Framebuffer | Texture,\n  {\n    id,\n    minimap,\n    opaque,\n    top = '0',\n    left = '0',\n    rgbaScale = 1\n  }: {\n    id: string;\n    minimap?: boolean;\n    opaque?: boolean;\n    top?: string;\n    left?: string;\n    rgbaScale?: number;\n  }\n) {\n  if (!canvas) {\n    canvas = document.createElement('canvas');\n    canvas.id = id;\n    canvas.title = id;\n    canvas.style.zIndex = '100';\n    canvas.style.position = 'absolute';\n    canvas.style.top = top; // ⚠️\n    canvas.style.left = left; // ⚠️\n    canvas.style.border = 'blue 5px solid';\n    canvas.style.transform = 'scaleY(-1)';\n    document.body.appendChild(canvas);\n\n    ctx = canvas.getContext('2d');\n    // targetImage = new Image();\n  }\n\n  // const canvasHeight = (minimap ? 2 : 1) * fbo.height;\n  if (canvas.width !== fbo.width || canvas.height !== fbo.height) {\n    canvas.width = fbo.width / 2;\n    canvas.height = fbo.height / 2;\n    canvas.style.width = '400px';\n    canvas.style.height = '400px';\n  }\n\n  // const image = copyTextureToImage(fbo, {targetMaxHeight: 100, targetImage});\n  // ctx.drawImage(image, 0, 0);\n\n  const color = fbo.device.readPixelsToArrayWebGL(fbo);\n  const imageData = ctx?.createImageData(fbo.width, fbo.height);\n  if (imageData) {\n    // Full map\n    const offset = 0;\n    // if (color.some((v) => v > 0)) {\n    //   console.error('THERE IS NON-ZERO DATA IN THE FBO!');\n    // }\n    for (let i = 0; i < color.length; i += 4) {\n      imageData.data[offset + i + 0] = color[i + 0] * rgbaScale;\n      imageData.data[offset + i + 1] = color[i + 1] * rgbaScale;\n      imageData.data[offset + i + 2] = color[i + 2] * rgbaScale;\n      imageData.data[offset + i + 3] = opaque ? 255 : color[i + 3] * rgbaScale;\n    }\n    ctx?.putImageData(imageData, 0, 0);\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/**\n * Fast partial deep equal for prop.\n *\n * @param a Prop\n * @param b Prop to compare against `a`\n * @param depth Depth to which to recurse in nested Objects/Arrays. Use 0 (default) for shallow comparison, -1 for infinite depth\n */\n/* eslint-disable complexity */\nexport function deepEqual(a: any, b: any, depth: number): boolean {\n  if (a === b) {\n    return true;\n  }\n  if (!depth || !a || !b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b) || a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (!deepEqual(a[i], b[i], depth - 1)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (Array.isArray(b)) {\n    return false;\n  }\n  if (typeof a === 'object' && typeof b === 'object') {\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    for (const key of aKeys) {\n      if (!b.hasOwnProperty(key)) {\n        return false;\n      }\n      if (!deepEqual(a[key], b[key], depth - 1)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n", "// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {TypedArray, NumericArray, NumberArray} from './array-types';\n\n/**\n * Check is an array is a typed array\n * @param value value to be tested\n * @returns input with type narrowed to TypedArray, or null\n */\nexport function isTypedArray(value: unknown): value is TypedArray {\n  return ArrayBuffer.isView(value) && !(value instanceof DataView);\n}\n\n/**\n * Check is an array is an array of numbers)\n * @param value value to be tested\n * @returns input with type narrowed to NumberArray, or null\n */\nexport function isNumberArray(value: unknown): value is NumberArray {\n  if (Array.isArray(value)) {\n    return value.length === 0 || typeof value[0] === 'number';\n  }\n  return false;\n}\n\n/**\n * Check is an array is a numeric array (typed array or array of numbers)\n * @param value value to be tested\n * @returns input with type narrowed to NumericArray, or null\n */\nexport function isNumericArray(value: unknown): value is NumericArray {\n  return isTypedArray(value) || isNumberArray(value);\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {UniformValue, Binding} from '@luma.gl/core';\nimport {isNumericArray} from '@math.gl/types';\n\nexport function isUniformValue(value: unknown): value is UniformValue {\n  return isNumericArray(value) || typeof value === 'number' || typeof value === 'boolean';\n}\n\ntype UniformsAndBindings = {\n  bindings: Record<string, Binding>;\n  uniforms: Record<string, UniformValue>;\n};\n\nexport function splitUniformsAndBindings(\n  uniforms: Record<string, Binding | UniformValue>\n): UniformsAndBindings {\n  const result: UniformsAndBindings = {bindings: {}, uniforms: {}};\n  Object.keys(uniforms).forEach(name => {\n    const uniform = uniforms[name];\n    if (isUniformValue(uniform)) {\n      result.uniforms[name] = uniform;\n    } else {\n      result.bindings[name] = uniform;\n    }\n  });\n\n  return result;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Binding, UniformValue} from '@luma.gl/core';\nimport {log} from '@luma.gl/core';\n// import type {ShaderUniformType, UniformValue, UniformFormat, UniformInfoDevice, Texture, Sampler} from '@luma.gl/core';\nimport {getShaderModuleDependencies, ShaderModule} from '@luma.gl/shadertools';\nimport {splitUniformsAndBindings} from './model/split-uniforms-and-bindings';\n\nexport type ShaderInputsOptions = {\n  disableWarnings?: boolean;\n};\n\n/**\n * ShaderInputs holds uniform and binding values for one or more shader modules,\n * - It can generate binary data for any uniform buffer\n * - It can manage a uniform buffer for each block\n * - It can update managed uniform buffers with a single call\n * - It performs some book keeping on what has changed to minimize unnecessary writes to uniform buffers.\n */\nexport class ShaderInputs<\n  ShaderPropsT extends Partial<Record<string, Record<string, unknown>>> = Partial<\n    Record<string, Record<string, unknown>>\n  >\n> {\n  options: Required<ShaderInputsOptions> = {\n    disableWarnings: false\n  };\n\n  /**\n   * The map of modules\n   * @todo should should this include the resolved dependencies?\n   */\n  // @ts-ignore Fix typings\n  modules: Readonly<{[P in keyof ShaderPropsT]: ShaderModule<ShaderPropsT[P]>}>;\n\n  /** Stores the uniform values for each module */\n  moduleUniforms: Record<keyof ShaderPropsT, Record<string, UniformValue>>;\n  /** Stores the uniform bindings for each module  */\n  moduleBindings: Record<keyof ShaderPropsT, Record<string, Binding>>;\n  /** Tracks if uniforms have changed */\n  // moduleUniformsChanged: Record<keyof ShaderPropsT, false | string>;\n\n  /**\n   * Create a new UniformStore instance\n   * @param modules\n   */\n  constructor(\n    // @ts-ignore Fix typings\n    modules: {[P in keyof ShaderPropsT]?: ShaderModule<ShaderPropsT[P], any>},\n    options?: ShaderInputsOptions\n  ) {\n    Object.assign(this.options, options);\n\n    // Extract modules with dependencies\n    const resolvedModules = getShaderModuleDependencies(\n      Object.values(modules).filter(module => module.dependencies)\n    );\n    for (const resolvedModule of resolvedModules) {\n      // @ts-ignore\n      modules[resolvedModule.name] = resolvedModule;\n    }\n\n    log.log(1, 'Creating ShaderInputs with modules', Object.keys(modules))();\n\n    // Store the module definitions and create storage for uniform values and binding values, per module\n    // @ts-ignore Fix typings\n    this.modules = modules as {[P in keyof ShaderPropsT]: ShaderModule<ShaderPropsT[P]>};\n    this.moduleUniforms = {} as Record<keyof ShaderPropsT, Record<string, UniformValue>>;\n    this.moduleBindings = {} as Record<keyof ShaderPropsT, Record<string, Binding>>;\n\n    // Initialize the modules\n    for (const [name, module] of Object.entries(modules)) {\n      this._addModule(module);\n      if (module.name && name !== module.name && !this.options.disableWarnings) {\n        log.warn(`Module name: ${name} vs ${module.name}`)();\n      }\n    }\n  }\n\n  /** Destroy */\n  destroy(): void {}\n\n  /**\n   * Set module props\n   */\n  setProps(props: Partial<{[P in keyof ShaderPropsT]?: Partial<ShaderPropsT[P]>}>): void {\n    for (const name of Object.keys(props)) {\n      const moduleName = name as keyof ShaderPropsT;\n      const moduleProps = props[moduleName] || {};\n      const module = this.modules[moduleName];\n      if (!module) {\n        // Ignore props for unregistered modules\n        if (!this.options.disableWarnings) {\n          log.warn(`Module ${name} not found`)();\n        }\n        continue; // eslint-disable-line no-continue\n      }\n\n      const oldUniforms = this.moduleUniforms[moduleName] as (typeof module)['uniforms'];\n      const oldBindings = this.moduleBindings[moduleName];\n      const uniformsAndBindings =\n        module.getUniforms?.(moduleProps, oldUniforms) || (moduleProps as any);\n\n      const {uniforms, bindings} = splitUniformsAndBindings(uniformsAndBindings);\n      this.moduleUniforms[moduleName] = {...oldUniforms, ...uniforms};\n      this.moduleBindings[moduleName] = {...oldBindings, ...bindings};\n      // this.moduleUniformsChanged ||= moduleName;\n\n      // console.log(`setProps(${String(moduleName)}`, moduleName, this.moduleUniforms[moduleName])\n    }\n  }\n\n  /**\n   * Return the map of modules\n   * @todo should should this include the resolved dependencies?\n   */\n  getModules(): ShaderModule[] {\n    return Object.values(this.modules);\n  }\n\n  /** Get all uniform values for all modules */\n  getUniformValues(): Partial<Record<keyof ShaderPropsT, Record<string, UniformValue>>> {\n    return this.moduleUniforms;\n  }\n\n  /** Merges all bindings for the shader (from the various modules) */\n  getBindingValues(): Record<string, Binding> {\n    const bindings = {} as Record<string, Binding>;\n    for (const moduleBindings of Object.values(this.moduleBindings)) {\n      Object.assign(bindings, moduleBindings);\n    }\n    return bindings;\n  }\n\n  // INTERNAL\n\n  /** Return a debug table that can be used for console.table() or log.table() */\n  getDebugTable(): Record<string, Record<string, unknown>> {\n    const table: Record<string, Record<string, unknown>> = {};\n    for (const [moduleName, module] of Object.entries(this.moduleUniforms)) {\n      for (const [key, value] of Object.entries(module)) {\n        table[`${moduleName}.${key}`] = {\n          type: this.modules[moduleName].uniformTypes?.[key as keyof ShaderPropsT],\n          value: String(value)\n        };\n      }\n    }\n    return table;\n  }\n\n  _addModule(module: ShaderModule): void {\n    const moduleName = module.name as keyof ShaderPropsT;\n    // Get default uniforms from module\n    this.moduleUniforms[moduleName] = module.defaultUniforms || {};\n    this.moduleBindings[moduleName] = {};\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nlet pathPrefix = '';\n\n/**\n * Set a relative path prefix\n */\nexport function setPathPrefix(prefix: string) {\n  pathPrefix = prefix;\n}\n\n/**\n * Loads ImageBitmap asynchronously. Respects setPathPrefix.\n * image.crossOrigin can be set via opts.crossOrigin, default to 'anonymous'\n * @returns a promise tracking the load\n */\nexport async function loadImageBitmap(\n  url: string,\n  opts?: {crossOrigin?: string} & ImageBitmapOptions\n): Promise<ImageBitmap> {\n  const image = new Image();\n  image.crossOrigin = opts?.crossOrigin || 'anonymous';\n  image.src = url.startsWith('http') ? url : pathPrefix + url;\n  await image.decode();\n  return opts ? await createImageBitmap(image, opts) : await createImageBitmap(image);\n}\n\n/**\n * Loads image asynchronously. Respects setPathPrefix.\n * image.crossOrigin can be set via opts.crossOrigin, default to 'anonymous'\n * @returns a promise tracking the load\n * @deprecated Use `loadImageBitmap()` unless you are supporting old versions of Safari.\n */\nexport async function loadImage(\n  url: string,\n  opts?: {crossOrigin?: string}\n): Promise<HTMLImageElement> {\n  return await new Promise((resolve, reject) => {\n    try {\n      const image = new Image();\n      image.onload = () => resolve(image);\n      image.onerror = () => reject(new Error(`Could not load image ${url}.`));\n      image.crossOrigin = opts?.crossOrigin || 'anonymous';\n      image.src = url.startsWith('http') ? url : pathPrefix + url;\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n", "// luma.gl, MIT license\n// Copyright (c) vis.gl contributors\n\nimport type {\n  Texture,\n  TextureProps,\n  Sampler,\n  TextureView,\n  Device,\n  Texture1DData,\n  Texture2DData,\n  Texture3DData,\n  TextureArrayData,\n  TextureCubeData,\n  TextureCubeArrayData\n} from '@luma.gl/core';\n\nimport {loadImageBitmap} from '../application-utils/load-file';\nimport {uid} from '../utils/uid';\n\nexport type AsyncTextureProps = Omit<TextureProps, 'data'> & AsyncTextureDataProps;\n\ntype AsyncTextureDataProps =\n  | AsyncTexture1DProps\n  | AsyncTexture2DProps\n  | AsyncTexture3DProps\n  | AsyncTextureArrayProps\n  | AsyncTextureCubeProps\n  | AsyncTextureCubeArrayProps;\n\ntype AsyncTexture1DProps = {dimension: '1d'; data: Promise<Texture1DData> | Texture1DData | null};\ntype AsyncTexture2DProps = {dimension?: '2d'; data: Promise<Texture2DData> | Texture2DData | null};\ntype AsyncTexture3DProps = {dimension: '3d'; data: Promise<Texture3DData> | Texture3DData | null};\ntype AsyncTextureArrayProps = {\n  dimension: '2d-array';\n  data: Promise<TextureArrayData> | TextureArrayData | null;\n};\ntype AsyncTextureCubeProps = {\n  dimension: 'cube';\n  data: Promise<TextureCubeData> | TextureCubeData | null;\n};\ntype AsyncTextureCubeArrayProps = {\n  dimension: 'cube-array';\n  data: Promise<TextureCubeArrayData> | TextureCubeArrayData | null;\n};\n\ntype TextureData = TextureProps['data'];\ntype AsyncTextureData = AsyncTextureProps['data'];\n\n/**\n * It is very convenient to be able to initialize textures with promises\n * This can add considerable complexity to the Texture class, and doesn't\n * fit with the immutable nature of WebGPU resources.\n * Instead, luma.gl offers async textures as a separate class.\n */\nexport class AsyncTexture {\n  readonly device: Device;\n  readonly id: string;\n\n  // TODO - should we type these as possibly `null`? It will make usage harder?\n  // @ts-expect-error\n  texture: Texture;\n  // @ts-expect-error\n  sampler: Sampler;\n  // @ts-expect-error\n  view: TextureView;\n\n  readonly ready: Promise<void>;\n  isReady: boolean = false;\n  destroyed: boolean = false;\n\n  protected resolveReady: () => void = () => {};\n  protected rejectReady: (error: Error) => void = () => {};\n\n  get [Symbol.toStringTag]() {\n    return 'AsyncTexture';\n  }\n\n  toString(): string {\n    return `AsyncTexture:\"${this.id}\"(${this.isReady ? 'ready' : 'loading'})`;\n  }\n\n  constructor(device: Device, props: AsyncTextureProps) {\n    this.device = device;\n    this.id = props.id || uid('async-texture');\n    // this.id = typeof props?.data === 'string' ? props.data.slice(-20) : uid('async-texture');\n\n    // Signature: new AsyncTexture(device, {data: url})\n    if (typeof props?.data === 'string' && props.dimension === '2d') {\n      props = {...props, data: loadImageBitmap(props.data)};\n    }\n\n    this.ready = new Promise<void>((resolve, reject) => {\n      this.resolveReady = () => {\n        this.isReady = true;\n        resolve();\n      };\n      this.rejectReady = reject;\n    });\n\n    this.initAsync(props);\n  }\n\n  async initAsync(props: AsyncTextureProps): Promise<void> {\n    const asyncData: AsyncTextureData = props.data;\n    let data: TextureData;\n    try {\n      data = await awaitAllPromises(asyncData);\n    } catch (error) {\n      this.rejectReady(error as Error);\n    }\n\n    // Check that we haven't been destroyed while waiting for texture data to load\n    if (this.destroyed) {\n      return;\n    }\n\n    // Now we can actually create the texture\n    // @ts-expect-error Discriminated union\n    const syncProps: TextureProps = {...props, data};\n\n    this.texture = this.device.createTexture(syncProps);\n    this.sampler = this.texture.sampler;\n    this.view = this.texture.view;\n    this.isReady = true;\n    this.resolveReady();\n  }\n\n  destroy(): void {\n    if (this.texture) {\n      this.texture.destroy();\n      // @ts-expect-error\n      this.texture = null;\n    }\n    this.destroyed = true;\n  }\n\n  /**\n   * Textures are immutable and cannot be resized after creation,\n   * but we can create a similar texture with the same parameters but a new size.\n   * @note Does not copy contents of the texture\n   * @todo Abort pending promise and create a texture with the new size?\n   */\n  resize(size: {width: number; height: number}): boolean {\n    if (!this.isReady) {\n      throw new Error('Cannot resize texture before it is ready');\n    }\n\n    if (size.width === this.texture.width && size.height === this.texture.height) {\n      return false;\n    }\n\n    if (this.texture) {\n      const texture = this.texture;\n      this.texture = texture.clone(size);\n      texture.destroy();\n    }\n    return true;\n  }\n}\n\n// HELPERS\n\n/** Resolve all promises in a nested data structure */\nasync function awaitAllPromises(x: any): Promise<any> {\n  x = await x;\n  if (Array.isArray(x)) {\n    return await Promise.all(x.map(awaitAllPromises));\n  }\n  if (x && typeof x === 'object' && x.constructor === Object) {\n    const object: Record<string, any> = x;\n    const values = await Promise.all(Object.values(object));\n    const keys = Object.keys(object);\n    const resolvedObject: Record<string, any> = {};\n    for (let i = 0; i < keys.length; i++) {\n      resolvedObject[keys[i]] = values[i];\n    }\n    return resolvedObject;\n  }\n  return x;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// A lot of imports, but then Model is where it all comes together...\nimport type {TypedArray} from '@math.gl/types';\nimport type {\n  RenderPipelineProps,\n  RenderPipelineParameters,\n  BufferLayout,\n  Shader,\n  VertexArray,\n  TransformFeedback,\n  AttributeInfo,\n  Binding,\n  UniformValue,\n  PrimitiveTopology\n} from '@luma.gl/core';\nimport {\n  Device,\n  DeviceFeature,\n  Buffer,\n  Texture,\n  TextureView,\n  Sampler,\n  RenderPipeline,\n  RenderPass,\n  UniformStore,\n  log,\n  getTypedArrayFromDataType,\n  getAttributeInfosFromLayouts,\n  _BufferLayoutHelper,\n  sortedBufferLayoutByShaderSourceLocations\n} from '@luma.gl/core';\n\nimport type {ShaderModule, PlatformInfo} from '@luma.gl/shadertools';\nimport {ShaderAssembler, getShaderLayoutFromWGSL} from '@luma.gl/shadertools';\n\nimport type {Geometry} from '../geometry/geometry';\nimport {GPUGeometry, makeGPUGeometry} from '../geometry/gpu-geometry';\nimport {PipelineFactory} from '../factories/pipeline-factory';\nimport {ShaderFactory} from '../factories/shader-factory';\nimport {getDebugTableForShaderLayout} from '../debug/debug-shader-layout';\nimport {debugFramebuffer} from '../debug/debug-framebuffer';\nimport {deepEqual} from '../utils/deep-equal';\nimport {uid} from '../utils/uid';\nimport {ShaderInputs} from '../shader-inputs';\n// import type {AsyncTextureProps} from '../async-texture/async-texture';\nimport {AsyncTexture} from '../async-texture/async-texture';\n\nimport {splitUniformsAndBindings} from './split-uniforms-and-bindings';\n\nconst LOG_DRAW_PRIORITY = 2;\nconst LOG_DRAW_TIMEOUT = 10000;\n\nexport type ModelProps = Omit<RenderPipelineProps, 'vs' | 'fs' | 'bindings'> & {\n  source?: string;\n  vs: string | null;\n  fs: string | null;\n\n  /** shadertool shader modules (added to shader code) */\n  modules?: ShaderModule[];\n  /** Shadertool module defines (configures shader code)*/\n  defines?: Record<string, string | number | boolean>;\n  // TODO - injections, hooks etc?\n\n  /** Shader inputs, used to generated uniform buffers and bindings */\n  shaderInputs?: ShaderInputs;\n  /** Bindings */\n  bindings?: Record<string, Binding | AsyncTexture>;\n  /** Parameters that are built into the pipeline */\n  parameters?: RenderPipelineParameters;\n\n  /** Geometry */\n  geometry?: GPUGeometry | Geometry | null;\n\n  /** @deprecated Use instanced rendering? Will be auto-detected in 9.1 */\n  isInstanced?: boolean;\n  /** instance count */\n  instanceCount?: number;\n  /** Vertex count */\n  vertexCount?: number;\n\n  indexBuffer?: Buffer | null;\n  /** @note this is really a map of buffers, not a map of attributes */\n  attributes?: Record<string, Buffer>;\n  /**   */\n  constantAttributes?: Record<string, TypedArray>;\n\n  /** Some applications intentionally supply unused attributes and bindings, and want to disable warnings */\n  disableWarnings?: boolean;\n\n  /** @internal For use with {@link TransformFeedback}, WebGL only. */\n  varyings?: string[];\n\n  transformFeedback?: TransformFeedback;\n\n  /** Mapped uniforms for shadertool modules */\n  moduleSettings?: Record<string, Record<string, any>>;\n\n  /** Show shader source in browser? */\n  debugShaders?: 'never' | 'errors' | 'warnings' | 'always';\n\n  /** Factory used to create a {@link RenderPipeline}. Defaults to {@link Device} default factory. */\n  pipelineFactory?: PipelineFactory;\n  /** Factory used to create a {@link Shader}. Defaults to {@link Device} default factory. */\n  shaderFactory?: ShaderFactory;\n  /** Shader assembler. Defaults to the ShaderAssembler.getShaderAssembler() */\n  shaderAssembler?: ShaderAssembler;\n};\n\n/**\n * v9 Model API\n * A model\n * - automatically reuses pipelines (programs) when possible\n * - automatically rebuilds pipelines if necessary to accommodate changed settings\n * shadertools integration\n * - accepts modules and performs shader transpilation\n */\nexport class Model {\n  static defaultProps: Required<ModelProps> = {\n    ...RenderPipeline.defaultProps,\n    source: undefined!,\n    vs: null,\n    fs: null,\n    id: 'unnamed',\n    handle: undefined,\n    userData: {},\n    defines: {},\n    modules: [],\n    moduleSettings: undefined!,\n    geometry: null,\n    indexBuffer: null,\n    attributes: {},\n    constantAttributes: {},\n    varyings: [],\n\n    isInstanced: undefined!,\n    instanceCount: 0,\n    vertexCount: 0,\n\n    shaderInputs: undefined!,\n    pipelineFactory: undefined!,\n    shaderFactory: undefined!,\n    transformFeedback: undefined!,\n    shaderAssembler: ShaderAssembler.getDefaultShaderAssembler(),\n\n    debugShaders: undefined!,\n    disableWarnings: undefined!\n  };\n\n  readonly device: Device;\n  readonly id: string;\n  // @ts-expect-error assigned in function called from constructor\n  readonly source: string;\n  // @ts-expect-error assigned in function called from constructor\n  readonly vs: string;\n  // @ts-expect-error assigned in function called from constructor\n  readonly fs: string;\n  readonly pipelineFactory: PipelineFactory;\n  readonly shaderFactory: ShaderFactory;\n  userData: {[key: string]: any} = {};\n\n  // Fixed properties (change can trigger pipeline rebuild)\n\n  /** The render pipeline GPU parameters, depth testing etc */\n  parameters: RenderPipelineParameters;\n\n  /** The primitive topology */\n  topology: PrimitiveTopology;\n  /** Buffer layout */\n  bufferLayout: BufferLayout[];\n\n  // Dynamic properties\n\n  /** Use instanced rendering */\n  isInstanced: boolean | undefined = undefined;\n  /** instance count. `undefined` means not instanced */\n  instanceCount: number = 0;\n  /** Vertex count */\n  vertexCount: number;\n\n  /** Index buffer */\n  indexBuffer: Buffer | null = null;\n  /** Buffer-valued attributes */\n  bufferAttributes: Record<string, Buffer> = {};\n  /** Constant-valued attributes */\n  constantAttributes: Record<string, TypedArray> = {};\n  /** Bindings (textures, samplers, uniform buffers) */\n  bindings: Record<string, Binding | AsyncTexture> = {};\n  /** Sets uniforms @deprecated Use uniform buffers and setBindings() for portability*/\n  uniforms: Record<string, UniformValue> = {};\n\n  /**\n   * VertexArray\n   * @note not implemented: if bufferLayout is updated, vertex array has to be rebuilt!\n   * @todo - allow application to define multiple vertex arrays?\n   * */\n  vertexArray: VertexArray;\n\n  /** TransformFeedback, WebGL 2 only. */\n  transformFeedback: TransformFeedback | null = null;\n\n  /** The underlying GPU \"program\". @note May be recreated if parameters change */\n  pipeline: RenderPipeline;\n\n  /** ShaderInputs instance */\n  // @ts-expect-error Assigned in function called by constructor\n  shaderInputs: ShaderInputs;\n  // @ts-expect-error Assigned in function called by constructor\n  _uniformStore: UniformStore;\n\n  _attributeInfos: Record<string, AttributeInfo> = {};\n  _gpuGeometry: GPUGeometry | null = null;\n  private _getModuleUniforms: (props?: Record<string, Record<string, any>>) => Record<string, any>;\n  private props: Required<ModelProps>;\n\n  _pipelineNeedsUpdate: string | false = 'newly created';\n  private _needsRedraw: string | false = 'initializing';\n  private _destroyed = false;\n\n  /** \"Time\" of last draw. Monotonically increasing timestamp */\n  _lastDrawTimestamp: number = -1;\n\n  get [Symbol.toStringTag](): string {\n    return 'Model';\n  }\n\n  toString(): string {\n    return `Model(${this.id})`;\n  }\n\n  constructor(device: Device, props: ModelProps) {\n    this.props = {...Model.defaultProps, ...props};\n    props = this.props;\n    this.id = props.id || uid('model');\n    this.device = device;\n\n    Object.assign(this.userData, props.userData);\n\n    // Setup shader module inputs\n    const moduleMap = Object.fromEntries(\n      this.props.modules?.map(module => [module.name, module]) || []\n    );\n\n    const shaderInputs =\n      props.shaderInputs ||\n      new ShaderInputs(moduleMap, {disableWarnings: this.props.disableWarnings});\n    // @ts-ignore\n    this.setShaderInputs(shaderInputs);\n\n    // Setup shader assembler\n    const platformInfo = getPlatformInfo(device);\n\n    // Extract modules from shader inputs if not supplied\n    const modules =\n      // @ts-ignore shaderInputs is assigned in setShaderInputs above.\n      (this.props.modules?.length > 0 ? this.props.modules : this.shaderInputs?.getModules()) || [];\n\n    const isWebGPU = this.device.type === 'webgpu';\n\n    // WebGPU\n    // TODO - hack to support unified WGSL shader\n    // TODO - this is wrong, compile a single shader\n    if (isWebGPU && this.props.source) {\n      // WGSL\n      const {source, getUniforms} = this.props.shaderAssembler.assembleWGSLShader({\n        platformInfo,\n        ...this.props,\n        modules\n      });\n      this.source = source;\n      // @ts-expect-error\n      this._getModuleUniforms = getUniforms;\n      // Extract shader layout after modules have been added to WGSL source, to include any bindings added by modules\n      this.props.shaderLayout ||= getShaderLayoutFromWGSL(this.source);\n    } else {\n      // GLSL\n      const {vs, fs, getUniforms} = this.props.shaderAssembler.assembleGLSLShaderPair({\n        platformInfo,\n        ...this.props,\n        modules\n      });\n\n      this.vs = vs;\n      this.fs = fs;\n      // @ts-expect-error\n      this._getModuleUniforms = getUniforms;\n    }\n\n    this.vertexCount = this.props.vertexCount;\n    this.instanceCount = this.props.instanceCount;\n\n    this.topology = this.props.topology;\n    this.bufferLayout = this.props.bufferLayout;\n    this.parameters = this.props.parameters;\n\n    // Geometry, if provided, sets topology and vertex cound\n    if (props.geometry) {\n      this.setGeometry(props.geometry);\n    }\n\n    this.pipelineFactory =\n      props.pipelineFactory || PipelineFactory.getDefaultPipelineFactory(this.device);\n    this.shaderFactory = props.shaderFactory || ShaderFactory.getDefaultShaderFactory(this.device);\n\n    // Create the pipeline\n    // @note order is important\n    this.pipeline = this._updatePipeline();\n\n    this.vertexArray = device.createVertexArray({\n      renderPipeline: this.pipeline\n    });\n\n    // Now we can apply geometry attributes\n    if (this._gpuGeometry) {\n      this._setGeometryAttributes(this._gpuGeometry);\n    }\n\n    // Apply any dynamic settings that will not trigger pipeline change\n    if ('isInstanced' in props) {\n      this.isInstanced = props.isInstanced;\n    }\n\n    if (props.instanceCount) {\n      this.setInstanceCount(props.instanceCount);\n    }\n    if (props.vertexCount) {\n      this.setVertexCount(props.vertexCount);\n    }\n    if (props.indexBuffer) {\n      this.setIndexBuffer(props.indexBuffer);\n    }\n    if (props.attributes) {\n      this.setAttributes(props.attributes);\n    }\n    if (props.constantAttributes) {\n      this.setConstantAttributes(props.constantAttributes);\n    }\n    if (props.bindings) {\n      this.setBindings(props.bindings);\n    }\n    if (props.uniforms) {\n      this.setUniformsWebGL(props.uniforms);\n    }\n    if (props.moduleSettings) {\n      // log.warn('Model.props.moduleSettings is deprecated. Use Model.shaderInputs.setProps()')();\n      this.updateModuleSettingsWebGL(props.moduleSettings);\n    }\n    if (props.transformFeedback) {\n      this.transformFeedback = props.transformFeedback;\n    }\n\n    // Catch any access to non-standard props\n    Object.seal(this);\n  }\n\n  destroy(): void {\n    if (this._destroyed) return;\n    this.pipelineFactory.release(this.pipeline);\n    this.shaderFactory.release(this.pipeline.vs);\n    if (this.pipeline.fs) {\n      this.shaderFactory.release(this.pipeline.fs);\n    }\n    this._uniformStore.destroy();\n    // TODO - mark resource as managed and destroyIfManaged() ?\n    this._gpuGeometry?.destroy();\n    this._destroyed = true;\n  }\n\n  // Draw call\n\n  /** Query redraw status. Clears the status. */\n  needsRedraw(): false | string {\n    // Catch any writes to already bound resources\n    if (this._getBindingsUpdateTimestamp() > this._lastDrawTimestamp) {\n      this.setNeedsRedraw('contents of bound textures or buffers updated');\n    }\n    const needsRedraw = this._needsRedraw;\n    this._needsRedraw = false;\n    return needsRedraw;\n  }\n\n  /** Mark the model as needing a redraw */\n  setNeedsRedraw(reason: string): void {\n    this._needsRedraw ||= reason;\n  }\n\n  predraw(): void {\n    // Update uniform buffers if needed\n    this.updateShaderInputs();\n    // Check if the pipeline is invalidated\n    this.pipeline = this._updatePipeline();\n  }\n\n  draw(renderPass: RenderPass): boolean {\n    const loadingBinding = this._areBindingsLoading();\n    if (loadingBinding) {\n      log.info(LOG_DRAW_PRIORITY, `>>> DRAWING ABORTED ${this.id}: ${loadingBinding} not loaded`)();\n      return false;\n    }\n\n    try {\n      renderPass.pushDebugGroup(`${this}.predraw(${renderPass})`);\n      this.predraw();\n    } finally {\n      renderPass.popDebugGroup();\n    }\n\n    let drawSuccess: boolean;\n    try {\n      renderPass.pushDebugGroup(`${this}.draw(${renderPass})`);\n      this._logDrawCallStart();\n\n      // Update the pipeline if invalidated\n      // TODO - inside RenderPass is likely the worst place to do this from performance perspective.\n      // Application can call Model.predraw() to avoid this.\n      this.pipeline = this._updatePipeline();\n\n      // Set pipeline state, we may be sharing a pipeline so we need to set all state on every draw\n      // Any caching needs to be done inside the pipeline functions\n      // TODO this is a busy initialized check for all bindings every frame\n\n      const syncBindings = this._getBindings();\n      this.pipeline.setBindings(syncBindings, {\n        disableWarnings: this.props.disableWarnings\n      });\n      if (!isObjectEmpty(this.uniforms)) {\n        this.pipeline.setUniformsWebGL(this.uniforms);\n      }\n\n      const {indexBuffer} = this.vertexArray;\n      const indexCount = indexBuffer\n        ? indexBuffer.byteLength / (indexBuffer.indexType === 'uint32' ? 4 : 2)\n        : undefined;\n\n      drawSuccess = this.pipeline.draw({\n        renderPass,\n        vertexArray: this.vertexArray,\n        isInstanced: this.isInstanced,\n        vertexCount: this.vertexCount,\n        instanceCount: this.instanceCount,\n        indexCount,\n        transformFeedback: this.transformFeedback || undefined,\n        // WebGL shares underlying cached pipelines even for models that have different parameters and topology,\n        // so we must provide our unique parameters to each draw\n        // (In WebGPU most parameters are encoded in the pipeline and cannot be changed per draw call)\n        parameters: this.parameters,\n        topology: this.topology\n      });\n    } finally {\n      renderPass.popDebugGroup();\n      this._logDrawCallEnd();\n    }\n    this._logFramebuffer(renderPass);\n\n    // Update needsRedraw flag\n    if (drawSuccess) {\n      this._lastDrawTimestamp = this.device.timestamp;\n      this._needsRedraw = false;\n    } else {\n      this._needsRedraw = 'waiting for resource initialization';\n    }\n    return drawSuccess;\n  }\n\n  // Update fixed fields (can trigger pipeline rebuild)\n\n  /**\n   * Updates the optional geometry\n   * Geometry, set topology and bufferLayout\n   * @note Can trigger a pipeline rebuild / pipeline cache fetch on WebGPU\n   */\n  setGeometry(geometry: GPUGeometry | Geometry | null): void {\n    this._gpuGeometry?.destroy();\n    const gpuGeometry = geometry && makeGPUGeometry(this.device, geometry);\n    if (gpuGeometry) {\n      this.setTopology(gpuGeometry.topology || 'triangle-list');\n      const bufferLayoutHelper = new _BufferLayoutHelper(this.bufferLayout);\n      this.bufferLayout = bufferLayoutHelper.mergeBufferLayouts(\n        gpuGeometry.bufferLayout,\n        this.bufferLayout\n      );\n      if (this.vertexArray) {\n        this._setGeometryAttributes(gpuGeometry);\n      }\n    }\n    this._gpuGeometry = gpuGeometry;\n  }\n\n  /**\n   * Updates the primitive topology ('triangle-list', 'triangle-strip' etc).\n   * @note Triggers a pipeline rebuild / pipeline cache fetch on WebGPU\n   */\n  setTopology(topology: PrimitiveTopology): void {\n    if (topology !== this.topology) {\n      this.topology = topology;\n      this._setPipelineNeedsUpdate('topology');\n    }\n  }\n\n  /**\n   * Updates the buffer layout.\n   * @note Triggers a pipeline rebuild / pipeline cache fetch\n   */\n  setBufferLayout(bufferLayout: BufferLayout[]): void {\n    const bufferLayoutHelper = new _BufferLayoutHelper(this.bufferLayout);\n    this.bufferLayout = this._gpuGeometry\n      ? bufferLayoutHelper.mergeBufferLayouts(bufferLayout, this._gpuGeometry.bufferLayout)\n      : bufferLayout;\n    this._setPipelineNeedsUpdate('bufferLayout');\n\n    // Recreate the pipeline\n    this.pipeline = this._updatePipeline();\n\n    // vertex array needs to be updated if we update buffer layout,\n    // but not if we update parameters\n    this.vertexArray = this.device.createVertexArray({\n      renderPipeline: this.pipeline\n    });\n\n    // Reapply geometry attributes to the new vertex array\n    if (this._gpuGeometry) {\n      this._setGeometryAttributes(this._gpuGeometry);\n    }\n  }\n\n  /**\n   * Set GPU parameters.\n   * @note Can trigger a pipeline rebuild / pipeline cache fetch.\n   * @param parameters\n   */\n  setParameters(parameters: RenderPipelineParameters) {\n    if (!deepEqual(parameters, this.parameters, 2)) {\n      this.parameters = parameters;\n      this._setPipelineNeedsUpdate('parameters');\n    }\n  }\n\n  // Update dynamic fields\n\n  /**\n   * Updates the instance count (used in draw calls)\n   * @note Any attributes with stepMode=instance need to be at least this big\n   */\n  setInstanceCount(instanceCount: number): void {\n    this.instanceCount = instanceCount;\n    // luma.gl examples don't set props.isInstanced and rely on auto-detection\n    // but deck.gl sets instanceCount even for models that are not instanced.\n    if (this.isInstanced === undefined && instanceCount > 0) {\n      this.isInstanced = true;\n    }\n    this.setNeedsRedraw('instanceCount');\n  }\n\n  /**\n   * Updates the vertex count (used in draw calls)\n   * @note Any attributes with stepMode=vertex need to be at least this big\n   */\n  setVertexCount(vertexCount: number): void {\n    this.vertexCount = vertexCount;\n    this.setNeedsRedraw('vertexCount');\n  }\n\n  /** Set the shader inputs */\n  setShaderInputs(shaderInputs: ShaderInputs): void {\n    this.shaderInputs = shaderInputs;\n    this._uniformStore = new UniformStore(this.shaderInputs.modules);\n    // Create uniform buffer bindings for all modules that actually have uniforms\n    for (const [moduleName, module] of Object.entries(this.shaderInputs.modules)) {\n      if (shaderModuleHasUniforms(module)) {\n        const uniformBuffer = this._uniformStore.getManagedUniformBuffer(this.device, moduleName);\n        this.bindings[`${moduleName}Uniforms`] = uniformBuffer;\n      }\n    }\n    this.setNeedsRedraw('shaderInputs');\n  }\n\n  /** Update uniform buffers from the model's shader inputs */\n  updateShaderInputs(): void {\n    this._uniformStore.setUniforms(this.shaderInputs.getUniformValues());\n    this.setBindings(this.shaderInputs.getBindingValues());\n    // TODO - this is already tracked through buffer/texture update times?\n    this.setNeedsRedraw('shaderInputs');\n  }\n\n  /**\n   * Sets bindings (textures, samplers, uniform buffers)\n   */\n  setBindings(bindings: Record<string, Binding | AsyncTexture>): void {\n    Object.assign(this.bindings, bindings);\n    this.setNeedsRedraw('bindings');\n  }\n\n  /**\n   * Updates optional transform feedback. WebGL only.\n   */\n  setTransformFeedback(transformFeedback: TransformFeedback | null): void {\n    this.transformFeedback = transformFeedback;\n    this.setNeedsRedraw('transformFeedback');\n  }\n\n  /**\n   * Sets the index buffer\n   * @todo - how to unset it if we change geometry?\n   */\n  setIndexBuffer(indexBuffer: Buffer | null): void {\n    this.vertexArray.setIndexBuffer(indexBuffer);\n    this.setNeedsRedraw('indexBuffer');\n  }\n\n  /**\n   * Sets attributes (buffers)\n   * @note Overrides any attributes previously set with the same name\n   */\n  setAttributes(buffers: Record<string, Buffer>, options?: {disableWarnings?: boolean}): void {\n    const disableWarnings = options?.disableWarnings ?? this.props.disableWarnings;\n    if (buffers.indices) {\n      log.warn(\n        `Model:${this.id} setAttributes() - indexBuffer should be set using setIndexBuffer()`\n      )();\n    }\n\n    // ensure bufferLayout order matches source layout so we bind\n    // the correct buffers to the correct indices in webgpu.\n    this.bufferLayout = sortedBufferLayoutByShaderSourceLocations(\n      this.pipeline.shaderLayout,\n      this.bufferLayout\n    );\n    const bufferLayoutHelper = new _BufferLayoutHelper(this.bufferLayout);\n\n    // Check if all buffers have a layout\n    for (const [bufferName, buffer] of Object.entries(buffers)) {\n      const bufferLayout = bufferLayoutHelper.getBufferLayout(bufferName);\n      if (!bufferLayout) {\n        if (!disableWarnings) {\n          log.warn(`Model(${this.id}): Missing layout for buffer \"${bufferName}\".`)();\n        }\n        continue; // eslint-disable-line no-continue\n      }\n\n      // In WebGL, for an interleaved attribute we may need to set multiple attributes\n      // but in WebGPU, we set it according to the buffer's position in the vertexArray\n      const attributeNames = bufferLayoutHelper.getAttributeNamesForBuffer(bufferLayout);\n      let set = false;\n      for (const attributeName of attributeNames) {\n        const attributeInfo = this._attributeInfos[attributeName];\n        if (attributeInfo) {\n          const location =\n            this.device.type === 'webgpu'\n              ? bufferLayoutHelper.getBufferIndex(attributeInfo.bufferName)\n              : attributeInfo.location;\n\n          this.vertexArray.setBuffer(location, buffer);\n          set = true;\n        }\n      }\n      if (!set && !disableWarnings) {\n        log.warn(\n          `Model(${this.id}): Ignoring buffer \"${buffer.id}\" for unknown attribute \"${bufferName}\"`\n        )();\n      }\n    }\n    this.setNeedsRedraw('attributes');\n  }\n\n  /**\n   * Sets constant attributes\n   * @note Overrides any attributes previously set with the same name\n   * Constant attributes are only supported in WebGL, not in WebGPU\n   * Any attribute that is disabled in the current vertex array object\n   * is read from the context's global constant value for that attribute location.\n   * @param constantAttributes\n   */\n  setConstantAttributes(\n    attributes: Record<string, TypedArray>,\n    options?: {disableWarnings?: boolean}\n  ): void {\n    for (const [attributeName, value] of Object.entries(attributes)) {\n      const attributeInfo = this._attributeInfos[attributeName];\n      if (attributeInfo) {\n        this.vertexArray.setConstantWebGL(attributeInfo.location, value);\n      } else if (!(options?.disableWarnings ?? this.props.disableWarnings)) {\n        log.warn(\n          `Model \"${this.id}: Ignoring constant supplied for unknown attribute \"${attributeName}\"`\n        )();\n      }\n    }\n    this.setNeedsRedraw('constants');\n  }\n\n  // DEPRECATED METHODS\n\n  /**\n   * Sets individual uniforms\n   * @deprecated WebGL only, use uniform buffers for portability\n   * @param uniforms\n   */\n  setUniforms(uniforms: Record<string, UniformValue>): void {\n    this.setUniformsWebGL(uniforms);\n  }\n\n  /**\n   * Sets individual uniforms\n   * @deprecated WebGL only, use uniform buffers for portability\n   * @param uniforms\n   */\n  setUniformsWebGL(uniforms: Record<string, UniformValue>): void {\n    if (!isObjectEmpty(uniforms)) {\n      this.pipeline.setUniformsWebGL(uniforms);\n      Object.assign(this.uniforms, uniforms);\n    }\n    this.setNeedsRedraw('uniforms');\n  }\n\n  /**\n   * @deprecated Updates shader module settings (which results in uniforms being set)\n   */\n  updateModuleSettingsWebGL(props: Record<string, any>): void {\n    // log.warn('Model.updateModuleSettings is deprecated. Use Model.shaderInputs.setProps()')();\n    const {bindings, uniforms} = splitUniformsAndBindings(this._getModuleUniforms(props));\n    Object.assign(this.bindings, bindings);\n    Object.assign(this.uniforms, uniforms);\n    this.setNeedsRedraw('moduleSettings');\n  }\n\n  // Internal methods\n\n  /** Check that bindings are loaded. Returns id of first binding that is still loading. */\n  _areBindingsLoading(): string | false {\n    for (const binding of Object.values(this.bindings)) {\n      if (binding instanceof AsyncTexture && !binding.isReady) {\n        return binding.id;\n      }\n    }\n    return false;\n  }\n\n  /** Extracts texture view from loaded async textures. Returns null if any textures have not yet been loaded. */\n  _getBindings(): Record<string, Binding> {\n    const validBindings: Record<string, Binding> = {};\n\n    for (const [name, binding] of Object.entries(this.bindings)) {\n      if (binding instanceof AsyncTexture) {\n        // Check that async textures are loaded\n        if (binding.isReady) {\n          validBindings[name] = binding.texture;\n        }\n      } else {\n        validBindings[name] = binding;\n      }\n    }\n\n    return validBindings;\n  }\n\n  /** Get the timestamp of the latest updated bound GPU memory resource (buffer/texture). */\n  _getBindingsUpdateTimestamp(): number {\n    let timestamp = 0;\n    for (const binding of Object.values(this.bindings)) {\n      if (binding instanceof TextureView) {\n        timestamp = Math.max(timestamp, binding.texture.updateTimestamp);\n      } else if (binding instanceof Buffer || binding instanceof Texture) {\n        timestamp = Math.max(timestamp, binding.updateTimestamp);\n      } else if (binding instanceof AsyncTexture) {\n        timestamp = binding.texture\n          ? Math.max(timestamp, binding.texture.updateTimestamp)\n          : // The texture will become available in the future\n            Infinity;\n      } else if (!(binding instanceof Sampler)) {\n        timestamp = Math.max(timestamp, binding.buffer.updateTimestamp);\n      }\n    }\n    return timestamp;\n  }\n\n  /**\n   * Updates the optional geometry attributes\n   * Geometry, sets several attributes, indexBuffer, and also vertex count\n   * @note Can trigger a pipeline rebuild / pipeline cache fetch on WebGPU\n   */\n  _setGeometryAttributes(gpuGeometry: GPUGeometry): void {\n    // Filter geometry attribute so that we don't issue warnings for unused attributes\n    const attributes = {...gpuGeometry.attributes};\n    for (const [attributeName] of Object.entries(attributes)) {\n      if (\n        !this.pipeline.shaderLayout.attributes.find(layout => layout.name === attributeName) &&\n        attributeName !== 'positions'\n      ) {\n        delete attributes[attributeName];\n      }\n    }\n\n    // TODO - delete previous geometry?\n    this.vertexCount = gpuGeometry.vertexCount;\n    this.setIndexBuffer(gpuGeometry.indices || null);\n    this.setAttributes(gpuGeometry.attributes, {disableWarnings: true});\n    this.setAttributes(attributes, {disableWarnings: this.props.disableWarnings});\n\n    this.setNeedsRedraw('geometry attributes');\n  }\n\n  /** Mark pipeline as needing update */\n  _setPipelineNeedsUpdate(reason: string): void {\n    this._pipelineNeedsUpdate ||= reason;\n    this.setNeedsRedraw(reason);\n  }\n\n  /** Update pipeline if needed */\n  _updatePipeline(): RenderPipeline {\n    if (this._pipelineNeedsUpdate) {\n      let prevShaderVs: Shader | null = null;\n      let prevShaderFs: Shader | null = null;\n      if (this.pipeline) {\n        log.log(\n          1,\n          `Model ${this.id}: Recreating pipeline because \"${this._pipelineNeedsUpdate}\".`\n        )();\n        prevShaderVs = this.pipeline.vs;\n        prevShaderFs = this.pipeline.fs;\n      }\n\n      this._pipelineNeedsUpdate = false;\n\n      const vs = this.shaderFactory.createShader({\n        id: `${this.id}-vertex`,\n        stage: 'vertex',\n        source: this.source || this.vs,\n        debugShaders: this.props.debugShaders\n      });\n\n      let fs: Shader | null = null;\n      if (this.source) {\n        fs = vs;\n      } else if (this.fs) {\n        fs = this.shaderFactory.createShader({\n          id: `${this.id}-fragment`,\n          stage: 'fragment',\n          source: this.source || this.fs,\n          debugShaders: this.props.debugShaders\n        });\n      }\n\n      this.pipeline = this.pipelineFactory.createRenderPipeline({\n        ...this.props,\n        bufferLayout: this.bufferLayout,\n        topology: this.topology,\n        parameters: this.parameters,\n        // TODO - why set bindings here when we reset them every frame?\n        // Should we expose a BindGroup abstraction?\n        bindings: this._getBindings(),\n        vs,\n        fs\n      });\n\n      this._attributeInfos = getAttributeInfosFromLayouts(\n        this.pipeline.shaderLayout,\n        this.bufferLayout\n      );\n\n      if (prevShaderVs) this.shaderFactory.release(prevShaderVs);\n      if (prevShaderFs) this.shaderFactory.release(prevShaderFs);\n    }\n    return this.pipeline;\n  }\n\n  /** Throttle draw call logging */\n  _lastLogTime = 0;\n  _logOpen = false;\n\n  _logDrawCallStart(): void {\n    // IF level is 4 or higher, log every frame.\n    const logDrawTimeout = log.level > 3 ? 0 : LOG_DRAW_TIMEOUT;\n    if (log.level < 2 || Date.now() - this._lastLogTime < logDrawTimeout) {\n      return;\n    }\n\n    this._lastLogTime = Date.now();\n    this._logOpen = true;\n\n    log.group(LOG_DRAW_PRIORITY, `>>> DRAWING MODEL ${this.id}`, {collapsed: log.level <= 2})();\n  }\n\n  _logDrawCallEnd(): void {\n    if (this._logOpen) {\n      const shaderLayoutTable = getDebugTableForShaderLayout(this.pipeline.shaderLayout, this.id);\n\n      // log.table(logLevel, attributeTable)();\n      // log.table(logLevel, uniformTable)();\n      log.table(LOG_DRAW_PRIORITY, shaderLayoutTable)();\n\n      const uniformTable = this.shaderInputs.getDebugTable();\n      // Add any global uniforms\n      for (const [name, value] of Object.entries(this.uniforms)) {\n        uniformTable[name] = {value};\n      }\n      log.table(LOG_DRAW_PRIORITY, uniformTable)();\n\n      const attributeTable = this._getAttributeDebugTable();\n      log.table(LOG_DRAW_PRIORITY, this._attributeInfos)();\n      log.table(LOG_DRAW_PRIORITY, attributeTable)();\n\n      log.groupEnd(LOG_DRAW_PRIORITY)();\n      this._logOpen = false;\n    }\n  }\n\n  protected _drawCount = 0;\n  _logFramebuffer(renderPass: RenderPass): void {\n    const debugFramebuffers = this.device.props.debugFramebuffers;\n    this._drawCount++;\n    // Update first 3 frames and then every 60 frames\n    if (!debugFramebuffers) {\n      // } || (this._drawCount++ > 3 && this._drawCount % 60)) {\n      return;\n    }\n    // TODO - display framebuffer output in debug window\n    const framebuffer = renderPass.props.framebuffer;\n    if (framebuffer) {\n      debugFramebuffer(framebuffer, {id: framebuffer.id, minimap: true});\n      // log.image({logLevel: LOG_DRAW_PRIORITY, message: `${framebuffer.id} %c sup?`, image})();\n    }\n  }\n\n  _getAttributeDebugTable(): Record<string, Record<string, unknown>> {\n    const table: Record<string, Record<string, unknown>> = {};\n    for (const [name, attributeInfo] of Object.entries(this._attributeInfos)) {\n      const values = this.vertexArray.attributes[attributeInfo.location];\n      table[attributeInfo.location] = {\n        name,\n        type: attributeInfo.shaderType,\n        values: values\n          ? this._getBufferOrConstantValues(values, attributeInfo.bufferDataType)\n          : 'null'\n      };\n    }\n    if (this.vertexArray.indexBuffer) {\n      const {indexBuffer} = this.vertexArray;\n      const values =\n        indexBuffer.indexType === 'uint32'\n          ? new Uint32Array(indexBuffer.debugData)\n          : new Uint16Array(indexBuffer.debugData);\n      table.indices = {\n        name: 'indices',\n        type: indexBuffer.indexType,\n        values: values.toString()\n      };\n    }\n    return table;\n  }\n\n  // TODO - fix typing of luma data types\n  _getBufferOrConstantValues(attribute: Buffer | TypedArray, dataType: any): string {\n    const TypedArrayConstructor = getTypedArrayFromDataType(dataType);\n    const typedArray =\n      attribute instanceof Buffer ? new TypedArrayConstructor(attribute.debugData) : attribute;\n    return typedArray.toString();\n  }\n}\n\nfunction shaderModuleHasUniforms(module: ShaderModule): boolean {\n  return Boolean(module.uniformTypes && !isObjectEmpty(module.uniformTypes));\n}\n\n// HELPERS\n\n/** Create a shadertools platform info from the Device */\nexport function getPlatformInfo(device: Device): PlatformInfo {\n  return {\n    type: device.type,\n    shaderLanguage: device.info.shadingLanguage,\n    shaderLanguageVersion: device.info.shadingLanguageVersion as 100 | 300,\n    gpu: device.info.gpu,\n    // HACK - we pretend that the DeviceFeatures is a Set, it has a similar API\n    features: device.features as unknown as Set<DeviceFeature>\n  };\n}\n\n/** Returns true if given object is empty, false otherwise. */\nfunction isObjectEmpty(obj: object): boolean {\n  // @ts-ignore key is unused\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  for (const key in obj) {\n    return false;\n  }\n  return true;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Device, Buffer, BufferRange, TransformFeedback, RenderPassProps} from '@luma.gl/core';\nimport {getPassthroughFS} from '@luma.gl/shadertools';\nimport {Model} from '../model/model';\nimport type {ModelProps} from '../model/model';\n\n/**\n * Properties for creating a {@link BufferTransform}\n * @note Only works under WebGL2.\n */\nexport type BufferTransformProps = Omit<ModelProps, 'fs'> & {\n  /** Optional fragment shader - normally not used in transforms */\n  fs?: ModelProps['fs']; // override as optional\n  /** A list of named outputs corresponding to shader declarations (varyings in WebGL) */\n  outputs?: string[];\n  /** @deprecated Use run({outputBuffers}) instead - Map of output buffers that the shaders will write results of computations to */\n  feedbackBuffers?: Record<string, Buffer | BufferRange>;\n};\n\n/**\n * Manages a WebGL program (pipeline) for buffer→buffer transforms.\n * @note Only works under WebGL2.\n */\nexport class BufferTransform {\n  readonly device: Device;\n  readonly model: Model;\n  readonly transformFeedback: TransformFeedback;\n\n  static defaultProps: Required<BufferTransformProps> = {\n    ...Model.defaultProps,\n    outputs: undefined!,\n    feedbackBuffers: undefined!\n  };\n\n  static isSupported(device: Device): boolean {\n    return device?.info?.type === 'webgl';\n  }\n\n  constructor(device: Device, props: BufferTransformProps = BufferTransform.defaultProps) {\n    if (!BufferTransform.isSupported(device)) {\n      throw new Error('BufferTransform not yet implemented on WebGPU');\n    }\n\n    this.device = device;\n\n    this.model = new Model(this.device, {\n      id: props.id || 'buffer-transform-model',\n      fs: props.fs || getPassthroughFS(),\n      topology: props.topology || 'point-list',\n      varyings: props.outputs || props.varyings,\n      ...props\n    });\n\n    this.transformFeedback = this.device.createTransformFeedback({\n      layout: this.model.pipeline.shaderLayout,\n      // @ts-expect-error TODO\n      buffers: props.feedbackBuffers\n    });\n\n    this.model.setTransformFeedback(this.transformFeedback);\n\n    Object.seal(this);\n  }\n\n  /** Destroy owned resources. */\n  destroy(): void {\n    if (this.model) {\n      this.model.destroy();\n    }\n  }\n\n  /** @deprecated Use {@link destroy}. */\n  delete(): void {\n    this.destroy();\n  }\n\n  /** Run one transform loop. */\n  run(\n    options?: RenderPassProps & {\n      inputBuffers?: Record<string, Buffer>;\n      outputBuffers?: Record<string, Buffer>;\n    }\n  ): void {\n    if (options?.inputBuffers) {\n      this.model.setAttributes(options.inputBuffers);\n    }\n    if (options?.outputBuffers) {\n      this.transformFeedback.setBuffers(options.outputBuffers);\n    }\n    const renderPass = this.device.beginRenderPass(options);\n    this.model.draw(renderPass);\n    renderPass.end();\n  }\n\n  // DEPRECATED METHODS\n\n  /** @deprecated App knows what buffers it is passing in - Returns the {@link Buffer} or {@link BufferRange} for given varying name. */\n  getBuffer(varyingName: string): Buffer | BufferRange | null {\n    return this.transformFeedback.getBuffer(varyingName);\n  }\n\n  /** @deprecated App knows what buffers it is passing in - Reads the {@link Buffer} or {@link BufferRange} for given varying name. */\n  readAsync(varyingName: string): Promise<Uint8Array> {\n    const result = this.getBuffer(varyingName);\n    if (!result) {\n      throw new Error('BufferTransform#getBuffer');\n    }\n    if (result instanceof Buffer) {\n      return result.readAsync();\n    }\n    const {buffer, byteOffset = 0, byteLength = buffer.byteLength} = result;\n    return buffer.readAsync(byteOffset, byteLength);\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Geometry} from '../geometry/geometry';\nimport {uid} from '../utils/uid';\n// import type {GeometryType} from '../geometry/geometry-type';\n\nexport type CubeGeometryProps = {\n  id?: string;\n  indices?: boolean;\n  attributes?: any;\n};\n\nexport class CubeGeometry extends Geometry {\n  constructor(props: CubeGeometryProps = {}) {\n    const {id = uid('cube-geometry'), indices = true} = props;\n    super(\n      indices\n        ? {\n            ...props,\n            id,\n            topology: 'triangle-list',\n            indices: {size: 1, value: CUBE_INDICES},\n            attributes: {...ATTRIBUTES, ...props.attributes}\n          }\n        : {\n            ...props,\n            id,\n            topology: 'triangle-list',\n            indices: undefined,\n            attributes: {...NON_INDEXED_ATTRIBUTES, ...props.attributes}\n          }\n    );\n  }\n}\n\n// prettier-ignore\nconst CUBE_INDICES = new Uint16Array([\n  0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13,\n  14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n]);\n\n// prettier-ignore\nconst CUBE_POSITIONS = new Float32Array([\n  -1,  -1,  1, 1,  -1,  1,  1,  1,  1,  -1,  1,  1,\n  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1,  -1,\n  -1,  1,  -1,  -1,  1,  1,  1,  1,  1,  1,  1,  -1,\n  -1,  -1,  -1,  1,  -1,  -1,  1,  -1,  1,  -1,  -1,  1,\n  1,  -1,  -1,  1,  1,  -1,  1,  1,  1,  1,  -1,  1,\n  -1,  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1\n]);\n\n// TODO - could be Uint8\n// prettier-ignore\nconst CUBE_NORMALS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,\n  // Back face\n  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,\n  // Top face\n  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,\n  // Bottom face\n  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,\n  // Right face\n  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,\n  // Left face\n  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0\n]);\n\n// prettier-ignore\nconst CUBE_TEX_COORDS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  1,  1,  0,  1,\n  // Back face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Top face\n  0,  1,  0,  0,  1,  0,  1,  1,\n  // Bottom face\n  1,  1,  0,  1,  0,  0,  1,  0,\n  // Right face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Left face\n  0,  0,  1,  0,  1,  1,  0,  1\n]);\n\n// float4 position\n// prettier-ignore\nexport const CUBE_NON_INDEXED_POSITIONS = new Float32Array([\n  1, -1, 1,\n  -1, -1, 1,\n  -1, -1, -1,\n  1, -1, -1,\n  1, -1, 1,\n  -1, -1, -1,\n\n  1, 1, 1,\n  1, -1, 1,\n  1, -1, -1,\n  1, 1, -1,\n  1, 1, 1,\n  1, -1, -1,\n\n  -1, 1, 1,\n  1, 1, 1,\n  1, 1, -1,\n  -1, 1, -1,\n  -1, 1, 1,\n  1, 1, -1,\n\n  -1, -1, 1,\n  -1, 1, 1,\n  -1, 1, -1,\n  -1, -1, -1,\n  -1, -1, 1,\n  -1, 1, -1,\n\n  1, 1, 1,\n  -1, 1, 1,\n  -1, -1, 1,\n  -1, -1, 1,\n  1, -1, 1,\n  1, 1, 1,\n\n  1, -1, -1,\n  -1, -1, -1,\n  -1, 1, -1,\n  1, 1, -1,\n  1, -1, -1,\n  -1, 1, -1,\n]);\n\n// float2 uv,\n// prettier-ignore\nexport const CUBE_NON_INDEXED_TEX_COORDS = new Float32Array([\n  1, 1,\n  0, 1,\n  0, 0,\n  1, 0,\n  1, 1,\n  0, 0,\n\n  1, 1,\n  0, 1,\n  0, 0,\n  1, 0,\n  1, 1,\n  0, 0,\n\n  1, 1,\n  0, 1,\n  0, 0,\n  1, 0,\n  1, 1,\n  0, 0,\n\n  1, 1,\n  0, 1,\n  0, 0,\n  1, 0,\n  1, 1,\n  0, 0,\n\n  1, 1,\n  0, 1,\n  0, 0,\n  0, 0,\n  1, 0,\n  1, 1,\n\n  1, 1,\n  0, 1,\n  0, 0,\n  1, 0,\n  1, 1,\n  0, 0,\n]);\n\n// float4 color\n// prettier-ignore\nexport const CUBE_NON_INDEXED_COLORS = new Float32Array([\n  1, 0, 1, 1,\n  0, 0, 1, 1,\n  0, 0, 0, 1,\n  1, 0, 0, 1,\n  1, 0, 1, 1,\n  0, 0, 0, 1,\n\n  1, 1, 1, 1,\n  1, 0, 1, 1,\n  1, 0, 0, 1,\n  1, 1, 0, 1,\n  1, 1, 1, 1,\n  1, 0, 0, 1,\n\n  0, 1, 1, 1,\n  1, 1, 1, 1,\n  1, 1, 0, 1,\n  0, 1, 0, 1,\n  0, 1, 1, 1,\n  1, 1, 0, 1,\n\n  0, 0, 1, 1,\n  0, 1, 1, 1,\n  0, 1, 0, 1,\n  0, 0, 0, 1,\n  0, 0, 1, 1,\n  0, 1, 0, 1,\n\n  1, 1, 1, 1,\n  0, 1, 1, 1,\n  0, 0, 1, 1,\n  0, 0, 1, 1,\n  1, 0, 1, 1,\n  1, 1, 1, 1,\n\n  1, 0, 0, 1,\n  0, 0, 0, 1,\n  0, 1, 0, 1,\n  1, 1, 0, 1,\n  1, 0, 0, 1,\n  0, 1, 0, 1,\n]);\n\nconst ATTRIBUTES = {\n  POSITION: {size: 3, value: CUBE_POSITIONS},\n  NORMAL: {size: 3, value: CUBE_NORMALS},\n  TEXCOORD_0: {size: 2, value: CUBE_TEX_COORDS}\n};\n\nconst NON_INDEXED_ATTRIBUTES = {\n  POSITION: {size: 3, value: CUBE_NON_INDEXED_POSITIONS},\n  // NORMAL: {size: 3, value: CUBE_NON_INDEXED_NORMALS},\n  TEXCOORD_0: {size: 2, value: CUBE_NON_INDEXED_TEX_COORDS},\n  COLOR_0: {size: 3, value: CUBE_NON_INDEXED_COLORS}\n};\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {DeviceFeature, ComputePipelineProps, Shader, Binding} from '@luma.gl/core';\nimport {\n  Device,\n  Buffer,\n  ComputePipeline,\n  ComputePass,\n  UniformStore,\n  log,\n  getTypedArrayFromDataType\n} from '@luma.gl/core';\nimport type {ShaderModule, PlatformInfo} from '@luma.gl/shadertools';\nimport {ShaderAssembler, getShaderLayoutFromWGSL} from '@luma.gl/shadertools';\nimport {TypedArray, isNumericArray} from '@math.gl/types';\nimport {ShaderInputs} from '../shader-inputs';\nimport {PipelineFactory} from '../factories/pipeline-factory';\nimport {ShaderFactory} from '../factories/shader-factory';\nimport {uid} from '../utils/uid';\n// import {getDebugTableForShaderLayout} from '../debug/debug-shader-layout';\n\nconst LOG_DRAW_PRIORITY = 2;\nconst LOG_DRAW_TIMEOUT = 10000;\n\nexport type ComputationProps = Omit<ComputePipelineProps, 'shader'> & {\n  source?: string;\n\n  /** shadertool shader modules (added to shader code) */\n  modules?: ShaderModule[];\n  /** Shadertool module defines (configures shader code)*/\n  defines?: Record<string, string | number | boolean>;\n  // TODO - injections, hooks etc?\n\n  /** Shader inputs, used to generated uniform buffers and bindings */\n  shaderInputs?: ShaderInputs;\n\n  /** Bindings */\n  bindings?: Record<string, Binding>;\n\n  /** Show shader source in browser? */\n  debugShaders?: 'never' | 'errors' | 'warnings' | 'always';\n\n  /** Factory used to create a {@link ComputePipeline}. Defaults to {@link Device} default factory. */\n  pipelineFactory?: PipelineFactory;\n  /** Factory used to create a {@link Shader}. Defaults to {@link Device} default factory. */\n  shaderFactory?: ShaderFactory;\n  /** Shader assembler. Defaults to the ShaderAssembler.getShaderAssembler() */\n  shaderAssembler?: ShaderAssembler;\n};\n\n/**\n * v9 Model API\n * A model\n * - automatically reuses pipelines (programs) when possible\n * - automatically rebuilds pipelines if necessary to accommodate changed settings\n * shadertools integration\n * - accepts modules and performs shader transpilation\n */\nexport class Computation {\n  static defaultProps: Required<ComputationProps> = {\n    ...ComputePipeline.defaultProps,\n    id: 'unnamed',\n    handle: undefined,\n    userData: {},\n\n    source: '',\n    modules: [],\n    defines: {},\n\n    bindings: undefined!,\n    shaderInputs: undefined!,\n\n    pipelineFactory: undefined!,\n    shaderFactory: undefined!,\n    shaderAssembler: ShaderAssembler.getDefaultShaderAssembler(),\n\n    debugShaders: undefined!\n  };\n\n  readonly device: Device;\n  readonly id: string;\n\n  readonly pipelineFactory: PipelineFactory;\n  readonly shaderFactory: ShaderFactory;\n\n  userData: {[key: string]: any} = {};\n\n  /** Bindings (textures, samplers, uniform buffers) */\n  bindings: Record<string, Binding> = {};\n\n  /** The underlying GPU pipeline. */\n  pipeline: ComputePipeline;\n  /** Assembled compute shader source */\n  source: string;\n  /** the underlying compiled compute shader */\n  // @ts-ignore Set in function called from constructor\n  shader: Shader;\n\n  /** ShaderInputs instance */\n  shaderInputs: ShaderInputs;\n\n  // @ts-ignore Set in function called from constructor\n  _uniformStore: UniformStore;\n\n  _pipelineNeedsUpdate: string | false = 'newly created';\n\n  private _getModuleUniforms: (props?: Record<string, Record<string, any>>) => Record<string, any>;\n  private props: Required<ComputationProps>;\n\n  private _destroyed = false;\n\n  constructor(device: Device, props: ComputationProps) {\n    if (device.type !== 'webgpu') {\n      throw new Error('Computation is only supported in WebGPU');\n    }\n\n    this.props = {...Computation.defaultProps, ...props};\n    props = this.props;\n    this.id = props.id || uid('model');\n    this.device = device;\n\n    Object.assign(this.userData, props.userData);\n\n    // Setup shader module inputs\n    const moduleMap = Object.fromEntries(\n      this.props.modules?.map(module => [module.name, module]) || []\n    );\n    // @ts-ignore TODO - fix up typing?\n    this.shaderInputs = props.shaderInputs || new ShaderInputs(moduleMap);\n    this.setShaderInputs(this.shaderInputs);\n\n    // Support WGSL shader layout introspection\n    // TODO - Don't modify props!!\n    this.props.shaderLayout ||= getShaderLayoutFromWGSL(this.props.source);\n\n    // Setup shader assembler\n    const platformInfo = getPlatformInfo(device);\n\n    // Extract modules from shader inputs if not supplied\n    const modules =\n      (this.props.modules?.length > 0 ? this.props.modules : this.shaderInputs?.getModules()) || [];\n\n    this.pipelineFactory =\n      props.pipelineFactory || PipelineFactory.getDefaultPipelineFactory(this.device);\n    this.shaderFactory = props.shaderFactory || ShaderFactory.getDefaultShaderFactory(this.device);\n\n    const {source, getUniforms} = this.props.shaderAssembler.assembleWGSLShader({\n      platformInfo,\n      ...this.props,\n      modules\n    });\n\n    this.source = source;\n    // @ts-ignore\n    this._getModuleUniforms = getUniforms;\n\n    // Create the pipeline\n    // @note order is important\n    this.pipeline = this._updatePipeline();\n\n    // Apply any dynamic settings that will not trigger pipeline change\n    if (props.bindings) {\n      this.setBindings(props.bindings);\n    }\n\n    // Catch any access to non-standard props\n    Object.seal(this);\n  }\n\n  destroy(): void {\n    if (this._destroyed) return;\n    this.pipelineFactory.release(this.pipeline);\n    this.shaderFactory.release(this.shader);\n    this._uniformStore.destroy();\n    this._destroyed = true;\n  }\n\n  // Draw call\n\n  predraw() {\n    // Update uniform buffers if needed\n    this.updateShaderInputs();\n  }\n\n  dispatch(computePass: ComputePass, x: number, y?: number, z?: number): void {\n    try {\n      this._logDrawCallStart();\n\n      // Check if the pipeline is invalidated\n      // TODO - this is likely the worst place to do this from performance perspective. Perhaps add a predraw()?\n      this.pipeline = this._updatePipeline();\n\n      // Set pipeline state, we may be sharing a pipeline so we need to set all state on every draw\n      // Any caching needs to be done inside the pipeline functions\n      this.pipeline.setBindings(this.bindings);\n      computePass.setPipeline(this.pipeline);\n      // @ts-expect-error\n      computePass.setBindings([]);\n\n      computePass.dispatch(x, y, z);\n    } finally {\n      this._logDrawCallEnd();\n    }\n  }\n\n  // Update fixed fields (can trigger pipeline rebuild)\n\n  // Update dynamic fields\n\n  /**\n   * Updates the vertex count (used in draw calls)\n   * @note Any attributes with stepMode=vertex need to be at least this big\n   */\n  setVertexCount(vertexCount: number): void {\n    // this.vertexCount = vertexCount;\n  }\n\n  /**\n   * Updates the instance count (used in draw calls)\n   * @note Any attributes with stepMode=instance need to be at least this big\n   */\n  setInstanceCount(instanceCount: number): void {\n    // this.instanceCount = instanceCount;\n  }\n\n  setShaderInputs(shaderInputs: ShaderInputs): void {\n    this.shaderInputs = shaderInputs;\n    this._uniformStore = new UniformStore(this.shaderInputs.modules);\n    // Create uniform buffer bindings for all modules\n    for (const moduleName of Object.keys(this.shaderInputs.modules)) {\n      const uniformBuffer = this._uniformStore.getManagedUniformBuffer(this.device, moduleName);\n      this.bindings[`${moduleName}Uniforms`] = uniformBuffer;\n    }\n  }\n\n  /**\n   * Updates shader module settings (which results in uniforms being set)\n   */\n  setShaderModuleProps(props: Record<string, any>): void {\n    const uniforms = this._getModuleUniforms(props);\n\n    // Extract textures & framebuffers set by the modules\n    // TODO better way to extract bindings\n    const keys = Object.keys(uniforms).filter(k => {\n      const uniform = uniforms[k];\n      return (\n        !isNumericArray(uniform) && typeof uniform !== 'number' && typeof uniform !== 'boolean'\n      );\n    });\n    const bindings: Record<string, Binding> = {};\n    for (const k of keys) {\n      bindings[k] = uniforms[k];\n      delete uniforms[k];\n    }\n  }\n\n  updateShaderInputs(): void {\n    this._uniformStore.setUniforms(this.shaderInputs.getUniformValues());\n  }\n\n  /**\n   * Sets bindings (textures, samplers, uniform buffers)\n   */\n  setBindings(bindings: Record<string, Binding>): void {\n    Object.assign(this.bindings, bindings);\n  }\n\n  _setPipelineNeedsUpdate(reason: string): void {\n    this._pipelineNeedsUpdate = this._pipelineNeedsUpdate || reason;\n  }\n\n  _updatePipeline(): ComputePipeline {\n    if (this._pipelineNeedsUpdate) {\n      let prevShader: Shader | null = null;\n      if (this.pipeline) {\n        log.log(\n          1,\n          `Model ${this.id}: Recreating pipeline because \"${this._pipelineNeedsUpdate}\".`\n        )();\n        prevShader = this.shader;\n      }\n\n      this._pipelineNeedsUpdate = false;\n\n      this.shader = this.shaderFactory.createShader({\n        id: `${this.id}-fragment`,\n        stage: 'compute',\n        source: this.source,\n        debugShaders: this.props.debugShaders\n      });\n\n      this.pipeline = this.pipelineFactory.createComputePipeline({\n        ...this.props,\n        shader: this.shader\n      });\n\n      if (prevShader) {\n        this.shaderFactory.release(prevShader);\n      }\n    }\n    return this.pipeline;\n  }\n\n  /** Throttle draw call logging */\n  _lastLogTime = 0;\n  _logOpen = false;\n\n  _logDrawCallStart(): void {\n    // IF level is 4 or higher, log every frame.\n    const logDrawTimeout = log.level > 3 ? 0 : LOG_DRAW_TIMEOUT;\n    if (log.level < 2 || Date.now() - this._lastLogTime < logDrawTimeout) {\n      return;\n    }\n\n    this._lastLogTime = Date.now();\n    this._logOpen = true;\n\n    log.group(LOG_DRAW_PRIORITY, `>>> DRAWING MODEL ${this.id}`, {collapsed: log.level <= 2})();\n  }\n\n  _logDrawCallEnd(): void {\n    if (this._logOpen) {\n      // const shaderLayoutTable = getDebugTableForShaderLayout(this.pipeline.props.shaderLayout, this.id);\n\n      // log.table(logLevel, attributeTable)();\n      // log.table(logLevel, uniformTable)();\n      // log.table(LOG_DRAW_PRIORITY, shaderLayoutTable)();\n\n      const uniformTable = this.shaderInputs.getDebugTable();\n      log.table(LOG_DRAW_PRIORITY, uniformTable)();\n\n      log.groupEnd(LOG_DRAW_PRIORITY)();\n      this._logOpen = false;\n    }\n  }\n\n  protected _drawCount = 0;\n\n  // TODO - fix typing of luma data types\n  _getBufferOrConstantValues(attribute: Buffer | TypedArray, dataType: any): string {\n    const TypedArrayConstructor = getTypedArrayFromDataType(dataType);\n    const typedArray =\n      attribute instanceof Buffer ? new TypedArrayConstructor(attribute.debugData) : attribute;\n    return typedArray.toString();\n  }\n}\n\n/** Create a shadertools platform info from the Device */\nexport function getPlatformInfo(device: Device): PlatformInfo {\n  return {\n    type: device.type,\n    shaderLanguage: device.info.shadingLanguage,\n    shaderLanguageVersion: device.info.shadingLanguageVersion as 100 | 300,\n    gpu: device.info.gpu,\n    // HACK - we pretend that the DeviceFeatures is a Set, it has a similar API\n    features: device.features as unknown as Set<DeviceFeature>\n  };\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {NumberArray4} from '@math.gl/types';\nimport type {ShaderModule} from '@luma.gl/shadertools';\n\n/** Default color for auto highlight, a cyan color */\nconst DEFAULT_HIGHLIGHT_COLOR: NumberArray4 = [0, 1, 1, 1];\n\nexport const INVALID_INDEX = -1;\n\n/**\n * Props for the picking module, which depending on mode renders picking colors or highlighted item.\n * When active, renders picking colors, assumed to be rendered to off-screen \"picking\" buffer.\n * When inactive, renders normal colors, with the exception of selected object which is rendered with highlight\n * can distinguish between 2^32 different objects in each of 2^32 different batches.\n */\nexport type PickingProps = {\n  /** Are we picking? I.e. rendering picking colors? */\n  isActive?: boolean;\n  /** Whether to use instance_index (built-in) or a custom application supplied index (usually from an attribute) */\n  indexMode?: 'instance' | 'custom';\n  /** Batch index (used when rendering multiple models to identify which model was picked), defaults to 0 */\n  batchIndex?: number;\n\n  /** Index of the highlighted batch, defaults to 0 */\n  highlightedBatchIndex?: number | null;\n  /** Set an index to highlight that item, or `null` to explicitly clear **/\n  highlightedObjectIndex?: number | null;\n  /** Color of visual highlight of \"selected\" item () */\n  highlightColor?: NumberArray4;\n};\n\n/**\n * Uniforms for the picking module, which renders picking colors and highlighted item.\n * When active, renders picking colors, assumed to be rendered to off-screen \"picking\" buffer.\n * When inactive, renders normal colors, with the exception of selected object which is rendered with highlight\n */\nexport type PickingUniforms = {\n  /**\n   * When true, renders picking colors. Set when rendering to off-screen \"picking\" buffer.\n   * When false, renders normal colors, with the exception of selected object which is rendered with highlight\n   */\n  isActive: boolean;\n  /** Set to true when picking an attribute value instead of object index */\n  indexMode: 0 | 1;\n  /** Index of batch currently being rendered */\n  batchIndex: number;\n\n  /** Do we have a highlighted item? */\n  isHighlightActive: boolean;\n  /** Color of visual highlight of \"selected\" item. Note: RGBA components must in the range 0-1 */\n  highlightColor: NumberArray4;\n  /** Indicates which batch to visually highlight an item in (defaults to 0) */\n  highlightedBatchIndex: number;\n  /** Indicates which index in the batch to highlight an item in */\n  highlightedObjectIndex: number;\n};\n\nexport type PickingBindings = {};\n\n// GLSL_UNIFORMS\n\nconst uniformTypes: Required<ShaderModule<PickingProps, PickingUniforms>>['uniformTypes'] = {\n  isActive: 'i32',\n  indexMode: 'i32',\n  batchIndex: 'i32',\n\n  isHighlightActive: 'i32',\n  highlightedBatchIndex: 'i32',\n  highlightedObjectIndex: 'i32',\n  highlightColor: 'vec4<f32>'\n};\n\nexport const GLSL_UNIFORMS = /* glsl */ `\\\nprecision highp float;\nprecision highp int;\n\nuniform pickingUniforms {\n  int isActive;\n  int indexMode;\n  int batchIndex;\n\n  int isHighlightActive;\n  int highlightedBatchIndex;\n  int highlightedObjectIndex;\n  vec4 highlightColor;\n} picking;\n`;\n\nexport const WGSL_UNIFORMS = /* wgsl */ `\\\nstruct pickingUniforms {\n  isActive: int32;\n  indexMode: int32;\n  batchIndex: int32;\n\n  isHighlightActive: int32;\n  highlightedBatchIndex: int32;\n  highlightedObjectIndex: int32;\n  highlightColor: vec4<f32>;\n} picking;\n`;\n\nfunction getUniforms(props: PickingProps = {}, prevUniforms?: PickingUniforms): PickingUniforms {\n  const uniforms = {...prevUniforms} as PickingUniforms;\n\n  // picking\n  if (props.isActive !== undefined) {\n    uniforms.isActive = Boolean(props.isActive);\n  }\n\n  switch (props.indexMode) {\n    case 'instance':\n      uniforms.indexMode = 0;\n      break;\n    case 'custom':\n      uniforms.indexMode = 1;\n      break;\n    case undefined:\n      // no change\n      break;\n  }\n\n  switch (props.highlightedObjectIndex) {\n    case undefined:\n      // Unless highlightedObjectColor explicitly null or set, do not update state\n      break;\n    case null:\n      // Clear highlight\n      uniforms.isHighlightActive = false;\n      uniforms.highlightedObjectIndex = INVALID_INDEX;\n      break;\n    default:\n      uniforms.isHighlightActive = true;\n      uniforms.highlightedObjectIndex = props.highlightedObjectIndex;\n  }\n\n  if (typeof props.highlightedBatchIndex === 'number') {\n    uniforms.highlightedBatchIndex = props.highlightedBatchIndex;\n  }\n\n  if (props.highlightColor) {\n    uniforms.highlightColor = props.highlightColor;\n  }\n\n  return uniforms;\n}\n\n/**\n * Provides support for color-based picking and highlighting.\n *\n * In particular, supports picking a specific instance in an instanced\n * draw call and highlighting an instance based on its picking color,\n * and correspondingly, supports picking and highlighting groups of\n * primitives with the same picking color in non-instanced draw-calls\n *\n * @note Color based picking has the significant advantage in that it can be added to any\n * existing shader without requiring any additional picking logic.\n */\nexport const pickingUniforms = {\n  props: {} as PickingProps,\n  uniforms: {} as PickingUniforms,\n\n  name: 'picking',\n\n  uniformTypes,\n  defaultUniforms: {\n    isActive: false,\n    indexMode: 0,\n    batchIndex: 0,\n    isHighlightActive: true,\n    highlightedBatchIndex: INVALID_INDEX,\n    highlightedObjectIndex: INVALID_INDEX,\n    highlightColor: DEFAULT_HIGHLIGHT_COLOR\n  },\n\n  getUniforms\n} as const satisfies ShaderModule<PickingProps, PickingUniforms, PickingBindings>;\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {ShaderModule} from '@luma.gl/shadertools';\n\nimport type {PickingBindings, PickingProps, PickingUniforms} from './picking-uniforms';\nimport {pickingUniforms, GLSL_UNIFORMS, WGSL_UNIFORMS, INVALID_INDEX} from './picking-uniforms';\n\n// SHADERS\n\nconst source = /* wgsl */ `\\\n${WGSL_UNIFORMS}\n\nconst INDEX_PICKING_MODE_INSTANCE = 0;\nconst INDEX_PICKING_MODE_CUSTOM = 1;\nconst INDEX_PICKING_INVALID_INDEX = ${INVALID_INDEX}; // 2^32 - 1\n\nstruct indexPickingFragmentInputs = {\n  objectIndex: int32;\n};\n\nlet indexPickingFragmentInputs: indexPickingFragmentInputs;\n\n/**\n * Vertex shaders should call this function to set the object index.\n * If using instance or vertex mode, argument will be ignored, 0 can be supplied.\n */\nfn picking_setObjectIndex(objectIndex: int32) {\n  switch (picking.indexMode) {\n    case INDEX_PICKING_MODE_INSTANCE, default: {\n      picking_objectIndex = instance_index;\n    };\n    case INDEX_PICKING_MODE_CUSTOM: {\n      picking_objectIndex = objectIndex;\n    };\n  }\n}\n\n`;\n\nconst vs = /* glsl */ `\\\n${GLSL_UNIFORMS}\n\nconst int INDEX_PICKING_MODE_INSTANCE = 0;\nconst int INDEX_PICKING_MODE_CUSTOM = 1;\n\nconst int INDEX_PICKING_INVALID_INDEX = ${INVALID_INDEX}; // 2^32 - 1\n\nflat out int picking_objectIndex;\n\n/**\n * Vertex shaders should call this function to set the object index.\n * If using instance or vertex mode, argument will be ignored, 0 can be supplied.\n */\nvoid picking_setObjectIndex(int objectIndex) {\n  switch (picking.indexMode) {\n    case INDEX_PICKING_MODE_INSTANCE:\n      picking_objectIndex = gl_InstanceID;\n      break;\n    case INDEX_PICKING_MODE_CUSTOM:\n      picking_objectIndex = objectIndex;\n      break;\n  }\n}\n`;\n\nconst fs = /* glsl */ `\\\n${GLSL_UNIFORMS}\n\nconst int INDEX_PICKING_INVALID_INDEX = ${INVALID_INDEX}; // 2^32 - 1\n\nflat in int picking_objectIndex;\n\n/**\n * Check if this vertex is highlighted (part of the selected batch and object)\n */ \nbool picking_isFragmentHighlighted() {\n  return \n    bool(picking.isHighlightActive) &&\n    picking.highlightedBatchIndex == picking.batchIndex &&\n    picking.highlightedObjectIndex == picking_objectIndex\n    ;\n}\n\n/**\n * Returns highlight color if this item is selected.\n */\nvec4 picking_filterHighlightColor(vec4 color) {\n  // If we are still picking, we don't highlight\n  if (bool(picking.isActive)) {\n    return color;\n  }\n\n  // If we are not highlighted, return color as is\n  if (!picking_isFragmentHighlighted()) {\n    return color;\n  }\n   \n  // Blend in highlight color based on its alpha value\n  float highLightAlpha = picking.highlightColor.a;\n  float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);\n  float highLightRatio = highLightAlpha / blendedAlpha;\n\n  vec3 blendedRGB = mix(color.rgb, picking.highlightColor.rgb, highLightRatio);\n  return vec4(blendedRGB, blendedAlpha);\n}\n\n/*\n * Returns picking color if picking enabled else unmodified argument.\n */\nivec4 picking_getPickingColor() {\n  // Assumes that colorAttachment0 is rg32int\n  // TODO? - we could render indices into a second color attachment and not mess with fragColor\n  return ivec4(picking_objectIndex, picking.batchIndex, 0u, 0u);  \n}\n\nvec4 picking_filterPickingColor(vec4 color) {\n  if (bool(picking.isActive)) {\n    if (picking_objectIndex == INDEX_PICKING_INVALID_INDEX) {\n      discard;\n    }\n  }\n  return color;\n}\n\n/*\n * Returns picking color if picking is enabled if not\n * highlight color if this item is selected, otherwise unmodified argument.\n */\nvec4 picking_filterColor(vec4 color) {\n  vec4 outColor = color;\n  outColor = picking_filterHighlightColor(outColor);\n  outColor = picking_filterPickingColor(outColor);\n  return outColor;\n}\n`;\n\n/**\n * Provides support for color-based picking and highlighting.\n *\n * In particular, supports picking a specific instance in an instanced\n * draw call and highlighting an instance based on its picking color,\n * and correspondingly, supports picking and highlighting groups of\n * primitives with the same picking color in non-instanced draw-calls\n *\n * @note Color based picking has the significant advantage in that it can be added to any\n * existing shader without requiring any additional picking logic.\n */\nexport const picking = {\n  ...pickingUniforms,\n  name: 'picking',\n  source,\n  vs,\n  fs\n} as const satisfies ShaderModule<PickingProps, PickingUniforms, PickingBindings>;\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {ShaderModule} from '@luma.gl/shadertools';\n\nimport type {PickingProps, PickingUniforms, PickingBindings} from './picking-uniforms';\nimport {pickingUniforms, GLSL_UNIFORMS, WGSL_UNIFORMS} from './picking-uniforms';\n\nconst source = /* wgsl */ `\\\n${WGSL_UNIFORMS}\n`;\n\nconst vs = /* glsl */ `\\\n${GLSL_UNIFORMS}\nout vec4 picking_vRGBcolor_Avalid;\n\n// Normalize unsigned byte color to 0-1 range\nvec3 picking_normalizeColor(vec3 color) {\n  return picking.useFloatColors > 0.5 ? color : color / 255.0;\n}\n\n// Normalize unsigned byte color to 0-1 range\nvec4 picking_normalizeColor(vec4 color) {\n  return picking.useFloatColors > 0.5 ? color : color / 255.0;\n}\n\nbool picking_isColorZero(vec3 color) {\n  return dot(color, vec3(1.0)) < 0.00001;\n}\n\nbool picking_isColorValid(vec3 color) {\n  return dot(color, vec3(1.0)) > 0.00001;\n}\n\n// Check if this vertex is highlighted \nbool isVertexHighlighted(vec3 vertexColor) {\n  vec3 highlightedObjectColor = picking_normalizeColor(picking.highlightedObjectColor);\n  return\n    bool(picking.isHighlightActive) && picking_isColorZero(abs(vertexColor - highlightedObjectColor));\n}\n\n// Set the current picking color\nvoid picking_setPickingColor(vec3 pickingColor) {\n  pickingColor = picking_normalizeColor(pickingColor);\n\n  if (bool(picking.isActive)) {\n    // Use alpha as the validity flag. If pickingColor is [0, 0, 0] fragment is non-pickable\n    picking_vRGBcolor_Avalid.a = float(picking_isColorValid(pickingColor));\n\n    if (!bool(picking.isAttribute)) {\n      // Stores the picking color so that the fragment shader can render it during picking\n      picking_vRGBcolor_Avalid.rgb = pickingColor;\n    }\n  } else {\n    // Do the comparison with selected item color in vertex shader as it should mean fewer compares\n    picking_vRGBcolor_Avalid.a = float(isVertexHighlighted(pickingColor));\n  }\n}\n\nvoid picking_setObjectIndex(uint objectIndex) {\n  if (bool(picking.isActive)) {\n    uint index = objectIndex;\n    if (picking.indexMode == PICKING_INDEX_MODE_INSTANCE) {\n      index = uint(gl_InstanceID);\n    }\n    picking_vRGBcolor_Avalid.r = float(index % 255) / 255.0;\n    picking_vRGBcolor_Avalid.g = float((index / 255) % 255) / 255.0;\n    picking_vRGBcolor_Avalid.b = float((index / 255 / 255) %255) / 255.0;\n  }\n}\n\nvoid picking_setPickingAttribute(float value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.r = value;\n  }\n}\n\nvoid picking_setPickingAttribute(vec2 value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.rg = value;\n  }\n}\n\nvoid picking_setPickingAttribute(vec3 value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.rgb = value;\n  }\n}\n`;\n\nconst fs = /* glsl */ `\\\n${GLSL_UNIFORMS}\n\nin vec4 picking_vRGBcolor_Avalid;\n\n/*\n * Returns highlight color if this item is selected.\n */\nvec4 picking_filterHighlightColor(vec4 color) {\n  // If we are still picking, we don't highlight\n  if (picking.isActive > 0.5) {\n    return color;\n  }\n\n  bool selected = bool(picking_vRGBcolor_Avalid.a);\n\n  if (selected) {\n    // Blend in highlight color based on its alpha value\n    float highLightAlpha = picking.highlightColor.a;\n    float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);\n    float highLightRatio = highLightAlpha / blendedAlpha;\n\n    vec3 blendedRGB = mix(color.rgb, picking.highlightColor.rgb, highLightRatio);\n    return vec4(blendedRGB, blendedAlpha);\n  } else {\n    return color;\n  }\n}\n\n/*\n * Returns picking color if picking enabled else unmodified argument.\n */\nvec4 picking_filterPickingColor(vec4 color) {\n  if (bool(picking.isActive)) {\n    if (picking_vRGBcolor_Avalid.a == 0.0) {\n      discard;\n    }\n    return picking_vRGBcolor_Avalid;\n  }\n  return color;\n}\n\n/*\n * Returns picking color if picking is enabled if not\n * highlight color if this item is selected, otherwise unmodified argument.\n */\nvec4 picking_filterColor(vec4 color) {\n  vec4 highlightColor = picking_filterHighlightColor(color);\n  return picking_filterPickingColor(highlightColor);\n}\n`;\n\n/**\n * Provides support for color-coding-based picking and highlighting.\n * In particular, supports picking a specific instance in an instanced\n * draw call and highlighting an instance based on its picking color,\n * and correspondingly, supports picking and highlighting groups of\n * primitives with the same picking color in non-instanced draw-calls\n */\nexport const picking = {\n  ...pickingUniforms,\n  name: 'picking',\n  source,\n  vs,\n  fs\n} as const satisfies ShaderModule<PickingProps, PickingUniforms, PickingBindings>;\n\n// function getUniforms(opts: PickingProps = {}, prevUniforms?: PickingUniforms): PickingUniforms {\n//   const uniforms = {} as PickingUniforms;\n\n//   if (opts.highlightedObjectColor === undefined) {\n//     // Unless highlightedObjectColor explicitly null or set, do not update state\n//   } else if (opts.highlightedObjectColor === null) {\n//     uniforms.isHighlightActive = false;\n//   } else {\n//     uniforms.isHighlightActive = true;\n//     const highlightedObjectColor = opts.highlightedObjectColor.slice(0, 3);\n//     uniforms.highlightedObjectColor = highlightedObjectColor;\n//   }\n\n//   if (opts.highlightColor) {\n//     const color = Array.from(opts.highlightColor, x => x / 255);\n//     if (!Number.isFinite(color[3])) {\n//       color[3] = 1;\n//     }\n//     uniforms.highlightColor = color;\n//   }\n\n//   if (opts.isActive !== undefined) {\n//     uniforms.isActive = Boolean(opts.isActive);\n//     uniforms.isAttribute = Boolean(opts.isAttribute);\n//   }\n\n//   if (opts.useFloatColors !== undefined) {\n//     uniforms.useFloatColors = Boolean(opts.useFloatColors);\n//   }\n\n//   return uniforms;\n// }\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport LayersPass, {LayersPassRenderOptions, RenderStats, Rect} from './layers-pass';\nimport type {Framebuffer, Parameters, RenderPipelineParameters} from '@luma.gl/core';\nimport log from '../utils/log';\n\nimport type {Effect} from '../lib/effect';\nimport type Viewport from '../viewports/viewport';\nimport type Layer from '../lib/layer';\n\nconst PICKING_BLENDING: RenderPipelineParameters = {\n  blendColorOperation: 'add',\n  blendColorSrcFactor: 'one',\n  blendColorDstFactor: 'zero',\n  blendAlphaOperation: 'add',\n  blendAlphaSrcFactor: 'constant-alpha',\n  blendAlphaDstFactor: 'zero'\n};\n\ntype PickLayersPassRenderOptions = LayersPassRenderOptions & {\n  pickingFBO: Framebuffer;\n  deviceRect: Rect;\n  pickZ: boolean;\n};\n\ntype EncodedPickingColors = {\n  a: number;\n  layer: Layer;\n  viewports: Viewport[];\n};\n\nexport type PickingColorDecoder = (pickedColor: number[] | Uint8Array) =>\n  | {\n      pickedLayer: Layer;\n      pickedViewports: Viewport[];\n      pickedObjectIndex: number;\n    }\n  | undefined;\n\nexport default class PickLayersPass extends LayersPass {\n  private pickZ?: boolean;\n  private _colorEncoderState: {\n    byLayer: Map<Layer, EncodedPickingColors>;\n    byAlpha: EncodedPickingColors[];\n  } | null = null;\n\n  render(props: LayersPassRenderOptions | PickLayersPassRenderOptions) {\n    if ('pickingFBO' in props) {\n      // When drawing into an off-screen buffer, use the alpha channel to encode layer index\n      return this._drawPickingBuffer(props);\n    }\n    // When drawing to screen (debug mode), do not use the alpha channel so that result is always visible\n    return super.render(props);\n  }\n\n  // Private\n  // Draws list of layers and viewports into the picking buffer\n  // Note: does not sample the buffer, that has to be done by the caller\n  _drawPickingBuffer({\n    layers,\n    layerFilter,\n    views,\n    viewports,\n    onViewportActive,\n    pickingFBO,\n    deviceRect: {x, y, width, height},\n    cullRect,\n    effects,\n    pass = 'picking',\n    pickZ,\n    shaderModuleProps\n  }: PickLayersPassRenderOptions): {\n    decodePickingColor: PickingColorDecoder | null;\n    stats: RenderStats;\n  } {\n    this.pickZ = pickZ;\n    const colorEncoderState = this._resetColorEncoder(pickZ);\n    const scissorRect = [x, y, width, height];\n\n    // Make sure we clear scissor test and fbo bindings in case of exceptions\n    // We are only interested in one pixel, no need to render anything else\n    // Note that the callback here is called synchronously.\n    // Set blend mode for picking\n    // always overwrite existing pixel with [r,g,b,layerIndex]\n    const renderStatus = super.render({\n      target: pickingFBO,\n      layers,\n      layerFilter,\n      views,\n      viewports,\n      onViewportActive,\n      cullRect,\n      effects: effects?.filter(e => e.useInPicking),\n      pass,\n      isPicking: true,\n      shaderModuleProps,\n      clearColor: [0, 0, 0, 0],\n      colorMask: 0xf,\n      scissorRect\n    });\n\n    // Clear the temp field\n    this._colorEncoderState = null;\n    const decodePickingColor = colorEncoderState && decodeColor.bind(null, colorEncoderState);\n    return {decodePickingColor, stats: renderStatus};\n  }\n\n  shouldDrawLayer(layer: Layer): boolean {\n    const {pickable, operation} = layer.props;\n    return (\n      (pickable && operation.includes('draw')) ||\n      operation.includes('terrain') ||\n      operation.includes('mask')\n    );\n  }\n\n  protected getShaderModuleProps(\n    layer: Layer,\n    effects: Effect[] | undefined,\n    otherShaderModuleProps: Record<string, any>\n  ): any {\n    return {\n      picking: {\n        isActive: 1,\n        isAttribute: this.pickZ\n      },\n      lighting: {enabled: false}\n    };\n  }\n\n  protected getLayerParameters(layer: Layer, layerIndex: number, viewport: Viewport): Parameters {\n    // TODO use Parameters type\n    const pickParameters: any = {\n      ...layer.props.parameters\n    };\n    const {pickable, operation} = layer.props;\n\n    if (!this._colorEncoderState || operation.includes('terrain')) {\n      pickParameters.blend = false;\n    } else if (pickable && operation.includes('draw')) {\n      Object.assign(pickParameters, PICKING_BLENDING);\n      pickParameters.blend = true;\n      // TODO: blendColor no longer part of luma.gl API\n      pickParameters.blendColor = encodeColor(this._colorEncoderState, layer, viewport);\n    }\n\n    return pickParameters;\n  }\n\n  protected _resetColorEncoder(pickZ: boolean) {\n    // Track encoded layer indices\n    this._colorEncoderState = pickZ\n      ? null\n      : {\n          byLayer: new Map<Layer, EncodedPickingColors>(),\n          byAlpha: []\n        };\n    // Temporarily store it on the instance so that it can be accessed by this.getLayerParameters\n    return this._colorEncoderState;\n  }\n}\n\n// Assign an unique alpha value for each pickable layer and track the encoding in the cache object\n// Returns normalized blend color\nfunction encodeColor(\n  encoded: {\n    byLayer: Map<Layer, EncodedPickingColors>;\n    byAlpha: EncodedPickingColors[];\n  },\n  layer: Layer,\n  viewport: Viewport\n): number[] {\n  const {byLayer, byAlpha} = encoded;\n  let a;\n\n  // Encode layerIndex in the alpha channel\n  // TODO - combine small layers to better utilize the picking color space\n  let entry = byLayer.get(layer);\n  if (entry) {\n    entry.viewports.push(viewport);\n    a = entry.a;\n  } else {\n    a = byLayer.size + 1;\n    if (a <= 255) {\n      entry = {a, layer, viewports: [viewport]};\n      byLayer.set(layer, entry);\n      byAlpha[a] = entry;\n    } else {\n      log.warn('Too many pickable layers, only picking the first 255')();\n      a = 0;\n    }\n  }\n  return [0, 0, 0, a / 255];\n}\n\n// Given a picked color, retrieve the corresponding layer and viewports from cache\nfunction decodeColor(\n  encoded: {\n    byLayer: Map<Layer, EncodedPickingColors>;\n    byAlpha: EncodedPickingColors[];\n  },\n  pickedColor: number[] | Uint8Array\n):\n  | {\n      pickedLayer: Layer;\n      pickedViewports: Viewport[];\n      pickedObjectIndex: number;\n    }\n  | undefined {\n  const entry = encoded.byAlpha[pickedColor[3]];\n  return (\n    entry && {\n      pickedLayer: entry.layer,\n      pickedViewports: entry.viewports,\n      pickedObjectIndex: entry.layer.decodePickingColor(pickedColor)\n    }\n  );\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nexport const LIFECYCLE = {\n  NO_STATE: 'Awaiting state',\n  MATCHED: 'Matched. State transferred from previous layer',\n  INITIALIZED: 'Initialized',\n  AWAITING_GC: 'Discarded. Awaiting garbage collection',\n  AWAITING_FINALIZATION: 'No longer matched. Awaiting garbage collection',\n  FINALIZED: 'Finalized! Awaiting garbage collection'\n} as const;\n\nexport type Lifecycle = (typeof LIFECYCLE)[keyof typeof LIFECYCLE];\n\n/* Secret props keys */\n// Symbols are non-enumerable by default, does not show in for...in or Object.keys\n// but are copied with Object.assign ¯\\_(ツ)_/¯\n// Supported everywhere except IE11, can be polyfilled with core-js\nexport const COMPONENT_SYMBOL: unique symbol = Symbol.for('component');\nexport const PROP_TYPES_SYMBOL: unique symbol = Symbol.for('propTypes');\nexport const DEPRECATED_PROPS_SYMBOL: unique symbol = Symbol.for('deprecatedProps');\nexport const ASYNC_DEFAULTS_SYMBOL: unique symbol = Symbol.for('asyncPropDefaults');\nexport const ASYNC_ORIGINAL_SYMBOL: unique symbol = Symbol.for('asyncPropOriginal');\nexport const ASYNC_RESOLVED_SYMBOL: unique symbol = Symbol.for('asyncPropResolved');\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\ntype NestedArray<T> = (T | NestedArray<T>)[];\n\n/**\n * Flattens a nested array into a single level array,\n * or a single value into an array with one value\n * @example flatten([[1, [2]], [3], 4]) => [1, 2, 3, 4]\n * @example flatten(1) => [1]\n * @param array The array to flatten.\n * @param filter= - Optional predicate called on each `value` to\n *   determine if it should be included (pushed onto) the resulting array.\n * @return Returns the new flattened array (new array or `result` if provided)\n */\nexport function flatten<T>(\n  array: T | NestedArray<T>,\n  filter: (element: T) => boolean = () => true\n): T[] {\n  // Wrap single object in array\n  if (!Array.isArray(array)) {\n    return filter(array) ? [array] : [];\n  }\n  // Deep flatten and filter the array\n  return flattenArray(array, filter, []);\n}\n\n/** Deep flattens an array. Helper to `flatten`, see its parameters */\nfunction flattenArray<T>(array: NestedArray<T>, filter: (element: T) => boolean, result: T[]): T[] {\n  let index = -1;\n  while (++index < array.length) {\n    const value = array[index];\n    if (Array.isArray(value)) {\n      flattenArray(value, filter, result);\n    } else if (filter(value)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/** Uses copyWithin to significantly speed up typed array value filling */\nexport function fillArray({target, source, start = 0, count = 1}) {\n  const length = source.length;\n  const total = count * length;\n  let copied = 0;\n  for (let i = start; copied < length; copied++) {\n    target[i++] = source[copied];\n  }\n\n  while (copied < total) {\n    // If we have copied less than half, copy everything we got\n    // else copy remaining in one operation\n    if (copied < total - copied) {\n      target.copyWithin(start + copied, start, start + copied);\n      copied *= 2;\n    } else {\n      target.copyWithin(start + copied, start, start + total - copied);\n      copied = total;\n    }\n  }\n\n  return target;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {load} from '@loaders.gl/core';\n\nimport type {ResourceManagerContext} from './resource-manager';\n\nexport type ResourceSubscriber<T = any> = {\n  onChange: (data: T | Promise<T>) => void;\n};\n\nexport default class Resource<T = any> {\n  id: string;\n  context: ResourceManagerContext;\n  isLoaded!: boolean;\n  persistent?: boolean;\n\n  private _loadCount: number = 0;\n  private _subscribers = new Set<ResourceSubscriber<T>>();\n  private _data!: T | Promise<T> | string;\n  private _loader?: Promise<void>;\n  private _error?: Error;\n  private _content?: T;\n\n  constructor(id: string, data: T | Promise<T> | string, context: ResourceManagerContext) {\n    this.id = id;\n    this.context = context;\n\n    this.setData(data);\n  }\n\n  // consumer: {onChange: Function}\n  subscribe(consumer: ResourceSubscriber<T>): void {\n    this._subscribers.add(consumer);\n  }\n\n  unsubscribe(consumer: ResourceSubscriber<T>): void {\n    this._subscribers.delete(consumer);\n  }\n\n  inUse(): boolean {\n    return this._subscribers.size > 0;\n  }\n\n  delete(): void {\n    // Remove any resources created\n  }\n\n  getData(): T | Promise<T> {\n    return this.isLoaded\n      ? this._error\n        ? Promise.reject(this._error)\n        : this._content!\n      : this._loader!.then(() => this.getData());\n  }\n\n  setData(data: any, forceUpdate?: boolean) {\n    if (data === this._data && !forceUpdate) {\n      return;\n    }\n    this._data = data;\n    const loadCount = ++this._loadCount;\n\n    let loader = data;\n    if (typeof data === 'string') {\n      loader = load(data);\n    }\n    if (loader instanceof Promise) {\n      this.isLoaded = false;\n      this._loader = loader\n        .then(result => {\n          // check if source has changed\n          if (this._loadCount === loadCount) {\n            this.isLoaded = true;\n            this._error = undefined;\n            this._content = result;\n          }\n        })\n        .catch(error => {\n          if (this._loadCount === loadCount) {\n            this.isLoaded = true;\n            this._error = error || true;\n          }\n        });\n    } else {\n      this.isLoaded = true;\n      this._error = undefined;\n      this._content = data;\n    }\n\n    for (const subscriber of this._subscribers) {\n      subscriber.onChange(this.getData());\n    }\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* global setTimeout */\nimport {Device} from '@luma.gl/core';\nimport Resource from './resource';\nimport type {ResourceSubscriber} from './resource';\n\nexport type ResourceManagerContext = {\n  device: Device;\n  resourceManager: ResourceManager;\n  /** @deprecated */\n  gl: WebGL2RenderingContext;\n};\n\ntype Consumer = Record<string, ResourceSubscriber & {resourceId: string}>;\n\nexport default class ResourceManager {\n  protocol: string;\n\n  private _context: ResourceManagerContext;\n  private _resources: Record<string, Resource>;\n  private _consumers: Record<string, Consumer>;\n  private _pruneRequest: number | null;\n\n  constructor(props: {device: Device; protocol?: string}) {\n    this.protocol = props.protocol || 'resource://';\n\n    this._context = {\n      device: props.device,\n      // @ts-expect-error\n      gl: props.device?.gl,\n      resourceManager: this\n    };\n    this._resources = {};\n    this._consumers = {};\n\n    this._pruneRequest = null;\n  }\n\n  contains(resourceId: string): boolean {\n    if (resourceId.startsWith(this.protocol)) {\n      return true;\n    }\n    return resourceId in this._resources;\n  }\n\n  add({\n    resourceId,\n    data,\n    forceUpdate = false,\n    persistent = true\n  }: {\n    resourceId: string;\n    data: any;\n    forceUpdate?: boolean;\n    persistent?: boolean;\n  }) {\n    let res = this._resources[resourceId];\n\n    if (res) {\n      res.setData(data, forceUpdate);\n    } else {\n      res = new Resource(resourceId, data, this._context);\n      this._resources[resourceId] = res;\n    }\n    // persistent resources can only be removed by calling `remove`\n    // non-persistent resources may be released when there are no more consumers\n    res.persistent = persistent;\n  }\n\n  remove(resourceId: string): void {\n    const res = this._resources[resourceId];\n\n    if (res) {\n      res.delete();\n      delete this._resources[resourceId];\n    }\n  }\n\n  unsubscribe({consumerId}: {consumerId: string}): void {\n    const consumer = this._consumers[consumerId];\n    if (consumer) {\n      for (const requestId in consumer) {\n        const request = consumer[requestId];\n        const resource = this._resources[request.resourceId];\n        if (resource) {\n          resource.unsubscribe(request);\n        }\n      }\n      delete this._consumers[consumerId];\n      this.prune();\n    }\n  }\n\n  subscribe<T>({\n    resourceId,\n    onChange,\n    consumerId,\n    requestId = 'default'\n  }: {\n    resourceId: string;\n    onChange: (data: T | Promise<T>) => void;\n    consumerId: string;\n    requestId: string;\n  }): T | Promise<T> | undefined {\n    const {_resources: resources, protocol} = this;\n    if (resourceId.startsWith(protocol)) {\n      resourceId = resourceId.replace(protocol, '');\n      if (!resources[resourceId]) {\n        // Add placeholder. When this resource becomes available, the consumer will be notified.\n        this.add({resourceId, data: null, persistent: false});\n      }\n    }\n    const res: Resource<T> = resources[resourceId];\n    this._track(consumerId, requestId, res, onChange);\n    if (res) {\n      return res.getData();\n    }\n\n    return undefined;\n  }\n\n  prune(): void {\n    if (!this._pruneRequest) {\n      // prune() may be called multiple times in the same animation frame.\n      // Batch multiple requests together\n      // @ts-ignore setTimeout returns NodeJS.Timeout in node\n      this._pruneRequest = setTimeout(() => this._prune(), 0);\n    }\n  }\n\n  finalize(): void {\n    for (const key in this._resources) {\n      this._resources[key].delete();\n    }\n  }\n\n  private _track(\n    consumerId: string,\n    requestId: string,\n    resource: Resource,\n    onChange: (data: any) => void\n  ) {\n    const consumers = this._consumers;\n    const consumer = (consumers[consumerId] = consumers[consumerId] || {});\n    let request = consumer[requestId];\n\n    const oldResource = request && request.resourceId && this._resources[request.resourceId];\n    if (oldResource) {\n      oldResource.unsubscribe(request);\n      this.prune();\n    }\n    if (resource) {\n      if (request) {\n        request.onChange = onChange;\n        request.resourceId = resource.id;\n      } else {\n        request = {\n          onChange,\n          resourceId: resource.id\n        };\n      }\n      consumer[requestId] = request;\n      resource.subscribe(request);\n    }\n  }\n\n  private _prune(): void {\n    this._pruneRequest = null;\n\n    for (const key of Object.keys(this._resources)) {\n      const res = this._resources[key];\n      if (!res.persistent && !res.inUse()) {\n        res.delete();\n        delete this._resources[key];\n      }\n    }\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device, RenderPass} from '@luma.gl/core';\nimport {Timeline} from '@luma.gl/engine';\nimport type {ShaderAssembler, ShaderModule} from '@luma.gl/shadertools';\nimport {getShaderAssembler, layerUniforms} from '../shaderlib/index';\nimport {LIFECYCLE} from '../lifecycle/constants';\nimport log from '../utils/log';\nimport debug from '../debug/index';\nimport {flatten} from '../utils/flatten';\nimport {Stats} from '@probe.gl/stats';\nimport ResourceManager from './resource/resource-manager';\n\nimport Viewport from '../viewports/viewport';\n\nimport type Layer from './layer';\nimport type CompositeLayer from './composite-layer';\nimport type Deck from './deck';\n\nconst TRACE_SET_LAYERS = 'layerManager.setLayers';\nconst TRACE_ACTIVATE_VIEWPORT = 'layerManager.activateViewport';\n\nexport type LayerContext = {\n  layerManager: LayerManager;\n  resourceManager: ResourceManager;\n  deck?: Deck<any>;\n  device: Device;\n  shaderAssembler: ShaderAssembler;\n  defaultShaderModules: ShaderModule[];\n  renderPass: RenderPass;\n  stats: Stats;\n  viewport: Viewport;\n  timeline: Timeline;\n  mousePosition: {x: number; y: number} | null;\n  userData: any;\n  onError?: <PropsT extends {}>(error: Error, source: Layer<PropsT>) => void;\n  /** @deprecated Use context.device */\n  gl: WebGL2RenderingContext;\n};\n\nexport type LayersList = (Layer | undefined | false | null | LayersList)[];\n\nexport type LayerManagerProps = {\n  deck?: Deck<any>;\n  stats?: Stats;\n  viewport?: Viewport;\n  timeline?: Timeline;\n};\nexport default class LayerManager {\n  layers: Layer[];\n  context: LayerContext;\n  resourceManager: ResourceManager;\n\n  private _lastRenderedLayers: LayersList = [];\n  private _needsRedraw: string | false = false;\n  private _needsUpdate: string | false = false;\n  private _nextLayers: LayersList | null = null;\n  private _debug: boolean = false;\n  // This flag is separate from _needsUpdate because it can be set during an update and should trigger another full update\n  private _defaultShaderModulesChanged: boolean = false;\n\n  /**\n   * @param device\n   * @param param1\n   */\n  // eslint-disable-next-line\n  constructor(device: Device, props: LayerManagerProps) {\n    const {deck, stats, viewport, timeline} = props || {};\n\n    // Currently deck.gl expects the DeckGL.layers array to be different\n    // whenever React rerenders. If the same layers array is used, the\n    // LayerManager's diffing algorithm will generate a fatal error and\n    // break the rendering.\n\n    // `this._lastRenderedLayers` stores the UNFILTERED layers sent\n    // down to LayerManager, so that `layers` reference can be compared.\n    // If it's the same across two React render calls, the diffing logic\n    // will be skipped.\n    this.layers = [];\n    this.resourceManager = new ResourceManager({device, protocol: 'deck://'});\n\n    this.context = {\n      mousePosition: null,\n      userData: {},\n      layerManager: this,\n      device,\n      // @ts-expect-error\n      gl: device?.gl,\n      deck,\n      shaderAssembler: getShaderAssembler(device?.info?.shadingLanguage || 'glsl'),\n      defaultShaderModules: [layerUniforms],\n      renderPass: undefined!,\n      stats: stats || new Stats({id: 'deck.gl'}),\n      // Make sure context.viewport is not empty on the first layer initialization\n      viewport: viewport || new Viewport({id: 'DEFAULT-INITIAL-VIEWPORT'}), // Current viewport, exposed to layers for project* function\n      timeline: timeline || new Timeline(),\n      resourceManager: this.resourceManager,\n      onError: undefined\n    };\n\n    Object.seal(this);\n  }\n\n  /** Method to call when the layer manager is not needed anymore. */\n  finalize() {\n    this.resourceManager.finalize();\n    // Finalize all layers\n    for (const layer of this.layers) {\n      this._finalizeLayer(layer);\n    }\n  }\n\n  /** Check if a redraw is needed */\n  needsRedraw(\n    opts: {\n      /** Reset redraw flags to false after the call */\n      clearRedrawFlags: boolean;\n    } = {clearRedrawFlags: false}\n  ): string | false {\n    let redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    // This layers list doesn't include sublayers, relying on composite layers\n    for (const layer of this.layers) {\n      // Call every layer to clear their flags\n      const layerNeedsRedraw = layer.getNeedsRedraw(opts);\n      redraw = redraw || layerNeedsRedraw;\n    }\n\n    return redraw;\n  }\n\n  /** Check if a deep update of all layers is needed */\n  needsUpdate(): string | false {\n    if (this._nextLayers && this._nextLayers !== this._lastRenderedLayers) {\n      // New layers array may be the same as the old one if `setProps` is called by React\n      return 'layers changed';\n    }\n    if (this._defaultShaderModulesChanged) {\n      return 'shader modules changed';\n    }\n    return this._needsUpdate;\n  }\n\n  /** Layers will be redrawn (in next animation frame) */\n  setNeedsRedraw(reason: string): void {\n    this._needsRedraw = this._needsRedraw || reason;\n  }\n\n  /** Layers will be updated deeply (in next animation frame)\n    Potentially regenerating attributes and sub layers */\n  setNeedsUpdate(reason: string): void {\n    this._needsUpdate = this._needsUpdate || reason;\n  }\n\n  /** Gets a list of currently rendered layers. Optionally filter by id. */\n  getLayers({layerIds}: {layerIds?: string[]} = {}): Layer[] {\n    // Filtering by layerId compares beginning of strings, so that sublayers will be included\n    // Dependes on the convention of adding suffixes to the parent's layer name\n    return layerIds\n      ? this.layers.filter(layer => layerIds.find(layerId => layer.id.indexOf(layerId) === 0))\n      : this.layers;\n  }\n\n  /** Set props needed for layer rendering and picking. */\n  setProps(props: any): void {\n    if ('debug' in props) {\n      this._debug = props.debug;\n    }\n\n    // A way for apps to add data to context that can be accessed in layers\n    if ('userData' in props) {\n      this.context.userData = props.userData;\n    }\n\n    // New layers will be processed in `updateLayers` in the next update cycle\n    if ('layers' in props) {\n      this._nextLayers = props.layers;\n    }\n\n    if ('onError' in props) {\n      this.context.onError = props.onError;\n    }\n  }\n\n  /** Supply a new layer list, initiating sublayer generation and layer matching */\n  setLayers(newLayers: LayersList, reason?: string): void {\n    debug(TRACE_SET_LAYERS, this, reason, newLayers);\n\n    this._lastRenderedLayers = newLayers;\n\n    const flatLayers = flatten(newLayers, Boolean) as Layer[];\n\n    for (const layer of flatLayers) {\n      layer.context = this.context;\n    }\n\n    this._updateLayers(this.layers, flatLayers);\n  }\n\n  /** Update layers from last cycle if `setNeedsUpdate()` has been called */\n  updateLayers(): void {\n    // NOTE: For now, even if only some layer has changed, we update all layers\n    // to ensure that layer id maps etc remain consistent even if different\n    // sublayers are rendered\n    const reason = this.needsUpdate();\n    if (reason) {\n      this.setNeedsRedraw(`updating layers: ${reason}`);\n      // Force a full update\n      this.setLayers(this._nextLayers || this._lastRenderedLayers, reason);\n    }\n    // Updated, clear the backlog\n    this._nextLayers = null;\n  }\n\n  //\n  // INTERNAL METHODS\n  //\n\n  /** Make a viewport \"current\" in layer context, updating viewportChanged flags */\n  activateViewport = (viewport: Viewport) => {\n    debug(TRACE_ACTIVATE_VIEWPORT, this, viewport);\n    if (viewport) {\n      this.context.viewport = viewport;\n    }\n  };\n\n  /** Register a default shader module */\n  addDefaultShaderModule(module: ShaderModule) {\n    const {defaultShaderModules} = this.context;\n    if (!defaultShaderModules.find(m => m.name === module.name)) {\n      defaultShaderModules.push(module);\n      this._defaultShaderModulesChanged = true;\n    }\n  }\n\n  /** Deregister a default shader module */\n  removeDefaultShaderModule(module: ShaderModule) {\n    const {defaultShaderModules} = this.context;\n    const i = defaultShaderModules.findIndex(m => m.name === module.name);\n    if (i >= 0) {\n      defaultShaderModules.splice(i, 1);\n      this._defaultShaderModulesChanged = true;\n    }\n  }\n\n  private _handleError(stage: string, error: Error, layer: Layer) {\n    layer.raiseError(error, `${stage} of ${layer}`);\n  }\n\n  // TODO - mark layers with exceptions as bad and remove from rendering cycle?\n  /** Match all layers, checking for caught errors\n    to avoid having an exception in one layer disrupt other layers */\n  private _updateLayers(oldLayers: Layer[], newLayers: Layer[]): void {\n    // Create old layer map\n    const oldLayerMap: {[layerId: string]: Layer | null} = {};\n    for (const oldLayer of oldLayers) {\n      if (oldLayerMap[oldLayer.id]) {\n        log.warn(`Multiple old layers with same id ${oldLayer.id}`)();\n      } else {\n        oldLayerMap[oldLayer.id] = oldLayer;\n      }\n    }\n\n    if (this._defaultShaderModulesChanged) {\n      for (const layer of oldLayers) {\n        layer.setNeedsUpdate();\n        layer.setChangeFlags({extensionsChanged: true});\n      }\n      this._defaultShaderModulesChanged = false;\n    }\n\n    // Allocate array for generated layers\n    const generatedLayers: Layer[] = [];\n\n    // Match sublayers\n    this._updateSublayersRecursively(newLayers, oldLayerMap, generatedLayers);\n\n    // Finalize unmatched layers\n    this._finalizeOldLayers(oldLayerMap);\n\n    let needsUpdate: string | false = false;\n    for (const layer of generatedLayers) {\n      if (layer.hasUniformTransition()) {\n        needsUpdate = `Uniform transition in ${layer}`;\n        break;\n      }\n    }\n\n    this._needsUpdate = needsUpdate;\n    this.layers = generatedLayers;\n  }\n\n  /* eslint-disable complexity,max-statements */\n  // Note: adds generated layers to `generatedLayers` array parameter\n  private _updateSublayersRecursively(\n    newLayers: Layer[],\n    oldLayerMap: {[layerId: string]: Layer | null},\n    generatedLayers: Layer[]\n  ) {\n    for (const newLayer of newLayers) {\n      newLayer.context = this.context;\n\n      // Given a new coming layer, find its matching old layer (if any)\n      const oldLayer = oldLayerMap[newLayer.id];\n      if (oldLayer === null) {\n        // null, rather than undefined, means this id was originally there\n        log.warn(`Multiple new layers with same id ${newLayer.id}`)();\n      }\n      // Remove the old layer from candidates, as it has been matched with this layer\n      oldLayerMap[newLayer.id] = null;\n\n      let sublayers: Layer[] | null = null;\n\n      // We must not generate exceptions until after layer matching is complete\n      try {\n        if (this._debug && oldLayer !== newLayer) {\n          newLayer.validateProps();\n        }\n\n        if (!oldLayer) {\n          this._initializeLayer(newLayer);\n        } else {\n          this._transferLayerState(oldLayer, newLayer);\n          this._updateLayer(newLayer);\n        }\n        generatedLayers.push(newLayer);\n\n        // Call layer lifecycle method: render sublayers\n        sublayers = newLayer.isComposite ? (newLayer as CompositeLayer).getSubLayers() : null;\n        // End layer lifecycle method: render sublayers\n      } catch (err) {\n        this._handleError('matching', err as Error, newLayer); // Record first exception\n      }\n\n      if (sublayers) {\n        this._updateSublayersRecursively(sublayers, oldLayerMap, generatedLayers);\n      }\n    }\n  }\n  /* eslint-enable complexity,max-statements */\n\n  // Finalize any old layers that were not matched\n  private _finalizeOldLayers(oldLayerMap: {[layerId: string]: Layer | null}): void {\n    for (const layerId in oldLayerMap) {\n      const layer = oldLayerMap[layerId];\n      if (layer) {\n        this._finalizeLayer(layer);\n      }\n    }\n  }\n\n  // / EXCEPTION SAFE LAYER ACCESS\n\n  /** Safely initializes a single layer, calling layer methods */\n  private _initializeLayer(layer: Layer): void {\n    try {\n      layer._initialize();\n      layer.lifecycle = LIFECYCLE.INITIALIZED;\n    } catch (err) {\n      this._handleError('initialization', err as Error, layer);\n      // TODO - what should the lifecycle state be here? LIFECYCLE.INITIALIZATION_FAILED?\n    }\n  }\n\n  /** Transfer state from one layer to a newer version */\n  private _transferLayerState(oldLayer: Layer, newLayer: Layer): void {\n    newLayer._transferState(oldLayer);\n    newLayer.lifecycle = LIFECYCLE.MATCHED;\n\n    if (newLayer !== oldLayer) {\n      oldLayer.lifecycle = LIFECYCLE.AWAITING_GC;\n    }\n  }\n\n  /** Safely updates a single layer, cleaning all flags */\n  private _updateLayer(layer: Layer): void {\n    try {\n      layer._update();\n    } catch (err) {\n      this._handleError('update', err as Error, layer);\n    }\n  }\n\n  /** Safely finalizes a single layer, removing all resources */\n  private _finalizeLayer(layer: Layer): void {\n    this._needsRedraw = this._needsRedraw || `finalized ${layer}`;\n\n    layer.lifecycle = LIFECYCLE.AWAITING_FINALIZATION;\n\n    try {\n      layer._finalize();\n      layer.lifecycle = LIFECYCLE.FINALIZED;\n    } catch (err) {\n      this._handleError('finalization', err as Error, layer);\n    }\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/**\n * Fast partial deep equal for prop.\n *\n * @param a Prop\n * @param b Prop to compare against `a`\n * @param depth Depth to which to recurse in nested Objects/Arrays. Use 0 (default) for shallow comparison, -1 for infinite depth\n */\n/* eslint-disable complexity */\nexport function deepEqual(a: any, b: any, depth: number): boolean {\n  if (a === b) {\n    return true;\n  }\n  if (!depth || !a || !b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b) || a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (!deepEqual(a[i], b[i], depth - 1)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (Array.isArray(b)) {\n    return false;\n  }\n  if (typeof a === 'object' && typeof b === 'object') {\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    for (const key of aKeys) {\n      if (!b.hasOwnProperty(key)) {\n        return false;\n      }\n      if (!deepEqual(a[key], b[key], depth - 1)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {deepEqual} from '../utils/deep-equal';\nimport log from '../utils/log';\nimport {flatten} from '../utils/flatten';\n\nimport type Controller from '../controllers/controller';\nimport type {ViewStateChangeParameters, InteractionState} from '../controllers/controller';\nimport type Viewport from '../viewports/viewport';\nimport type View from '../views/view';\nimport type {Timeline} from '@luma.gl/engine';\nimport type {EventManager} from 'mjolnir.js';\nimport type {ConstructorOf} from '../types/types';\nimport type {default as MapView, MapViewState} from '../views/map-view';\n\nexport type ViewOrViews = View | View[] | null;\ntype ViewStateOf<ViewT> = ViewT extends View<infer ViewStateT> ? ViewStateT : never;\ntype OneOfViews<ViewsT extends ViewOrViews> = ViewsT extends null\n  ? MapView\n  : ViewsT extends View[]\n    ? ViewsT[number]\n    : ViewsT;\nexport type AnyViewStateOf<ViewsT extends ViewOrViews> = ViewStateOf<OneOfViews<ViewsT>>;\nexport type ViewStateMap<ViewsT extends ViewOrViews> = ViewsT extends null\n  ? MapViewState\n  : ViewsT extends View\n    ? ViewStateOf<ViewsT>\n    : {[viewId: string]: AnyViewStateOf<ViewsT>};\n\n/** This is a very lose type of all \"acceptable\" viewState\n * It's not good for type hinting but matches what may exist internally\n */\nexport type ViewStateObject<ViewsT extends ViewOrViews> =\n  | ViewStateMap<ViewsT>\n  | AnyViewStateOf<ViewsT>\n  | {[viewId: string]: AnyViewStateOf<ViewsT>};\n\n/** ViewManager props directly supplied by the user */\ntype ViewManagerProps<ViewsT extends ViewOrViews> = {\n  views: ViewsT;\n  viewState: ViewStateObject<ViewsT> | null;\n  onViewStateChange?: (params: ViewStateChangeParameters<AnyViewStateOf<ViewsT>>) => void;\n  onInteractionStateChange?: (state: InteractionState) => void;\n  width?: number;\n  height?: number;\n};\n\nexport default class ViewManager<ViewsT extends View[]> {\n  width: number;\n  height: number;\n  views: View[];\n  viewState: ViewStateObject<ViewsT>;\n  controllers: {[viewId: string]: Controller<any> | null};\n  timeline: Timeline;\n\n  private _viewports: Viewport[];\n  private _viewportMap: {[viewId: string]: Viewport};\n  private _isUpdating: boolean;\n  private _needsRedraw: string | false;\n  private _needsUpdate: string | false;\n  private _eventManager: EventManager;\n  private _eventCallbacks: {\n    onViewStateChange?: (params: ViewStateChangeParameters) => void;\n    onInteractionStateChange?: (state: InteractionState) => void;\n  };\n\n  constructor(\n    props: ViewManagerProps<ViewsT> & {\n      // Initial options\n      timeline: Timeline;\n      eventManager: EventManager;\n    }\n  ) {\n    // List of view descriptors, gets re-evaluated when width/height changes\n    this.views = [];\n    this.width = 100;\n    this.height = 100;\n    this.viewState = {} as any;\n    this.controllers = {};\n    this.timeline = props.timeline;\n\n    this._viewports = []; // Generated viewports\n    this._viewportMap = {};\n    this._isUpdating = false;\n    this._needsRedraw = 'First render';\n    this._needsUpdate = 'Initialize';\n\n    this._eventManager = props.eventManager;\n    this._eventCallbacks = {\n      onViewStateChange: props.onViewStateChange,\n      onInteractionStateChange: props.onInteractionStateChange\n    };\n\n    Object.seal(this);\n\n    // Init with default map viewport\n    this.setProps(props);\n  }\n\n  /** Remove all resources and event listeners */\n  finalize(): void {\n    for (const key in this.controllers) {\n      const controller = this.controllers[key];\n      if (controller) {\n        controller.finalize();\n      }\n    }\n    this.controllers = {};\n  }\n\n  /** Check if a redraw is needed */\n  needsRedraw(\n    opts: {\n      /** Reset redraw flags to false */\n      clearRedrawFlags?: boolean;\n    } = {clearRedrawFlags: false}\n  ): string | false {\n    const redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n    return redraw;\n  }\n\n  /** Mark the manager as dirty. Will rebuild all viewports and update controllers. */\n  setNeedsUpdate(reason: string): void {\n    this._needsUpdate = this._needsUpdate || reason;\n    this._needsRedraw = this._needsRedraw || reason;\n  }\n\n  /** Checks each viewport for transition updates */\n  updateViewStates(): void {\n    for (const viewId in this.controllers) {\n      const controller = this.controllers[viewId];\n      if (controller) {\n        controller.updateTransition();\n      }\n    }\n  }\n\n  /** Get a set of viewports for a given width and height\n   * TODO - Intention is for deck.gl to autodeduce width and height and drop the need for props\n   * @param rect (object, optional) - filter the viewports\n   *   + not provided - return all viewports\n   *   + {x, y} - only return viewports that contain this pixel\n   *   + {x, y, width, height} - only return viewports that overlap with this rectangle\n   */\n  getViewports(rect?: {x: number; y: number; width?: number; height?: number}): Viewport[] {\n    if (rect) {\n      return this._viewports.filter(viewport => viewport.containsPixel(rect));\n    }\n    return this._viewports;\n  }\n\n  /** Get a map of all views */\n  getViews(): {[viewId: string]: View} {\n    const viewMap = {};\n    this.views.forEach(view => {\n      viewMap[view.id] = view;\n    });\n    return viewMap;\n  }\n\n  /** Resolves a viewId string to a View */\n  getView(viewId: string): View | undefined {\n    return this.views.find(view => view.id === viewId);\n  }\n\n  /** Returns the viewState for a specific viewId. Matches the viewState by\n    1. view.viewStateId\n    2. view.id\n    3. root viewState\n    then applies the view's filter if any */\n  getViewState(viewOrViewId: string | View): AnyViewStateOf<ViewsT> {\n    const view: View | undefined =\n      typeof viewOrViewId === 'string' ? this.getView(viewOrViewId) : viewOrViewId;\n    // Backward compatibility: view state for single view\n    const viewState = (view && this.viewState[view.getViewStateId()]) || this.viewState;\n    return view ? view.filterViewState(viewState) : viewState;\n  }\n\n  getViewport(viewId: string): Viewport | undefined {\n    return this._viewportMap[viewId];\n  }\n\n  /**\n   * Unproject pixel coordinates on screen onto world coordinates,\n   * (possibly [lon, lat]) on map.\n   * - [x, y] => [lng, lat]\n   * - [x, y, z] => [lng, lat, Z]\n   * @param {Array} xyz -\n   * @param {Object} opts - options\n   * @param {Object} opts.topLeft=true - Whether origin is top left\n   * @return {Array|null} - [lng, lat, Z] or [X, Y, Z]\n   */\n  unproject(xyz: number[], opts?: {topLeft?: boolean}): number[] | null {\n    const viewports = this.getViewports();\n    const pixel = {x: xyz[0], y: xyz[1]};\n    for (let i = viewports.length - 1; i >= 0; --i) {\n      const viewport = viewports[i];\n      if (viewport.containsPixel(pixel)) {\n        const p = xyz.slice();\n        p[0] -= viewport.x;\n        p[1] -= viewport.y;\n        return viewport.unproject(p, opts);\n      }\n    }\n    return null;\n  }\n\n  /** Update the manager with new Deck props */\n  setProps(props: Partial<ViewManagerProps<ViewsT>>) {\n    if (props.views) {\n      this._setViews(props.views);\n    }\n\n    if (props.viewState) {\n      this._setViewState(props.viewState);\n    }\n\n    if ('width' in props || 'height' in props) {\n      this._setSize(props.width as number, props.height as number);\n    }\n\n    // Important: avoid invoking _update() inside itself\n    // Nested updates result in unexpected side effects inside _rebuildViewports()\n    // when using auto control in pure-js\n    if (!this._isUpdating) {\n      this._update();\n    }\n  }\n\n  //\n  // PRIVATE METHODS\n  //\n\n  private _update(): void {\n    this._isUpdating = true;\n\n    // Only rebuild viewports if the update flag is set\n    if (this._needsUpdate) {\n      this._needsUpdate = false;\n      this._rebuildViewports();\n    }\n\n    // If viewport transition(s) are triggered during viewports update, controller(s)\n    // will immediately call `onViewStateChange` which calls `viewManager.setProps` again.\n    if (this._needsUpdate) {\n      this._needsUpdate = false;\n      this._rebuildViewports();\n    }\n\n    this._isUpdating = false;\n  }\n\n  private _setSize(width: number, height: number): void {\n    if (width !== this.width || height !== this.height) {\n      this.width = width;\n      this.height = height;\n      this.setNeedsUpdate('Size changed');\n    }\n  }\n\n  // Update the view descriptor list and set change flag if needed\n  // Does not actually rebuild the `Viewport`s until `getViewports` is called\n  private _setViews(views: View[]): void {\n    views = flatten(views, Boolean);\n\n    const viewsChanged = this._diffViews(views, this.views);\n    if (viewsChanged) {\n      this.setNeedsUpdate('views changed');\n    }\n\n    this.views = views;\n  }\n\n  private _setViewState(viewState: ViewStateObject<ViewsT>): void {\n    if (viewState) {\n      // depth = 3 when comparing viewStates: viewId.position.0\n      const viewStateChanged = !deepEqual(viewState, this.viewState, 3);\n\n      if (viewStateChanged) {\n        this.setNeedsUpdate('viewState changed');\n      }\n\n      this.viewState = viewState;\n    } else {\n      log.warn('missing `viewState` or `initialViewState`')();\n    }\n  }\n\n  private _createController(\n    view: View,\n    props: {id: string; type: ConstructorOf<Controller<any>>}\n  ): Controller<any> {\n    const Controller = props.type;\n\n    const controller = new Controller({\n      timeline: this.timeline,\n      eventManager: this._eventManager,\n      // Set an internal callback that calls the prop callback if provided\n      onViewStateChange: this._eventCallbacks.onViewStateChange,\n      onStateChange: this._eventCallbacks.onInteractionStateChange,\n      makeViewport: viewState =>\n        this.getView(view.id)?.makeViewport({\n          viewState,\n          width: this.width,\n          height: this.height\n        })\n    });\n\n    return controller;\n  }\n\n  private _updateController(\n    view: View,\n    viewState: AnyViewStateOf<ViewsT>,\n    viewport: Viewport | null,\n    controller?: Controller<any> | null\n  ): Controller<any> | null {\n    const controllerProps = view.controller;\n    if (controllerProps && viewport) {\n      const resolvedProps = {\n        ...viewState,\n        ...controllerProps,\n        id: view.id,\n        x: viewport.x,\n        y: viewport.y,\n        width: viewport.width,\n        height: viewport.height\n      };\n\n      // Create controller if not already existing or if the type of the\n      // controller has changed.\n      if (!controller || controller.constructor !== controllerProps.type) {\n        controller = this._createController(view, resolvedProps);\n      }\n      if (controller) {\n        controller.setProps(resolvedProps);\n      }\n      return controller;\n    }\n    return null;\n  }\n\n  // Rebuilds viewports from descriptors towards a certain window size\n  private _rebuildViewports(): void {\n    const {views} = this;\n\n    const oldControllers = this.controllers;\n    this._viewports = [];\n    this.controllers = {};\n\n    let invalidateControllers = false;\n    // Create controllers in reverse order, so that views on top receive events first\n    for (let i = views.length; i--; ) {\n      const view = views[i];\n      const viewState = this.getViewState(view);\n      const viewport = view.makeViewport({viewState, width: this.width, height: this.height});\n\n      let oldController = oldControllers[view.id];\n      const hasController = Boolean(view.controller);\n      if (hasController && !oldController) {\n        // When a new controller is added, invalidate all controllers below it so that\n        // events are registered in the correct order\n        invalidateControllers = true;\n      }\n      if ((invalidateControllers || !hasController) && oldController) {\n        // Remove and reattach invalidated controller\n        oldController.finalize();\n        oldController = null;\n      }\n\n      // Update the controller\n      this.controllers[view.id] = this._updateController(view, viewState, viewport, oldController);\n\n      if (viewport) {\n        this._viewports.unshift(viewport);\n      }\n    }\n\n    // Remove unused controllers\n    for (const id in oldControllers) {\n      const oldController = oldControllers[id];\n      if (oldController && !this.controllers[id]) {\n        oldController.finalize();\n      }\n    }\n\n    this._buildViewportMap();\n  }\n\n  _buildViewportMap(): void {\n    // Build a view id to view index\n    this._viewportMap = {};\n    this._viewports.forEach(viewport => {\n      if (viewport.id) {\n        // TODO - issue warning if multiple viewports use same id\n        this._viewportMap[viewport.id] = this._viewportMap[viewport.id] || viewport;\n      }\n    });\n  }\n\n  // Check if viewport array has changed, returns true if any change\n  // Note that descriptors can be the same\n  _diffViews(newViews: View[], oldViews: View[]): boolean {\n    if (newViews.length !== oldViews.length) {\n      return true;\n    }\n\n    return newViews.some((_, i) => !newViews[i].equals(oldViews[i]));\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nconst PERCENT_OR_PIXELS_REGEX = /([0-9]+\\.?[0-9]*)(%|px)/;\n\nexport type Position = {\n  position: number;\n  relative: boolean;\n};\n\n// Takes a number or a string of formats `50%`, `33.3%` or `200px`\nexport function parsePosition(value: number | string): Position {\n  switch (typeof value) {\n    case 'number':\n      return {\n        position: value,\n        relative: false\n      };\n\n    case 'string':\n      const match = PERCENT_OR_PIXELS_REGEX.exec(value);\n      if (match && match.length >= 3) {\n        const relative = match[2] === '%';\n        const position = parseFloat(match[1]);\n        return {\n          position: relative ? position / 100 : position,\n          relative\n        };\n      }\n    // fallthrough\n\n    default:\n      // eslint-disable-line\n      throw new Error(`Could not parse position string ${value}`);\n  }\n}\n\nexport function getPosition(position: Position, extent: number): number {\n  return position.relative ? Math.round(position.position * extent) : position.position;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport Viewport from '../viewports/viewport';\nimport {parsePosition, getPosition, Position} from '../utils/positions';\nimport {deepEqual} from '../utils/deep-equal';\nimport type Controller from '../controllers/controller';\nimport type {ControllerOptions} from '../controllers/controller';\nimport type {TransitionProps} from '../controllers/transition-manager';\nimport type {Padding} from '../viewports/viewport';\nimport type {ConstructorOf} from '../types/types';\n\nexport type CommonViewState = TransitionProps;\n\nexport type CommonViewProps<ViewState> = {\n  /** A unique id of the view. In a multi-view use case, this is important for matching view states and place contents into this view. */\n  id?: string;\n  /** A relative (e.g. `'50%'`) or absolute position. Default `0`. */\n  x?: number | string;\n  /** A relative (e.g. `'50%'`) or absolute position. Default `0`. */\n  y?: number | string;\n  /** A relative (e.g. `'50%'`) or absolute extent. Default `'100%'`. */\n  width?: number | string;\n  /** A relative (e.g. `'50%'`) or absolute extent. Default `'100%'`. */\n  height?: number | string;\n  /** Padding around the view, expressed in either relative (e.g. `'50%'`) or absolute pixels. Default `null`. */\n  padding?: {\n    left?: number | string;\n    right?: number | string;\n    top?: number | string;\n    bottom?: number | string;\n  } | null;\n  /** When using multiple views, set this flag to wipe the pixels drawn by other overlaping views */\n  clear?: boolean;\n  /** State of the view */\n  viewState?:\n    | string\n    | ({\n        id?: string;\n      } & Partial<ViewState>);\n  /** Options for viewport interactivity. */\n  controller?:\n    | null\n    | boolean\n    | ConstructorOf<Controller<any>>\n    | (ControllerOptions & {\n        type?: ConstructorOf<Controller<any>>;\n      });\n};\n\nexport default abstract class View<\n  ViewState extends CommonViewState = CommonViewState,\n  ViewProps extends CommonViewProps<ViewState> = CommonViewProps<ViewState>\n> {\n  id: string;\n  abstract getViewportType(viewState: ViewState): ConstructorOf<Viewport>;\n  protected abstract get ControllerType(): ConstructorOf<Controller<any>>;\n\n  private _x: Position;\n  private _y: Position;\n  private _width: Position;\n  private _height: Position;\n  private _padding: {\n    left: Position;\n    right: Position;\n    top: Position;\n    bottom: Position;\n  } | null;\n\n  readonly props: ViewProps;\n\n  constructor(props: ViewProps) {\n    const {id, x = 0, y = 0, width = '100%', height = '100%', padding = null} = props;\n\n    // @ts-ignore\n    this.id = id || this.constructor.displayName || 'view';\n\n    this.props = {...props, id: this.id};\n\n    // Extents\n    this._x = parsePosition(x);\n    this._y = parsePosition(y);\n    this._width = parsePosition(width);\n    this._height = parsePosition(height);\n    this._padding = padding && {\n      left: parsePosition(padding.left || 0),\n      right: parsePosition(padding.right || 0),\n      top: parsePosition(padding.top || 0),\n      bottom: parsePosition(padding.bottom || 0)\n    };\n\n    // Bind methods for easy access\n    this.equals = this.equals.bind(this);\n\n    Object.seal(this);\n  }\n\n  equals(view: this): boolean {\n    if (this === view) {\n      return true;\n    }\n\n    // To correctly compare padding use depth=2\n    return this.constructor === view.constructor && deepEqual(this.props, view.props, 2);\n  }\n\n  /** Make viewport from canvas dimensions and view state */\n  makeViewport({width, height, viewState}: {width: number; height: number; viewState: ViewState}) {\n    viewState = this.filterViewState(viewState);\n\n    // Resolve relative viewport dimensions\n    const viewportDimensions = this.getDimensions({width, height});\n    if (!viewportDimensions.height || !viewportDimensions.width) {\n      return null;\n    }\n    const ViewportType = this.getViewportType(viewState);\n    return new ViewportType({...viewState, ...this.props, ...viewportDimensions});\n  }\n\n  getViewStateId(): string {\n    const {viewState} = this.props;\n    if (typeof viewState === 'string') {\n      // if View.viewState is a string, return it\n      return viewState;\n    }\n    return viewState?.id || this.id;\n  }\n\n  // Allows view to override (or completely define) viewState\n  filterViewState(viewState: ViewState): ViewState {\n    if (this.props.viewState && typeof this.props.viewState === 'object') {\n      // If we have specified an id, then intent is to override,\n      // If not, completely specify the view state\n      if (!this.props.viewState.id) {\n        return this.props.viewState as ViewState;\n      }\n\n      // Merge in all props from View's viewState, except id\n      const newViewState = {...viewState};\n      for (const key in this.props.viewState) {\n        if (key !== 'id') {\n          newViewState[key] = this.props.viewState[key];\n        }\n      }\n      return newViewState;\n    }\n\n    return viewState;\n  }\n\n  /** Resolve the dimensions of the view from overall canvas dimensions */\n  getDimensions({width, height}: {width: number; height: number}): {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    padding?: Padding;\n  } {\n    const dimensions: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n      padding?: Padding;\n    } = {\n      x: getPosition(this._x, width),\n      y: getPosition(this._y, height),\n      width: getPosition(this._width, width),\n      height: getPosition(this._height, height)\n    };\n\n    if (this._padding) {\n      dimensions.padding = {\n        left: getPosition(this._padding.left, width),\n        top: getPosition(this._padding.top, height),\n        right: getPosition(this._padding.right, width),\n        bottom: getPosition(this._padding.bottom, height)\n      };\n    }\n    return dimensions;\n  }\n\n  // Used by sub classes to resolve controller props\n  get controller(): (ControllerOptions & {type: ConstructorOf<Controller<any>>}) | null {\n    const opts = this.props.controller;\n\n    if (!opts) {\n      return null;\n    }\n    if (opts === true) {\n      return {type: this.ControllerType};\n    }\n    if (typeof opts === 'function') {\n      return {type: opts};\n    }\n    return {type: this.ControllerType, ...opts};\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Timeline} from '@luma.gl/engine';\n\nexport type TransitionSettings = {\n  duration: number;\n  onStart?: (transition: Transition) => void;\n  onUpdate?: (transition: Transition) => void;\n  onInterrupt?: (transition: Transition) => void;\n  onEnd?: (transition: Transition) => void;\n};\n\nexport default class Transition {\n  private _inProgress: boolean = false;\n  private _handle: number | null = null;\n  private _timeline: Timeline;\n\n  time: number = 0;\n  // @ts-expect-error\n  settings: TransitionSettings & {fromValue; toValue; duration; easing; damping; stiffness} = {\n    duration: 0\n  };\n\n  /**\n   * @params timeline {Timeline}\n   */\n  constructor(timeline: Timeline) {\n    this._timeline = timeline;\n  }\n\n  /* Public API */\n  get inProgress(): boolean {\n    return this._inProgress;\n  }\n\n  /**\n   * (re)start this transition.\n   * @params props {object} - optional overriding props. see constructor\n   */\n  start(settings: TransitionSettings) {\n    this.cancel();\n    // @ts-expect-error\n    this.settings = settings;\n    this._inProgress = true;\n    this.settings.onStart?.(this);\n  }\n\n  /**\n   * end this transition if it is in progress.\n   */\n  end() {\n    if (this._inProgress) {\n      this._timeline.removeChannel(this._handle as number);\n      this._handle = null;\n      this._inProgress = false;\n      this.settings.onEnd?.(this);\n    }\n  }\n\n  /**\n   * cancel this transition if it is in progress.\n   */\n  cancel() {\n    if (this._inProgress) {\n      this.settings.onInterrupt?.(this);\n      this._timeline.removeChannel(this._handle as number);\n      this._handle = null;\n      this._inProgress = false;\n    }\n  }\n\n  /**\n   * update this transition. Returns `true` if updated.\n   */\n  update() {\n    if (!this._inProgress) {\n      return false;\n    }\n\n    // It is important to initialize the handle during `update` instead of `start`.\n    // The CPU time that the `start` frame takes should not be counted towards the duration.\n    // On the other hand, `update` always happens during a render cycle. The clock starts when the\n    // transition is rendered for the first time.\n    if (this._handle === null) {\n      const {_timeline: timeline, settings} = this;\n      this._handle = timeline.addChannel({\n        delay: timeline.getTime(),\n        duration: settings.duration\n      });\n    }\n\n    this.time = this._timeline.getTime(this._handle);\n    // Call subclass method\n    this._onUpdate();\n    // Call user callback\n    this.settings.onUpdate?.(this);\n\n    // This only works if `settings.duration` is set\n    // Spring transition must call `end` manually\n    if (this._timeline.isFinished(this._handle)) {\n      this.end();\n    }\n    return true;\n  }\n\n  /* Private API */\n\n  protected _onUpdate() {\n    // for subclass override\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport Transition, {TransitionSettings as BaseTransitionSettings} from '../transitions/transition';\nimport TransitionInterpolator from '../transitions/transition-interpolator';\nimport type {IViewState} from './view-state';\n\nimport type {Timeline} from '@luma.gl/engine';\nimport type {InteractionState} from './controller';\n\nconst noop = () => {};\n\n// Enums cannot be directly exported as they are not transpiled correctly into ES5, see https://github.com/visgl/deck.gl/issues/7130\nexport const TRANSITION_EVENTS = {\n  BREAK: 1,\n  SNAP_TO_END: 2,\n  IGNORE: 3\n} as const;\n\ntype TransitionEvent = 1 | 2 | 3;\n\nexport type TransitionProps = {\n  /** Transition duration in milliseconds, default value 0, implies no transition. When using `FlyToInterpolator`, it can also be set to `'auto'`. */\n  transitionDuration?: number | 'auto';\n  /** An interpolator object that defines the transition behavior between two viewports. */\n  transitionInterpolator?: TransitionInterpolator;\n  /** Easing function that can be used to achieve effects like \"Ease-In-Cubic\", \"Ease-Out-Cubic\", etc. Default value performs Linear easing. */\n  transitionEasing?: (t: number) => number;\n  /** Controls how to process a new view state change that occurs during an existing transition. */\n  transitionInterruption?: TransitionEvent;\n  /** Callback fired when requested transition starts. */\n  onTransitionStart?: (transition: Transition) => void;\n  /** Callback fired when requested transition is interrupted. */\n  onTransitionInterrupt?: (transition: Transition) => void;\n  /** Callback fired when requested transition ends. */\n  onTransitionEnd?: (transition: Transition) => void;\n};\n\nconst DEFAULT_EASING = t => t;\nconst DEFAULT_INTERRUPTION = TRANSITION_EVENTS.BREAK;\n\ntype TransitionSettings = BaseTransitionSettings & {\n  interpolator: TransitionInterpolator;\n  easing: (t: number) => number;\n  interruption: TransitionEvent;\n  startProps: Record<string, any>;\n  endProps: Record<string, any>;\n};\n\nexport default class TransitionManager<ControllerState extends IViewState<ControllerState>> {\n  getControllerState: (props: any) => ControllerState;\n  props?: TransitionProps;\n  propsInTransition: Record<string, any> | null;\n  transition: Transition;\n  onViewStateChange: (params: {\n    viewState: Record<string, any>;\n    oldViewState: Record<string, any>;\n  }) => void;\n  onStateChange: (state: InteractionState) => void;\n\n  constructor(opts: {\n    timeline: Timeline;\n    getControllerState: (props: any) => ControllerState;\n    onViewStateChange?: (params: {\n      viewState: Record<string, any>;\n      oldViewState: Record<string, any>;\n    }) => void;\n    onStateChange?: (state: InteractionState) => void;\n  }) {\n    this.getControllerState = opts.getControllerState;\n    this.propsInTransition = null;\n    this.transition = new Transition(opts.timeline);\n\n    this.onViewStateChange = opts.onViewStateChange || noop;\n    this.onStateChange = opts.onStateChange || noop;\n  }\n\n  finalize(): void {\n    this.transition.cancel();\n  }\n\n  // Returns current transitioned viewport.\n  getViewportInTransition(): Record<string, any> | null {\n    return this.propsInTransition;\n  }\n\n  // Process the vewiport change, either ignore or trigger a new transition.\n  // Return true if a new transition is triggered, false otherwise.\n  processViewStateChange(nextProps: TransitionProps) {\n    let transitionTriggered = false;\n    const currentProps = this.props;\n    // Set this.props here as '_triggerTransition' calls '_updateViewport' that uses this.props.\n    this.props = nextProps;\n\n    // NOTE: Be cautious re-ordering statements in this function.\n    if (!currentProps || this._shouldIgnoreViewportChange(currentProps, nextProps)) {\n      return false;\n    }\n\n    if (this._isTransitionEnabled(nextProps)) {\n      let startProps = currentProps;\n      if (this.transition.inProgress) {\n        // @ts-expect-error\n        const {interruption, endProps} = this.transition.settings as TransitionSettings;\n        startProps = {\n          ...currentProps,\n          ...(interruption === TRANSITION_EVENTS.SNAP_TO_END\n            ? endProps\n            : this.propsInTransition || currentProps)\n        };\n      }\n\n      this._triggerTransition(startProps, nextProps);\n\n      transitionTriggered = true;\n    } else {\n      this.transition.cancel();\n    }\n\n    return transitionTriggered;\n  }\n\n  updateTransition() {\n    this.transition.update();\n  }\n\n  // Helper methods\n\n  _isTransitionEnabled(props: TransitionProps): boolean {\n    const {transitionDuration, transitionInterpolator} = props;\n    return (\n      ((transitionDuration as number) > 0 || transitionDuration === 'auto') &&\n      Boolean(transitionInterpolator)\n    );\n  }\n\n  _isUpdateDueToCurrentTransition(props: TransitionProps): boolean {\n    if (this.transition.inProgress && this.propsInTransition) {\n      // @ts-expect-error\n      return (this.transition.settings as TransitionSettings).interpolator.arePropsEqual(\n        props,\n        this.propsInTransition\n      );\n    }\n    return false;\n  }\n\n  _shouldIgnoreViewportChange(currentProps: TransitionProps, nextProps: TransitionProps): boolean {\n    if (this.transition.inProgress) {\n      // @ts-expect-error\n      const transitionSettings = this.transition.settings as TransitionSettings;\n      // Ignore update if it is requested to be ignored\n      return (\n        transitionSettings.interruption === TRANSITION_EVENTS.IGNORE ||\n        // Ignore update if it is due to current active transition.\n        this._isUpdateDueToCurrentTransition(nextProps)\n      );\n    }\n    if (this._isTransitionEnabled(nextProps)) {\n      // Ignore if none of the viewport props changed.\n      return (nextProps.transitionInterpolator as TransitionInterpolator).arePropsEqual(\n        currentProps,\n        nextProps\n      );\n    }\n    return true;\n  }\n\n  _triggerTransition(startProps: TransitionProps, endProps: TransitionProps): void {\n    const startViewstate = this.getControllerState(startProps);\n    const endViewStateProps = this.getControllerState(endProps).shortestPathFrom(startViewstate);\n\n    // update transitionDuration for 'auto' mode\n    const transitionInterpolator = endProps.transitionInterpolator as TransitionInterpolator;\n    const duration = transitionInterpolator.getDuration\n      ? transitionInterpolator.getDuration(startProps, endProps)\n      : (endProps.transitionDuration as number);\n\n    if (duration === 0) {\n      return;\n    }\n\n    const initialProps = transitionInterpolator.initializeProps(startProps, endViewStateProps);\n\n    this.propsInTransition = {};\n    const transitionSettings: TransitionSettings = {\n      duration,\n      easing: endProps.transitionEasing || DEFAULT_EASING,\n      interpolator: transitionInterpolator,\n      interruption: endProps.transitionInterruption || DEFAULT_INTERRUPTION,\n\n      startProps: initialProps.start,\n      endProps: initialProps.end,\n\n      onStart: endProps.onTransitionStart,\n      onUpdate: this._onTransitionUpdate,\n      onInterrupt: this._onTransitionEnd(endProps.onTransitionInterrupt),\n      onEnd: this._onTransitionEnd(endProps.onTransitionEnd)\n    };\n    this.transition.start(transitionSettings);\n\n    this.onStateChange({inTransition: true});\n\n    this.updateTransition();\n  }\n\n  _onTransitionEnd(callback?: (transition: Transition) => void) {\n    return transition => {\n      this.propsInTransition = null;\n\n      this.onStateChange({\n        inTransition: false,\n        isZooming: false,\n        isPanning: false,\n        isRotating: false\n      });\n\n      callback?.(transition);\n    };\n  }\n\n  _onTransitionUpdate = transition => {\n    // NOTE: Be cautious re-ordering statements in this function.\n    const {\n      time,\n      settings: {interpolator, startProps, endProps, duration, easing}\n    } = transition;\n    const t = easing(time / duration);\n    const viewport = interpolator.interpolateProps(startProps, endProps, t);\n\n    // This gurantees all props (e.g. bearing, longitude) are normalized\n    // So when viewports are compared they are in same range.\n    this.propsInTransition = this.getControllerState({\n      ...this.props,\n      ...viewport\n    }).getViewportProps();\n\n    this.onViewStateChange({\n      viewState: this.propsInTransition,\n      oldViewState: this.props as TransitionProps\n    });\n  };\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\nexport default function assert(condition: any, message?: string): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'deck.gl: assertion failed.');\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {equals} from '@math.gl/core';\nimport assert from '../utils/assert';\n\nexport default abstract class TransitionInterpolator {\n  protected _propsToCompare: string[];\n  protected _propsToExtract: string[];\n  protected _requiredProps?: string[];\n\n  /**\n   * @param opts {array|object}\n   * @param opts.compare {array} - prop names used in equality check\n   * @param opts.extract {array} - prop names needed for interpolation\n   * @param opts.required {array} - prop names that must be supplied\n   * alternatively, supply one list of prop names as `opts` if all of the above are the same.\n   */\n  constructor(opts: {compare: string[]; extract?: string[]; required?: string[]}) {\n    const {compare, extract, required} = opts;\n\n    this._propsToCompare = compare;\n    this._propsToExtract = extract || compare;\n    this._requiredProps = required;\n  }\n\n  /**\n   * Checks if two sets of props need transition in between\n   * @param currentProps {object} - a list of viewport props\n   * @param nextProps {object} - a list of viewport props\n   * @returns {bool} - true if two props are equivalent\n   */\n  arePropsEqual(currentProps: Record<string, any>, nextProps: Record<string, any>): boolean {\n    for (const key of this._propsToCompare) {\n      if (\n        !(key in currentProps) ||\n        !(key in nextProps) ||\n        !equals(currentProps[key], nextProps[key])\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Called before transition starts to validate/pre-process start and end props\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @returns {Object} {start, end} - start and end props to be passed\n   *   to `interpolateProps`\n   */\n  initializeProps(\n    startProps: Record<string, any>,\n    endProps: Record<string, any>\n  ): {\n    start: Record<string, any>;\n    end: Record<string, any>;\n  } {\n    const startViewStateProps = {};\n    const endViewStateProps = {};\n\n    for (const key of this._propsToExtract) {\n      if (key in startProps || key in endProps) {\n        startViewStateProps[key] = startProps[key];\n        endViewStateProps[key] = endProps[key];\n      }\n    }\n\n    this._checkRequiredProps(startViewStateProps);\n    this._checkRequiredProps(endViewStateProps);\n\n    return {start: startViewStateProps, end: endViewStateProps};\n  }\n\n  /**\n   * Returns viewport props in transition\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @param t {number} - a time factor between [0, 1]\n   * @returns {object} - a list of interpolated viewport props\n   */\n  abstract interpolateProps(\n    startProps: Record<string, any>,\n    endProps: Record<string, any>,\n    t: number\n  ): Record<string, any>;\n\n  /**\n   * Returns transition duration\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @returns {Number} - transition duration in milliseconds\n   */\n  getDuration(startProps: Record<string, any>, endProps: Record<string, any>): number {\n    return endProps.transitionDuration;\n  }\n\n  _checkRequiredProps(props) {\n    if (!this._requiredProps) {\n      return;\n    }\n\n    this._requiredProps.forEach(propName => {\n      const value = props[propName];\n      assert(\n        Number.isFinite(value) || Array.isArray(value),\n        `${propName} is required for transition`\n      );\n    });\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport TransitionInterpolator from './transition-interpolator';\nimport {lerp} from '@math.gl/core';\n\nimport type Viewport from '../viewports/viewport';\n\nconst DEFAULT_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nconst DEFAULT_REQUIRED_PROPS = ['longitude', 'latitude', 'zoom'];\n\ntype PropsWithAnchor = {\n  around?: number[];\n  aroundPosition?: number[];\n  [key: string]: any;\n};\n\n/**\n * Performs linear interpolation of two view states.\n */\nexport default class LinearInterpolator extends TransitionInterpolator {\n  opts: {\n    around?: number[];\n    makeViewport?: (props: Record<string, any>) => Viewport;\n  };\n\n  /**\n   * @param {Object} opts\n   * @param {Array} opts.transitionProps - list of props to apply linear transition to.\n   * @param {Array} opts.around - a screen point to zoom/rotate around.\n   * @param {Function} opts.makeViewport - construct a viewport instance with given props.\n   */\n  constructor(\n    opts:\n      | string[]\n      | {\n          transitionProps?:\n            | string[]\n            | {\n                compare: string[];\n                extract?: string[];\n                required?: string[];\n              };\n          around?: number[];\n          makeViewport?: (props: Record<string, any>) => Viewport;\n        } = {}\n  ) {\n    // Backward compatibility\n    const transitionProps = Array.isArray(opts) ? opts : opts.transitionProps;\n\n    const normalizedOpts = Array.isArray(opts) ? {} : opts;\n    normalizedOpts.transitionProps = Array.isArray(transitionProps)\n      ? {\n          compare: transitionProps,\n          required: transitionProps\n        }\n      : transitionProps || {\n          compare: DEFAULT_PROPS,\n          required: DEFAULT_REQUIRED_PROPS\n        };\n\n    super(normalizedOpts.transitionProps);\n    this.opts = normalizedOpts;\n  }\n\n  initializeProps(\n    startProps: Record<string, any>,\n    endProps: Record<string, any>\n  ): {\n    start: PropsWithAnchor;\n    end: PropsWithAnchor;\n  } {\n    const result = super.initializeProps(startProps, endProps);\n\n    const {makeViewport, around} = this.opts;\n    if (makeViewport && around) {\n      const startViewport = makeViewport(startProps);\n      const endViewport = makeViewport(endProps);\n      const aroundPosition = startViewport.unproject(around);\n      result.start.around = around;\n      Object.assign(result.end, {\n        around: endViewport.project(aroundPosition),\n        aroundPosition,\n        width: endProps.width,\n        height: endProps.height\n      });\n    }\n\n    return result;\n  }\n\n  interpolateProps(\n    startProps: PropsWithAnchor,\n    endProps: PropsWithAnchor,\n    t: number\n  ): Record<string, any> {\n    const propsInTransition = {};\n    for (const key of this._propsToExtract) {\n      propsInTransition[key] = lerp(startProps[key] || 0, endProps[key] || 0, t);\n    }\n\n    if (endProps.aroundPosition && this.opts.makeViewport) {\n      // Linear transition should be performed in common space\n      const viewport = this.opts.makeViewport({...endProps, ...propsInTransition});\n      Object.assign(\n        propsInTransition,\n        viewport.panByPosition(\n          endProps.aroundPosition,\n          // anchor point in current screen coordinates\n          lerp(startProps.around as number[], endProps.around as number[], t) as number[]\n        )\n      );\n    }\n    return propsInTransition;\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* eslint-disable max-statements, complexity */\nimport TransitionManager, {TransitionProps} from './transition-manager';\nimport LinearInterpolator from '../transitions/linear-interpolator';\nimport {IViewState} from './view-state';\nimport {ConstructorOf} from '../types/types';\n\nimport type Viewport from '../viewports/viewport';\n\nimport type {EventManager, MjolnirEvent, MjolnirGestureEvent, MjolnirWheelEvent, MjolnirKeyEvent} from 'mjolnir.js';\nimport type {Timeline} from '@luma.gl/engine';\n\nconst NO_TRANSITION_PROPS = {\n  transitionDuration: 0\n} as const;\n\nconst DEFAULT_INERTIA = 300;\nconst INERTIA_EASING = t => 1 - (1 - t) * (1 - t);\n\nconst EVENT_TYPES = {\n  WHEEL: ['wheel'],\n  PAN: ['panstart', 'panmove', 'panend'],\n  PINCH: ['pinchstart', 'pinchmove', 'pinchend'],\n  MULTI_PAN: ['multipanstart', 'multipanmove', 'multipanend'],\n  DOUBLE_CLICK: ['dblclick'],\n  KEYBOARD: ['keydown']\n} as const;\n\n/** Configuration of how user input is handled */\nexport type ControllerOptions = {\n  /** Enable zooming with mouse wheel. Default `true`. */\n  scrollZoom?: boolean | {\n    /** Scaler that translates wheel delta to the change of viewport scale. Default `0.01`. */\n    speed?: number;\n    /** Smoothly transition to the new zoom. If enabled, will provide a slightly lagged but smoother experience. Default `false`. */\n    smooth?: boolean\n  };\n  /** Enable panning with pointer drag. Default `true` */\n  dragPan?: boolean;\n  /** Enable rotating with pointer drag. Default `true` */\n  dragRotate?: boolean;\n  /** Enable zooming with double click. Default `true` */\n  doubleClickZoom?: boolean;\n  /** Enable zooming with multi-touch. Default `true` */\n  touchZoom?: boolean;\n  /** Enable rotating with multi-touch. Use two-finger rotating gesture for horizontal and three-finger swiping gesture for vertical rotation. Default `false` */\n  touchRotate?: boolean;\n  /** Enable interaction with keyboard. Default `true`. */\n  keyboard?:\n    | boolean\n    | {\n        /** Speed of zoom using +/- keys. Default `2` */\n        zoomSpeed?: number;\n        /** Speed of movement using arrow keys, in pixels. */\n        moveSpeed?: number;\n        /** Speed of rotation using shift + left/right arrow keys, in degrees. Default 15. */\n        rotateSpeedX?: number;\n        /** Speed of rotation using shift + up/down arrow keys, in degrees. Default 10. */\n        rotateSpeedY?: number;\n      };\n  /** Drag behavior without pressing function keys, one of `pan` and `rotate`. */\n  dragMode?: 'pan' | 'rotate';\n  /** Enable inertia after panning/pinching. If a number is provided, indicates the duration of time over which the velocity reduces to zero, in milliseconds. Default `false`. */\n  inertia?: boolean | number;\n};\n\nexport type ControllerProps = {\n  /** Identifier of the controller */\n  id: string;\n  /** Viewport x position */\n  x: number;\n  /** Viewport y position */\n  y: number;\n  /** Viewport width */\n  width: number;\n  /** Viewport height */\n  height: number;\n} & ControllerOptions & TransitionProps;\n\n/** The state of a controller */\nexport type InteractionState = {\n  /** If the view state is in transition */\n  inTransition?: boolean;\n  /** If the user is dragging */\n  isDragging?: boolean;\n  /** If the view is being panned, either from user input or transition */\n  isPanning?: boolean;\n  /** If the view is being rotated, either from user input or transition */\n  isRotating?: boolean;\n  /** If the view is being zoomed, either from user input or transition */\n  isZooming?: boolean;\n}\n\n/** Parameters passed to the onViewStateChange callback */\nexport type ViewStateChangeParameters<ViewStateT = any> = {\n  viewId: string;\n  /** The next view state, either from user input or transition */\n  viewState: ViewStateT;\n  /** Object describing the nature of the view state change */\n  interactionState: InteractionState;\n  /** The current view state */\n  oldViewState?: ViewStateT;\n}\n\nconst pinchEventWorkaround: any = {};\n\nexport default abstract class Controller<ControllerState extends IViewState<ControllerState>> {\n  abstract get ControllerState(): ConstructorOf<ControllerState>;\n  abstract get transition(): TransitionProps;\n\n  // @ts-expect-error (2564) - not assigned in the constructor\n  protected props: ControllerProps;\n  protected state: Record<string, any> = {};\n\n  protected transitionManager: TransitionManager<ControllerState>;\n  protected eventManager: EventManager;\n  protected onViewStateChange: (params: ViewStateChangeParameters) => void;\n  protected onStateChange: (state: InteractionState) => void;\n  protected makeViewport: (opts: Record<string, any>) => Viewport\n\n  private _controllerState?: ControllerState;\n  private _events: Record<string, boolean> = {};\n  private _interactionState: InteractionState = {\n    isDragging: false\n  };\n  private _customEvents: string[] = [];\n  private _eventStartBlocked: any = null;\n  private _panMove: boolean = false;\n\n  protected invertPan: boolean = false;\n  protected dragMode: 'pan' | 'rotate' = 'rotate';\n  protected inertia: number = 0;\n  protected scrollZoom: boolean | {speed?: number; smooth?: boolean} = true;\n  protected dragPan: boolean = true;\n  protected dragRotate: boolean = true;\n  protected doubleClickZoom: boolean = true;\n  protected touchZoom: boolean = true;\n  protected touchRotate: boolean = false;\n  protected keyboard:\n    | boolean\n    | {\n        zoomSpeed?: number; //  speed of zoom using +/- keys. Default 2.\n        moveSpeed?: number; //  speed of movement using arrow keys, in pixels.\n        rotateSpeedX?: number; //  speed of rotation using shift + left/right arrow keys, in degrees. Default 15.\n        rotateSpeedY?: number; //  speed of rotation using shift + up/down arrow keys, in degrees. Default 10.\n      } = true;\n\n  constructor(opts: {\n    timeline: Timeline,\n    eventManager: EventManager;\n    makeViewport: (opts: Record<string, any>) => Viewport;\n    onViewStateChange: (params: ViewStateChangeParameters) => void;\n    onStateChange: (state: InteractionState) => void;\n  }) {\n    this.transitionManager = new TransitionManager<ControllerState>({\n      ...opts,\n      getControllerState: props => new this.ControllerState(props),\n      onViewStateChange: this._onTransition.bind(this),\n      onStateChange: this._setInteractionState.bind(this)\n    });\n\n    this.handleEvent = this.handleEvent.bind(this);\n\n    this.eventManager = opts.eventManager;\n    this.onViewStateChange = opts.onViewStateChange || (() => {});\n    this.onStateChange = opts.onStateChange || (() => {});\n    this.makeViewport = opts.makeViewport;\n  }\n\n  set events(customEvents) {\n    this.toggleEvents(this._customEvents, false);\n    this.toggleEvents(customEvents, true);\n    this._customEvents = customEvents;\n    // Make sure default events are not overwritten\n    if (this.props) {\n      this.setProps(this.props);\n    }\n  }\n\n  finalize() {\n    for (const eventName in this._events) {\n      if (this._events[eventName]) {\n        // @ts-ignore (2345) event type string cannot be assifned to enum\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.eventManager?.off(eventName, this.handleEvent);\n      }\n    }\n    this.transitionManager.finalize();\n  }\n\n  /**\n   * Callback for events\n   */\n  handleEvent(event: MjolnirEvent) {\n    // Force recalculate controller state\n    this._controllerState = undefined;\n    const eventStartBlocked = this._eventStartBlocked;\n\n    switch (event.type) {\n      case 'panstart':\n        return eventStartBlocked ? false : this._onPanStart(event);\n      case 'panmove':\n        return this._onPan(event);\n      case 'panend':\n        return this._onPanEnd(event);\n      case 'pinchstart':\n        return eventStartBlocked ? false : this._onPinchStart(event);\n      case 'pinchmove':\n        return this._onPinch(event);\n      case 'pinchend':\n        return this._onPinchEnd(event);\n      case 'multipanstart':\n        return eventStartBlocked ? false : this._onMultiPanStart(event);\n      case 'multipanmove':\n        return this._onMultiPan(event);\n      case 'multipanend':\n        return this._onMultiPanEnd(event);\n      case 'dblclick':\n        return this._onDoubleClick(event);\n      case 'wheel':\n        return this._onWheel(event as MjolnirWheelEvent);\n      case 'keydown':\n        return this._onKeyDown(event as MjolnirKeyEvent);\n      default:\n        return false;\n    }\n  }\n\n  /* Event utils */\n  // Event object: http://hammerjs.github.io/api/#event-object\n  get controllerState(): ControllerState {\n    this._controllerState = this._controllerState || new this.ControllerState({\n      makeViewport: this.makeViewport,\n      ...this.props,\n      ...this.state\n    });\n    return this._controllerState ;\n  }\n\n  getCenter(event: MjolnirGestureEvent | MjolnirWheelEvent) : [number, number] {\n    const {x, y} = this.props;\n    const {offsetCenter} = event;\n    return [offsetCenter.x - x, offsetCenter.y - y];\n  }\n\n  isPointInBounds(pos: [number, number], event: MjolnirEvent): boolean {\n    const {width, height} = this.props;\n    if (event && event.handled) {\n      return false;\n    }\n\n    const inside = pos[0] >= 0 && pos[0] <= width && pos[1] >= 0 && pos[1] <= height;\n    if (inside && event) {\n      event.stopPropagation();\n    }\n    return inside;\n  }\n\n  isFunctionKeyPressed(event: MjolnirEvent): boolean {\n    const {srcEvent} = event;\n    return Boolean(srcEvent.metaKey || srcEvent.altKey || srcEvent.ctrlKey || srcEvent.shiftKey);\n  }\n\n  isDragging(): boolean {\n    return this._interactionState.isDragging || false;\n  }\n\n  // When a multi-touch event ends, e.g. pinch, not all pointers are lifted at the same time.\n  // This triggers a brief `pan` event.\n  // Calling this method will temporarily disable *start events to avoid conflicting transitions.\n  blockEvents(timeout: number): void {\n    /* global setTimeout */\n    const timer = setTimeout(() => {\n      if (this._eventStartBlocked === timer) {\n        this._eventStartBlocked = null;\n      }\n    }, timeout);\n    this._eventStartBlocked = timer;\n  }\n\n  /**\n   * Extract interactivity options\n   */\n  setProps(props: ControllerProps) {\n    if (props.dragMode) {\n      this.dragMode = props.dragMode;\n    }\n    this.props = props;\n\n    if (!('transitionInterpolator' in props)) {\n      // Add default transition interpolator\n      props.transitionInterpolator = this._getTransitionProps().transitionInterpolator;\n    }\n\n    this.transitionManager.processViewStateChange(props);\n\n    const {inertia} = props;\n    this.inertia = Number.isFinite(inertia) ? (inertia as number) : (inertia === true ? DEFAULT_INERTIA : 0);\n\n    // TODO - make sure these are not reset on every setProps\n    const {\n      scrollZoom = true,\n      dragPan = true,\n      dragRotate = true,\n      doubleClickZoom = true,\n      touchZoom = true,\n      touchRotate = false,\n      keyboard = true\n    } = props;\n\n    // Register/unregister events\n    const isInteractive = Boolean(this.onViewStateChange);\n    this.toggleEvents(EVENT_TYPES.WHEEL, isInteractive && scrollZoom);\n    // We always need the pan events to set the correct isDragging state, even if dragPan & dragRotate are both false\n    this.toggleEvents(EVENT_TYPES.PAN, isInteractive);\n    this.toggleEvents(EVENT_TYPES.PINCH, isInteractive && (touchZoom || touchRotate));\n    this.toggleEvents(EVENT_TYPES.MULTI_PAN, isInteractive && touchRotate);\n    this.toggleEvents(EVENT_TYPES.DOUBLE_CLICK, isInteractive && doubleClickZoom);\n    this.toggleEvents(EVENT_TYPES.KEYBOARD, isInteractive && keyboard);\n\n    // Interaction toggles\n    this.scrollZoom = scrollZoom;\n    this.dragPan = dragPan;\n    this.dragRotate = dragRotate;\n    this.doubleClickZoom = doubleClickZoom;\n    this.touchZoom = touchZoom;\n    this.touchRotate = touchRotate;\n    this.keyboard = keyboard;\n  }\n\n  updateTransition() {\n    this.transitionManager.updateTransition();\n  }\n\n  toggleEvents(eventNames, enabled) {\n    if (this.eventManager) {\n      eventNames.forEach(eventName => {\n        if (this._events[eventName] !== enabled) {\n          this._events[eventName] = enabled;\n          if (enabled) {\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            this.eventManager.on(eventName, this.handleEvent);\n          } else {\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            this.eventManager.off(eventName, this.handleEvent);\n          }\n        }\n      });\n    }\n  }\n\n  // Private Methods\n\n  /* Callback util */\n  // formats map state and invokes callback function\n  protected updateViewport(newControllerState: ControllerState, extraProps: Record<string, any> | null = null, interactionState: InteractionState = {}) {\n    const viewState = {...newControllerState.getViewportProps(), ...extraProps};\n\n    // TODO - to restore diffing, we need to include interactionState\n    const changed = this.controllerState !== newControllerState;\n    // const oldViewState = this.controllerState.getViewportProps();\n    // const changed = Object.keys(viewState).some(key => oldViewState[key] !== viewState[key]);\n\n    this.state = newControllerState.getState();\n    this._setInteractionState(interactionState);\n\n    if (changed) {\n      const oldViewState = this.controllerState && this.controllerState.getViewportProps();\n      if (this.onViewStateChange) {\n        this.onViewStateChange({viewState, interactionState: this._interactionState, oldViewState, viewId: this.props.id});\n      }\n    }\n  }\n\n  private _onTransition(params: {viewState: Record<string, any>, oldViewState: Record<string, any>}) {\n    this.onViewStateChange({...params, interactionState: this._interactionState, viewId: this.props.id});\n  }\n\n  private _setInteractionState(newStates: InteractionState) {\n    Object.assign(this._interactionState, newStates);\n    this.onStateChange(this._interactionState);\n  }\n\n  /* Event handlers */\n  // Default handler for the `panstart` event.\n  protected _onPanStart(event: MjolnirGestureEvent): boolean {\n    const pos = this.getCenter(event);\n    if (!this.isPointInBounds(pos, event)) {\n      return false;\n    }\n    let alternateMode = this.isFunctionKeyPressed(event) || event.rightButton || false;\n    if (this.invertPan || this.dragMode === 'pan') {\n      // invertPan is replaced by props.dragMode, keeping for backward compatibility\n      alternateMode = !alternateMode;\n    }\n    const newControllerState = this.controllerState[alternateMode ? 'panStart' : 'rotateStart']({\n      pos\n    });\n    this._panMove = alternateMode;\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {isDragging: true});\n    return true;\n  }\n\n  // Default handler for the `panmove` and `panend` event.\n  protected _onPan(event: MjolnirGestureEvent): boolean {\n    if (!this.isDragging()) {\n      return false;\n    }\n    return this._panMove ? this._onPanMove(event) : this._onPanRotate(event);\n  }\n\n  protected _onPanEnd(event: MjolnirGestureEvent): boolean {\n    if (!this.isDragging()) {\n      return false;\n    }\n    return this._panMove ? this._onPanMoveEnd(event) : this._onPanRotateEnd(event);\n  }\n\n  // Default handler for panning to move.\n  // Called by `_onPan` when panning without function key pressed.\n  protected _onPanMove(event: MjolnirGestureEvent): boolean {\n    if (!this.dragPan) {\n      return false;\n    }\n    const pos = this.getCenter(event);\n    const newControllerState = this.controllerState.pan({pos});\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n      isDragging: true,\n      isPanning: true\n    });\n    return true;\n  }\n\n  protected _onPanMoveEnd(event: MjolnirGestureEvent): boolean {\n    const {inertia} = this;\n    if (this.dragPan && inertia && event.velocity) {\n      const pos = this.getCenter(event);\n      const endPos: [number, number] = [\n        pos[0] + (event.velocityX * inertia) / 2,\n        pos[1] + (event.velocityY * inertia) / 2\n      ];\n      const newControllerState = this.controllerState.pan({pos: endPos}).panEnd();\n      this.updateViewport(\n        newControllerState,\n        {\n          ...this._getTransitionProps(),\n          transitionDuration: inertia,\n          transitionEasing: INERTIA_EASING\n        },\n        {\n          isDragging: false,\n          isPanning: true\n        }\n      );\n    } else {\n      const newControllerState = this.controllerState.panEnd();\n      this.updateViewport(newControllerState, null, {\n        isDragging: false,\n        isPanning: false\n      });\n    }\n    return true;\n  }\n\n  // Default handler for panning to rotate.\n  // Called by `_onPan` when panning with function key pressed.\n  protected _onPanRotate(event: MjolnirGestureEvent): boolean {\n    if (!this.dragRotate) {\n      return false;\n    }\n\n    const pos = this.getCenter(event);\n    const newControllerState = this.controllerState.rotate({pos});\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n      isDragging: true,\n      isRotating: true\n    });\n    return true;\n  }\n\n  protected _onPanRotateEnd(event): boolean {\n    const {inertia} = this;\n    if (this.dragRotate && inertia && event.velocity) {\n      const pos = this.getCenter(event);\n      const endPos: [number, number] = [\n        pos[0] + (event.velocityX * inertia) / 2,\n        pos[1] + (event.velocityY * inertia) / 2\n      ];\n      const newControllerState = this.controllerState.rotate({pos: endPos}).rotateEnd();\n      this.updateViewport(\n        newControllerState,\n        {\n          ...this._getTransitionProps(),\n          transitionDuration: inertia,\n          transitionEasing: INERTIA_EASING\n        },\n        {\n          isDragging: false,\n          isRotating: true\n        }\n      );\n    } else {\n      const newControllerState = this.controllerState.rotateEnd();\n      this.updateViewport(newControllerState, null, {\n        isDragging: false,\n        isRotating: false\n      });\n    }\n    return true;\n  }\n\n  // Default handler for the `wheel` event.\n  protected _onWheel(event: MjolnirWheelEvent): boolean {\n    if (!this.scrollZoom) {\n      return false;\n    }\n\n    const pos = this.getCenter(event);\n    if (!this.isPointInBounds(pos, event)) {\n      return false;\n    }\n    event.srcEvent.preventDefault();\n\n    const {speed = 0.01, smooth = false} = this.scrollZoom === true ? {} : this.scrollZoom;\n    const {delta} = event;\n\n    // Map wheel delta to relative scale\n    let scale = 2 / (1 + Math.exp(-Math.abs(delta * speed)));\n    if (delta < 0 && scale !== 0) {\n      scale = 1 / scale;\n    }\n\n    const newControllerState = this.controllerState.zoom({pos, scale});\n    this.updateViewport(\n      newControllerState,\n      {...this._getTransitionProps({around: pos}), transitionDuration: smooth ? 250 : 1},\n      {\n        isZooming: true,\n        isPanning: true\n      }\n    );\n    return true;\n  }\n\n  protected _onMultiPanStart(event: MjolnirGestureEvent): boolean {\n    const pos = this.getCenter(event);\n    if (!this.isPointInBounds(pos, event)) {\n      return false;\n    }\n    const newControllerState = this.controllerState.rotateStart({pos});\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {isDragging: true});\n    return true;\n  }\n\n  protected _onMultiPan(event: MjolnirGestureEvent): boolean {\n    if (!this.touchRotate) {\n      return false;\n    }\n    if (!this.isDragging()) {\n      return false;\n    }\n\n    const pos = this.getCenter(event);\n    pos[0] -= event.deltaX;\n\n    const newControllerState = this.controllerState.rotate({pos});\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n      isDragging: true,\n      isRotating: true\n    });\n    return true;\n  }\n\n  protected _onMultiPanEnd(event: MjolnirGestureEvent): boolean {\n    if (!this.isDragging()) {\n      return false;\n    }\n    const {inertia} = this;\n    if (this.touchRotate && inertia && event.velocityY) {\n      const pos = this.getCenter(event);\n      const endPos: [number, number] = [pos[0], (pos[1] += (event.velocityY * inertia) / 2)];\n      const newControllerState = this.controllerState.rotate({pos: endPos});\n      this.updateViewport(\n        newControllerState,\n        {\n          ...this._getTransitionProps(),\n          transitionDuration: inertia,\n          transitionEasing: INERTIA_EASING\n        },\n        {\n          isDragging: false,\n          isRotating: true\n        }\n      );\n      this.blockEvents(inertia);\n    } else {\n      const newControllerState = this.controllerState.rotateEnd();\n      this.updateViewport(newControllerState, null, {\n        isDragging: false,\n        isRotating: false\n      });\n    }\n    return true;\n  }\n\n  // Default handler for the `pinchstart` event.\n  protected _onPinchStart(event: MjolnirGestureEvent): boolean {\n    const pos = this.getCenter(event);\n    if (!this.isPointInBounds(pos, event)) {\n      return false;\n    }\n\n    const newControllerState = this.controllerState.zoomStart({pos}).rotateStart({pos});\n    // hack - hammer's `rotation` field doesn't seem to produce the correct angle\n    pinchEventWorkaround._startPinchRotation = event.rotation;\n    pinchEventWorkaround._lastPinchEvent = event;\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {isDragging: true});\n    return true;\n  }\n\n  // Default handler for the `pinchmove` and `pinchend` events.\n  protected _onPinch(event: MjolnirGestureEvent): boolean {\n    if (!this.touchZoom && !this.touchRotate) {\n      return false;\n    }\n    if (!this.isDragging()) {\n      return false;\n    }\n\n    let newControllerState = this.controllerState;\n    if (this.touchZoom) {\n      const {scale} = event;\n      const pos = this.getCenter(event);\n      newControllerState = newControllerState.zoom({pos, scale});\n    }\n    if (this.touchRotate) {\n      const {rotation} = event;\n      newControllerState = newControllerState.rotate({\n        deltaAngleX: pinchEventWorkaround._startPinchRotation - rotation\n      });\n    }\n\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n      isDragging: true,\n      isPanning: this.touchZoom,\n      isZooming: this.touchZoom,\n      isRotating: this.touchRotate\n    });\n    pinchEventWorkaround._lastPinchEvent = event;\n    return true;\n  }\n\n  protected _onPinchEnd(event: MjolnirGestureEvent): boolean {\n    if (!this.isDragging()) {\n      return false;\n    }\n    const {inertia} = this;\n    const {_lastPinchEvent} = pinchEventWorkaround;\n    if (this.touchZoom && inertia && _lastPinchEvent && event.scale !== _lastPinchEvent.scale) {\n      const pos = this.getCenter(event);\n      let newControllerState = this.controllerState.rotateEnd();\n      const z = Math.log2(event.scale);\n      const velocityZ =\n        (z - Math.log2(_lastPinchEvent.scale)) / (event.deltaTime - _lastPinchEvent.deltaTime);\n      const endScale = Math.pow(2, z + (velocityZ * inertia) / 2);\n      newControllerState = newControllerState.zoom({pos, scale: endScale}).zoomEnd();\n\n      this.updateViewport(\n        newControllerState,\n        {\n          ...this._getTransitionProps({around: pos}),\n          transitionDuration: inertia,\n          transitionEasing: INERTIA_EASING\n        },\n        {\n          isDragging: false,\n          isPanning: this.touchZoom,\n          isZooming: this.touchZoom,\n          isRotating: false\n        }\n      );\n      this.blockEvents(inertia);\n    } else {\n      const newControllerState = this.controllerState.zoomEnd().rotateEnd();\n      this.updateViewport(newControllerState, null, {\n        isDragging: false,\n        isPanning: false,\n        isZooming: false,\n        isRotating: false\n      });\n    }\n    pinchEventWorkaround._startPinchRotation = null;\n    pinchEventWorkaround._lastPinchEvent = null;\n    return true;\n  }\n\n  // Default handler for the `dblclick` event.\n  protected _onDoubleClick(event: MjolnirGestureEvent): boolean {\n    if (!this.doubleClickZoom) {\n      return false;\n    }\n    const pos = this.getCenter(event);\n    if (!this.isPointInBounds(pos, event)) {\n      return false;\n    }\n\n    const isZoomOut = this.isFunctionKeyPressed(event);\n\n    const newControllerState = this.controllerState.zoom({pos, scale: isZoomOut ? 0.5 : 2});\n    this.updateViewport(newControllerState, this._getTransitionProps({around: pos}), {\n      isZooming: true,\n      isPanning: true\n    });\n    this.blockEvents(100);\n    return true;\n  }\n\n  // Default handler for the `keydown` event\n  protected _onKeyDown(event: MjolnirKeyEvent): boolean {\n    if (!this.keyboard) {\n      return false;\n    }\n    const funcKey = this.isFunctionKeyPressed(event);\n    // @ts-ignore\n    const {zoomSpeed, moveSpeed, rotateSpeedX, rotateSpeedY} = this.keyboard === true ? {} : this.keyboard;\n    const {controllerState} = this;\n    let newControllerState;\n    const interactionState: InteractionState = {};\n\n    switch (event.srcEvent.code) {\n      case 'Minus':\n        newControllerState = funcKey\n          ? controllerState.zoomOut(zoomSpeed).zoomOut(zoomSpeed)\n          : controllerState.zoomOut(zoomSpeed);\n        interactionState.isZooming = true;\n        break;\n      case 'Equal':\n        newControllerState = funcKey\n          ? controllerState.zoomIn(zoomSpeed).zoomIn(zoomSpeed)\n          : controllerState.zoomIn(zoomSpeed);\n        interactionState.isZooming = true;\n        break;\n      case 'ArrowLeft':\n        if (funcKey) {\n          newControllerState = controllerState.rotateLeft(rotateSpeedX);\n          interactionState.isRotating = true;\n        } else {\n          newControllerState = controllerState.moveLeft(moveSpeed);\n          interactionState.isPanning = true;\n        }\n        break;\n      case 'ArrowRight':\n        if (funcKey) {\n          newControllerState = controllerState.rotateRight(rotateSpeedX);\n          interactionState.isRotating = true;\n        } else {\n          newControllerState = controllerState.moveRight(moveSpeed);\n          interactionState.isPanning = true;\n        }\n        break;\n      case 'ArrowUp':\n        if (funcKey) {\n          newControllerState = controllerState.rotateUp(rotateSpeedY);\n          interactionState.isRotating = true;\n        } else {\n          newControllerState = controllerState.moveUp(moveSpeed);\n          interactionState.isPanning = true;\n        }\n        break;\n      case 'ArrowDown':\n        if (funcKey) {\n          newControllerState = controllerState.rotateDown(rotateSpeedY);\n          interactionState.isRotating = true;\n        } else {\n          newControllerState = controllerState.moveDown(moveSpeed);\n          interactionState.isPanning = true;\n        }\n        break;\n      default:\n        return false;\n    }\n    this.updateViewport(newControllerState, this._getTransitionProps(), interactionState);\n    return true;\n  }\n\n  protected _getTransitionProps(opts?: any): TransitionProps {\n    const {transition} = this;\n\n    if (!transition || !transition.transitionInterpolator) {\n      return NO_TRANSITION_PROPS;\n    }\n\n    // Enables Transitions on double-tap and key-down events.\n    return opts\n      ? {\n        ...transition,\n        transitionInterpolator: new LinearInterpolator({\n          ...opts,\n          ...(transition.transitionInterpolator as LinearInterpolator).opts,\n          makeViewport: this.controllerState.makeViewport\n        })\n      }\n      : transition;\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type Viewport from '../viewports/viewport';\n\nexport default abstract class ViewState<\n  T,\n  Props extends Record<string, any>,\n  State extends Record<string, any>\n> implements IViewState<T>\n{\n  private _viewportProps: Required<Props>;\n  private _state: State;\n\n  constructor(props: Required<Props>, state: State) {\n    this._viewportProps = this.applyConstraints(props);\n    this._state = state;\n  }\n\n  getViewportProps(): Required<Props> {\n    return this._viewportProps;\n  }\n\n  getState(): State {\n    return this._state;\n  }\n\n  abstract applyConstraints(props: Required<Props>): Required<Props>;\n\n  abstract shortestPathFrom(viewState: T): Props;\n\n  abstract panStart(params: {pos: [number, number]}): T;\n  abstract pan({pos, startPos}: {pos: [number, number]; startPos?: [number, number]}): T;\n  abstract panEnd(): T;\n\n  abstract rotateStart(params: {pos: [number, number]}): T;\n  abstract rotate(params: {pos?: [number, number]; deltaAngleX?: number; deltaAngleY: number}): T;\n  abstract rotateEnd(): T;\n\n  abstract zoomStart({pos}: {pos: [number, number]}): T;\n  abstract zoom({\n    pos,\n    startPos,\n    scale\n  }: {\n    pos: [number, number];\n    startPos?: [number, number];\n    scale: number;\n  }): T;\n  abstract zoomEnd(): T;\n\n  abstract zoomIn(speed?: number): T;\n  abstract zoomOut(speed?: number): T;\n\n  abstract moveLeft(speed?: number): T;\n  abstract moveRight(speed?: number): T;\n  abstract moveUp(speed?: number): T;\n  abstract moveDown(speed?: number): T;\n\n  abstract rotateLeft(speed?: number): T;\n  abstract rotateRight(speed?: number): T;\n  abstract rotateUp(speed?: number): T;\n  abstract rotateDown(speed?: number): T;\n}\n\nexport interface IViewState<T> {\n  makeViewport?: (props: Record<string, any>) => Viewport;\n\n  getViewportProps(): Record<string, any>;\n\n  getState(): Record<string, any>;\n\n  shortestPathFrom(viewState: T): Record<string, any>;\n\n  panStart(params: {pos: [number, number]}): T;\n  pan({pos, startPos}: {pos: [number, number]; startPos?: [number, number]}): T;\n  panEnd(): T;\n\n  rotateStart(params: {pos: [number, number]}): T;\n  rotate(params: {pos?: [number, number]; deltaAngleX?: number; deltaAngleY?: number}): T;\n  rotateEnd(): T;\n\n  zoomStart({pos}: {pos: [number, number]}): T;\n  zoom({\n    pos,\n    startPos,\n    scale\n  }: {\n    pos: [number, number];\n    startPos?: [number, number];\n    scale: number;\n  }): T;\n  zoomEnd(): T;\n\n  zoomIn(speed?: number): T;\n  zoomOut(speed?: number): T;\n\n  moveLeft(speed?: number): T;\n  moveRight(speed?: number): T;\n  moveUp(speed?: number): T;\n  moveDown(speed?: number): T;\n\n  rotateLeft(speed?: number): T;\n  rotateRight(speed?: number): T;\n  rotateUp(speed?: number): T;\n  rotateDown(speed?: number): T;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {clamp} from '@math.gl/core';\nimport Controller, {ControllerProps} from './controller';\nimport ViewState from './view-state';\nimport {normalizeViewportProps} from '@math.gl/web-mercator';\nimport assert from '../utils/assert';\n\nimport LinearInterpolator from '../transitions/linear-interpolator';\nimport type Viewport from '../viewports/viewport';\n\nconst PITCH_MOUSE_THRESHOLD = 5;\nconst PITCH_ACCEL = 1.2;\n\nexport type MapStateProps = {\n  /** Mapbox viewport properties */\n  /** The width of the viewport */\n  width: number;\n  /** The height of the viewport */\n  height: number;\n  /** The latitude at the center of the viewport */\n  latitude: number;\n  /** The longitude at the center of the viewport */\n  longitude: number;\n  /** The tile zoom level of the map. */\n  zoom: number;\n  /** The bearing of the viewport in degrees */\n  bearing?: number;\n  /** The pitch of the viewport in degrees */\n  pitch?: number;\n  /**\n   * Specify the altitude of the viewport camera\n   * Unit: map heights, default 1.5\n   * Non-public API, see https://github.com/mapbox/mapbox-gl-js/issues/1137\n   */\n  altitude?: number;\n  /** Viewport position */\n  position?: [number, number, number];\n\n  /** Viewport constraints */\n  maxZoom?: number;\n  minZoom?: number;\n  maxPitch?: number;\n  minPitch?: number;\n\n  /** Normalize viewport props to fit map height into viewport. Default `true` */\n  normalize?: boolean;\n};\n\ntype MapStateInternal = {\n  /** Interaction states, required to calculate change during transform */\n  /* The point on map being grabbed when the operation first started */\n  startPanLngLat?: [number, number];\n  /* Center of the zoom when the operation first started */\n  startZoomLngLat?: [number, number];\n  /* Pointer position when rotation started */\n  startRotatePos?: [number, number];\n  /** Bearing when current perspective rotate operation started */\n  startBearing?: number;\n  /** Pitch when current perspective rotate operation started */\n  startPitch?: number;\n  /** Zoom when current zoom operation started */\n  startZoom?: number;\n};\n\n/* Utils */\n\nexport class MapState extends ViewState<MapState, MapStateProps, MapStateInternal> {\n  makeViewport: (props: Record<string, any>) => Viewport;\n\n  constructor(\n    options: MapStateProps &\n      MapStateInternal & {\n        makeViewport: (props: Record<string, any>) => Viewport;\n      }\n  ) {\n    const {\n      /** Mapbox viewport properties */\n      /** The width of the viewport */\n      width,\n      /** The height of the viewport */\n      height,\n      /** The latitude at the center of the viewport */\n      latitude,\n      /** The longitude at the center of the viewport */\n      longitude,\n      /** The tile zoom level of the map. */\n      zoom,\n      /** The bearing of the viewport in degrees */\n      bearing = 0,\n      /** The pitch of the viewport in degrees */\n      pitch = 0,\n      /**\n       * Specify the altitude of the viewport camera\n       * Unit: map heights, default 1.5\n       * Non-public API, see https://github.com/mapbox/mapbox-gl-js/issues/1137\n       */\n      altitude = 1.5,\n      /** Viewport position */\n      position = [0, 0, 0],\n\n      /** Viewport constraints */\n      maxZoom = 20,\n      minZoom = 0,\n      maxPitch = 60,\n      minPitch = 0,\n\n      /** Interaction states, required to calculate change during transform */\n      /* The point on map being grabbed when the operation first started */\n      startPanLngLat,\n      /* Center of the zoom when the operation first started */\n      startZoomLngLat,\n      /* Pointer position when rotation started */\n      startRotatePos,\n      /** Bearing when current perspective rotate operation started */\n      startBearing,\n      /** Pitch when current perspective rotate operation started */\n      startPitch,\n      /** Zoom when current zoom operation started */\n      startZoom,\n\n      /** Normalize viewport props to fit map height into viewport */\n      normalize = true\n    } = options;\n\n    assert(Number.isFinite(longitude)); // `longitude` must be supplied\n    assert(Number.isFinite(latitude)); // `latitude` must be supplied\n    assert(Number.isFinite(zoom)); // `zoom` must be supplied\n\n    super(\n      {\n        width,\n        height,\n        latitude,\n        longitude,\n        zoom,\n        bearing,\n        pitch,\n        altitude,\n        maxZoom,\n        minZoom,\n        maxPitch,\n        minPitch,\n        normalize,\n        position\n      },\n      {\n        startPanLngLat,\n        startZoomLngLat,\n        startRotatePos,\n        startBearing,\n        startPitch,\n        startZoom\n      }\n    );\n\n    this.makeViewport = options.makeViewport;\n  }\n\n  /**\n   * Start panning\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  panStart({pos}: {pos: [number, number]}): MapState {\n    return this._getUpdatedState({\n      startPanLngLat: this._unproject(pos)\n    });\n  }\n\n  /**\n   * Pan\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   * @param {[Number, Number], optional} startPos - where the pointer grabbed at\n   *   the start of the operation. Must be supplied of `panStart()` was not called\n   */\n  pan({pos, startPos}: {pos: [number, number]; startPos?: [number, number]}): MapState {\n    const startPanLngLat = this.getState().startPanLngLat || this._unproject(startPos);\n\n    if (!startPanLngLat) {\n      return this;\n    }\n\n    const viewport = this.makeViewport(this.getViewportProps());\n    const newProps = viewport.panByPosition(startPanLngLat, pos);\n\n    return this._getUpdatedState(newProps);\n  }\n\n  /**\n   * End panning\n   * Must call if `panStart()` was called\n   */\n  panEnd(): MapState {\n    return this._getUpdatedState({\n      startPanLngLat: null\n    });\n  }\n\n  /**\n   * Start rotating\n   * @param {[Number, Number]} pos - position on screen where the center is\n   */\n  rotateStart({pos}: {pos: [number, number]}): MapState {\n    return this._getUpdatedState({\n      startRotatePos: pos,\n      startBearing: this.getViewportProps().bearing,\n      startPitch: this.getViewportProps().pitch\n    });\n  }\n\n  /**\n   * Rotate\n   * @param {[Number, Number]} pos - position on screen where the center is\n   */\n  rotate({\n    pos,\n    deltaAngleX = 0,\n    deltaAngleY = 0\n  }: {\n    pos?: [number, number];\n    deltaAngleX?: number;\n    deltaAngleY?: number;\n  }): MapState {\n    const {startRotatePos, startBearing, startPitch} = this.getState();\n\n    if (!startRotatePos || startBearing === undefined || startPitch === undefined) {\n      return this;\n    }\n    let newRotation;\n    if (pos) {\n      newRotation = this._getNewRotation(pos, startRotatePos, startPitch, startBearing);\n    } else {\n      newRotation = {\n        bearing: startBearing + deltaAngleX,\n        pitch: startPitch + deltaAngleY\n      };\n    }\n    return this._getUpdatedState(newRotation);\n  }\n\n  /**\n   * End rotating\n   * Must call if `rotateStart()` was called\n   */\n  rotateEnd(): MapState {\n    return this._getUpdatedState({\n      startBearing: null,\n      startPitch: null\n    });\n  }\n\n  /**\n   * Start zooming\n   * @param {[Number, Number]} pos - position on screen where the center is\n   */\n  zoomStart({pos}: {pos: [number, number]}): MapState {\n    return this._getUpdatedState({\n      startZoomLngLat: this._unproject(pos),\n      startZoom: this.getViewportProps().zoom\n    });\n  }\n\n  /**\n   * Zoom\n   * @param {[Number, Number]} pos - position on screen where the current center is\n   * @param {[Number, Number]} startPos - the center position at\n   *   the start of the operation. Must be supplied of `zoomStart()` was not called\n   * @param {Number} scale - a number between [0, 1] specifying the accumulated\n   *   relative scale.\n   */\n  zoom({\n    pos,\n    startPos,\n    scale\n  }: {\n    pos: [number, number];\n    startPos?: [number, number];\n    scale: number;\n  }): MapState {\n    // Make sure we zoom around the current mouse position rather than map center\n    let {startZoom, startZoomLngLat} = this.getState();\n\n    if (!startZoomLngLat) {\n      // We have two modes of zoom:\n      // scroll zoom that are discrete events (transform from the current zoom level),\n      // and pinch zoom that are continuous events (transform from the zoom level when\n      // pinch started).\n      // If startZoom state is defined, then use the startZoom state;\n      // otherwise assume discrete zooming\n      startZoom = this.getViewportProps().zoom;\n      startZoomLngLat = this._unproject(startPos) || this._unproject(pos);\n    }\n    if (!startZoomLngLat) {\n      return this;\n    }\n\n    const {maxZoom, minZoom} = this.getViewportProps();\n    let zoom = (startZoom as number) + Math.log2(scale);\n    zoom = clamp(zoom, minZoom, maxZoom);\n\n    const zoomedViewport = this.makeViewport({...this.getViewportProps(), zoom});\n\n    return this._getUpdatedState({\n      zoom,\n      ...zoomedViewport.panByPosition(startZoomLngLat, pos)\n    });\n  }\n\n  /**\n   * End zooming\n   * Must call if `zoomStart()` was called\n   */\n  zoomEnd(): MapState {\n    return this._getUpdatedState({\n      startZoomLngLat: null,\n      startZoom: null\n    });\n  }\n\n  zoomIn(speed: number = 2): MapState {\n    return this._zoomFromCenter(speed);\n  }\n\n  zoomOut(speed: number = 2): MapState {\n    return this._zoomFromCenter(1 / speed);\n  }\n\n  moveLeft(speed: number = 100): MapState {\n    return this._panFromCenter([speed, 0]);\n  }\n\n  moveRight(speed: number = 100): MapState {\n    return this._panFromCenter([-speed, 0]);\n  }\n\n  moveUp(speed: number = 100): MapState {\n    return this._panFromCenter([0, speed]);\n  }\n\n  moveDown(speed: number = 100): MapState {\n    return this._panFromCenter([0, -speed]);\n  }\n\n  rotateLeft(speed: number = 15): MapState {\n    return this._getUpdatedState({\n      bearing: this.getViewportProps().bearing - speed\n    });\n  }\n\n  rotateRight(speed: number = 15): MapState {\n    return this._getUpdatedState({\n      bearing: this.getViewportProps().bearing + speed\n    });\n  }\n\n  rotateUp(speed: number = 10): MapState {\n    return this._getUpdatedState({\n      pitch: this.getViewportProps().pitch + speed\n    });\n  }\n\n  rotateDown(speed: number = 10): MapState {\n    return this._getUpdatedState({\n      pitch: this.getViewportProps().pitch - speed\n    });\n  }\n\n  shortestPathFrom(viewState: MapState): MapStateProps {\n    // const endViewStateProps = new this.ControllerState(endProps).shortestPathFrom(startViewstate);\n    const fromProps = viewState.getViewportProps();\n    const props = {...this.getViewportProps()};\n    const {bearing, longitude} = props;\n\n    if (Math.abs(bearing - fromProps.bearing) > 180) {\n      props.bearing = bearing < 0 ? bearing + 360 : bearing - 360;\n    }\n    if (Math.abs(longitude - fromProps.longitude) > 180) {\n      props.longitude = longitude < 0 ? longitude + 360 : longitude - 360;\n    }\n    return props;\n  }\n\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  applyConstraints(props: Required<MapStateProps>): Required<MapStateProps> {\n    // Ensure zoom is within specified range\n    const {maxZoom, minZoom, zoom} = props;\n    props.zoom = clamp(zoom, minZoom, maxZoom);\n\n    // Ensure pitch is within specified range\n    const {maxPitch, minPitch, pitch} = props;\n    props.pitch = clamp(pitch, minPitch, maxPitch);\n\n    // Normalize viewport props to fit map height into viewport\n    const {normalize = true} = props;\n    if (normalize) {\n      Object.assign(props, normalizeViewportProps(props));\n    }\n\n    return props;\n  }\n\n  /* Private methods */\n\n  _zoomFromCenter(scale) {\n    const {width, height} = this.getViewportProps();\n    return this.zoom({\n      pos: [width / 2, height / 2],\n      scale\n    });\n  }\n\n  _panFromCenter(offset) {\n    const {width, height} = this.getViewportProps();\n    return this.pan({\n      startPos: [width / 2, height / 2],\n      pos: [width / 2 + offset[0], height / 2 + offset[1]]\n    });\n  }\n\n  _getUpdatedState(newProps): MapState {\n    // @ts-ignore\n    return new this.constructor({\n      makeViewport: this.makeViewport,\n      ...this.getViewportProps(),\n      ...this.getState(),\n      ...newProps\n    });\n  }\n\n  _unproject(pos?: [number, number]): [number, number] | undefined {\n    const viewport = this.makeViewport(this.getViewportProps());\n    // @ts-ignore\n    return pos && viewport.unproject(pos);\n  }\n\n  _getNewRotation(\n    pos: [number, number],\n    startPos: [number, number],\n    startPitch: number,\n    startBearing: number\n  ): {\n    pitch: number;\n    bearing: number;\n  } {\n    const deltaX = pos[0] - startPos[0];\n    const deltaY = pos[1] - startPos[1];\n    const centerY = pos[1];\n    const startY = startPos[1];\n    const {width, height} = this.getViewportProps();\n\n    const deltaScaleX = deltaX / width;\n    let deltaScaleY = 0;\n\n    if (deltaY > 0) {\n      if (Math.abs(height - startY) > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to -1 as we drag upwards\n        deltaScaleY = (deltaY / (startY - height)) * PITCH_ACCEL;\n      }\n    } else if (deltaY < 0) {\n      if (startY > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to 1 as we drag upwards\n        deltaScaleY = 1 - centerY / startY;\n      }\n    }\n    // clamp deltaScaleY to [-1, 1] so that rotation is constrained between minPitch and maxPitch.\n    // deltaScaleX does not need to be clamped as bearing does not have constraints.\n    deltaScaleY = clamp(deltaScaleY, -1, 1);\n\n    const {minPitch, maxPitch} = this.getViewportProps();\n\n    const bearing = startBearing + 180 * deltaScaleX;\n    let pitch = startPitch;\n    if (deltaScaleY > 0) {\n      // Gradually increase pitch\n      pitch = startPitch + deltaScaleY * (maxPitch - startPitch);\n    } else if (deltaScaleY < 0) {\n      // Gradually decrease pitch\n      pitch = startPitch - deltaScaleY * (minPitch - startPitch);\n    }\n\n    return {\n      pitch,\n      bearing\n    };\n  }\n}\n\nexport default class MapController extends Controller<MapState> {\n  ControllerState = MapState;\n\n  transition = {\n    transitionDuration: 300,\n    transitionInterpolator: new LinearInterpolator({\n      transitionProps: {\n        compare: ['longitude', 'latitude', 'zoom', 'bearing', 'pitch', 'position'],\n        required: ['longitude', 'latitude', 'zoom']\n      }\n    })\n  };\n\n  dragMode: 'pan' | 'rotate' = 'pan';\n\n  setProps(props: ControllerProps & MapStateProps) {\n    props.position = props.position || [0, 0, 0];\n    const oldProps = this.props;\n\n    super.setProps(props);\n\n    const dimensionChanged = !oldProps || oldProps.height !== props.height;\n    if (dimensionChanged) {\n      // Dimensions changed, normalize the props\n      this.updateViewport(\n        new this.ControllerState({\n          makeViewport: this.makeViewport,\n          ...props,\n          ...this.state\n        })\n      );\n    }\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport View, {CommonViewState, CommonViewProps} from './view';\nimport WebMercatorViewport from '../viewports/web-mercator-viewport';\nimport MapController from '../controllers/map-controller';\n\nimport type {NumericArray} from '../types/types';\n\nexport type MapViewState = {\n  /** Longitude of the map center */\n  longitude: number;\n  /** Latitude of the map center */\n  latitude: number;\n  /** Zoom level */\n  zoom: number;\n  /** Pitch (tilt) of the map, in degrees. `0` looks top down */\n  pitch?: number;\n  /** Bearing (rotation) of the map, in degrees. `0` is north up */\n  bearing?: number;\n  /** Min zoom, default `0` */\n  minZoom?: number;\n  /** Max zoom, default `20` */\n  maxZoom?: number;\n  /** Min pitch, default `0` */\n  minPitch?: number;\n  /** Max pitch, default `60` */\n  maxPitch?: number;\n  /** Viewport center offsets from lng, lat in meters */\n  position?: number[];\n  /** The near plane position */\n  nearZ?: number;\n  /** The far plane position */\n  farZ?: number;\n} & CommonViewState;\n\nexport type MapViewProps = {\n  /** Whether to render multiple copies of the map at low zoom levels. Default `false`. */\n  repeat?: boolean;\n  /** Scaler for the near plane, 1 unit equals to the height of the viewport. Default to `0.1`. Overwrites the `near` parameter. */\n  nearZMultiplier?: number;\n  /** Scaler for the far plane, 1 unit equals to the distance from the camera to the top edge of the screen. Default to `1.01`. Overwrites the `far` parameter. */\n  farZMultiplier?: number;\n  /** Custom projection matrix */\n  projectionMatrix?: NumericArray;\n  /** Field of view covered by the camera, in the perspective case. In degrees. If not supplied, will be calculated from `altitude`. */\n  fovy?: number;\n  /** Distance of the camera relative to viewport height. Default `1.5`. */\n  altitude?: number;\n  /** Whether to create an orthographic or perspective projection matrix. Default is `false` (perspective projection). */\n  orthographic?: boolean;\n} & CommonViewProps<MapViewState>;\n\nexport default class MapView extends View<MapViewState, MapViewProps> {\n  static displayName = 'MapView';\n\n  constructor(props: MapViewProps = {}) {\n    super(props);\n  }\n\n  getViewportType() {\n    return WebMercatorViewport;\n  }\n\n  get ControllerType() {\n    return MapController;\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {deepEqual} from '../utils/deep-equal';\nimport LightingEffect from '../effects/lighting/lighting-effect';\nimport type {Effect, EffectContext} from './effect';\n\nconst DEFAULT_LIGHTING_EFFECT = new LightingEffect();\n\n/** Sort two effects. Returns 0 if equal, negative if e1 < e2, positive if e1 > e2 */\nfunction compareEffects(e1: Effect, e2: Effect): number {\n  const o1 = e1.order ?? Infinity;\n  const o2 = e2.order ?? Infinity;\n  return o1 - o2;\n}\n\nexport default class EffectManager {\n  effects: Effect[];\n  private _resolvedEffects: Effect[] = [];\n  /** Effect instances and order preference pairs, sorted by order */\n  private _defaultEffects: Effect[] = [];\n  private _needsRedraw: false | string;\n  private _context: EffectContext;\n\n  constructor(context: EffectContext) {\n    this.effects = [];\n    this._context = context;\n    this._needsRedraw = 'Initial render';\n    this._setEffects([]);\n  }\n\n  /**\n   * Register a new default effect, i.e. an effect presents regardless of user supplied props.effects\n   */\n  addDefaultEffect(effect: Effect) {\n    const defaultEffects = this._defaultEffects;\n    if (!defaultEffects.find(e => e.id === effect.id)) {\n      const index = defaultEffects.findIndex(e => compareEffects(e, effect) > 0);\n      if (index < 0) {\n        defaultEffects.push(effect);\n      } else {\n        defaultEffects.splice(index, 0, effect);\n      }\n      effect.setup(this._context);\n      this._setEffects(this.effects);\n    }\n  }\n\n  setProps(props) {\n    if ('effects' in props) {\n      // Compare effects against each other shallowly\n      if (!deepEqual(props.effects, this.effects, 1)) {\n        this._setEffects(props.effects);\n      }\n    }\n  }\n\n  needsRedraw(opts = {clearRedrawFlags: false}): false | string {\n    const redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n    return redraw;\n  }\n\n  getEffects() {\n    return this._resolvedEffects;\n  }\n\n  private _setEffects(effects: Effect[]) {\n    const oldEffectsMap: Record<string, Effect> = {};\n    for (const effect of this.effects) {\n      oldEffectsMap[effect.id] = effect;\n    }\n\n    const nextEffects: Effect[] = [];\n    for (const effect of effects) {\n      const oldEffect = oldEffectsMap[effect.id];\n      let effectToAdd = effect;\n      if (oldEffect && oldEffect !== effect) {\n        if (oldEffect.setProps) {\n          oldEffect.setProps(effect.props);\n          effectToAdd = oldEffect;\n        } else {\n          oldEffect.cleanup(this._context);\n        }\n      } else if (!oldEffect) {\n        effect.setup(this._context);\n      }\n      nextEffects.push(effectToAdd);\n      delete oldEffectsMap[effect.id];\n    }\n    for (const removedEffectId in oldEffectsMap) {\n      oldEffectsMap[removedEffectId].cleanup(this._context);\n    }\n    this.effects = nextEffects;\n\n    this._resolvedEffects = nextEffects.concat(this._defaultEffects);\n    // Special case for lighting: only add default instance if no LightingEffect is specified\n    if (!effects.some(effect => effect instanceof LightingEffect)) {\n      this._resolvedEffects.push(DEFAULT_LIGHTING_EFFECT);\n    }\n    this._needsRedraw = 'effects changed';\n  }\n\n  finalize() {\n    for (const effect of this._resolvedEffects) {\n      effect.cleanup(this._context);\n    }\n\n    this.effects.length = 0;\n    this._resolvedEffects.length = 0;\n    this._defaultEffects.length = 0;\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport LayersPass from './layers-pass';\n\nexport default class DrawLayersPass extends LayersPass {\n  shouldDrawLayer(layer) {\n    const {operation} = layer.props;\n    return operation.includes('draw') || operation.includes('terrain');\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device} from '@luma.gl/core';\nimport {Framebuffer} from '@luma.gl/core';\nimport debug from '../debug/index';\nimport DrawLayersPass from '../passes/draw-layers-pass';\nimport PickLayersPass from '../passes/pick-layers-pass';\n\nimport type Layer from './layer';\nimport type Viewport from '../viewports/viewport';\nimport type View from '../views/view';\nimport type {Effect, PostRenderOptions} from './effect';\nimport type {LayersPassRenderOptions, FilterContext} from '../passes/layers-pass';\n\nconst TRACE_RENDER_LAYERS = 'deckRenderer.renderLayers';\n\ntype LayerFilter = ((context: FilterContext) => boolean) | null;\n\nexport default class DeckRenderer {\n  device: Device;\n  layerFilter: LayerFilter;\n  drawPickingColors: boolean;\n  drawLayersPass: DrawLayersPass;\n  pickLayersPass: PickLayersPass;\n\n  private renderCount: number;\n  private _needsRedraw: string | false;\n  private renderBuffers: Framebuffer[];\n  private lastPostProcessEffect: string | null;\n\n  constructor(device: Device) {\n    this.device = device;\n    this.layerFilter = null;\n    this.drawPickingColors = false;\n    this.drawLayersPass = new DrawLayersPass(device);\n    this.pickLayersPass = new PickLayersPass(device);\n    this.renderCount = 0;\n    this._needsRedraw = 'Initial render';\n    this.renderBuffers = [];\n    this.lastPostProcessEffect = null;\n  }\n\n  setProps(props: {layerFilter: LayerFilter; drawPickingColors: boolean}) {\n    if (this.layerFilter !== props.layerFilter) {\n      this.layerFilter = props.layerFilter;\n      this._needsRedraw = 'layerFilter changed';\n    }\n\n    if (this.drawPickingColors !== props.drawPickingColors) {\n      this.drawPickingColors = props.drawPickingColors;\n      this._needsRedraw = 'drawPickingColors changed';\n    }\n  }\n\n  renderLayers(opts: {\n    pass: string;\n    layers: Layer[];\n    viewports: Viewport[];\n    views: {[viewId: string]: View};\n    onViewportActive: (viewport: Viewport) => void;\n    effects: Effect[];\n    target?: Framebuffer | null;\n    layerFilter?: LayerFilter;\n    clearStack?: boolean;\n    clearCanvas?: boolean;\n  }) {\n    if (!opts.viewports.length) {\n      return;\n    }\n\n    const layerPass = this.drawPickingColors ? this.pickLayersPass : this.drawLayersPass;\n\n    const renderOpts: LayersPassRenderOptions = {\n      layerFilter: this.layerFilter,\n      isPicking: this.drawPickingColors,\n      ...opts\n    };\n\n    if (renderOpts.effects) {\n      this._preRender(renderOpts.effects, renderOpts);\n    }\n\n    const outputBuffer = this.lastPostProcessEffect ? this.renderBuffers[0] : renderOpts.target;\n    if (this.lastPostProcessEffect) {\n      renderOpts.clearColor = [0, 0, 0, 0];\n      renderOpts.clearCanvas = true;\n    }\n    const renderStats = layerPass.render({...renderOpts, target: outputBuffer});\n\n    if (renderOpts.effects) {\n      this._postRender(renderOpts.effects, renderOpts);\n    }\n\n    this.renderCount++;\n\n    debug(TRACE_RENDER_LAYERS, this, renderStats, opts);\n  }\n\n  needsRedraw(opts: {clearRedrawFlags: boolean} = {clearRedrawFlags: false}): string | false {\n    const redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n    return redraw;\n  }\n\n  finalize() {\n    const {renderBuffers} = this;\n    for (const buffer of renderBuffers) {\n      buffer.delete();\n    }\n    renderBuffers.length = 0;\n  }\n\n  private _preRender(effects: Effect[], opts: LayersPassRenderOptions) {\n    this.lastPostProcessEffect = null;\n    opts.preRenderStats = opts.preRenderStats || {};\n\n    for (const effect of effects) {\n      opts.preRenderStats[effect.id] = effect.preRender(opts);\n      if (effect.postRender) {\n        this.lastPostProcessEffect = effect.id;\n      }\n    }\n\n    if (this.lastPostProcessEffect) {\n      this._resizeRenderBuffers();\n    }\n  }\n\n  private _resizeRenderBuffers() {\n    const {renderBuffers} = this;\n    const size = this.device.canvasContext!.getDrawingBufferSize();\n    if (renderBuffers.length === 0) {\n      [0, 1].map(i => {\n        const texture = this.device.createTexture({\n          sampler: {minFilter: 'linear', magFilter: 'linear'}\n        });\n        renderBuffers.push(\n          this.device.createFramebuffer({\n            id: `deck-renderbuffer-${i}`,\n            colorAttachments: [texture]\n          })\n        );\n      });\n    }\n    for (const buffer of renderBuffers) {\n      buffer.resize(size);\n    }\n  }\n\n  private _postRender(effects: Effect[], opts: LayersPassRenderOptions) {\n    const {renderBuffers} = this;\n    const params: PostRenderOptions = {\n      ...opts,\n      inputBuffer: renderBuffers[0],\n      swapBuffer: renderBuffers[1]\n    };\n    for (const effect of effects) {\n      if (effect.postRender) {\n        // If not the last post processing effect, unset the target so that\n        // it only renders between the swap buffers\n        params.target = effect.id === this.lastPostProcessEffect ? opts.target : undefined;\n        const buffer = effect.postRender(params);\n        // Buffer cannot be null if target is unset\n        params.inputBuffer = buffer!;\n        params.swapBuffer = buffer === renderBuffers[0] ? renderBuffers[1] : renderBuffers[0];\n      }\n    }\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport log from '../../utils/log';\nimport type Layer from '../layer';\nimport type Viewport from '../../viewports/viewport';\nimport type {PickingColorDecoder} from '../../passes/pick-layers-pass';\n\nexport type PickedPixel = {\n  pickedColor: Uint8Array | null;\n  pickedLayer?: Layer;\n  pickedViewports?: Viewport[];\n  pickedX?: number;\n  pickedY?: number;\n  pickedObjectIndex: number;\n};\n\nconst NO_PICKED_OBJECT = {\n  pickedColor: null,\n  pickedObjectIndex: -1\n};\n\n/* eslint-disable max-depth, max-statements */\n/**\n * Pick at a specified pixel with a tolerance radius\n * Returns the closest object to the pixel in shape `{pickedColor, pickedLayer, pickedObjectIndex}`\n */\nexport function getClosestObject({\n  pickedColors,\n  decodePickingColor,\n  deviceX,\n  deviceY,\n  deviceRadius,\n  deviceRect\n}: {\n  pickedColors: Uint8Array;\n  decodePickingColor: PickingColorDecoder;\n  deviceX: number;\n  deviceY: number;\n  deviceRadius: number;\n  deviceRect: {x: number; y: number; width: number; height: number};\n}): PickedPixel {\n  // Traverse all pixels in picking results and find the one closest to the supplied\n  // [deviceX, deviceY]\n  const {x, y, width, height} = deviceRect;\n  let minSquareDistanceToCenter = deviceRadius * deviceRadius;\n  let closestPixelIndex = -1;\n  let i = 0;\n\n  for (let row = 0; row < height; row++) {\n    const dy = row + y - deviceY;\n    const dy2 = dy * dy;\n\n    if (dy2 > minSquareDistanceToCenter) {\n      // skip this row\n      i += 4 * width;\n    } else {\n      for (let col = 0; col < width; col++) {\n        // Decode picked layer from color\n        const pickedLayerIndex = pickedColors[i + 3] - 1;\n\n        if (pickedLayerIndex >= 0) {\n          const dx = col + x - deviceX;\n          const d2 = dx * dx + dy2;\n\n          if (d2 <= minSquareDistanceToCenter) {\n            minSquareDistanceToCenter = d2;\n            closestPixelIndex = i;\n          }\n        }\n        i += 4;\n      }\n    }\n  }\n\n  if (closestPixelIndex >= 0) {\n    // Decode picked object index from color\n    const pickedColor = pickedColors.slice(closestPixelIndex, closestPixelIndex + 4);\n    const pickedObject = decodePickingColor(pickedColor);\n    if (pickedObject) {\n      const dy = Math.floor(closestPixelIndex / 4 / width);\n      const dx = closestPixelIndex / 4 - dy * width;\n      return {\n        ...pickedObject,\n        pickedColor,\n        pickedX: x + dx,\n        pickedY: y + dy\n      };\n    }\n    log.error('Picked non-existent layer. Is picking buffer corrupt?')();\n  }\n  return NO_PICKED_OBJECT;\n}\n\n/**\n * Examines a picking buffer for unique colors\n * Returns array of unique objects in shape `{x, y, pickedColor, pickedLayer, pickedObjectIndex}`\n */\nexport function getUniqueObjects({\n  pickedColors,\n  decodePickingColor\n}: {\n  pickedColors: Uint8Array;\n  decodePickingColor: PickingColorDecoder;\n}): PickedPixel[] {\n  const uniqueColors = new Map();\n\n  // Traverse all pixels in picking results and get unique colors\n  if (pickedColors) {\n    for (let i = 0; i < pickedColors.length; i += 4) {\n      // Decode picked layer from color\n      const pickedLayerIndex = pickedColors[i + 3] - 1;\n\n      if (pickedLayerIndex >= 0) {\n        const pickedColor = pickedColors.slice(i, i + 4);\n        const colorKey = pickedColor.join(',');\n        // eslint-disable-next-line\n        if (!uniqueColors.has(colorKey)) {\n          const pickedObject = decodePickingColor(pickedColor);\n          // eslint-disable-next-line\n          if (pickedObject) {\n            uniqueColors.set(colorKey, {\n              ...pickedObject,\n              color: pickedColor\n            });\n          } else {\n            log.error('Picked non-existent layer. Is picking buffer corrupt?')();\n          }\n        }\n      }\n    }\n  }\n\n  return Array.from(uniqueColors.values());\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type Layer from '../layer';\nimport type Viewport from '../../viewports/viewport';\nimport type {PickedPixel} from './query-object';\n\nexport type PickingInfo<DataT = any, ExtraInfo = {}> = ExtraInfo & {\n  color: Uint8Array | null;\n  layer: Layer | null;\n  sourceLayer?: Layer | null;\n  viewport?: Viewport;\n  index: number;\n  picked: boolean;\n  object?: DataT;\n  x: number;\n  y: number;\n  pixel?: [number, number];\n  coordinate?: number[];\n  devicePixel?: [number, number];\n  pixelRatio: number;\n};\n\nexport interface GetPickingInfoParams<DataT = any, ExtraInfo = {}> {\n  info: PickingInfo<DataT, ExtraInfo>;\n  mode: string;\n  sourceLayer: Layer | null;\n}\n\n/** Generates some basic information of the picking action: x, y, coordinates etc.\n * Regardless if anything is picked\n */\nexport function getEmptyPickingInfo({\n  pickInfo,\n  viewports,\n  pixelRatio,\n  x,\n  y,\n  z\n}: {\n  pickInfo?: PickedPixel;\n  viewports: Viewport[];\n  pixelRatio: number;\n  x: number;\n  y: number;\n  z?: number;\n}): PickingInfo {\n  // If more than one viewports are used in the picking pass, locate the viewport that\n  // drew the picked pixel\n  let pickedViewport = viewports[0];\n  if (viewports.length > 1) {\n    // Find the viewport that contain the picked pixel\n    pickedViewport = getViewportFromCoordinates(pickInfo?.pickedViewports || viewports, {x, y});\n  }\n  let coordinate: number[] | undefined;\n  if (pickedViewport) {\n    const point = [x - pickedViewport.x, y - pickedViewport.y];\n    if (z !== undefined) {\n      point[2] = z;\n    }\n    coordinate = pickedViewport.unproject(point);\n  }\n\n  return {\n    color: null,\n    layer: null,\n    viewport: pickedViewport,\n    index: -1,\n    picked: false,\n    x,\n    y,\n    pixel: [x, y],\n    coordinate,\n    devicePixel:\n      pickInfo && 'pickedX' in pickInfo\n        ? [pickInfo.pickedX as number, pickInfo.pickedY as number]\n        : undefined,\n    pixelRatio\n  };\n}\n\n/* eslint-disable max-depth */\n/** Generates the picking info of a picking operation */\nexport function processPickInfo(opts: {\n  pickInfo: PickedPixel;\n  lastPickedInfo: {\n    index: number;\n    layerId: string | null;\n    info: PickingInfo | null;\n  };\n  mode: string;\n  layers: Layer[];\n  viewports: Viewport[];\n  pixelRatio: number;\n  x: number;\n  y: number;\n  z?: number;\n}): Map<string | null, PickingInfo> {\n  const {pickInfo, lastPickedInfo, mode, layers} = opts;\n  const {pickedColor, pickedLayer, pickedObjectIndex} = pickInfo;\n\n  const affectedLayers = pickedLayer ? [pickedLayer] : [];\n\n  if (mode === 'hover') {\n    // only invoke onHover events if picked object has changed\n    const lastPickedPixelIndex = lastPickedInfo.index;\n    const lastPickedLayerId = lastPickedInfo.layerId;\n    const pickedLayerId = pickedLayer ? pickedLayer.props.id : null;\n\n    // proceed only if picked object changed\n    if (pickedLayerId !== lastPickedLayerId || pickedObjectIndex !== lastPickedPixelIndex) {\n      if (pickedLayerId !== lastPickedLayerId) {\n        // We cannot store a ref to lastPickedLayer in the context because\n        // the state of an outdated layer is no longer valid\n        // and the props may have changed\n        const lastPickedLayer = layers.find(layer => layer.props.id === lastPickedLayerId);\n        if (lastPickedLayer) {\n          // Let leave event fire before enter event\n          affectedLayers.unshift(lastPickedLayer);\n        }\n      }\n\n      // Update layer manager context\n      lastPickedInfo.layerId = pickedLayerId;\n      lastPickedInfo.index = pickedObjectIndex;\n      lastPickedInfo.info = null;\n    }\n  }\n\n  const baseInfo = getEmptyPickingInfo(opts);\n\n  // Use a Map to store all picking infos.\n  // The following two forEach loops are the result of\n  // https://github.com/visgl/deck.gl/issues/443\n  // Please be very careful when changing this pattern\n  const infos = new Map();\n\n  // Make sure infos always contain something even if no layer is affected\n  infos.set(null, baseInfo);\n\n  affectedLayers.forEach(layer => {\n    let info = {...baseInfo};\n\n    if (layer === pickedLayer) {\n      info.color = pickedColor;\n      info.index = pickedObjectIndex;\n      info.picked = true;\n    }\n\n    info = getLayerPickingInfo({layer, info, mode});\n    const rootLayer = info.layer as Layer;\n\n    if (layer === pickedLayer && mode === 'hover') {\n      lastPickedInfo.info = info;\n    }\n\n    // This guarantees that there will be only one copy of info for\n    // one composite layer\n    infos.set(rootLayer.id, info);\n\n    if (mode === 'hover') {\n      rootLayer.updateAutoHighlight(info);\n    }\n  });\n\n  return infos;\n}\n\n/** Walk up the layer composite chain to populate the info object */\nexport function getLayerPickingInfo({\n  layer,\n  info,\n  mode\n}: {\n  layer: Layer;\n  info: PickingInfo;\n  mode: string;\n}): PickingInfo {\n  while (layer && info) {\n    // For a composite layer, sourceLayer will point to the sublayer\n    // where the event originates from.\n    // It provides additional context for the composite layer's\n    // getPickingInfo() method to populate the info object\n    const sourceLayer = info.layer || null;\n    info.sourceLayer = sourceLayer;\n    info.layer = layer;\n    // layer.pickLayer() function requires a non-null ```layer.state```\n    // object to function properly. So the layer referenced here\n    // must be the \"current\" layer, not an \"out-dated\" / \"invalidated\" layer\n    info = layer.getPickingInfo({info, mode, sourceLayer});\n    layer = layer.parent as Layer;\n  }\n  return info;\n}\n\n/** Indentifies which viewport, if any corresponds to x and y\n   If multiple viewports contain the target pixel, last viewport drawn is returend\n   Returns first viewport if no match */\nfunction getViewportFromCoordinates(\n  viewports: Viewport[],\n  pixel: {x: number; y: number}\n): Viewport {\n  // find the last viewport that contains the pixel\n  for (let i = viewports.length - 1; i >= 0; i--) {\n    const viewport = viewports[i];\n    if (viewport.containsPixel(pixel)) {\n      return viewport;\n    }\n  }\n  return viewports[0];\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device} from '@luma.gl/core';\nimport PickLayersPass, {PickingColorDecoder} from '../passes/pick-layers-pass';\nimport {getClosestObject, getUniqueObjects, PickedPixel} from './picking/query-object';\nimport {\n  processPickInfo,\n  getLayerPickingInfo,\n  getEmptyPickingInfo,\n  PickingInfo\n} from './picking/pick-info';\n\nimport type {Framebuffer} from '@luma.gl/core';\nimport type {FilterContext, Rect} from '../passes/layers-pass';\nimport type Layer from './layer';\nimport type {Effect} from './effect';\nimport type View from '../views/view';\nimport type Viewport from '../viewports/viewport';\n\nexport type PickByPointOptions = {\n  x: number;\n  y: number;\n  radius?: number;\n  depth?: number;\n  mode?: string;\n  unproject3D?: boolean;\n};\n\nexport type PickByRectOptions = {\n  x: number;\n  y: number;\n  width?: number;\n  height?: number;\n  mode?: string;\n  maxObjects?: number | null;\n};\n\ntype PickOperationContext = {\n  layers: Layer[];\n  views: Record<string, View>;\n  viewports: Viewport[];\n  onViewportActive: (viewport: Viewport) => void;\n  effects: Effect[];\n};\n\n/** Manages picking in a Deck context */\nexport default class DeckPicker {\n  device: Device;\n  pickingFBO?: Framebuffer;\n  depthFBO?: Framebuffer;\n  pickLayersPass: PickLayersPass;\n  layerFilter?: (context: FilterContext) => boolean;\n\n  /** Identifiers of the previously picked object, for callback tracking and auto highlight */\n  lastPickedInfo: {\n    index: number;\n    layerId: string | null;\n    info: PickingInfo | null;\n  };\n\n  _pickable: boolean = true;\n\n  constructor(device: Device) {\n    this.device = device;\n    this.pickLayersPass = new PickLayersPass(device);\n    this.lastPickedInfo = {\n      index: -1,\n      layerId: null,\n      info: null\n    };\n  }\n\n  setProps(props: any): void {\n    if ('layerFilter' in props) {\n      this.layerFilter = props.layerFilter;\n    }\n\n    if ('_pickable' in props) {\n      this._pickable = props._pickable;\n    }\n  }\n\n  finalize() {\n    if (this.pickingFBO) {\n      this.pickingFBO.destroy();\n    }\n    if (this.depthFBO) {\n      this.depthFBO.destroy();\n    }\n  }\n\n  /** Pick the closest info at given coordinate */\n  pickObject(opts: PickByPointOptions & PickOperationContext) {\n    return this._pickClosestObject(opts);\n  }\n\n  /** Get all unique infos within a bounding box */\n  pickObjects(opts: PickByRectOptions & PickOperationContext) {\n    return this._pickVisibleObjects(opts);\n  }\n\n  // Returns a new picking info object by assuming the last picked object is still picked\n  getLastPickedObject({x, y, layers, viewports}, lastPickedInfo = this.lastPickedInfo.info) {\n    const lastPickedLayerId = lastPickedInfo && lastPickedInfo.layer && lastPickedInfo.layer.id;\n    const lastPickedViewportId =\n      lastPickedInfo && lastPickedInfo.viewport && lastPickedInfo.viewport.id;\n    const layer = lastPickedLayerId ? layers.find(l => l.id === lastPickedLayerId) : null;\n    const viewport =\n      (lastPickedViewportId && viewports.find(v => v.id === lastPickedViewportId)) || viewports[0];\n    const coordinate = viewport && viewport.unproject([x - viewport.x, y - viewport.y]);\n\n    const info = {\n      x,\n      y,\n      viewport,\n      coordinate,\n      layer\n    };\n\n    return {...lastPickedInfo, ...info};\n  }\n\n  // Private\n\n  /** Ensures that picking framebuffer exists and matches the canvas size */\n  _resizeBuffer() {\n    // Create a frame buffer if not already available\n    if (!this.pickingFBO) {\n      this.pickingFBO = this.device.createFramebuffer({\n        colorAttachments: ['rgba8unorm'],\n        depthStencilAttachment: 'depth16unorm'\n      });\n\n      if (this.device.isTextureFormatRenderable('rgba32float')) {\n        const depthFBO = this.device.createFramebuffer({\n          colorAttachments: ['rgba32float'],\n          depthStencilAttachment: 'depth16unorm'\n        });\n        this.depthFBO = depthFBO;\n      }\n    }\n\n    // Resize it to current canvas size (this is a noop if size hasn't changed)\n    const {canvas} = this.device.getDefaultCanvasContext();\n    this.pickingFBO?.resize({width: canvas.width, height: canvas.height});\n    this.depthFBO?.resize({width: canvas.width, height: canvas.height});\n  }\n\n  /** Preliminary filtering of the layers list. Skid picking pass if no layer is pickable. */\n  _getPickable(layers: Layer[]): Layer[] | null {\n    if (this._pickable === false) {\n      return null;\n    }\n    const pickableLayers = layers.filter(\n      layer => this.pickLayersPass.shouldDrawLayer(layer) && !layer.isComposite\n    );\n    return pickableLayers.length ? pickableLayers : null;\n  }\n\n  /** Pick the closest object at the given coordinate */\n  // eslint-disable-next-line max-statements,complexity\n  _pickClosestObject({\n    layers,\n    views,\n    viewports,\n    x,\n    y,\n    radius = 0,\n    depth = 1,\n    mode = 'query',\n    unproject3D,\n    onViewportActive,\n    effects\n  }: PickByPointOptions & PickOperationContext): {\n    result: PickingInfo[];\n    emptyInfo: PickingInfo;\n  } {\n    // @ts-expect-error TODO - assuming WebGL context\n    const pixelRatio = this.device.canvasContext.cssToDeviceRatio();\n\n    const pickableLayers = this._getPickable(layers);\n\n    if (!pickableLayers || viewports.length === 0) {\n      return {\n        result: [],\n        emptyInfo: getEmptyPickingInfo({viewports, x, y, pixelRatio})\n      };\n    }\n\n    this._resizeBuffer();\n\n    // Convert from canvas top-left to WebGL bottom-left coordinates\n    // Top-left coordinates [x, y] to bottom-left coordinates [deviceX, deviceY]\n    // And compensate for pixelRatio\n    // @ts-expect-error TODO - assuming WebGL context\n    const devicePixelRange = this.device.canvasContext.cssToDevicePixels([x, y], true);\n    const devicePixel = [\n      devicePixelRange.x + Math.floor(devicePixelRange.width / 2),\n      devicePixelRange.y + Math.floor(devicePixelRange.height / 2)\n    ];\n\n    const deviceRadius = Math.round(radius * pixelRatio);\n    const {width, height} = this.pickingFBO as Framebuffer;\n    const deviceRect = this._getPickingRect({\n      deviceX: devicePixel[0],\n      deviceY: devicePixel[1],\n      deviceRadius,\n      deviceWidth: width,\n      deviceHeight: height\n    });\n\n    const cullRect: Rect = {\n      x: x - radius,\n      y: y - radius,\n      width: radius * 2 + 1,\n      height: radius * 2 + 1\n    };\n\n    let infos: Map<string | null, PickingInfo>;\n    const result: PickingInfo[] = [];\n    const affectedLayers = new Set<Layer>();\n\n    for (let i = 0; i < depth; i++) {\n      let pickInfo: PickedPixel;\n\n      if (deviceRect) {\n        const pickedResult = this._drawAndSample({\n          layers: pickableLayers,\n          views,\n          viewports,\n          onViewportActive,\n          deviceRect,\n          cullRect,\n          effects,\n          pass: `picking:${mode}`\n        });\n\n        pickInfo = getClosestObject({\n          ...pickedResult,\n          deviceX: devicePixel[0],\n          deviceY: devicePixel[1],\n          deviceRadius,\n          deviceRect\n        });\n      } else {\n        pickInfo = {\n          pickedColor: null,\n          pickedObjectIndex: -1\n        };\n      }\n\n      let z;\n      if (pickInfo.pickedLayer && unproject3D && this.depthFBO) {\n        const {pickedColors: pickedColors2} = this._drawAndSample(\n          {\n            layers: [pickInfo.pickedLayer],\n            views,\n            viewports,\n            onViewportActive,\n            deviceRect: {\n              x: pickInfo.pickedX as number,\n              y: pickInfo.pickedY as number,\n              width: 1,\n              height: 1\n            },\n            cullRect,\n            effects,\n            pass: `picking:${mode}:z`\n          },\n          true\n        );\n        // picked value is in common space (pixels) from the camera target (viewport.position)\n        // convert it to meters from the ground\n        if (pickedColors2[3]) {\n          z = pickedColors2[0];\n        }\n      }\n\n      // Only exclude if we need to run picking again.\n      // We need to run picking again if an object is detected AND\n      // we have not exhausted the requested depth.\n      if (pickInfo.pickedLayer && i + 1 < depth) {\n        affectedLayers.add(pickInfo.pickedLayer);\n        pickInfo.pickedLayer.disablePickingIndex(pickInfo.pickedObjectIndex);\n      }\n\n      // This logic needs to run even if no object is picked.\n      infos = processPickInfo({\n        pickInfo,\n        lastPickedInfo: this.lastPickedInfo,\n        mode,\n        layers: pickableLayers,\n        viewports,\n        x,\n        y,\n        z,\n        pixelRatio\n      });\n\n      for (const info of infos.values()) {\n        if (info.layer) {\n          result.push(info);\n        }\n      }\n\n      // If no object is picked stop.\n      if (!pickInfo.pickedColor) {\n        break;\n      }\n    }\n\n    // reset only affected buffers\n    for (const layer of affectedLayers) {\n      layer.restorePickingColors();\n    }\n\n    return {result, emptyInfo: infos!.get(null) as PickingInfo};\n  }\n\n  /** Pick all objects within the given bounding box */\n  // eslint-disable-next-line max-statements\n  _pickVisibleObjects({\n    layers,\n    views,\n    viewports,\n    x,\n    y,\n    width = 1,\n    height = 1,\n    mode = 'query',\n    maxObjects = null,\n    onViewportActive,\n    effects\n  }: PickByRectOptions & PickOperationContext): PickingInfo[] {\n    const pickableLayers = this._getPickable(layers);\n\n    if (!pickableLayers || viewports.length === 0) {\n      return [];\n    }\n\n    this._resizeBuffer();\n\n    // Convert from canvas top-left to WebGL bottom-left coordinates\n    // And compensate for pixelRatio\n    // @ts-expect-error TODO - assuming WebGL context\n    const pixelRatio = this.device.canvasContext.cssToDeviceRatio();\n    // @ts-expect-error TODO - assuming WebGL context\n    const leftTop = this.device.canvasContext.cssToDevicePixels([x, y], true);\n\n    // take left and top (y inverted in device pixels) from start location\n    const deviceLeft = leftTop.x;\n    const deviceTop = leftTop.y + leftTop.height;\n\n    // take right and bottom (y inverted in device pixels) from end location\n    // @ts-expect-error TODO - assuming WebGL context\n    const rightBottom = this.device.canvasContext.cssToDevicePixels([x + width, y + height], true);\n    const deviceRight = rightBottom.x + rightBottom.width;\n    const deviceBottom = rightBottom.y;\n\n    const deviceRect = {\n      x: deviceLeft,\n      y: deviceBottom,\n      // deviceTop and deviceRight represent the first pixel outside the desired rect\n      width: deviceRight - deviceLeft,\n      height: deviceTop - deviceBottom\n    };\n\n    const pickedResult = this._drawAndSample({\n      layers: pickableLayers,\n      views,\n      viewports,\n      onViewportActive,\n      deviceRect,\n      cullRect: {x, y, width, height},\n      effects,\n      pass: `picking:${mode}`\n    });\n\n    const pickInfos = getUniqueObjects(pickedResult);\n\n    // `getUniqueObjects` dedup by picked color\n    // However different picked color may be linked to the same picked object, e.g. stroke and fill of the same polygon\n    // picked from different sub layers of a GeoJsonLayer\n    // Here after resolving the picked index with `layer.getPickingInfo`, we need to dedup again by unique picked objects\n    const uniquePickedObjects = new Map<string, Set<unknown>>();\n    const uniqueInfos: PickingInfo[] = [];\n\n    const limitMaxObjects = Number.isFinite(maxObjects);\n\n    for (let i = 0; i < pickInfos.length; i++) {\n      if (limitMaxObjects && uniqueInfos.length >= maxObjects!) {\n        break;\n      }\n      const pickInfo = pickInfos[i];\n      let info: PickingInfo = {\n        color: pickInfo.pickedColor,\n        layer: null,\n        index: pickInfo.pickedObjectIndex,\n        picked: true,\n        x,\n        y,\n        pixelRatio\n      };\n\n      info = getLayerPickingInfo({layer: pickInfo.pickedLayer as Layer, info, mode});\n      // info.layer is always populated because it's a picked pixel\n      const pickedLayerId = info.layer!.id;\n      if (!uniquePickedObjects.has(pickedLayerId)) {\n        uniquePickedObjects.set(pickedLayerId, new Set<unknown>());\n      }\n      const uniqueObjectsInLayer = uniquePickedObjects.get(pickedLayerId) as Set<unknown>;\n      // info.object may be null if the layer is using non-iterable data.\n      // Fall back to using index as identifier.\n      const pickedObjectKey = info.object ?? info.index;\n      if (!uniqueObjectsInLayer.has(pickedObjectKey)) {\n        uniqueObjectsInLayer.add(pickedObjectKey);\n        uniqueInfos.push(info);\n      }\n    }\n\n    return uniqueInfos;\n  }\n\n  /** Renders layers into the picking buffer with picking colors and read the pixels. */\n  _drawAndSample(params: {\n    deviceRect: Rect;\n    pass: string;\n    layers: Layer[];\n    views: Record<string, View>;\n    viewports: Viewport[];\n    onViewportActive: (viewport: Viewport) => void;\n    cullRect?: Rect;\n    effects: Effect[];\n  }): {\n    pickedColors: Uint8Array;\n    decodePickingColor: PickingColorDecoder;\n  };\n\n  /** Renders layers into the picking buffer with encoded z values and read the pixels. */\n  _drawAndSample(\n    params: {\n      deviceRect: Rect;\n      pass: string;\n      layers: Layer[];\n      views: Record<string, View>;\n      viewports: Viewport[];\n      onViewportActive: (viewport: Viewport) => void;\n      cullRect?: Rect;\n      effects: Effect[];\n    },\n    pickZ: true\n  ): {\n    pickedColors: Float32Array;\n    decodePickingColor: null;\n  };\n\n  _drawAndSample(\n    {\n      layers,\n      views,\n      viewports,\n      onViewportActive,\n      deviceRect,\n      cullRect,\n      effects,\n      pass\n    }: {\n      deviceRect: Rect;\n      pass: string;\n      layers: Layer[];\n      views: Record<string, View>;\n      viewports: Viewport[];\n      onViewportActive: (viewport: Viewport) => void;\n      cullRect?: Rect;\n      effects: Effect[];\n    },\n    pickZ: boolean = false\n  ): {\n    pickedColors: Uint8Array | Float32Array;\n    decodePickingColor: PickingColorDecoder | null;\n  } {\n    const pickingFBO = pickZ ? this.depthFBO : this.pickingFBO;\n    const opts = {\n      layers,\n      layerFilter: this.layerFilter,\n      views,\n      viewports,\n      onViewportActive,\n      pickingFBO,\n      deviceRect,\n      cullRect,\n      effects,\n      pass,\n      pickZ,\n      preRenderStats: {},\n      isPicking: true\n    };\n\n    for (const effect of effects) {\n      if (effect.useInPicking) {\n        opts.preRenderStats[effect.id] = effect.preRender(opts);\n      }\n    }\n\n    const {decodePickingColor} = this.pickLayersPass.render(opts);\n\n    // Read from an already rendered picking buffer\n    // Returns an Uint8ClampedArray of picked pixels\n    const {x, y, width, height} = deviceRect;\n    const pickedColors = new (pickZ ? Float32Array : Uint8Array)(width * height * 4);\n    this.device.readPixelsToArrayWebGL(pickingFBO as Framebuffer, {\n      sourceX: x,\n      sourceY: y,\n      sourceWidth: width,\n      sourceHeight: height,\n      target: pickedColors\n    });\n\n    return {pickedColors, decodePickingColor};\n  }\n\n  // Calculate a picking rect centered on deviceX and deviceY and clipped to device\n  // Returns null if pixel is outside of device\n  _getPickingRect({\n    deviceX,\n    deviceY,\n    deviceRadius,\n    deviceWidth,\n    deviceHeight\n  }: {\n    deviceX: number;\n    deviceY: number;\n    deviceRadius: number;\n    deviceWidth: number;\n    deviceHeight: number;\n  }): Rect | null {\n    // Create a box of size `radius * 2 + 1` centered at [deviceX, deviceY]\n    const x = Math.max(0, deviceX - deviceRadius);\n    const y = Math.max(0, deviceY - deviceRadius);\n    const width = Math.min(deviceWidth, deviceX + deviceRadius + 1) - x;\n    const height = Math.min(deviceHeight, deviceY + deviceRadius + 1) - y;\n\n    // x, y out of bounds.\n    if (width <= 0 || height <= 0) {\n      return null;\n    }\n\n    return {x, y, width, height};\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type Deck from './deck';\nimport type Viewport from '../viewports/viewport';\nimport type {PickingInfo} from './picking/pick-info';\nimport type {MjolnirPointerEvent, MjolnirGestureEvent} from 'mjolnir.js';\nimport type Layer from './layer';\n\nimport {EVENT_HANDLERS} from './constants';\nimport {deepEqual} from '../utils/deep-equal';\n\nexport interface Widget<PropsT = any> {\n  /** Unique identifier of the widget. */\n  id: string;\n  /** Widget prop types. */\n  props: PropsT;\n  /**\n   * The view id that this widget is being attached to. Default `null`.\n   * If assigned, this widget will only respond to events occurred inside the specific view that matches this id.\n   */\n  viewId?: string | null;\n  /** Widget positioning within the view. Default 'top-left'. */\n  placement?: WidgetPlacement;\n\n  // Populated by core when mounted\n  _element?: HTMLDivElement | null;\n\n  // Lifecycle hooks\n  /** Called when the widget is added to a Deck instance.\n   * @returns an optional UI element that should be appended to the Deck container */\n  onAdd: (params: {\n    /** The Deck instance that the widget is attached to */\n    deck: Deck<any>;\n    /** The id of the view that the widget is attached to */\n    viewId: string | null;\n  }) => HTMLDivElement | null;\n  /** Called when the widget is removed */\n  onRemove?: () => void;\n  /** Called to update widget options */\n  setProps: (props: Partial<PropsT>) => void;\n\n  // Optional event hooks\n  /** Called when the containing view is changed */\n  onViewportChange?: (viewport: Viewport) => void;\n  /** Called when the containing view is redrawn */\n  onRedraw?: (params: {viewports: Viewport[]; layers: Layer[]}) => void;\n  /** Called when a hover event occurs */\n  onHover?: (info: PickingInfo, event: MjolnirPointerEvent) => void;\n  /** Called when a click event occurs */\n  onClick?: (info: PickingInfo, event: MjolnirGestureEvent) => void;\n  /** Called when a drag event occurs */\n  onDrag?: (info: PickingInfo, event: MjolnirGestureEvent) => void;\n  /** Called when a dragstart event occurs */\n  onDragStart?: (info: PickingInfo, event: MjolnirGestureEvent) => void;\n  /** Called when a dragend event occurs */\n  onDragEnd?: (info: PickingInfo, event: MjolnirGestureEvent) => void;\n}\n\nconst PLACEMENTS = {\n  'top-left': {top: 0, left: 0},\n  'top-right': {top: 0, right: 0},\n  'bottom-left': {bottom: 0, left: 0},\n  'bottom-right': {bottom: 0, right: 0},\n  fill: {top: 0, left: 0, bottom: 0, right: 0}\n} as const;\nconst DEFAULT_PLACEMENT = 'top-left';\n\nexport type WidgetPlacement = keyof typeof PLACEMENTS;\n\nconst ROOT_CONTAINER_ID = '__root';\n\nexport class WidgetManager {\n  deck: Deck<any>;\n  parentElement?: HTMLElement | null;\n\n  /** Widgets added via the imperative API */\n  private defaultWidgets: Widget[] = [];\n  /** Widgets received from the declarative API */\n  private widgets: Widget[] = [];\n  /** Resolved widgets from both imperative and declarative APIs */\n  private resolvedWidgets: Widget[] = [];\n\n  /** Mounted HTML containers */\n  private containers: {[id: string]: HTMLDivElement} = {};\n  /** Viewport provided to widget on redraw */\n  private lastViewports: {[id: string]: Viewport} = {};\n\n  constructor({deck, parentElement}: {deck: Deck<any>; parentElement?: HTMLElement | null}) {\n    this.deck = deck;\n    this.parentElement = parentElement;\n  }\n\n  getWidgets(): Widget[] {\n    return this.resolvedWidgets;\n  }\n\n  /** Declarative API to configure widgets */\n  setProps(props: {widgets?: Widget[]}) {\n    if (props.widgets && !deepEqual(props.widgets, this.widgets, 1)) {\n      this._setWidgets(props.widgets);\n    }\n  }\n\n  finalize() {\n    for (const widget of this.getWidgets()) {\n      this._remove(widget);\n    }\n    this.defaultWidgets.length = 0;\n    this.resolvedWidgets.length = 0;\n    for (const id in this.containers) {\n      this.containers[id].remove();\n    }\n  }\n\n  /** Imperative API. Widgets added this way are not affected by the declarative prop. */\n  addDefault(widget: Widget) {\n    if (!this.defaultWidgets.find(w => w.id === widget.id)) {\n      this._add(widget);\n      this.defaultWidgets.push(widget);\n      // Update widget list\n      this._setWidgets(this.widgets);\n    }\n  }\n\n  /** Resolve widgets from the declarative prop */\n  private _setWidgets(nextWidgets: Widget[]) {\n    const oldWidgetMap: Record<string, Widget | null> = {};\n\n    for (const widget of this.resolvedWidgets) {\n      oldWidgetMap[widget.id] = widget;\n    }\n    // Clear and rebuild the list\n    this.resolvedWidgets.length = 0;\n\n    // Add all default widgets\n    for (const widget of this.defaultWidgets) {\n      oldWidgetMap[widget.id] = null;\n      this.resolvedWidgets.push(widget);\n    }\n\n    for (let widget of nextWidgets) {\n      const oldWidget = oldWidgetMap[widget.id];\n      if (!oldWidget) {\n        // Widget is new\n        this._add(widget);\n      } else if (\n        // Widget placement changed\n        oldWidget.viewId !== widget.viewId ||\n        oldWidget.placement !== widget.placement\n      ) {\n        this._remove(oldWidget);\n        this._add(widget);\n      } else if (widget !== oldWidget) {\n        // Widget props changed\n        oldWidget.setProps(widget.props);\n        widget = oldWidget;\n      }\n\n      // mark as matched\n      oldWidgetMap[widget.id] = null;\n      this.resolvedWidgets.push(widget);\n    }\n\n    for (const id in oldWidgetMap) {\n      const oldWidget = oldWidgetMap[id];\n      if (oldWidget) {\n        // No longer exists\n        this._remove(oldWidget);\n      }\n    }\n    this.widgets = nextWidgets;\n  }\n\n  private _add(widget: Widget) {\n    const {viewId = null, placement = DEFAULT_PLACEMENT} = widget;\n    const element = widget.onAdd({deck: this.deck, viewId});\n\n    if (element) {\n      this._getContainer(viewId, placement).append(element);\n    }\n    widget._element = element;\n  }\n\n  private _remove(widget: Widget) {\n    widget.onRemove?.();\n\n    if (widget._element) {\n      widget._element.remove();\n    }\n    widget._element = undefined;\n  }\n\n  /* global document */\n  private _getContainer(viewId: string | null, placement: WidgetPlacement): HTMLDivElement {\n    const containerId = viewId || ROOT_CONTAINER_ID;\n    let viewContainer = this.containers[containerId];\n    if (!viewContainer) {\n      viewContainer = document.createElement('div');\n      viewContainer.style.pointerEvents = 'none';\n      viewContainer.style.position = 'absolute';\n      viewContainer.style.overflow = 'hidden';\n      this.parentElement?.append(viewContainer);\n      this.containers[containerId] = viewContainer;\n    }\n    let container = viewContainer.querySelector<HTMLDivElement>(`.${placement}`);\n    if (!container) {\n      container = document.createElement('div');\n      container.className = placement;\n      container.style.position = 'absolute';\n      container.style.zIndex = '2';\n      Object.assign(container.style, PLACEMENTS[placement]);\n      viewContainer.append(container);\n    }\n    return container;\n  }\n\n  private _updateContainers() {\n    const canvasWidth = this.deck.width;\n    const canvasHeight = this.deck.height;\n    for (const id in this.containers) {\n      const viewport = this.lastViewports[id] || null;\n      const visible = id === ROOT_CONTAINER_ID || viewport;\n\n      const container = this.containers[id];\n      if (visible) {\n        container.style.display = 'block';\n        // Align the container with the view\n        container.style.left = `${viewport ? viewport.x : 0}px`;\n        container.style.top = `${viewport ? viewport.y : 0}px`;\n        container.style.width = `${viewport ? viewport.width : canvasWidth}px`;\n        container.style.height = `${viewport ? viewport.height : canvasHeight}px`;\n      } else {\n        container.style.display = 'none';\n      }\n    }\n  }\n\n  onRedraw({viewports, layers}: {viewports: Viewport[]; layers: Layer[]}) {\n    const viewportsById: {[id: string]: Viewport} = viewports.reduce((acc, v) => {\n      acc[v.id] = v;\n      return acc;\n    }, {});\n\n    for (const widget of this.getWidgets()) {\n      const {viewId} = widget;\n      if (viewId) {\n        // Attached to a specific view\n        const viewport = viewportsById[viewId];\n        if (viewport) {\n          if (widget.onViewportChange) {\n            widget.onViewportChange(viewport);\n          }\n          widget.onRedraw?.({viewports: [viewport], layers});\n        }\n      } else {\n        // Not attached to a specific view\n        if (widget.onViewportChange) {\n          for (const viewport of viewports) {\n            widget.onViewportChange(viewport);\n          }\n        }\n        widget.onRedraw?.({viewports, layers});\n      }\n    }\n    this.lastViewports = viewportsById;\n    this._updateContainers();\n  }\n\n  onHover(info: PickingInfo, event: MjolnirPointerEvent) {\n    for (const widget of this.getWidgets()) {\n      const {viewId} = widget;\n      if (!viewId || viewId === info.viewport?.id) {\n        widget.onHover?.(info, event);\n      }\n    }\n  }\n\n  onEvent(info: PickingInfo, event: MjolnirGestureEvent) {\n    const eventHandlerProp = EVENT_HANDLERS[event.type];\n    if (!eventHandlerProp) {\n      return;\n    }\n    for (const widget of this.getWidgets()) {\n      const {viewId} = widget;\n      if (!viewId || viewId === info.viewport?.id) {\n        widget[eventHandlerProp]?.(info, event);\n      }\n    }\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Widget, WidgetPlacement} from './widget-manager';\nimport type {PickingInfo} from './picking/pick-info';\nimport type Viewport from '../viewports/viewport';\nimport type Deck from './deck';\n\n/* global document */\nconst defaultStyle: Partial<CSSStyleDeclaration> = {\n  zIndex: '1',\n  position: 'absolute',\n  pointerEvents: 'none',\n  color: '#a0a7b4',\n  backgroundColor: '#29323c',\n  padding: '10px',\n  top: '0',\n  left: '0',\n  display: 'none'\n};\n\nexport type TooltipContent =\n  | null\n  | string\n  | {\n      text?: string;\n      html?: string;\n      className?: string;\n      style?: Partial<CSSStyleDeclaration>;\n    };\n\nexport default class Tooltip implements Widget {\n  id = 'default-tooltip';\n  placement: WidgetPlacement = 'fill';\n  props = {};\n  isVisible: boolean = false;\n  deck?: Deck<any>;\n  element?: HTMLDivElement;\n  lastViewport?: Viewport;\n\n  onAdd({deck}: {deck: Deck<any>}): HTMLDivElement {\n    const el = document.createElement('div');\n    el.className = 'deck-tooltip';\n    Object.assign(el.style, defaultStyle);\n\n    this.deck = deck;\n    this.element = el;\n\n    return el;\n  }\n\n  onRemove() {\n    this.deck = undefined;\n    this.element = undefined;\n  }\n\n  setProps() {}\n\n  onViewportChange(viewport: Viewport) {\n    if (this.isVisible && viewport.id === this.lastViewport?.id && viewport !== this.lastViewport) {\n      // Camera has moved, clear tooltip\n      this.setTooltip(null);\n    }\n  }\n\n  onHover(info: PickingInfo) {\n    const {deck} = this;\n    const getTooltip = deck && deck.props.getTooltip;\n    if (!getTooltip) {\n      return;\n    }\n    const displayInfo = getTooltip(info);\n    this.lastViewport = info.viewport;\n    this.setTooltip(displayInfo, info.x, info.y);\n  }\n\n  setTooltip(displayInfo: TooltipContent, x?: number, y?: number): void {\n    const el = this.element;\n    if (!el) {\n      return;\n    }\n\n    if (typeof displayInfo === 'string') {\n      el.innerText = displayInfo;\n    } else if (!displayInfo) {\n      this.isVisible = false;\n      el.style.display = 'none';\n      return;\n    } else {\n      if (displayInfo.text) {\n        el.innerText = displayInfo.text;\n      }\n      if (displayInfo.html) {\n        el.innerHTML = displayInfo.html;\n      }\n      if (displayInfo.className) {\n        el.className = displayInfo.className;\n      }\n    }\n    this.isVisible = true;\n    el.style.display = 'block';\n    el.style.transform = `translate(${x}px, ${y}px)`;\n\n    if (displayInfo && typeof displayInfo === 'object' && 'style' in displayInfo) {\n      Object.assign(el.style, displayInfo.style);\n    }\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* eslint-disable key-spacing, max-len, no-inline-comments, camelcase */\n\n/**\n * Standard WebGL, WebGL2 and extension constants (OpenGL constants)\n * @note (Most) of these constants are also defined on the WebGLRenderingContext interface.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\n * @privateRemarks Locally called `GLEnum` instead of `GL`, because `babel-plugin-inline-webl-constants`\n *  both depends on and processes this module, but shouldn't replace these declarations.\n */\n// eslint-disable-next-line no-shadow\nenum GLEnum {\n  // Clearing buffers\n  // Constants passed to clear() to clear buffer masks.\n\n  /** Passed to clear to clear the current depth buffer. */\n  DEPTH_BUFFER_BIT = 0x00000100,\n  /** Passed to clear to clear the current stencil buffer. */\n  STENCIL_BUFFER_BIT = 0x00000400,\n  /** Passed to clear to clear the current color buffer. */\n  COLOR_BUFFER_BIT = 0x00004000,\n\n  // Rendering primitives\n  // Constants passed to drawElements() or drawArrays() to specify what kind of primitive to render.\n\n  /** Passed to drawElements or drawArrays to draw single points. */\n  POINTS = 0x0000,\n  /** Passed to drawElements or drawArrays to draw lines. Each vertex connects to the one after it. */\n  LINES = 0x0001,\n  /** Passed to drawElements or drawArrays to draw lines. Each set of two vertices is treated as a separate line segment. */\n  LINE_LOOP = 0x0002,\n  /** Passed to drawElements or drawArrays to draw a connected group of line segments from the first vertex to the last. */\n  LINE_STRIP = 0x0003,\n  /** Passed to drawElements or drawArrays to draw triangles. Each set of three vertices creates a separate triangle. */\n  TRIANGLES = 0x0004,\n  /** Passed to drawElements or drawArrays to draw a connected group of triangles. */\n  TRIANGLE_STRIP = 0x0005,\n  /** Passed to drawElements or drawArrays to draw a connected group of triangles. Each vertex connects to the previous and the first vertex in the fan. */\n  TRIANGLE_FAN = 0x0006,\n\n  // Blending modes\n  // Constants passed to blendFunc() or blendFuncSeparate() to specify the blending mode (for both, RBG and alpha, or separately).\n  /** Passed to blendFunc or blendFuncSeparate to turn off a component. */\n  ZERO = 0,\n  /** Passed to blendFunc or blendFuncSeparate to turn on a component. */\n  ONE = 1,\n  /** Passed to blendFunc or blendFuncSeparate to multiply a component by the source elements color. */\n  SRC_COLOR = 0x0300,\n  /** Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the source elements color. */\n  ONE_MINUS_SRC_COLOR = 0x0301,\n  /** Passed to blendFunc or blendFuncSeparate to multiply a component by the source's alpha. */\n  SRC_ALPHA = 0x0302,\n  /** Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the source's alpha. */\n  ONE_MINUS_SRC_ALPHA = 0x0303,\n  /** Passed to blendFunc or blendFuncSeparate to multiply a component by the destination's alpha. */\n  DST_ALPHA = 0x0304,\n  /** Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the destination's alpha. */\n  ONE_MINUS_DST_ALPHA = 0x0305,\n  /** Passed to blendFunc or blendFuncSeparate to multiply a component by the destination's color. */\n  DST_COLOR = 0x0306,\n  /** Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the destination's color. */\n  ONE_MINUS_DST_COLOR = 0x0307,\n  /** Passed to blendFunc or blendFuncSeparate to multiply a component by the minimum of source's alpha or one minus the destination's alpha. */\n  SRC_ALPHA_SATURATE = 0x0308,\n  /** Passed to blendFunc or blendFuncSeparate to specify a constant color blend function. */\n  CONSTANT_COLOR = 0x8001,\n  /** Passed to blendFunc or blendFuncSeparate to specify one minus a constant color blend function. */\n  ONE_MINUS_CONSTANT_COLOR = 0x8002,\n  /** Passed to blendFunc or blendFuncSeparate to specify a constant alpha blend function. */\n  CONSTANT_ALPHA = 0x8003,\n  /** Passed to blendFunc or blendFuncSeparate to specify one minus a constant alpha blend function. */\n  ONE_MINUS_CONSTANT_ALPHA = 0x8004,\n\n  // Blending equations\n  // Constants passed to blendEquation() or blendEquationSeparate() to control\n  // how the blending is calculated (for both, RBG and alpha, or separately).\n\n  /** Passed to blendEquation or blendEquationSeparate to set an addition blend function. */\n  /** Passed to blendEquation or blendEquationSeparate to specify a subtraction blend function (source - destination). */\n  /** Passed to blendEquation or blendEquationSeparate to specify a reverse subtraction blend function (destination - source). */\n  FUNC_ADD = 0x8006,\n  FUNC_SUBTRACT = 0x800a,\n  FUNC_REVERSE_SUBTRACT = 0x800b,\n\n  // Getting GL parameter information\n  // Constants passed to getParameter() to specify what information to return.\n\n  /** Passed to getParameter to get the current RGB blend function. */\n  BLEND_EQUATION = 0x8009,\n  /** Passed to getParameter to get the current RGB blend function. Same as BLEND_EQUATION */\n  BLEND_EQUATION_RGB = 0x8009,\n  /** Passed to getParameter to get the current alpha blend function. Same as BLEND_EQUATION */\n  BLEND_EQUATION_ALPHA = 0x883d,\n  /** Passed to getParameter to get the current destination RGB blend function. */\n  BLEND_DST_RGB = 0x80c8,\n  /** Passed to getParameter to get the current destination RGB blend function. */\n  BLEND_SRC_RGB = 0x80c9,\n  /** Passed to getParameter to get the current destination alpha blend function. */\n  BLEND_DST_ALPHA = 0x80ca,\n  /** Passed to getParameter to get the current source alpha blend function. */\n  BLEND_SRC_ALPHA = 0x80cb,\n\n  /** Passed to getParameter to return a the current blend color. */\n  BLEND_COLOR = 0x8005,\n  /** Passed to getParameter to get the array buffer binding. */\n  ARRAY_BUFFER_BINDING = 0x8894,\n  /** Passed to getParameter to get the current element array buffer. */\n  ELEMENT_ARRAY_BUFFER_BINDING = 0x8895,\n  /** Passed to getParameter to get the current lineWidth (set by the lineWidth method). */\n  LINE_WIDTH = 0x0b21,\n  /** Passed to getParameter to get the current size of a point drawn with gl.POINTS */\n  ALIASED_POINT_SIZE_RANGE = 0x846d,\n  /** Passed to getParameter to get the range of available widths for a line. Returns a length-2 array with the lo value at 0, and hight at 1. */\n  ALIASED_LINE_WIDTH_RANGE = 0x846e,\n  /** Passed to getParameter to get the current value of cullFace. Should return FRONT, BACK, or FRONT_AND_BACK */\n  CULL_FACE_MODE = 0x0b45,\n  /** Passed to getParameter to determine the current value of frontFace. Should return CW or CCW. */\n  FRONT_FACE = 0x0b46,\n  /** Passed to getParameter to return a length-2 array of floats giving the current depth range. */\n  DEPTH_RANGE = 0x0b70,\n  /** Passed to getParameter to determine if the depth write mask is enabled. */\n\n  DEPTH_WRITEMASK = 0x0b72,\n  /** Passed to getParameter to determine the current depth clear value. */\n  DEPTH_CLEAR_VALUE = 0x0b73,\n  /** Passed to getParameter to get the current depth function. Returns NEVER, ALWAYS, LESS, EQUAL, LEQUAL, GREATER, GEQUAL, or NOTEQUAL. */\n  DEPTH_FUNC = 0x0b74,\n  /** Passed to getParameter to get the value the stencil will be cleared to. */\n  STENCIL_CLEAR_VALUE = 0x0b91,\n  /** Passed to getParameter to get the current stencil function. Returns NEVER, ALWAYS, LESS, EQUAL, LEQUAL, GREATER, GEQUAL, or NOTEQUAL. */\n  STENCIL_FUNC = 0x0b92,\n  /** Passed to getParameter to get the current stencil fail function. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP. */\n  STENCIL_FAIL = 0x0b94,\n  /** Passed to getParameter to get the current stencil fail function should the depth buffer test fail. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP. */\n  STENCIL_PASS_DEPTH_FAIL = 0x0b95,\n  /** Passed to getParameter to get the current stencil fail function should the depth buffer test pass. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP. */\n  STENCIL_PASS_DEPTH_PASS = 0x0b96,\n  /** Passed to getParameter to get the reference value used for stencil tests. */\n  STENCIL_REF = 0x0b97,\n  STENCIL_VALUE_MASK = 0x0b93,\n  STENCIL_WRITEMASK = 0x0b98,\n  STENCIL_BACK_FUNC = 0x8800,\n  STENCIL_BACK_FAIL = 0x8801,\n  STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802,\n  STENCIL_BACK_PASS_DEPTH_PASS = 0x8803,\n  STENCIL_BACK_REF = 0x8ca3,\n  STENCIL_BACK_VALUE_MASK = 0x8ca4,\n  STENCIL_BACK_WRITEMASK = 0x8ca5,\n\n  /** An Int32Array with four elements for the current viewport dimensions. */\n  VIEWPORT = 0x0ba2,\n  /** An Int32Array with four elements for the current scissor box dimensions. */\n  SCISSOR_BOX = 0x0c10,\n  COLOR_CLEAR_VALUE = 0x0c22,\n  COLOR_WRITEMASK = 0x0c23,\n  UNPACK_ALIGNMENT = 0x0cf5,\n  PACK_ALIGNMENT = 0x0d05,\n  MAX_TEXTURE_SIZE = 0x0d33,\n  MAX_VIEWPORT_DIMS = 0x0d3a,\n  SUBPIXEL_BITS = 0x0d50,\n  RED_BITS = 0x0d52,\n  GREEN_BITS = 0x0d53,\n  BLUE_BITS = 0x0d54,\n  ALPHA_BITS = 0x0d55,\n  DEPTH_BITS = 0x0d56,\n  STENCIL_BITS = 0x0d57,\n  POLYGON_OFFSET_UNITS = 0x2a00,\n  POLYGON_OFFSET_FACTOR = 0x8038,\n  TEXTURE_BINDING_2D = 0x8069,\n  SAMPLE_BUFFERS = 0x80a8,\n  SAMPLES = 0x80a9,\n  SAMPLE_COVERAGE_VALUE = 0x80aa,\n  SAMPLE_COVERAGE_INVERT = 0x80ab,\n  COMPRESSED_TEXTURE_FORMATS = 0x86a3,\n  VENDOR = 0x1f00,\n  RENDERER = 0x1f01,\n  VERSION = 0x1f02,\n  IMPLEMENTATION_COLOR_READ_TYPE = 0x8b9a,\n  IMPLEMENTATION_COLOR_READ_FORMAT = 0x8b9b,\n  BROWSER_DEFAULT_WEBGL = 0x9244,\n\n  // Buffers\n  // Constants passed to bufferData(), bufferSubData(), bindBuffer(), or\n  // getBufferParameter().\n\n  /** Passed to bufferData as a hint about whether the contents of the buffer are likely to be used often and not change often. */\n  STATIC_DRAW = 0x88e4,\n  /** Passed to bufferData as a hint about whether the contents of the buffer are likely to not be used often. */\n  STREAM_DRAW = 0x88e0,\n  /** Passed to bufferData as a hint about whether the contents of the buffer are likely to be used often and change often. */\n  DYNAMIC_DRAW = 0x88e8,\n  /** Passed to bindBuffer or bufferData to specify the type of buffer being used. */\n  ARRAY_BUFFER = 0x8892,\n  /** Passed to bindBuffer or bufferData to specify the type of buffer being used. */\n  ELEMENT_ARRAY_BUFFER = 0x8893,\n  /** Passed to getBufferParameter to get a buffer's size. */\n  BUFFER_SIZE = 0x8764,\n  /** Passed to getBufferParameter to get the hint for the buffer passed in when it was created. */\n  BUFFER_USAGE = 0x8765,\n\n  // Vertex attributes\n  // Constants passed to getVertexAttrib().\n\n  /** Passed to getVertexAttrib to read back the current vertex attribute. */\n  CURRENT_VERTEX_ATTRIB = 0x8626,\n  VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622,\n  VERTEX_ATTRIB_ARRAY_SIZE = 0x8623,\n  VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624,\n  VERTEX_ATTRIB_ARRAY_TYPE = 0x8625,\n  VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886a,\n  VERTEX_ATTRIB_ARRAY_POINTER = 0x8645,\n  VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889f,\n\n  // Culling\n  // Constants passed to cullFace().\n\n  /** Passed to enable/disable to turn on/off culling. Can also be used with getParameter to find the current culling method. */\n  CULL_FACE = 0x0b44,\n  /** Passed to cullFace to specify that only front faces should be culled. */\n  FRONT = 0x0404,\n  /** Passed to cullFace to specify that only back faces should be culled. */\n  BACK = 0x0405,\n  /** Passed to cullFace to specify that front and back faces should be culled. */\n  FRONT_AND_BACK = 0x0408,\n\n  // Enabling and disabling\n  // Constants passed to enable() or disable().\n\n  /** Passed to enable/disable to turn on/off blending. Can also be used with getParameter to find the current blending method. */\n  BLEND = 0x0be2,\n  /** Passed to enable/disable to turn on/off the depth test. Can also be used with getParameter to query the depth test. */\n  DEPTH_TEST = 0x0b71,\n  /** Passed to enable/disable to turn on/off dithering. Can also be used with getParameter to find the current dithering method. */\n  DITHER = 0x0bd0,\n  /** Passed to enable/disable to turn on/off the polygon offset. Useful for rendering hidden-line images, decals, and or solids with highlighted edges. Can also be used with getParameter to query the scissor test. */\n  POLYGON_OFFSET_FILL = 0x8037,\n  /** Passed to enable/disable to turn on/off the alpha to coverage. Used in multi-sampling alpha channels. */\n  SAMPLE_ALPHA_TO_COVERAGE = 0x809e,\n  /** Passed to enable/disable to turn on/off the sample coverage. Used in multi-sampling. */\n  SAMPLE_COVERAGE = 0x80a0,\n  /** Passed to enable/disable to turn on/off the scissor test. Can also be used with getParameter to query the scissor test. */\n  SCISSOR_TEST = 0x0c11,\n  /** Passed to enable/disable to turn on/off the stencil test. Can also be used with getParameter to query the stencil test. */\n  STENCIL_TEST = 0x0b90,\n\n  // Errors\n  // Constants returned from getError().\n\n  /** Returned from getError(). */\n  NO_ERROR = 0,\n  /** Returned from getError(). */\n  INVALID_ENUM = 0x0500,\n  /** Returned from getError(). */\n  INVALID_VALUE = 0x0501,\n  /** Returned from getError(). */\n  INVALID_OPERATION = 0x0502,\n  /** Returned from getError(). */\n  OUT_OF_MEMORY = 0x0505,\n  /** Returned from getError(). */\n  CONTEXT_LOST_WEBGL = 0x9242,\n\n  // Front face directions\n  // Constants passed to frontFace().\n\n  /** Passed to frontFace to specify the front face of a polygon is drawn in the clockwise direction */\n  CW = 0x0900,\n  /** Passed to frontFace to specify the front face of a polygon is drawn in the counter clockwise direction */\n  CCW = 0x0901,\n\n  // Hints\n  // Constants passed to hint()\n\n  /** There is no preference for this behavior. */\n  DONT_CARE = 0x1100,\n  /** The most efficient behavior should be used. */\n  FASTEST = 0x1101,\n  /** The most correct or the highest quality option should be used. */\n  NICEST = 0x1102,\n  /** Hint for the quality of filtering when generating mipmap images with WebGLRenderingContext.generateMipmap(). */\n  GENERATE_MIPMAP_HINT = 0x8192,\n\n  // Data types\n\n  BYTE = 0x1400,\n  UNSIGNED_BYTE = 0x1401,\n  SHORT = 0x1402,\n  UNSIGNED_SHORT = 0x1403,\n  INT = 0x1404,\n  UNSIGNED_INT = 0x1405,\n  FLOAT = 0x1406,\n  DOUBLE = 0x140a,\n\n  // Pixel formats\n\n  DEPTH_COMPONENT = 0x1902,\n  ALPHA = 0x1906,\n  RGB = 0x1907,\n  RGBA = 0x1908,\n  LUMINANCE = 0x1909,\n  LUMINANCE_ALPHA = 0x190a,\n\n  // Pixel types\n\n  // UNSIGNED_BYTE = 0x1401,\n  UNSIGNED_SHORT_4_4_4_4 = 0x8033,\n  UNSIGNED_SHORT_5_5_5_1 = 0x8034,\n  UNSIGNED_SHORT_5_6_5 = 0x8363,\n\n  // Shaders\n  // Constants passed to createShader() or getShaderParameter()\n\n  /** Passed to createShader to define a fragment shader. */\n  FRAGMENT_SHADER = 0x8b30,\n  /** Passed to createShader to define a vertex shader */\n  VERTEX_SHADER = 0x8b31,\n  /** Passed to getShaderParameter to get the status of the compilation. Returns false if the shader was not compiled. You can then query getShaderInfoLog to find the exact error */\n  COMPILE_STATUS = 0x8b81,\n  /** Passed to getShaderParameter to determine if a shader was deleted via deleteShader. Returns true if it was, false otherwise. */\n  DELETE_STATUS = 0x8b80,\n  /** Passed to getProgramParameter after calling linkProgram to determine if a program was linked correctly. Returns false if there were errors. Use getProgramInfoLog to find the exact error. */\n  LINK_STATUS = 0x8b82,\n  /** Passed to getProgramParameter after calling validateProgram to determine if it is valid. Returns false if errors were found. */\n  VALIDATE_STATUS = 0x8b83,\n  /** Passed to getProgramParameter after calling attachShader to determine if the shader was attached correctly. Returns false if errors occurred. */\n  ATTACHED_SHADERS = 0x8b85,\n  /** Passed to getProgramParameter to get the number of attributes active in a program. */\n  ACTIVE_ATTRIBUTES = 0x8b89,\n  /** Passed to getProgramParameter to get the number of uniforms active in a program. */\n  ACTIVE_UNIFORMS = 0x8b86,\n  /** The maximum number of entries possible in the vertex attribute list. */\n  MAX_VERTEX_ATTRIBS = 0x8869,\n  MAX_VERTEX_UNIFORM_VECTORS = 0x8dfb,\n  MAX_VARYING_VECTORS = 0x8dfc,\n  MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8b4d,\n  MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8b4c,\n  /** Implementation dependent number of maximum texture units. At least 8. */\n  MAX_TEXTURE_IMAGE_UNITS = 0x8872,\n  MAX_FRAGMENT_UNIFORM_VECTORS = 0x8dfd,\n  SHADER_TYPE = 0x8b4f,\n  SHADING_LANGUAGE_VERSION = 0x8b8c,\n  CURRENT_PROGRAM = 0x8b8d,\n\n  // Depth or stencil tests\n  // Constants passed to depthFunc() or stencilFunc().\n\n  /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will never pass, i.e., nothing will be drawn. */\n  NEVER = 0x0200,\n  /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than the stored value. */\n  LESS = 0x0201,\n  /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is equals to the stored value. */\n  EQUAL = 0x0202,\n  /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than or equal to the stored value. */\n  LEQUAL = 0x0203,\n  /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than the stored value. */\n  GREATER = 0x0204,\n  /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is not equal to the stored value. */\n  NOTEQUAL = 0x0205,\n  /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than or equal to the stored value. */\n  GEQUAL = 0x0206,\n  /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will always pass, i.e., pixels will be drawn in the order they are drawn. */\n  ALWAYS = 0x0207,\n\n  // Stencil actions\n  // Constants passed to stencilOp().\n\n  KEEP = 0x1e00,\n  REPLACE = 0x1e01,\n  INCR = 0x1e02,\n  DECR = 0x1e03,\n  INVERT = 0x150a,\n  INCR_WRAP = 0x8507,\n  DECR_WRAP = 0x8508,\n\n  // Textures\n  // Constants passed to texParameteri(),\n  // texParameterf(), bindTexture(), texImage2D(), and others.\n\n  NEAREST = 0x2600,\n  LINEAR = 0x2601,\n  NEAREST_MIPMAP_NEAREST = 0x2700,\n  LINEAR_MIPMAP_NEAREST = 0x2701,\n  NEAREST_MIPMAP_LINEAR = 0x2702,\n  LINEAR_MIPMAP_LINEAR = 0x2703,\n  /** The texture magnification function is used when the pixel being textured maps to an area less than or equal to one texture element. It sets the texture magnification function to either GL_NEAREST or GL_LINEAR (see below). GL_NEAREST is generally faster than GL_LINEAR, but it can produce textured images with sharper edges because the transition between texture elements is not as smooth. Default: GL_LINEAR.  */\n  TEXTURE_MAG_FILTER = 0x2800,\n  /** The texture minifying function is used whenever the pixel being textured maps to an area greater than one texture element. There are six defined minifying functions. Two of them use the nearest one or nearest four texture elements to compute the texture value. The other four use mipmaps. Default: GL_NEAREST_MIPMAP_LINEAR */\n  TEXTURE_MIN_FILTER = 0x2801,\n  /** Sets the wrap parameter for texture coordinate  to either GL_CLAMP_TO_EDGE, GL_MIRRORED_REPEAT, or GL_REPEAT. G */\n  TEXTURE_WRAP_S = 0x2802,\n  /** Sets the wrap parameter for texture coordinate  to either GL_CLAMP_TO_EDGE, GL_MIRRORED_REPEAT, or GL_REPEAT. G */\n  TEXTURE_WRAP_T = 0x2803,\n  TEXTURE_2D = 0x0de1,\n  TEXTURE = 0x1702,\n  TEXTURE_CUBE_MAP = 0x8513,\n  TEXTURE_BINDING_CUBE_MAP = 0x8514,\n  TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,\n  TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,\n  TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,\n  TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,\n  TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,\n  TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851a,\n  MAX_CUBE_MAP_TEXTURE_SIZE = 0x851c,\n  // TEXTURE0 - 31 0x84C0 - 0x84DF A texture unit.\n  TEXTURE0 = 0x84c0,\n  ACTIVE_TEXTURE = 0x84e0,\n  REPEAT = 0x2901,\n  CLAMP_TO_EDGE = 0x812f,\n  MIRRORED_REPEAT = 0x8370,\n\n  // Emulation\n  TEXTURE_WIDTH = 0x1000,\n  TEXTURE_HEIGHT = 0x1001,\n\n  // Uniform types\n\n  FLOAT_VEC2 = 0x8b50,\n  FLOAT_VEC3 = 0x8b51,\n  FLOAT_VEC4 = 0x8b52,\n  INT_VEC2 = 0x8b53,\n  INT_VEC3 = 0x8b54,\n  INT_VEC4 = 0x8b55,\n  BOOL = 0x8b56,\n  BOOL_VEC2 = 0x8b57,\n  BOOL_VEC3 = 0x8b58,\n  BOOL_VEC4 = 0x8b59,\n  FLOAT_MAT2 = 0x8b5a,\n  FLOAT_MAT3 = 0x8b5b,\n  FLOAT_MAT4 = 0x8b5c,\n  SAMPLER_2D = 0x8b5e,\n  SAMPLER_CUBE = 0x8b60,\n\n  // Shader precision-specified types\n\n  LOW_FLOAT = 0x8df0,\n  MEDIUM_FLOAT = 0x8df1,\n  HIGH_FLOAT = 0x8df2,\n  LOW_INT = 0x8df3,\n  MEDIUM_INT = 0x8df4,\n  HIGH_INT = 0x8df5,\n\n  // Framebuffers and renderbuffers\n\n  FRAMEBUFFER = 0x8d40,\n  RENDERBUFFER = 0x8d41,\n  RGBA4 = 0x8056,\n  RGB5_A1 = 0x8057,\n  RGB565 = 0x8d62,\n  DEPTH_COMPONENT16 = 0x81a5,\n  STENCIL_INDEX = 0x1901,\n  STENCIL_INDEX8 = 0x8d48,\n  DEPTH_STENCIL = 0x84f9,\n  RENDERBUFFER_WIDTH = 0x8d42,\n  RENDERBUFFER_HEIGHT = 0x8d43,\n  RENDERBUFFER_INTERNAL_FORMAT = 0x8d44,\n  RENDERBUFFER_RED_SIZE = 0x8d50,\n  RENDERBUFFER_GREEN_SIZE = 0x8d51,\n  RENDERBUFFER_BLUE_SIZE = 0x8d52,\n  RENDERBUFFER_ALPHA_SIZE = 0x8d53,\n  RENDERBUFFER_DEPTH_SIZE = 0x8d54,\n  RENDERBUFFER_STENCIL_SIZE = 0x8d55,\n  FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8cd0,\n  FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8cd1,\n  FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8cd2,\n  FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8cd3,\n  COLOR_ATTACHMENT0 = 0x8ce0,\n  DEPTH_ATTACHMENT = 0x8d00,\n  STENCIL_ATTACHMENT = 0x8d20,\n  DEPTH_STENCIL_ATTACHMENT = 0x821a,\n  NONE = 0,\n  FRAMEBUFFER_COMPLETE = 0x8cd5,\n  FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8cd6,\n  FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8cd7,\n  FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8cd9,\n  FRAMEBUFFER_UNSUPPORTED = 0x8cdd,\n  FRAMEBUFFER_BINDING = 0x8ca6,\n  RENDERBUFFER_BINDING = 0x8ca7,\n  READ_FRAMEBUFFER = 0x8ca8,\n  DRAW_FRAMEBUFFER = 0x8ca9,\n  MAX_RENDERBUFFER_SIZE = 0x84e8,\n  INVALID_FRAMEBUFFER_OPERATION = 0x0506,\n\n  // Pixel storage modes\n  // Constants passed to pixelStorei().\n\n  UNPACK_FLIP_Y_WEBGL = 0x9240,\n  UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241,\n  UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243,\n\n  // Additional constants defined WebGL 2\n  // These constants are defined on the WebGL2RenderingContext interface.\n  // All WebGL 1 constants are also available in a WebGL 2 context.\n\n  // Getting GL parameter information\n  // Constants passed to getParameter()\n  // to specify what information to return.\n\n  READ_BUFFER = 0x0c02,\n  UNPACK_ROW_LENGTH = 0x0cf2,\n  UNPACK_SKIP_ROWS = 0x0cf3,\n  UNPACK_SKIP_PIXELS = 0x0cf4,\n  PACK_ROW_LENGTH = 0x0d02,\n  PACK_SKIP_ROWS = 0x0d03,\n  PACK_SKIP_PIXELS = 0x0d04,\n  TEXTURE_BINDING_3D = 0x806a,\n  UNPACK_SKIP_IMAGES = 0x806d,\n  UNPACK_IMAGE_HEIGHT = 0x806e,\n  MAX_3D_TEXTURE_SIZE = 0x8073,\n  MAX_ELEMENTS_VERTICES = 0x80e8,\n  MAX_ELEMENTS_INDICES = 0x80e9,\n  MAX_TEXTURE_LOD_BIAS = 0x84fd,\n  MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8b49,\n  MAX_VERTEX_UNIFORM_COMPONENTS = 0x8b4a,\n  MAX_ARRAY_TEXTURE_LAYERS = 0x88ff,\n  MIN_PROGRAM_TEXEL_OFFSET = 0x8904,\n  MAX_PROGRAM_TEXEL_OFFSET = 0x8905,\n  MAX_VARYING_COMPONENTS = 0x8b4b,\n  FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8b8b,\n  RASTERIZER_DISCARD = 0x8c89,\n  VERTEX_ARRAY_BINDING = 0x85b5,\n  MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122,\n  MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125,\n  MAX_SERVER_WAIT_TIMEOUT = 0x9111,\n  MAX_ELEMENT_INDEX = 0x8d6b,\n\n  // Textures\n  // Constants passed to texParameteri(),\n  // texParameterf(), bindTexture(), texImage2D(), and others.\n\n  RED = 0x1903,\n  RGB8 = 0x8051,\n  RGBA8 = 0x8058,\n  RGB10_A2 = 0x8059,\n  TEXTURE_3D = 0x806f,\n  /** Sets the wrap parameter for texture coordinate  to either GL_CLAMP_TO_EDGE, GL_MIRRORED_REPEAT, or GL_REPEAT. G */\n  TEXTURE_WRAP_R = 0x8072,\n  TEXTURE_MIN_LOD = 0x813a,\n  TEXTURE_MAX_LOD = 0x813b,\n  TEXTURE_BASE_LEVEL = 0x813c,\n  TEXTURE_MAX_LEVEL = 0x813d,\n  TEXTURE_COMPARE_MODE = 0x884c,\n  TEXTURE_COMPARE_FUNC = 0x884d,\n  SRGB = 0x8c40,\n  SRGB8 = 0x8c41,\n  SRGB8_ALPHA8 = 0x8c43,\n  COMPARE_REF_TO_TEXTURE = 0x884e,\n  RGBA32F = 0x8814,\n  RGB32F = 0x8815,\n  RGBA16F = 0x881a,\n  RGB16F = 0x881b,\n  TEXTURE_2D_ARRAY = 0x8c1a,\n  TEXTURE_BINDING_2D_ARRAY = 0x8c1d,\n  R11F_G11F_B10F = 0x8c3a,\n  RGB9_E5 = 0x8c3d,\n  RGBA32UI = 0x8d70,\n  RGB32UI = 0x8d71,\n  RGBA16UI = 0x8d76,\n  RGB16UI = 0x8d77,\n  RGBA8UI = 0x8d7c,\n  RGB8UI = 0x8d7d,\n  RGBA32I = 0x8d82,\n  RGB32I = 0x8d83,\n  RGBA16I = 0x8d88,\n  RGB16I = 0x8d89,\n  RGBA8I = 0x8d8e,\n  RGB8I = 0x8d8f,\n  RED_INTEGER = 0x8d94,\n  RGB_INTEGER = 0x8d98,\n  RGBA_INTEGER = 0x8d99,\n  R8 = 0x8229,\n  RG8 = 0x822b,\n  R16F = 0x822d,\n  R32F = 0x822e,\n  RG16F = 0x822f,\n  RG32F = 0x8230,\n  R8I = 0x8231,\n  R8UI = 0x8232,\n  R16I = 0x8233,\n  R16UI = 0x8234,\n  R32I = 0x8235,\n  R32UI = 0x8236,\n  RG8I = 0x8237,\n  RG8UI = 0x8238,\n  RG16I = 0x8239,\n  RG16UI = 0x823a,\n  RG32I = 0x823b,\n  RG32UI = 0x823c,\n  R8_SNORM = 0x8f94,\n  RG8_SNORM = 0x8f95,\n  RGB8_SNORM = 0x8f96,\n  RGBA8_SNORM = 0x8f97,\n  RGB10_A2UI = 0x906f,\n\n  /* covered by extension\n  COMPRESSED_R11_EAC  = 0x9270,\n  COMPRESSED_SIGNED_R11_EAC = 0x9271,\n  COMPRESSED_RG11_EAC = 0x9272,\n  COMPRESSED_SIGNED_RG11_EAC  = 0x9273,\n  COMPRESSED_RGB8_ETC2  = 0x9274,\n  COMPRESSED_SRGB8_ETC2 = 0x9275,\n  COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2  = 0x9276,\n  COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC  = 0x9277,\n  COMPRESSED_RGBA8_ETC2_EAC = 0x9278,\n  COMPRESSED_SRGB8_ALPHA8_ETC2_EAC  = 0x9279,\n  */\n  TEXTURE_IMMUTABLE_FORMAT = 0x912f,\n  TEXTURE_IMMUTABLE_LEVELS = 0x82df,\n\n  // Pixel types\n\n  UNSIGNED_INT_2_10_10_10_REV = 0x8368,\n  UNSIGNED_INT_10F_11F_11F_REV = 0x8c3b,\n  UNSIGNED_INT_5_9_9_9_REV = 0x8c3e,\n  FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8dad,\n  UNSIGNED_INT_24_8 = 0x84fa,\n  HALF_FLOAT = 0x140b,\n  RG = 0x8227,\n  RG_INTEGER = 0x8228,\n  INT_2_10_10_10_REV = 0x8d9f,\n\n  // Queries\n\n  CURRENT_QUERY = 0x8865,\n  /** Returns a GLuint containing the query result. */\n  QUERY_RESULT = 0x8866,\n  /** Whether query result is available. */\n  QUERY_RESULT_AVAILABLE = 0x8867,\n  /** Occlusion query (if drawing passed depth test)  */\n  ANY_SAMPLES_PASSED = 0x8c2f,\n  /** Occlusion query less accurate/faster version */\n  ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8d6a,\n\n  // Draw buffers\n\n  MAX_DRAW_BUFFERS = 0x8824,\n  DRAW_BUFFER0 = 0x8825,\n  DRAW_BUFFER1 = 0x8826,\n  DRAW_BUFFER2 = 0x8827,\n  DRAW_BUFFER3 = 0x8828,\n  DRAW_BUFFER4 = 0x8829,\n  DRAW_BUFFER5 = 0x882a,\n  DRAW_BUFFER6 = 0x882b,\n  DRAW_BUFFER7 = 0x882c,\n  DRAW_BUFFER8 = 0x882d,\n  DRAW_BUFFER9 = 0x882e,\n  DRAW_BUFFER10 = 0x882f,\n  DRAW_BUFFER11 = 0x8830,\n  DRAW_BUFFER12 = 0x8831,\n  DRAW_BUFFER13 = 0x8832,\n  DRAW_BUFFER14 = 0x8833,\n  DRAW_BUFFER15 = 0x8834,\n  MAX_COLOR_ATTACHMENTS = 0x8cdf,\n  COLOR_ATTACHMENT1 = 0x8ce1,\n  COLOR_ATTACHMENT2 = 0x8ce2,\n  COLOR_ATTACHMENT3 = 0x8ce3,\n  COLOR_ATTACHMENT4 = 0x8ce4,\n  COLOR_ATTACHMENT5 = 0x8ce5,\n  COLOR_ATTACHMENT6 = 0x8ce6,\n  COLOR_ATTACHMENT7 = 0x8ce7,\n  COLOR_ATTACHMENT8 = 0x8ce8,\n  COLOR_ATTACHMENT9 = 0x8ce9,\n  COLOR_ATTACHMENT10 = 0x8cea,\n  COLOR_ATTACHMENT11 = 0x8ceb,\n  COLOR_ATTACHMENT12 = 0x8cec,\n  COLOR_ATTACHMENT13 = 0x8ced,\n  COLOR_ATTACHMENT14 = 0x8cee,\n  COLOR_ATTACHMENT15 = 0x8cef,\n\n  // Samplers\n\n  SAMPLER_3D = 0x8b5f,\n  SAMPLER_2D_SHADOW = 0x8b62,\n  SAMPLER_2D_ARRAY = 0x8dc1,\n  SAMPLER_2D_ARRAY_SHADOW = 0x8dc4,\n  SAMPLER_CUBE_SHADOW = 0x8dc5,\n  INT_SAMPLER_2D = 0x8dca,\n  INT_SAMPLER_3D = 0x8dcb,\n  INT_SAMPLER_CUBE = 0x8dcc,\n  INT_SAMPLER_2D_ARRAY = 0x8dcf,\n  UNSIGNED_INT_SAMPLER_2D = 0x8dd2,\n  UNSIGNED_INT_SAMPLER_3D = 0x8dd3,\n  UNSIGNED_INT_SAMPLER_CUBE = 0x8dd4,\n  UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8dd7,\n  MAX_SAMPLES = 0x8d57,\n  SAMPLER_BINDING = 0x8919,\n\n  // Buffers\n\n  PIXEL_PACK_BUFFER = 0x88eb,\n  PIXEL_UNPACK_BUFFER = 0x88ec,\n  PIXEL_PACK_BUFFER_BINDING = 0x88ed,\n  PIXEL_UNPACK_BUFFER_BINDING = 0x88ef,\n  COPY_READ_BUFFER = 0x8f36,\n  COPY_WRITE_BUFFER = 0x8f37,\n  COPY_READ_BUFFER_BINDING = 0x8f36,\n  COPY_WRITE_BUFFER_BINDING = 0x8f37,\n\n  // Data types\n\n  FLOAT_MAT2x3 = 0x8b65,\n  FLOAT_MAT2x4 = 0x8b66,\n  FLOAT_MAT3x2 = 0x8b67,\n  FLOAT_MAT3x4 = 0x8b68,\n  FLOAT_MAT4x2 = 0x8b69,\n  FLOAT_MAT4x3 = 0x8b6a,\n  UNSIGNED_INT_VEC2 = 0x8dc6,\n  UNSIGNED_INT_VEC3 = 0x8dc7,\n  UNSIGNED_INT_VEC4 = 0x8dc8,\n  UNSIGNED_NORMALIZED = 0x8c17,\n  SIGNED_NORMALIZED = 0x8f9c,\n\n  // Vertex attributes\n\n  VERTEX_ATTRIB_ARRAY_INTEGER = 0x88fd,\n  VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88fe,\n\n  // Transform feedback\n\n  TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8c7f,\n  MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8c80,\n  TRANSFORM_FEEDBACK_VARYINGS = 0x8c83,\n  TRANSFORM_FEEDBACK_BUFFER_START = 0x8c84,\n  TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8c85,\n  TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8c88,\n  MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8c8a,\n  MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8c8b,\n  INTERLEAVED_ATTRIBS = 0x8c8c,\n  SEPARATE_ATTRIBS = 0x8c8d,\n  TRANSFORM_FEEDBACK_BUFFER = 0x8c8e,\n  TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8c8f,\n  TRANSFORM_FEEDBACK = 0x8e22,\n  TRANSFORM_FEEDBACK_PAUSED = 0x8e23,\n  TRANSFORM_FEEDBACK_ACTIVE = 0x8e24,\n  TRANSFORM_FEEDBACK_BINDING = 0x8e25,\n\n  // Framebuffers and renderbuffers\n\n  FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210,\n  FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211,\n  FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212,\n  FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213,\n  FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214,\n  FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215,\n  FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216,\n  FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217,\n  FRAMEBUFFER_DEFAULT = 0x8218,\n  // DEPTH_STENCIL_ATTACHMENT  = 0x821A,\n  // DEPTH_STENCIL = 0x84F9,\n  DEPTH24_STENCIL8 = 0x88f0,\n  DRAW_FRAMEBUFFER_BINDING = 0x8ca6,\n  READ_FRAMEBUFFER_BINDING = 0x8caa,\n  RENDERBUFFER_SAMPLES = 0x8cab,\n  FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8cd4,\n  FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8d56,\n\n  // Uniforms\n\n  UNIFORM_BUFFER = 0x8a11,\n  UNIFORM_BUFFER_BINDING = 0x8a28,\n  UNIFORM_BUFFER_START = 0x8a29,\n  UNIFORM_BUFFER_SIZE = 0x8a2a,\n  MAX_VERTEX_UNIFORM_BLOCKS = 0x8a2b,\n  MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8a2d,\n  MAX_COMBINED_UNIFORM_BLOCKS = 0x8a2e,\n  MAX_UNIFORM_BUFFER_BINDINGS = 0x8a2f,\n  MAX_UNIFORM_BLOCK_SIZE = 0x8a30,\n  MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8a31,\n  MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8a33,\n  UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8a34,\n  ACTIVE_UNIFORM_BLOCKS = 0x8a36,\n  UNIFORM_TYPE = 0x8a37,\n  UNIFORM_SIZE = 0x8a38,\n  UNIFORM_BLOCK_INDEX = 0x8a3a,\n  UNIFORM_OFFSET = 0x8a3b,\n  UNIFORM_ARRAY_STRIDE = 0x8a3c,\n  UNIFORM_MATRIX_STRIDE = 0x8a3d,\n  UNIFORM_IS_ROW_MAJOR = 0x8a3e,\n  UNIFORM_BLOCK_BINDING = 0x8a3f,\n  UNIFORM_BLOCK_DATA_SIZE = 0x8a40,\n  UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8a42,\n  UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8a43,\n  UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8a44,\n  UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8a46,\n\n  // Sync objects\n\n  OBJECT_TYPE = 0x9112,\n  SYNC_CONDITION = 0x9113,\n  SYNC_STATUS = 0x9114,\n  SYNC_FLAGS = 0x9115,\n  SYNC_FENCE = 0x9116,\n  SYNC_GPU_COMMANDS_COMPLETE = 0x9117,\n  UNSIGNALED = 0x9118,\n  SIGNALED = 0x9119,\n  ALREADY_SIGNALED = 0x911a,\n  TIMEOUT_EXPIRED = 0x911b,\n  CONDITION_SATISFIED = 0x911c,\n  WAIT_FAILED = 0x911d,\n  SYNC_FLUSH_COMMANDS_BIT = 0x00000001,\n\n  // Miscellaneous constants\n\n  COLOR = 0x1800,\n  DEPTH = 0x1801,\n  STENCIL = 0x1802,\n  MIN = 0x8007,\n  MAX = 0x8008,\n  DEPTH_COMPONENT24 = 0x81a6,\n  STREAM_READ = 0x88e1,\n  STREAM_COPY = 0x88e2,\n  STATIC_READ = 0x88e5,\n  STATIC_COPY = 0x88e6,\n  DYNAMIC_READ = 0x88e9,\n  DYNAMIC_COPY = 0x88ea,\n  DEPTH_COMPONENT32F = 0x8cac,\n  DEPTH32F_STENCIL8 = 0x8cad,\n  INVALID_INDEX = 0xffffffff,\n  TIMEOUT_IGNORED = -1,\n  MAX_CLIENT_WAIT_TIMEOUT_WEBGL = 0x9247,\n\n  // Constants defined in WebGL extensions\n\n  // WEBGL_debug_renderer_info\n\n  /** Passed to getParameter to get the vendor string of the graphics driver. */\n  UNMASKED_VENDOR_WEBGL = 0x9245,\n  /** Passed to getParameter to get the renderer string of the graphics driver. */\n  UNMASKED_RENDERER_WEBGL = 0x9246,\n\n  // EXT_texture_filter_anisotropic\n\n  /** Returns the maximum available anisotropy. */\n  MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84ff,\n  /** Passed to texParameter to set the desired maximum anisotropy for a texture. */\n  TEXTURE_MAX_ANISOTROPY_EXT = 0x84fe,\n\n  // EXT_texture_norm16 - https://khronos.org/registry/webgl/extensions/EXT_texture_norm16/\n\n  R16_EXT = 0x822a,\n  RG16_EXT = 0x822c,\n  RGB16_EXT = 0x8054,\n  RGBA16_EXT = 0x805b,\n  R16_SNORM_EXT = 0x8f98,\n  RG16_SNORM_EXT = 0x8f99,\n  RGB16_SNORM_EXT = 0x8f9a,\n  RGBA16_SNORM_EXT = 0x8f9b,\n\n  // WEBGL_compressed_texture_s3tc (BC1, BC2, BC3)\n\n  /** A DXT1-compressed image in an RGB image format. */\n  COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83f0,\n  /** A DXT1-compressed image in an RGB image format with a simple on/off alpha value. */\n  COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83f1,\n  /** A DXT3-compressed image in an RGBA image format. Compared to a 32-bit RGBA texture, it offers 4:1 compression. */\n  COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83f2,\n  /** A DXT5-compressed image in an RGBA image format. It also provides a 4:1 compression, but differs to the DXT3 compression in how the alpha compression is done. */\n  COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83f3,\n\n  // WEBGL_compressed_texture_s3tc_srgb (BC1, BC2, BC3 -  SRGB)\n\n  COMPRESSED_SRGB_S3TC_DXT1_EXT = 0x8c4c,\n  COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 0x8c4d,\n  COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 0x8c4e,\n  COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 0x8c4f,\n\n  // WEBGL_compressed_texture_rgtc (BC4, BC5)\n\n  COMPRESSED_RED_RGTC1_EXT = 0x8dbb,\n  COMPRESSED_SIGNED_RED_RGTC1_EXT = 0x8dbc,\n  COMPRESSED_RED_GREEN_RGTC2_EXT = 0x8dbd,\n  COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = 0x8dbe,\n\n  // WEBGL_compressed_texture_bptc (BC6, BC7)\n\n  COMPRESSED_RGBA_BPTC_UNORM_EXT = 0x8e8c,\n  COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT = 0x8e8d,\n  COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT = 0x8e8e,\n  COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT = 0x8e8f,\n\n  // WEBGL_compressed_texture_es3\n\n  /** One-channel (red) unsigned format compression. */\n  COMPRESSED_R11_EAC = 0x9270,\n  /** One-channel (red) signed format compression. */\n  COMPRESSED_SIGNED_R11_EAC = 0x9271,\n  /** Two-channel (red and green) unsigned format compression. */\n  COMPRESSED_RG11_EAC = 0x9272,\n  /** Two-channel (red and green) signed format compression. */\n  COMPRESSED_SIGNED_RG11_EAC = 0x9273,\n  /** Compresses RGB8 data with no alpha channel. */\n  COMPRESSED_RGB8_ETC2 = 0x9274,\n  /** Compresses RGBA8 data. The RGB part is encoded the same as RGB_ETC2, but the alpha part is encoded separately. */\n  COMPRESSED_RGBA8_ETC2_EAC = 0x9275,\n  /** Compresses sRGB8 data with no alpha channel. */\n  COMPRESSED_SRGB8_ETC2 = 0x9276,\n  /** Compresses sRGBA8 data. The sRGB part is encoded the same as SRGB_ETC2, but the alpha part is encoded separately. */\n  COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9277,\n  /** Similar to RGB8_ETC, but with ability to punch through the alpha channel, which means to make it completely opaque or transparent. */\n  COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9278,\n  /** Similar to SRGB8_ETC, but with ability to punch through the alpha channel, which means to make it completely opaque or transparent. */\n  COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9279,\n\n  // WEBGL_compressed_texture_pvrtc\n\n  /** RGB compression in 4-bit mode. One block for each 4×4 pixels. */\n  COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8c00,\n  /** RGBA compression in 4-bit mode. One block for each 4×4 pixels. */\n  COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8c02,\n  /** RGB compression in 2-bit mode. One block for each 8×4 pixels. */\n  COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8c01,\n  /** RGBA compression in 2-bit mode. One block for each 8×4 pixels. */\n  COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8c03,\n\n  // WEBGL_compressed_texture_etc1\n\n  /** Compresses 24-bit RGB data with no alpha channel. */\n  COMPRESSED_RGB_ETC1_WEBGL = 0x8d64,\n\n  // WEBGL_compressed_texture_atc\n\n  COMPRESSED_RGB_ATC_WEBGL = 0x8c92,\n  COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL = 0x8c92,\n  COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL = 0x87ee,\n\n  // WEBGL_compressed_texture_astc\n\n  COMPRESSED_RGBA_ASTC_4x4_KHR = 0x93b0,\n  COMPRESSED_RGBA_ASTC_5x4_KHR = 0x93b1,\n  COMPRESSED_RGBA_ASTC_5x5_KHR = 0x93b2,\n  COMPRESSED_RGBA_ASTC_6x5_KHR = 0x93b3,\n  COMPRESSED_RGBA_ASTC_6x6_KHR = 0x93b4,\n  COMPRESSED_RGBA_ASTC_8x5_KHR = 0x93b5,\n  COMPRESSED_RGBA_ASTC_8x6_KHR = 0x93b6,\n  COMPRESSED_RGBA_ASTC_8x8_KHR = 0x93b7,\n  COMPRESSED_RGBA_ASTC_10x5_KHR = 0x93b8,\n  COMPRESSED_RGBA_ASTC_10x6_KHR = 0x93b9,\n  COMPRESSED_RGBA_ASTC_10x8_KHR = 0x93ba,\n  COMPRESSED_RGBA_ASTC_10x10_KHR = 0x93bb,\n  COMPRESSED_RGBA_ASTC_12x10_KHR = 0x93bc,\n  COMPRESSED_RGBA_ASTC_12x12_KHR = 0x93bd,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 0x93d0,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 0x93d1,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 0x93d2,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 0x93d3,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 0x93d4,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 0x93d5,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 0x93d6,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 0x93d7,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 0x93d8,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 0x93d9,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 0x93da,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 0x93db,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 0x93dc,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 0x93dd,\n\n  // EXT_disjoint_timer_query\n\n  /** The number of bits used to hold the query result for the given target. */\n  QUERY_COUNTER_BITS_EXT = 0x8864,\n  /** The currently active query. */\n  CURRENT_QUERY_EXT = 0x8865,\n  /** The query result. */\n  QUERY_RESULT_EXT = 0x8866,\n  /** A Boolean indicating whether or not a query result is available. */\n  QUERY_RESULT_AVAILABLE_EXT = 0x8867,\n  /** Elapsed time (in nanoseconds). */\n  TIME_ELAPSED_EXT = 0x88bf,\n  /** The current time. */\n  TIMESTAMP_EXT = 0x8e28,\n  /** A Boolean indicating whether or not the GPU performed any disjoint operation (lost context) */\n  GPU_DISJOINT_EXT = 0x8fbb,\n\n  // KHR_parallel_shader_compile https://registry.khronos.org/webgl/extensions/KHR_parallel_shader_compile\n\n  /** a non-blocking poll operation, so that compile/link status availability can be queried without potentially incurring stalls */\n  COMPLETION_STATUS_KHR = 0x91b1,\n\n  // EXT_depth_clamp https://registry.khronos.org/webgl/extensions/EXT_depth_clamp/\n\n  /** Disables depth clipping */\n  DEPTH_CLAMP_EXT = 0x864f,\n\n  // WEBGL_provoking_vertex https://registry.khronos.org/webgl/extensions/WEBGL_provoking_vertex/\n\n  /** Values of first vertex in primitive are used for flat shading */\n  FIRST_VERTEX_CONVENTION_WEBGL = 0x8e4d,\n  /** Values of first vertex in primitive are used for flat shading */\n  LAST_VERTEX_CONVENTION_WEBGL = 0x8e4e, // default\n  /** Controls which vertex in primitive is used for flat shading */\n  PROVOKING_VERTEX_WEBL = 0x8e4f,\n\n  // WEBGL_polygon_mode https://registry.khronos.org/webgl/extensions/WEBGL_polygon_mode/\n\n  POLYGON_MODE_WEBGL = 0x0b40,\n  POLYGON_OFFSET_LINE_WEBGL = 0x2a02,\n  LINE_WEBGL = 0x1b01,\n  FILL_WEBGL = 0x1b02,\n\n  // WEBGL_clip_cull_distance https://registry.khronos.org/webgl/extensions/WEBGL_clip_cull_distance/\n\n  /** Max clip distances */\n  MAX_CLIP_DISTANCES_WEBGL = 0x0d32,\n  /** Max cull distances */\n  MAX_CULL_DISTANCES_WEBGL = 0x82f9,\n  /** Max clip and cull distances */\n  MAX_COMBINED_CLIP_AND_CULL_DISTANCES_WEBGL = 0x82fa,\n\n  /** Enable gl_ClipDistance[0] and gl_CullDistance[0] */\n  CLIP_DISTANCE0_WEBGL = 0x3000,\n  /** Enable gl_ClipDistance[1] and gl_CullDistance[1] */\n  CLIP_DISTANCE1_WEBGL = 0x3001,\n  /** Enable gl_ClipDistance[2] and gl_CullDistance[2] */\n  CLIP_DISTANCE2_WEBGL = 0x3002,\n  /** Enable gl_ClipDistance[3] and gl_CullDistance[3] */\n  CLIP_DISTANCE3_WEBGL = 0x3003,\n  /** Enable gl_ClipDistance[4] and gl_CullDistance[4] */\n  CLIP_DISTANCE4_WEBGL = 0x3004,\n  /** Enable gl_ClipDistance[5] and gl_CullDistance[5] */\n  CLIP_DISTANCE5_WEBGL = 0x3005,\n  /** Enable gl_ClipDistance[6] and gl_CullDistance[6] */\n  CLIP_DISTANCE6_WEBGL = 0x3006,\n  /** Enable gl_ClipDistance[7] and gl_CullDistance[7] */\n  CLIP_DISTANCE7_WEBGL = 0x3007,\n\n  /** EXT_polygon_offset_clamp https://registry.khronos.org/webgl/extensions/EXT_polygon_offset_clamp/ */\n  POLYGON_OFFSET_CLAMP_EXT = 0x8e1b,\n\n  /** EXT_clip_control https://registry.khronos.org/webgl/extensions/EXT_clip_control/ */\n  LOWER_LEFT_EXT = 0x8ca1,\n  UPPER_LEFT_EXT = 0x8ca2,\n\n  NEGATIVE_ONE_TO_ONE_EXT = 0x935e,\n  ZERO_TO_ONE_EXT = 0x935f,\n\n  CLIP_ORIGIN_EXT = 0x935c,\n  CLIP_DEPTH_MODE_EXT = 0x935d,\n\n  /** WEBGL_blend_func_extended https://registry.khronos.org/webgl/extensions/WEBGL_blend_func_extended/ */\n  SRC1_COLOR_WEBGL = 0x88f9,\n  SRC1_ALPHA_WEBGL = 0x8589,\n  ONE_MINUS_SRC1_COLOR_WEBGL = 0x88fa,\n  ONE_MINUS_SRC1_ALPHA_WEBGL = 0x88fb,\n  MAX_DUAL_SOURCE_DRAW_BUFFERS_WEBGL = 0x88fc,\n\n  /** EXT_texture_mirror_clamp_to_edge https://registry.khronos.org/webgl/extensions/EXT_texture_mirror_clamp_to_edge/ */\n  MIRROR_CLAMP_TO_EDGE_EXT = 0x8743\n}\n\nexport {GLEnum as GL};\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Tables describing WebGL parameters\nimport {GL, GLParameters} from '@luma.gl/constants';\n\n// DEFAULT SETTINGS - FOR FAST CACHE INITIALIZATION AND CONTEXT RESETS\n\n/* eslint-disable no-shadow */\n\nexport const GL_PARAMETER_DEFAULTS: GLParameters = {\n  [GL.BLEND]: false,\n  [GL.BLEND_COLOR]: new Float32Array([0, 0, 0, 0]),\n  [GL.BLEND_EQUATION_RGB]: GL.FUNC_ADD,\n  [GL.BLEND_EQUATION_ALPHA]: GL.FUNC_ADD,\n  [GL.BLEND_SRC_RGB]: GL.ONE,\n  [GL.BLEND_DST_RGB]: GL.ZERO,\n  [GL.BLEND_SRC_ALPHA]: GL.ONE,\n  [GL.BLEND_DST_ALPHA]: GL.ZERO,\n  [GL.COLOR_CLEAR_VALUE]: new Float32Array([0, 0, 0, 0]), // TBD\n  [GL.COLOR_WRITEMASK]: [true, true, true, true],\n  [GL.CULL_FACE]: false,\n  [GL.CULL_FACE_MODE]: GL.BACK,\n  [GL.DEPTH_TEST]: false,\n  [GL.DEPTH_CLEAR_VALUE]: 1,\n  [GL.DEPTH_FUNC]: GL.LESS,\n  [GL.DEPTH_RANGE]: new Float32Array([0, 1]), // TBD\n  [GL.DEPTH_WRITEMASK]: true,\n  [GL.DITHER]: true,\n  [GL.CURRENT_PROGRAM]: null,\n  // FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: null,\n  [GL.RENDERBUFFER_BINDING]: null,\n  [GL.VERTEX_ARRAY_BINDING]: null,\n  [GL.ARRAY_BUFFER_BINDING]: null,\n  [GL.FRONT_FACE]: GL.CCW,\n  [GL.GENERATE_MIPMAP_HINT]: GL.DONT_CARE,\n  [GL.LINE_WIDTH]: 1,\n  [GL.POLYGON_OFFSET_FILL]: false,\n  [GL.POLYGON_OFFSET_FACTOR]: 0,\n  [GL.POLYGON_OFFSET_UNITS]: 0,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: false,\n  [GL.SAMPLE_COVERAGE]: false,\n  [GL.SAMPLE_COVERAGE_VALUE]: 1.0,\n  [GL.SAMPLE_COVERAGE_INVERT]: false,\n  [GL.SCISSOR_TEST]: false,\n  // Note: Dynamic value. If scissor test enabled we expect users to set correct scissor box\n  [GL.SCISSOR_BOX]: new Int32Array([0, 0, 1024, 1024]),\n  [GL.STENCIL_TEST]: false,\n  [GL.STENCIL_CLEAR_VALUE]: 0,\n  [GL.STENCIL_WRITEMASK]: 0xffffffff,\n  [GL.STENCIL_BACK_WRITEMASK]: 0xffffffff,\n  [GL.STENCIL_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_REF]: 0,\n  [GL.STENCIL_VALUE_MASK]: 0xffffffff,\n  [GL.STENCIL_BACK_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_BACK_REF]: 0,\n  [GL.STENCIL_BACK_VALUE_MASK]: 0xffffffff,\n  [GL.STENCIL_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_PASS]: GL.KEEP,\n  [GL.STENCIL_BACK_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: GL.KEEP,\n  // Dynamic value: We use [0, 0, 1024, 1024] as default, but usually this is updated in each frame.\n  [GL.VIEWPORT]: [0, 0, 1024, 1024],\n\n  [GL.TRANSFORM_FEEDBACK_BINDING]: null,\n  [GL.COPY_READ_BUFFER_BINDING]: null,\n  [GL.COPY_WRITE_BUFFER_BINDING]: null,\n  [GL.PIXEL_PACK_BUFFER_BINDING]: null,\n  [GL.PIXEL_UNPACK_BUFFER_BINDING]: null,\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: GL.DONT_CARE,\n  [GL.READ_FRAMEBUFFER_BINDING]: null,\n  [GL.RASTERIZER_DISCARD]: false,\n\n  [GL.PACK_ALIGNMENT]: 4,\n  [GL.UNPACK_ALIGNMENT]: 4,\n  [GL.UNPACK_FLIP_Y_WEBGL]: false,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: false,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: GL.BROWSER_DEFAULT_WEBGL,\n  [GL.PACK_ROW_LENGTH]: 0,\n  [GL.PACK_SKIP_PIXELS]: 0,\n  [GL.PACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_ROW_LENGTH]: 0,\n  [GL.UNPACK_IMAGE_HEIGHT]: 0,\n  [GL.UNPACK_SKIP_PIXELS]: 0,\n  [GL.UNPACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_SKIP_IMAGES]: 0\n};\n\n// SETTER TABLES - ENABLES SETTING ANY PARAMETER WITH A COMMON API\n\nconst enable = (gl: WebGL2RenderingContext, value: unknown, key: GL) =>\n  value ? gl.enable(key) : gl.disable(key);\nconst hint = (gl: WebGL2RenderingContext, value: GL, key: GL) => gl.hint(key, value);\nconst pixelStorei = (gl: WebGL2RenderingContext, value: number | boolean, key: GL) =>\n  gl.pixelStorei(key, value);\n\nconst bindFramebuffer = (gl: WebGL2RenderingContext, value: unknown, key: GL) => {\n  const target = key === GL.FRAMEBUFFER_BINDING ? GL.DRAW_FRAMEBUFFER : GL.READ_FRAMEBUFFER;\n  return gl.bindFramebuffer(target, value as WebGLFramebuffer);\n};\n\nconst bindBuffer = (gl: WebGL2RenderingContext, value: unknown, key: GL) => {\n  const bindingMap: Partial<Record<GL, GL>> = {\n    [GL.ARRAY_BUFFER_BINDING]: GL.ARRAY_BUFFER,\n    [GL.COPY_READ_BUFFER_BINDING]: GL.COPY_READ_BUFFER,\n    [GL.COPY_WRITE_BUFFER_BINDING]: GL.COPY_WRITE_BUFFER,\n    [GL.PIXEL_PACK_BUFFER_BINDING]: GL.PIXEL_PACK_BUFFER,\n    [GL.PIXEL_UNPACK_BUFFER_BINDING]: GL.PIXEL_UNPACK_BUFFER\n  };\n  const glTarget = bindingMap[key];\n\n  gl.bindBuffer(glTarget as number, value as WebGLBuffer | null);\n};\n\n// Utility\nfunction isArray(array: unknown): boolean {\n  return Array.isArray(array) || (ArrayBuffer.isView(array) && !(array instanceof DataView));\n}\n\n// Map from WebGL parameter names to corresponding WebGL setter functions\n// WegGL constants are read by parameter names, but set by function names\n// NOTE: When value type is a string, it will be handled by 'GL_COMPOSITE_PARAMETER_SETTERS'\nexport const GL_PARAMETER_SETTERS = {\n  [GL.BLEND]: enable,\n  [GL.BLEND_COLOR]: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.blendColor(...value),\n  [GL.BLEND_EQUATION_RGB]: 'blendEquation',\n  [GL.BLEND_EQUATION_ALPHA]: 'blendEquation',\n  [GL.BLEND_SRC_RGB]: 'blendFunc',\n  [GL.BLEND_DST_RGB]: 'blendFunc',\n  [GL.BLEND_SRC_ALPHA]: 'blendFunc',\n  [GL.BLEND_DST_ALPHA]: 'blendFunc',\n  [GL.COLOR_CLEAR_VALUE]: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.clearColor(...value),\n  [GL.COLOR_WRITEMASK]: (gl: WebGL2RenderingContext, value: [boolean, boolean, boolean, boolean]) =>\n    gl.colorMask(...value),\n  [GL.CULL_FACE]: enable,\n  [GL.CULL_FACE_MODE]: (gl: WebGL2RenderingContext, value) => gl.cullFace(value),\n  [GL.DEPTH_TEST]: enable,\n  [GL.DEPTH_CLEAR_VALUE]: (gl: WebGL2RenderingContext, value) => gl.clearDepth(value),\n  [GL.DEPTH_FUNC]: (gl: WebGL2RenderingContext, value) => gl.depthFunc(value),\n  [GL.DEPTH_RANGE]: (gl: WebGL2RenderingContext, value: [number, number]) =>\n    gl.depthRange(...value),\n  [GL.DEPTH_WRITEMASK]: (gl: WebGL2RenderingContext, value) => gl.depthMask(value),\n  [GL.DITHER]: enable,\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: hint,\n\n  [GL.CURRENT_PROGRAM]: (gl: WebGL2RenderingContext, value) => gl.useProgram(value),\n  [GL.RENDERBUFFER_BINDING]: (gl: WebGL2RenderingContext, value) =>\n    gl.bindRenderbuffer(GL.RENDERBUFFER, value),\n  [GL.TRANSFORM_FEEDBACK_BINDING]: (gl: WebGL2RenderingContext, value) =>\n    gl.bindTransformFeedback?.(GL.TRANSFORM_FEEDBACK, value),\n  [GL.VERTEX_ARRAY_BINDING]: (gl: WebGL2RenderingContext, value) => gl.bindVertexArray(value),\n  // NOTE: FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: bindFramebuffer,\n  [GL.READ_FRAMEBUFFER_BINDING]: bindFramebuffer,\n\n  // Buffers\n  [GL.ARRAY_BUFFER_BINDING]: bindBuffer,\n  [GL.COPY_READ_BUFFER_BINDING]: bindBuffer,\n  [GL.COPY_WRITE_BUFFER_BINDING]: bindBuffer,\n  [GL.PIXEL_PACK_BUFFER_BINDING]: bindBuffer,\n  [GL.PIXEL_UNPACK_BUFFER_BINDING]: bindBuffer,\n\n  [GL.FRONT_FACE]: (gl: WebGL2RenderingContext, value) => gl.frontFace(value),\n  [GL.GENERATE_MIPMAP_HINT]: hint,\n  [GL.LINE_WIDTH]: (gl: WebGL2RenderingContext, value) => gl.lineWidth(value),\n  [GL.POLYGON_OFFSET_FILL]: enable,\n  [GL.POLYGON_OFFSET_FACTOR]: 'polygonOffset',\n  [GL.POLYGON_OFFSET_UNITS]: 'polygonOffset',\n  [GL.RASTERIZER_DISCARD]: enable,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: enable,\n  [GL.SAMPLE_COVERAGE]: enable,\n  [GL.SAMPLE_COVERAGE_VALUE]: 'sampleCoverage',\n  [GL.SAMPLE_COVERAGE_INVERT]: 'sampleCoverage',\n  [GL.SCISSOR_TEST]: enable,\n  [GL.SCISSOR_BOX]: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.scissor(...value),\n  [GL.STENCIL_TEST]: enable,\n  [GL.STENCIL_CLEAR_VALUE]: (gl: WebGL2RenderingContext, value) => gl.clearStencil(value),\n  [GL.STENCIL_WRITEMASK]: (gl: WebGL2RenderingContext, value) =>\n    gl.stencilMaskSeparate(GL.FRONT, value),\n  [GL.STENCIL_BACK_WRITEMASK]: (gl: WebGL2RenderingContext, value) =>\n    gl.stencilMaskSeparate(GL.BACK, value),\n  [GL.STENCIL_FUNC]: 'stencilFuncFront',\n  [GL.STENCIL_REF]: 'stencilFuncFront',\n  [GL.STENCIL_VALUE_MASK]: 'stencilFuncFront',\n  [GL.STENCIL_BACK_FUNC]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_REF]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_VALUE_MASK]: 'stencilFuncBack',\n  [GL.STENCIL_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_PASS]: 'stencilOpFront',\n  [GL.STENCIL_BACK_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: 'stencilOpBack',\n  [GL.VIEWPORT]: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.viewport(...value),\n\n  // WEBGL2 EXTENSIONS\n\n  // EXT_depth_clamp https://registry.khronos.org/webgl/extensions/EXT_depth_clamp/\n\n  [GL.DEPTH_CLAMP_EXT]: enable,\n\n  // WEBGL_provoking_vertex https://registry.khronos.org/webgl/extensions/WEBGL_provoking_vertex/\n\n  // [GL.PROVOKING_VERTEX_WEBL]: TODO - extension function needed\n\n  // WEBGL_polygon_mode https://registry.khronos.org/webgl/extensions/WEBGL_polygon_mode/\n\n  // POLYGON_MODE_WEBGL  TODO - extension function needed\n  [GL.POLYGON_OFFSET_LINE_WEBGL]: enable,\n\n  // WEBGL_clip_cull_distance https://registry.khronos.org/webgl/extensions/WEBGL_clip_cull_distance/\n\n  [GL.CLIP_DISTANCE0_WEBGL]: enable,\n  [GL.CLIP_DISTANCE1_WEBGL]: enable,\n  [GL.CLIP_DISTANCE2_WEBGL]: enable,\n  [GL.CLIP_DISTANCE3_WEBGL]: enable,\n  [GL.CLIP_DISTANCE4_WEBGL]: enable,\n  [GL.CLIP_DISTANCE5_WEBGL]: enable,\n  [GL.CLIP_DISTANCE6_WEBGL]: enable,\n  [GL.CLIP_DISTANCE7_WEBGL]: enable,\n\n  // PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_FLIP_Y_WEBGL]: pixelStorei,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: pixelStorei,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: pixelStorei,\n  [GL.PACK_ROW_LENGTH]: pixelStorei,\n  [GL.PACK_SKIP_PIXELS]: pixelStorei,\n  [GL.PACK_SKIP_ROWS]: pixelStorei,\n  [GL.UNPACK_ROW_LENGTH]: pixelStorei,\n  [GL.UNPACK_IMAGE_HEIGHT]: pixelStorei,\n  [GL.UNPACK_SKIP_PIXELS]: pixelStorei,\n  [GL.UNPACK_SKIP_ROWS]: pixelStorei,\n  [GL.UNPACK_SKIP_IMAGES]: pixelStorei,\n\n  // Function-style setters\n  framebuffer: (gl: WebGL2RenderingContext, framebuffer) => {\n    // accepts 1) a WebGLFramebuffer 2) null (default framebuffer), or 3) luma.gl Framebuffer class\n    // framebuffer is null when restoring to default framebuffer, otherwise use the WebGL handle.\n    const handle = framebuffer && 'handle' in framebuffer ? framebuffer.handle : framebuffer;\n    return gl.bindFramebuffer(GL.FRAMEBUFFER, handle);\n  },\n  blend: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.BLEND) : gl.disable(GL.BLEND),\n  blendColor: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.blendColor(...value),\n  blendEquation: (gl: WebGL2RenderingContext, args: number | [number, number]) => {\n    const separateModes = typeof args === 'number' ? ([args, args] as [number, number]) : args;\n    gl.blendEquationSeparate(...separateModes);\n  },\n  blendFunc: (\n    gl: WebGL2RenderingContext,\n    args: [number, number] | [number, number, number, number]\n  ) => {\n    const separateFuncs =\n      args?.length === 2 ? ([...args, ...args] as [number, number, number, number]) : args;\n    gl.blendFuncSeparate(...separateFuncs);\n  },\n\n  clearColor: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.clearColor(...value),\n  clearDepth: (gl: WebGL2RenderingContext, value) => gl.clearDepth(value),\n  clearStencil: (gl: WebGL2RenderingContext, value) => gl.clearStencil(value),\n\n  colorMask: (gl: WebGL2RenderingContext, value: [boolean, boolean, boolean, boolean]) =>\n    gl.colorMask(...value),\n\n  cull: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.CULL_FACE) : gl.disable(GL.CULL_FACE),\n  cullFace: (gl: WebGL2RenderingContext, value) => gl.cullFace(value),\n\n  depthTest: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.DEPTH_TEST) : gl.disable(GL.DEPTH_TEST),\n  depthFunc: (gl: WebGL2RenderingContext, value) => gl.depthFunc(value),\n  depthMask: (gl: WebGL2RenderingContext, value) => gl.depthMask(value),\n  depthRange: (gl: WebGL2RenderingContext, value: [number, number]) => gl.depthRange(...value),\n\n  dither: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.DITHER) : gl.disable(GL.DITHER),\n\n  derivativeHint: (gl: WebGL2RenderingContext, value) => {\n    // gl1: 'OES_standard_derivatives'\n    gl.hint(GL.FRAGMENT_SHADER_DERIVATIVE_HINT, value);\n  },\n\n  frontFace: (gl: WebGL2RenderingContext, value) => gl.frontFace(value),\n\n  mipmapHint: (gl: WebGL2RenderingContext, value) => gl.hint(GL.GENERATE_MIPMAP_HINT, value),\n\n  lineWidth: (gl: WebGL2RenderingContext, value) => gl.lineWidth(value),\n\n  polygonOffsetFill: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.POLYGON_OFFSET_FILL) : gl.disable(GL.POLYGON_OFFSET_FILL),\n  polygonOffset: (gl: WebGL2RenderingContext, value: [number, number]) =>\n    gl.polygonOffset(...value),\n\n  sampleCoverage: (gl: WebGL2RenderingContext, value: [number, boolean?]) =>\n    gl.sampleCoverage(value[0], value[1] || false),\n\n  scissorTest: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.SCISSOR_TEST) : gl.disable(GL.SCISSOR_TEST),\n  scissor: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.scissor(...value),\n\n  stencilTest: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.STENCIL_TEST) : gl.disable(GL.STENCIL_TEST),\n  stencilMask: (gl: WebGL2RenderingContext, value) => {\n    value = isArray(value) ? value : [value, value];\n    const [mask, backMask] = value;\n    gl.stencilMaskSeparate(GL.FRONT, mask);\n    gl.stencilMaskSeparate(GL.BACK, backMask);\n  },\n  stencilFunc: (gl: WebGL2RenderingContext, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [func, ref, mask, backFunc, backRef, backMask] = args;\n    gl.stencilFuncSeparate(GL.FRONT, func, ref, mask);\n    gl.stencilFuncSeparate(GL.BACK, backFunc, backRef, backMask);\n  },\n  stencilOp: (gl: WebGL2RenderingContext, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [sfail, dpfail, dppass, backSfail, backDpfail, backDppass] = args;\n    gl.stencilOpSeparate(GL.FRONT, sfail, dpfail, dppass);\n    gl.stencilOpSeparate(GL.BACK, backSfail, backDpfail, backDppass);\n  },\n\n  viewport: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.viewport(...value)\n};\n\nfunction getValue(glEnum, values, cache) {\n  return values[glEnum] !== undefined ? values[glEnum] : cache[glEnum];\n}\n\n// COMPOSITE_WEBGL_PARAMETER_\nexport const GL_COMPOSITE_PARAMETER_SETTERS = {\n  blendEquation: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.blendEquationSeparate(\n      getValue(GL.BLEND_EQUATION_RGB, values, cache),\n      getValue(GL.BLEND_EQUATION_ALPHA, values, cache)\n    ),\n  blendFunc: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.blendFuncSeparate(\n      getValue(GL.BLEND_SRC_RGB, values, cache),\n      getValue(GL.BLEND_DST_RGB, values, cache),\n      getValue(GL.BLEND_SRC_ALPHA, values, cache),\n      getValue(GL.BLEND_DST_ALPHA, values, cache)\n    ),\n  polygonOffset: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.polygonOffset(\n      getValue(GL.POLYGON_OFFSET_FACTOR, values, cache),\n      getValue(GL.POLYGON_OFFSET_UNITS, values, cache)\n    ),\n  sampleCoverage: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.sampleCoverage(\n      getValue(GL.SAMPLE_COVERAGE_VALUE, values, cache),\n      getValue(GL.SAMPLE_COVERAGE_INVERT, values, cache)\n    ),\n  stencilFuncFront: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.stencilFuncSeparate(\n      GL.FRONT,\n      getValue(GL.STENCIL_FUNC, values, cache),\n      getValue(GL.STENCIL_REF, values, cache),\n      getValue(GL.STENCIL_VALUE_MASK, values, cache)\n    ),\n  stencilFuncBack: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.stencilFuncSeparate(\n      GL.BACK,\n      getValue(GL.STENCIL_BACK_FUNC, values, cache),\n      getValue(GL.STENCIL_BACK_REF, values, cache),\n      getValue(GL.STENCIL_BACK_VALUE_MASK, values, cache)\n    ),\n  stencilOpFront: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.stencilOpSeparate(\n      GL.FRONT,\n      getValue(GL.STENCIL_FAIL, values, cache),\n      getValue(GL.STENCIL_PASS_DEPTH_FAIL, values, cache),\n      getValue(GL.STENCIL_PASS_DEPTH_PASS, values, cache)\n    ),\n  stencilOpBack: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.stencilOpSeparate(\n      GL.BACK,\n      getValue(GL.STENCIL_BACK_FAIL, values, cache),\n      getValue(GL.STENCIL_BACK_PASS_DEPTH_FAIL, values, cache),\n      getValue(GL.STENCIL_BACK_PASS_DEPTH_PASS, values, cache)\n    )\n};\n\ntype UpdateFunc = (params: Record<string, any>) => void;\n\n// Setter functions intercepted for cache updates\nexport const GL_HOOKED_SETTERS = {\n  // GENERIC SETTERS\n\n  enable: (update: UpdateFunc, capability: GL) =>\n    update({\n      [capability]: true\n    }),\n  disable: (update: UpdateFunc, capability: GL) =>\n    update({\n      [capability]: false\n    }),\n  pixelStorei: (update: UpdateFunc, pname: GL, value) =>\n    update({\n      [pname]: value\n    }),\n  hint: (update: UpdateFunc, pname: GL, value: GL) =>\n    update({\n      [pname]: value\n    }),\n\n  // SPECIFIC SETTERS\n  useProgram: (update: UpdateFunc, value) =>\n    update({\n      [GL.CURRENT_PROGRAM]: value\n    }),\n  bindRenderbuffer: (update: UpdateFunc, target, value) =>\n    update({\n      [GL.RENDERBUFFER_BINDING]: value\n    }),\n  bindTransformFeedback: (update: UpdateFunc, target, value) =>\n    update({\n      [GL.TRANSFORM_FEEDBACK_BINDING]: value\n    }),\n  bindVertexArray: (update: UpdateFunc, value) =>\n    update({\n      [GL.VERTEX_ARRAY_BINDING]: value\n    }),\n\n  bindFramebuffer: (update: UpdateFunc, target, framebuffer) => {\n    switch (target) {\n      case GL.FRAMEBUFFER:\n        return update({\n          [GL.DRAW_FRAMEBUFFER_BINDING]: framebuffer,\n          [GL.READ_FRAMEBUFFER_BINDING]: framebuffer\n        });\n      case GL.DRAW_FRAMEBUFFER:\n        return update({[GL.DRAW_FRAMEBUFFER_BINDING]: framebuffer});\n      case GL.READ_FRAMEBUFFER:\n        return update({[GL.READ_FRAMEBUFFER_BINDING]: framebuffer});\n      default:\n        return null;\n    }\n  },\n  bindBuffer: (update: UpdateFunc, target, buffer) => {\n    const pname = {\n      [GL.ARRAY_BUFFER]: [GL.ARRAY_BUFFER_BINDING],\n      [GL.COPY_READ_BUFFER]: [GL.COPY_READ_BUFFER_BINDING],\n      [GL.COPY_WRITE_BUFFER]: [GL.COPY_WRITE_BUFFER_BINDING],\n      [GL.PIXEL_PACK_BUFFER]: [GL.PIXEL_PACK_BUFFER_BINDING],\n      [GL.PIXEL_UNPACK_BUFFER]: [GL.PIXEL_UNPACK_BUFFER_BINDING]\n    }[target];\n\n    if (pname) {\n      return update({[pname]: buffer});\n    }\n    // targets that should not be cached\n    return {valueChanged: true};\n  },\n\n  blendColor: (update: UpdateFunc, r: number, g: number, b: number, a: number) =>\n    update({\n      [GL.BLEND_COLOR]: new Float32Array([r, g, b, a])\n    }),\n\n  blendEquation: (update: UpdateFunc, mode) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: mode,\n      [GL.BLEND_EQUATION_ALPHA]: mode\n    }),\n\n  blendEquationSeparate: (update: UpdateFunc, modeRGB, modeAlpha) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: modeRGB,\n      [GL.BLEND_EQUATION_ALPHA]: modeAlpha\n    }),\n\n  blendFunc: (update: UpdateFunc, src, dst) =>\n    update({\n      [GL.BLEND_SRC_RGB]: src,\n      [GL.BLEND_DST_RGB]: dst,\n      [GL.BLEND_SRC_ALPHA]: src,\n      [GL.BLEND_DST_ALPHA]: dst\n    }),\n\n  blendFuncSeparate: (update: UpdateFunc, srcRGB, dstRGB, srcAlpha, dstAlpha) =>\n    update({\n      [GL.BLEND_SRC_RGB]: srcRGB,\n      [GL.BLEND_DST_RGB]: dstRGB,\n      [GL.BLEND_SRC_ALPHA]: srcAlpha,\n      [GL.BLEND_DST_ALPHA]: dstAlpha\n    }),\n\n  clearColor: (update: UpdateFunc, r: number, g: number, b: number, a: number) =>\n    update({\n      [GL.COLOR_CLEAR_VALUE]: new Float32Array([r, g, b, a])\n    }),\n\n  clearDepth: (update: UpdateFunc, depth: number) =>\n    update({\n      [GL.DEPTH_CLEAR_VALUE]: depth\n    }),\n\n  clearStencil: (update: UpdateFunc, s: number) =>\n    update({\n      [GL.STENCIL_CLEAR_VALUE]: s\n    }),\n\n  colorMask: (update: UpdateFunc, r: number, g: number, b: number, a: number) =>\n    update({\n      [GL.COLOR_WRITEMASK]: [r, g, b, a]\n    }),\n\n  cullFace: (update: UpdateFunc, mode) =>\n    update({\n      [GL.CULL_FACE_MODE]: mode\n    }),\n\n  depthFunc: (update: UpdateFunc, func) =>\n    update({\n      [GL.DEPTH_FUNC]: func\n    }),\n\n  depthRange: (update: UpdateFunc, zNear: number, zFar: number) =>\n    update({\n      [GL.DEPTH_RANGE]: new Float32Array([zNear, zFar])\n    }),\n\n  depthMask: (update: UpdateFunc, mask: number) =>\n    update({\n      [GL.DEPTH_WRITEMASK]: mask\n    }),\n\n  frontFace: (update: UpdateFunc, face) =>\n    update({\n      [GL.FRONT_FACE]: face\n    }),\n\n  lineWidth: (update: UpdateFunc, width) =>\n    update({\n      [GL.LINE_WIDTH]: width\n    }),\n\n  polygonOffset: (update: UpdateFunc, factor, units) =>\n    update({\n      [GL.POLYGON_OFFSET_FACTOR]: factor,\n      [GL.POLYGON_OFFSET_UNITS]: units\n    }),\n\n  sampleCoverage: (update: UpdateFunc, value, invert) =>\n    update({\n      [GL.SAMPLE_COVERAGE_VALUE]: value,\n      [GL.SAMPLE_COVERAGE_INVERT]: invert\n    }),\n\n  scissor: (update: UpdateFunc, x, y, width, height) =>\n    update({\n      [GL.SCISSOR_BOX]: new Int32Array([x, y, width, height])\n    }),\n\n  stencilMask: (update: UpdateFunc, mask) =>\n    update({\n      [GL.STENCIL_WRITEMASK]: mask,\n      [GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilMaskSeparate: (update: UpdateFunc, face, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_WRITEMASK : GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilFunc: (update: UpdateFunc, func, ref, mask) =>\n    update({\n      [GL.STENCIL_FUNC]: func,\n      [GL.STENCIL_REF]: ref,\n      [GL.STENCIL_VALUE_MASK]: mask,\n      [GL.STENCIL_BACK_FUNC]: func,\n      [GL.STENCIL_BACK_REF]: ref,\n      [GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilFuncSeparate: (update: UpdateFunc, face, func, ref, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FUNC : GL.STENCIL_BACK_FUNC]: func,\n      [face === GL.FRONT ? GL.STENCIL_REF : GL.STENCIL_BACK_REF]: ref,\n      [face === GL.FRONT ? GL.STENCIL_VALUE_MASK : GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilOp: (update: UpdateFunc, fail, zfail, zpass) =>\n    update({\n      [GL.STENCIL_FAIL]: fail,\n      [GL.STENCIL_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_PASS_DEPTH_PASS]: zpass,\n      [GL.STENCIL_BACK_FAIL]: fail,\n      [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  stencilOpSeparate: (update: UpdateFunc, face, fail, zfail, zpass) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FAIL : GL.STENCIL_BACK_FAIL]: fail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_FAIL : GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_PASS : GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  viewport: (update: UpdateFunc, x, y, width, height) =>\n    update({\n      [GL.VIEWPORT]: [x, y, width, height]\n    })\n};\n\n// GETTER TABLE - FOR READING OUT AN ENTIRE CONTEXT\n\nconst isEnabled = (gl: WebGL2RenderingContext, key) => gl.isEnabled(key);\n\n// Exceptions for any keys that cannot be queried by gl.getParameters\nexport const GL_PARAMETER_GETTERS = {\n  [GL.BLEND]: isEnabled,\n  [GL.CULL_FACE]: isEnabled,\n  [GL.DEPTH_TEST]: isEnabled,\n  [GL.DITHER]: isEnabled,\n  [GL.POLYGON_OFFSET_FILL]: isEnabled,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: isEnabled,\n  [GL.SAMPLE_COVERAGE]: isEnabled,\n  [GL.SCISSOR_TEST]: isEnabled,\n  [GL.STENCIL_TEST]: isEnabled,\n  [GL.RASTERIZER_DISCARD]: isEnabled\n};\n\nexport const NON_CACHE_PARAMETERS = new Set([\n  // setter not intercepted\n  GL.ACTIVE_TEXTURE,\n  GL.TRANSFORM_FEEDBACK_ACTIVE,\n  GL.TRANSFORM_FEEDBACK_PAUSED,\n\n  // setters bindBufferRange/bindBufferBase cannot be pruned based on cache\n  GL.TRANSFORM_FEEDBACK_BUFFER_BINDING,\n  GL.UNIFORM_BUFFER_BINDING,\n\n  // states depending on VERTEX_ARRAY_BINDING\n  GL.ELEMENT_ARRAY_BUFFER_BINDING,\n  // states depending on READ_FRAMEBUFFER_BINDING\n  GL.IMPLEMENTATION_COLOR_READ_FORMAT,\n  GL.IMPLEMENTATION_COLOR_READ_TYPE,\n  // states depending on FRAMEBUFFER_BINDING\n  GL.READ_BUFFER,\n  GL.DRAW_BUFFER0,\n  GL.DRAW_BUFFER1,\n  GL.DRAW_BUFFER2,\n  GL.DRAW_BUFFER3,\n  GL.DRAW_BUFFER4,\n  GL.DRAW_BUFFER5,\n  GL.DRAW_BUFFER6,\n  GL.DRAW_BUFFER7,\n  GL.DRAW_BUFFER8,\n  GL.DRAW_BUFFER9,\n  GL.DRAW_BUFFER10,\n  GL.DRAW_BUFFER11,\n  GL.DRAW_BUFFER12,\n  GL.DRAW_BUFFER13,\n  GL.DRAW_BUFFER14,\n  GL.DRAW_BUFFER15,\n  // states depending on ACTIVE_TEXTURE\n  GL.SAMPLER_BINDING,\n  GL.TEXTURE_BINDING_2D,\n  GL.TEXTURE_BINDING_2D_ARRAY,\n  GL.TEXTURE_BINDING_3D,\n  GL.TEXTURE_BINDING_CUBE_MAP\n]);\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Provides a unified API for getting and setting any WebGL parameter\n// Also knows default values of all parameters, enabling fast cache initialization\n// Provides base functionality for the state caching.\nimport type {GLParameters} from '@luma.gl/constants';\nimport {\n  GL_PARAMETER_DEFAULTS,\n  GL_PARAMETER_SETTERS,\n  GL_COMPOSITE_PARAMETER_SETTERS,\n  GL_PARAMETER_GETTERS\n} from './webgl-parameter-tables';\n\nexport type {GLParameters};\n\n/**\n * Sets any GL parameter regardless of function (gl.blendMode, ...)\n *\n * @note requires a `cache` object to be set on the context (gl.state.cache)\n * This object is used to fill in any missing values for composite setter functions\n */\nexport function setGLParameters(gl: WebGL2RenderingContext, parameters: GLParameters): void {\n  if (isObjectEmpty(parameters)) {\n    return;\n  }\n\n  const compositeSetters = {};\n\n  // HANDLE PRIMITIVE SETTERS (and make note of any composite setters)\n\n  for (const key in parameters) {\n    const glConstant = Number(key);\n    const setter = GL_PARAMETER_SETTERS[key];\n    if (setter) {\n      // Composite setters should only be called once, so save them\n      if (typeof setter === 'string') {\n        compositeSetters[setter] = true;\n      } else {\n        // if (gl[glConstant] !== undefined) {\n        // TODO - added above check since this is being called on WebGL2 parameters in WebGL1...\n        // TODO - deep equal on values? only call setter if value has changed?\n        // NOTE - the setter will automatically update this.state\n        setter(gl, parameters[key], glConstant);\n      }\n    }\n  }\n\n  // HANDLE COMPOSITE SETTERS\n\n  // NOTE: any non-provided values needed by composite setters are filled in from state cache\n  // The cache parameter is automatically retrieved from the context\n  // This depends on `trackContextState`, which is technically a \"circular\" dependency.\n  // But it is too inconvenient to always require a cache parameter here.\n  // This is the ONLY external dependency in this module/\n  // @ts-expect-error\n  const cache = gl.state && gl.state.cache;\n  if (cache) {\n    for (const key in compositeSetters) {\n      // TODO - avoid calling composite setters if values have not changed.\n      const compositeSetter = GL_COMPOSITE_PARAMETER_SETTERS[key];\n      // Note - if `trackContextState` has been called,\n      // the setter will automatically update this.state.cache\n      compositeSetter(gl, parameters, cache);\n    }\n  }\n\n  // Add a log for the else case?\n}\n\n/**\n * Reads the entire WebGL state from a context\n\n  // default to querying all parameters\n\n  * @returns - a newly created map, with values keyed by GL parameters\n *\n * @note Copies the state from a context (gl.getParameter should not be overriden)\n * Reads the entire WebGL state from a context\n *\n * @note This can generates a huge amount of synchronous driver roundtrips and should be\n * considered a very slow operation, to be used only if/when a context already manipulated\n * by external code needs to be synchronized for the first time\n */\nexport function getGLParameters(\n  gl: WebGL2RenderingContext,\n  parameters: keyof GLParameters | (keyof GLParameters)[] | GLParameters = GL_PARAMETER_DEFAULTS\n): GLParameters {\n  // support both arrays of parameters and objects (keys represent parameters)\n\n  if (typeof parameters === 'number') {\n    // single GL enum\n    const key = parameters;\n    const getter = GL_PARAMETER_GETTERS[key];\n    return getter ? getter(gl, key) : gl.getParameter(key);\n  }\n\n  const parameterKeys = Array.isArray(parameters) ? parameters : Object.keys(parameters);\n\n  const state = {};\n  for (const key of parameterKeys) {\n    const getter = GL_PARAMETER_GETTERS[key];\n    state[key] = getter ? getter(gl, Number(key)) : gl.getParameter(Number(key));\n  }\n  return state;\n}\n\n/**\n * Reset all parameters to a (almost) pure context state\n * @note viewport and scissor will be set to the values in GL_PARAMETER_DEFAULTS,\n * NOT the canvas size dimensions, so they will have to be properly set after\n * calling this function.\n */\nexport function resetGLParameters(gl: WebGL2RenderingContext): void {\n  setGLParameters(gl, GL_PARAMETER_DEFAULTS);\n}\n\n// Helpers\n\n// Returns true if given object is empty, false otherwise.\nfunction isObjectEmpty(object) {\n  // @ts-ignore dummy key variable\n  for (const key in object) {\n    return false;\n  }\n  return true;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/** deeply compare two arrays */\nexport function deepArrayEqual(x: any, y: any): boolean {\n  if (x === y) {\n    return true;\n  }\n  const isArrayX = Array.isArray(x) || ArrayBuffer.isView(x);\n  const isArrayY = Array.isArray(y) || ArrayBuffer.isView(y);\n  // @ts-expect-error TODO fix\n  if (isArrayX && isArrayY && x.length === y.length) {\n    // @ts-expect-error TODO fix\n    for (let i = 0; i < x.length; ++i) {\n      if (x[i] !== y[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {setGLParameters, getGLParameters} from '../parameters/unified-parameter-api';\nimport {deepArrayEqual} from './deep-array-equal';\nimport {\n  GL_PARAMETER_DEFAULTS,\n  GL_HOOKED_SETTERS,\n  NON_CACHE_PARAMETERS\n} from '../parameters/webgl-parameter-tables';\n\n// HELPER CLASS - WebGLStateTracker\n\n/**\n * Support for listening to context state changes and intercepting state queries\n * NOTE: this system does not handle buffer bindings\n */\nexport class WebGLStateTracker {\n  static get(gl: WebGL2RenderingContext): WebGLStateTracker {\n    // @ts-expect-error\n    return gl.state as WebGLStateTracker;\n  }\n\n  gl: WebGL2RenderingContext;\n  program: unknown = null;\n  stateStack: object[] = [];\n  enable = true;\n  cache: Record<string, any> = null!;\n  log;\n\n  protected initialized = false;\n\n  constructor(\n    gl: WebGL2RenderingContext,\n    props?: {\n      log; // Logging function, called when gl parameter change calls are actually issued\n    }\n  ) {\n    this.gl = gl;\n    this.log = props?.log || (() => {});\n\n    this._updateCache = this._updateCache.bind(this);\n    Object.seal(this);\n  }\n\n  push(values = {}) {\n    this.stateStack.push({});\n  }\n\n  pop() {\n    // assert(this.stateStack.length > 0);\n    // Use the saved values in the state stack to restore parameters\n    const oldValues = this.stateStack[this.stateStack.length - 1];\n    setGLParameters(this.gl, oldValues);\n    // Don't pop until we have reset parameters (to make sure other \"stack frames\" are not affected)\n    this.stateStack.pop();\n  }\n\n  /**\n   * Initialize WebGL state caching on a context\n   * can be called multiple times to enable/disable\n   *\n   * @note After calling this function, context state will be cached\n   * .push() and .pop() will be available for saving,\n   * temporarily modifying, and then restoring state.\n   */\n  trackState(gl: WebGL2RenderingContext, options?: {copyState?: boolean}): void {\n    this.cache = options.copyState ? getGLParameters(gl) : Object.assign({}, GL_PARAMETER_DEFAULTS);\n\n    if (this.initialized) {\n      throw new Error('WebGLStateTracker');\n    }\n    this.initialized = true;\n\n    // @ts-expect-error\n    this.gl.state = this;\n\n    installProgramSpy(gl);\n\n    // intercept all setter functions in the table\n    for (const key in GL_HOOKED_SETTERS) {\n      const setter = GL_HOOKED_SETTERS[key];\n      installSetterSpy(gl, key, setter);\n    }\n\n    // intercept all getter functions in the table\n    installGetterOverride(gl, 'getParameter');\n    installGetterOverride(gl, 'isEnabled');\n  }\n\n  /**\n  // interceptor for context set functions - update our cache and our stack\n  // values (Object) - the key values for this setter\n   * @param values\n   * @returns\n   */\n  _updateCache(values: {[key: number | string]: any}) {\n    let valueChanged = false;\n    let oldValue; // = undefined\n\n    const oldValues: {[key: number | string]: any} | null =\n      this.stateStack.length > 0 ? this.stateStack[this.stateStack.length - 1] : null;\n\n    for (const key in values) {\n      // assert(key !== undefined);\n      const value = values[key];\n      const cached = this.cache[key];\n      // Check that value hasn't already been shadowed\n      if (!deepArrayEqual(value, cached)) {\n        valueChanged = true;\n        oldValue = cached;\n\n        // First, save current value being shadowed\n        // If a state stack frame is active, save the current parameter values for pop\n        // but first check that value hasn't already been shadowed and saved\n        if (oldValues && !(key in oldValues)) {\n          oldValues[key] = cached;\n        }\n\n        // Save current value being shadowed\n        this.cache[key] = value;\n      }\n    }\n\n    return {valueChanged, oldValue};\n  }\n}\n\n// HELPER FUNCTIONS - INSTALL GET/SET INTERCEPTORS (SPYS) ON THE CONTEXT\n\n/**\n// Overrides a WebGL2RenderingContext state \"getter\" function\n// to return values directly from cache\n * @param gl\n * @param functionName\n */\nfunction installGetterOverride(gl: WebGL2RenderingContext, functionName: string) {\n  // Get the original function from the WebGL2RenderingContext\n  const originalGetterFunc = gl[functionName].bind(gl);\n\n  // Wrap it with a spy so that we can update our state cache when it gets called\n  gl[functionName] = function get(pname) {\n    if (pname === undefined || NON_CACHE_PARAMETERS.has(pname)) {\n      // Invalid or blacklisted parameter, do not cache\n      return originalGetterFunc(pname);\n    }\n\n    const glState = WebGLStateTracker.get(gl);\n    if (!(pname in glState.cache)) {\n      // WebGL limits are not prepopulated in the cache, call the original getter when first queried.\n      glState.cache[pname] = originalGetterFunc(pname);\n    }\n\n    // Optionally call the original function to do a \"hard\" query from the WebGL2RenderingContext\n    return glState.enable\n      ? // Call the getter the params so that it can e.g. serve from a cache\n        glState.cache[pname]\n      : // Optionally call the original function to do a \"hard\" query from the WebGL2RenderingContext\n        originalGetterFunc(pname);\n  };\n\n  // Set the name of this anonymous function to help in debugging and profiling\n  Object.defineProperty(gl[functionName], 'name', {\n    value: `${functionName}-from-cache`,\n    configurable: false\n  });\n}\n\n/**\n// Overrides a WebGL2RenderingContext state \"setter\" function\n// to call a setter spy before the actual setter. Allows us to keep a cache\n// updated with a copy of the WebGL context state.\n * @param gl\n * @param functionName\n * @param setter\n * @returns\n */\nfunction installSetterSpy(gl: WebGL2RenderingContext, functionName: string, setter: Function) {\n  // Get the original function from the WebGL2RenderingContext\n  if (!gl[functionName]) {\n    // TODO - remove?\n    // This could happen if we try to intercept WebGL2 method on a WebGL1 context\n    return;\n  }\n\n  const originalSetterFunc = gl[functionName].bind(gl);\n\n  // Wrap it with a spy so that we can update our state cache when it gets called\n  gl[functionName] = function set(...params) {\n    // Update the value\n    // Call the setter with the state cache and the params so that it can store the parameters\n    const glState = WebGLStateTracker.get(gl);\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const {valueChanged, oldValue} = setter(glState._updateCache, ...params);\n\n    // Call the original WebGL2RenderingContext func to make sure the context actually gets updated\n    if (valueChanged) {\n      originalSetterFunc(...params);\n    }\n\n    // Note: if the original function fails to set the value, our state cache will be bad\n    // No solution for this at the moment, but assuming that this is unlikely to be a real problem\n    // We could call the setter after the originalSetterFunc. Concern is that this would\n    // cause different behavior in debug mode, where originalSetterFunc can throw exceptions\n\n    return oldValue;\n  };\n\n  // Set the name of this anonymous function to help in debugging and profiling\n  Object.defineProperty(gl[functionName], 'name', {\n    value: `${functionName}-to-cache`,\n    configurable: false\n  });\n}\n\nfunction installProgramSpy(gl: WebGL2RenderingContext): void {\n  const originalUseProgram = gl.useProgram.bind(gl);\n\n  gl.useProgram = function useProgramLuma(handle) {\n    const glState = WebGLStateTracker.get(gl);\n    if (glState.program !== handle) {\n      originalUseProgram(handle);\n      glState.program = handle;\n    }\n  };\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/**\n * ContextProps\n * @param onContextLost\n * @param onContextRestored *\n */\ntype ContextProps = {\n  /** Called when a context is lost */\n  onContextLost: (event: Event) => void;\n  /** Called when a context is restored */\n  onContextRestored: (event: Event) => void;\n};\n\n/**\n * Create a WebGL context for a canvas\n * Note calling this multiple time on the same canvas does return the same context\n * @param canvas A canvas element or offscreen canvas\n */\nexport function createBrowserContext(\n  canvas: HTMLCanvasElement | OffscreenCanvas,\n  props: ContextProps,\n  webglContextAttributes: WebGLContextAttributes\n): WebGL2RenderingContext {\n  // Try to extract any extra information about why context creation failed\n  let errorMessage = '';\n  // const onCreateError = error => (errorMessage = error.statusMessage || errorMessage);\n\n  // Avoid multiple listeners?\n  // canvas.removeEventListener('webglcontextcreationerror', onCreateError, false);\n  // canvas.addEventListener('webglcontextcreationerror', onCreateError, false);\n\n  const webglProps: WebGLContextAttributes = {\n    preserveDrawingBuffer: true,\n    // failIfMajorPerformanceCaveat: true,\n    ...webglContextAttributes\n  };\n\n  // Create the desired context\n  let gl: WebGL2RenderingContext | null = null;\n\n  // Create a webgl2 context\n  gl ||= canvas.getContext('webgl2', webglProps);\n  if (webglProps.failIfMajorPerformanceCaveat) {\n    errorMessage ||=\n      'Only software GPU is available. Set `failIfMajorPerformanceCaveat: false` to allow.';\n  }\n\n  // Creation failed with failIfMajorPerformanceCaveat - Try a Software GPU\n  if (!gl && !webglContextAttributes.failIfMajorPerformanceCaveat) {\n    webglProps.failIfMajorPerformanceCaveat = false;\n    gl = canvas.getContext('webgl2', webglProps);\n    // @ts-expect-error\n    gl.luma ||= {};\n    // @ts-expect-error\n    gl.luma.softwareRenderer = true;\n  }\n\n  if (!gl) {\n    gl = canvas.getContext('webgl', {}) as WebGL2RenderingContext;\n    if (gl) {\n      gl = null;\n      errorMessage ||= 'Your browser only supports WebGL1';\n    }\n  }\n\n  if (!gl) {\n    errorMessage ||= 'Your browser does not support WebGL';\n    throw new Error(`Failed to create WebGL context: ${errorMessage}`);\n  }\n\n  // Carefully extract and wrap callbacks to prevent addEventListener from rebinding them.\n  const {onContextLost, onContextRestored} = props;\n  canvas.addEventListener('webglcontextlost', (event: Event) => onContextLost(event), false);\n  canvas.addEventListener(\n    'webglcontextrestored',\n    (event: Event) => onContextRestored(event),\n    false\n  );\n\n  // @ts-expect-error\n  gl.luma ||= {};\n  return gl;\n}\n\n/* TODO - can we call this asynchronously to catch the error events?\nexport async function createBrowserContextAsync(canvas: HTMLCanvasElement | OffscreenCanvas, props: ContextProps): Promise<WebGL2RenderingContext> {\n  props = {...DEFAULT_CONTEXT_PROPS, ...props};\n\n // Try to extract any extra information about why context creation failed\n let errorMessage = null;\n const onCreateError = (error) => (errorMessage = error.statusMessage || errorMessage);\n canvas.addEventListener('webglcontextcreationerror', onCreateError, false);\n\n const gl = createBrowserContext(canvas, props);\n\n // Give the listener a chance to fire\n await new Promise(resolve => setTimeout(resolve, 0));\n\n canvas.removeEventListener('webglcontextcreationerror', onCreateError, false);\n\n return gl;\n}\n*/\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {GLExtensions} from '@luma.gl/constants';\n\n/** Ensure extensions are only requested once */\nexport function getWebGLExtension(\n  gl: WebGL2RenderingContext,\n  name: string,\n  extensions: GLExtensions\n): unknown {\n  if (extensions[name] === undefined) {\n    extensions[name] = gl.getExtension(name) || null;\n  }\n  return extensions[name];\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {DeviceInfo} from '@luma.gl/core';\nimport {GL, GLExtensions} from '@luma.gl/constants';\nimport {getWebGLExtension} from '../../context/helpers/webgl-extensions';\n\n/** @returns strings identifying the GPU vendor and driver. */\nexport function getDeviceInfo(gl: WebGL2RenderingContext, extensions: GLExtensions): DeviceInfo {\n  // \"Masked\" info is always available, but don't contain much useful information\n  const vendorMasked = gl.getParameter(GL.VENDOR);\n  const rendererMasked = gl.getParameter(GL.RENDERER);\n\n  // If we are lucky, unmasked info is available\n  // https://www.khronos.org/registry/webgl/extensions/WEBGL_debug_renderer_info/\n  getWebGLExtension(gl, 'WEBGL_debug_renderer_info', extensions);\n  const ext = extensions.WEBGL_debug_renderer_info;\n  const vendorUnmasked = gl.getParameter(ext ? ext.UNMASKED_VENDOR_WEBGL : GL.VENDOR);\n  const rendererUnmasked = gl.getParameter(ext ? ext.UNMASKED_RENDERER_WEBGL : GL.RENDERER);\n  const vendor = vendorUnmasked || vendorMasked;\n  const renderer = rendererUnmasked || rendererMasked;\n\n  // Driver version\n  const version = gl.getParameter(GL.VERSION) as string;\n\n  // \"Sniff\" the GPU type and backend from the info. This works best if unmasked info is available.\n  const gpu = identifyGPUVendor(vendor, renderer);\n  const gpuBackend = identifyGPUBackend(vendor, renderer);\n  const gpuType = identifyGPUType(vendor, renderer);\n\n  // Determine GLSL version\n  // For now, skip parsing of the long version string, just use context type below to deduce version\n  // const version = gl.getParameter(GL.SHADING_LANGUAGE_VERSION) as string;\n  // const shadingLanguageVersion = parseGLSLVersion(version);\n  const shadingLanguage = 'glsl';\n  const shadingLanguageVersion = 300;\n\n  return {\n    type: 'webgl',\n    gpu,\n    gpuType,\n    gpuBackend,\n    vendor,\n    renderer,\n    version,\n    shadingLanguage,\n    shadingLanguageVersion\n  };\n}\n\n/** \"Sniff\" the GPU type from the info. This works best if unmasked info is available. */\nfunction identifyGPUVendor(\n  vendor: string,\n  renderer: string\n): 'nvidia' | 'intel' | 'apple' | 'amd' | 'software' | 'unknown' {\n  if (/NVIDIA/i.exec(vendor) || /NVIDIA/i.exec(renderer)) {\n    return 'nvidia';\n  }\n  if (/INTEL/i.exec(vendor) || /INTEL/i.exec(renderer)) {\n    return 'intel';\n  }\n  if (/Apple/i.exec(vendor) || /Apple/i.exec(renderer)) {\n    return 'apple';\n  }\n  if (\n    /AMD/i.exec(vendor) ||\n    /AMD/i.exec(renderer) ||\n    /ATI/i.exec(vendor) ||\n    /ATI/i.exec(renderer)\n  ) {\n    return 'amd';\n  }\n  if (/SwiftShader/i.exec(vendor) || /SwiftShader/i.exec(renderer)) {\n    return 'software';\n  }\n\n  return 'unknown';\n}\n\n/** \"Sniff\" the GPU backend from the info. This works best if unmasked info is available. */\nfunction identifyGPUBackend(vendor: string, renderer: string): 'opengl' | 'metal' | 'unknown' {\n  if (/Metal/i.exec(vendor) || /Metal/i.exec(renderer)) {\n    return 'metal';\n  }\n  if (/ANGLE/i.exec(vendor) || /ANGLE/i.exec(renderer)) {\n    return 'opengl';\n  }\n  return 'unknown';\n}\n\nfunction identifyGPUType(\n  vendor: string,\n  renderer: string\n): 'discrete' | 'integrated' | 'cpu' | 'unknown' {\n  if (/SwiftShader/i.exec(vendor) || /SwiftShader/i.exec(renderer)) {\n    return 'cpu';\n  }\n\n  const gpuVendor = identifyGPUVendor(vendor, renderer);\n  switch (gpuVendor) {\n    case 'intel':\n      return 'integrated';\n    case 'software':\n      return 'cpu';\n    case 'unknown':\n      return 'unknown';\n    default:\n      return 'discrete';\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {GL} from '@luma.gl/constants';\nimport {VertexFormat, VertexType} from '@luma.gl/core';\n\ntype GLDataType =\n  | GL.UNSIGNED_BYTE\n  | GL.BYTE\n  | GL.UNSIGNED_SHORT\n  | GL.SHORT\n  | GL.UNSIGNED_INT\n  | GL.INT\n  | GL.HALF_FLOAT\n  | GL.FLOAT;\n\n/** Get vertex format from GL constants */\nexport function getVertexFormatFromGL(type: GLDataType, components: 1 | 2 | 3 | 4): VertexFormat {\n  const base = getVertexTypeFromGL(type);\n  // prettier-ignore\n  switch (components) {\n    // @ts-expect-error TODO deal with lack of formats\n    case 1: return base;\n    case 2: return `${base}x2`;\n    // @ts-expect-error TODO deal with lack of formats\n    case 3: return `${base}x3`;\n    case 4: return `${base}x4`;\n  }\n  // @ts-ignore unreachable\n  throw new Error(String(components));\n}\n\n/** Get data type from GL constants */\nexport function getVertexTypeFromGL(type: GLDataType, normalized = false): VertexType {\n  // prettier-ignore\n  switch (type) {\n    // WebGPU does not support normalized 32 bit integer attributes\n    case GL.INT: return normalized ? 'sint32' : 'sint32';\n    case GL.UNSIGNED_INT: return normalized ? 'uint32' : 'uint32';\n    case GL.SHORT: return normalized ? 'sint16' : 'unorm16';\n    case GL.UNSIGNED_SHORT: return normalized ? 'uint16' : 'unorm16';\n    case GL.BYTE: return normalized ? 'sint8' : 'snorm16';\n    case GL.UNSIGNED_BYTE: return normalized ? 'uint8' : 'unorm8';\n    case GL.FLOAT: return 'float32';\n    case GL.HALF_FLOAT: return 'float16';\n  }\n  // @ts-ignore unreachable\n  throw new Error(String(type));\n}\n\nexport function getGLFromVertexType(\n  dataType: VertexType\n):\n  | GL.UNSIGNED_BYTE\n  | GL.BYTE\n  | GL.UNSIGNED_SHORT\n  | GL.SHORT\n  | GL.UNSIGNED_INT\n  | GL.INT\n  | GL.HALF_FLOAT\n  | GL.FLOAT {\n  // prettier-ignore\n  switch (dataType) {\n    case 'uint8': return GL.UNSIGNED_BYTE;\n    case 'sint8': return GL.BYTE;\n    case 'unorm8': return GL.UNSIGNED_BYTE;\n    case 'snorm8': return GL.BYTE;\n    case 'uint16': return GL.UNSIGNED_SHORT;\n    case 'sint16': return GL.SHORT;\n    case 'unorm16': return GL.UNSIGNED_SHORT;\n    case 'snorm16': return GL.SHORT;\n    case 'uint32': return GL.UNSIGNED_INT;\n    case 'sint32': return GL.INT;\n    // WebGPU does not support normalized 32 bit integer attributes\n    // case 'unorm32': return GL.UNSIGNED_INT;\n    // case 'snorm32': return GL.INT;\n    case 'float16': return GL.HALF_FLOAT;\n    case 'float32': return GL.FLOAT;\n  }\n  // @ts-ignore unreachable\n  throw new Error(String(dataType));\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {\n  DeviceFeature,\n  TextureFormat,\n  TextureFormatCapabilities,\n  DeviceTextureFormatCapabilities\n} from '@luma.gl/core';\nimport {decodeTextureFormat} from '@luma.gl/core';\nimport {GL, GLPixelType, GLExtensions, GLTexelDataFormat} from '@luma.gl/constants';\nimport {getWebGLExtension} from '../../context/helpers/webgl-extensions';\nimport {getGLFromVertexType} from './vertex-formats';\n\n/* eslint-disable camelcase */\n\n// TEXTURE FEATURES\n\n// Define local webgl extension strings to optimize minification\nconst X_S3TC = 'WEBGL_compressed_texture_s3tc'; // BC1, BC2, BC3\nconst X_S3TC_SRGB = 'WEBGL_compressed_texture_s3tc_srgb'; // BC1, BC2, BC3\nconst X_RGTC = 'EXT_texture_compression_rgtc'; // BC4, BC5\nconst X_BPTC = 'EXT_texture_compression_bptc'; // BC6, BC7\nconst X_ETC2 = 'WEBGL_compressed_texture_etc'; // Renamed from 'WEBGL_compressed_texture_es3'\nconst X_ASTC = 'WEBGL_compressed_texture_astc';\nconst X_ETC1 = 'WEBGL_compressed_texture_etc1';\nconst X_PVRTC = 'WEBGL_compressed_texture_pvrtc';\nconst X_ATC = 'WEBGL_compressed_texture_atc';\n\n// Define local webgl extension strings to optimize minification\nconst EXT_texture_norm16 = 'EXT_texture_norm16';\nconst EXT_render_snorm = 'EXT_render_snorm';\nconst EXT_color_buffer_float = 'EXT_color_buffer_float';\n\n// prettier-ignore\nexport const TEXTURE_FEATURES: Partial<Record<DeviceFeature, string[]>> = {\n  'float32-renderable-webgl': ['EXT_color_buffer_float'],\n  'float16-renderable-webgl': ['EXT_color_buffer_half_float'],\n  'rgb9e5ufloat-renderable-webgl': ['WEBGL_render_shared_exponent'],\n  'snorm8-renderable-webgl': [EXT_render_snorm],\n  'norm16-renderable-webgl': [EXT_texture_norm16],\n  'snorm16-renderable-webgl': [EXT_texture_norm16, EXT_render_snorm],\n\n  'float32-filterable': ['OES_texture_float_linear'],\n  'float16-filterable-webgl': ['OES_texture_half_float_linear'],\n  'texture-filterable-anisotropic-webgl': ['EXT_texture_filter_anisotropic'],\n\n  'texture-blend-float-webgl': ['EXT_float_blend'],\n\n  'texture-compression-bc': [X_S3TC, X_S3TC_SRGB, X_RGTC, X_BPTC],\n  // 'texture-compression-bc3-srgb-webgl': [X_S3TC_SRGB],\n  // 'texture-compression-bc3-webgl': [X_S3TC],\n  'texture-compression-bc5-webgl': [X_RGTC],\n  'texture-compression-bc7-webgl': [X_BPTC],\n  'texture-compression-etc2': [X_ETC2],\n  'texture-compression-astc': [X_ASTC],\n  'texture-compression-etc1-webgl': [X_ETC1],\n  'texture-compression-pvrtc-webgl': [X_PVRTC],\n  'texture-compression-atc-webgl': [X_ATC]\n};\n\nexport function isTextureFeature(feature: DeviceFeature): boolean {\n  return feature in TEXTURE_FEATURES;\n}\n\n/** Checks a texture feature (for Device.features). Mainly compressed texture support */\nexport function checkTextureFeature(\n  gl: WebGL2RenderingContext,\n  feature: DeviceFeature,\n  extensions: GLExtensions\n): boolean {\n  const textureExtensions = TEXTURE_FEATURES[feature] || [];\n  return textureExtensions.every(extension => getWebGLExtension(gl, extension, extensions));\n}\n\n// TEXTURE FORMATS\n\n/** Map a format to webgl and constants */\ntype WebGLFormatInfo = {\n  gl?: GL;\n  /** compressed */\n  x?: string;\n  types?: GLPixelType[];\n  dataFormat?: GLTexelDataFormat;\n  /** if depthTexture is set this is a depth/stencil format that can be set to a texture  */\n  depthTexture?: boolean;\n  /** @deprecated can this format be used with renderbuffers */\n  rb?: boolean;\n};\n\n// TABLES\n\n/**\n * Texture format data -\n * Exported but can change without notice\n */\n// prettier-ignore\nexport const WEBGL_TEXTURE_FORMATS: Record<TextureFormat, WebGLFormatInfo> = {\n  // 8-bit formats\n  'r8unorm': {gl: GL.R8, rb: true},\n  'r8snorm': {gl: GL.R8_SNORM},\n  'r8uint': {gl: GL.R8UI, rb: true},\n  'r8sint': {gl: GL.R8I, rb: true},\n\n  // 16-bit formats\n  'rg8unorm': {gl: GL.RG8, rb: true},\n  'rg8snorm': {gl: GL.RG8_SNORM},\n  'rg8uint': {gl: GL.RG8UI, rb: true},\n  'rg8sint': {gl: GL.RG8I, rb: true},\n\n  'r16uint': {gl: GL.R16UI, rb: true},\n  'r16sint': {gl: GL.R16I, rb: true},\n  'r16float': {gl: GL.R16F, rb: true},\n  'r16unorm-webgl': {gl: GL.R16_EXT, rb: true},\n  'r16snorm-webgl': {gl: GL.R16_SNORM_EXT},\n\n  // Packed 16-bit formats\n  'rgba4unorm-webgl': {gl: GL.RGBA4, rb: true},\n  'rgb565unorm-webgl': {gl: GL.RGB565, rb: true},\n  'rgb5a1unorm-webgl': {gl: GL.RGB5_A1, rb: true},\n\n  // 24-bit formats\n  'rgb8unorm-webgl': {gl: GL.RGB8},\n  'rgb8snorm-webgl': {gl: GL.RGB8_SNORM},\n\n  // 32-bit formats  \n  'rgba8unorm': {gl: GL.RGBA8},\n  'rgba8unorm-srgb': {gl: GL.SRGB8_ALPHA8},\n  'rgba8snorm': {gl: GL.RGBA8_SNORM},\n  'rgba8uint': {gl: GL.RGBA8UI},\n  'rgba8sint': {gl: GL.RGBA8I},\n  // reverse colors, webgpu only\n  'bgra8unorm': {},\n  'bgra8unorm-srgb': {},\n\n  'rg16uint': {gl: GL.RG16UI},\n  'rg16sint': {gl: GL.RG16I},\n  'rg16float': {gl: GL.RG16F, rb: true},\n  'rg16unorm-webgl': {gl: GL.RG16_EXT},\n  'rg16snorm-webgl': {gl: GL.RG16_SNORM_EXT},\n\n  'r32uint': {gl: GL.R32UI, rb: true},\n  'r32sint': {gl: GL.R32I, rb: true},\n  'r32float': {gl: GL.R32F},\n\n  // Packed 32-bit formats\n  'rgb9e5ufloat': {gl: GL.RGB9_E5}, // , filter: true},\n  'rg11b10ufloat': {gl: GL.R11F_G11F_B10F, rb: true},\n  'rgb10a2unorm': {gl: GL.RGB10_A2, rb: true},\n  'rgb10a2uint-webgl': {gl: GL.RGB10_A2UI, rb: true},\n\n  // 48-bit formats\n  'rgb16unorm-webgl': {gl: GL.RGB16_EXT}, // rgb not renderable\n  'rgb16snorm-webgl': {gl: GL.RGB16_SNORM_EXT}, // rgb not renderable\n\n  // 64-bit formats\n  'rg32uint': {gl: GL.RG32UI, rb: true},\n  'rg32sint': {gl: GL.RG32I, rb: true},\n  'rg32float': {gl: GL.RG32F, rb: true},\n  'rgba16uint': {gl: GL.RGBA16UI, rb: true},\n  'rgba16sint': {gl: GL.RGBA16I, rb: true},\n  'rgba16float': {gl: GL.RGBA16F},\n  'rgba16unorm-webgl': {gl: GL.RGBA16_EXT, rb: true},\n  'rgba16snorm-webgl': {gl: GL.RGBA16_SNORM_EXT},\n\n  // 96-bit formats (deprecated!)\n  'rgb32float-webgl': {gl: GL.RGB32F, x: EXT_color_buffer_float, dataFormat: GL.RGB, types: [GL.FLOAT]},\n  \n  // 128-bit formats\n  'rgba32uint': {gl: GL.RGBA32UI, rb: true},\n  'rgba32sint': {gl: GL.RGBA32I, rb: true},\n  'rgba32float': {gl: GL.RGBA32F, rb: true},\n\n  // Depth and stencil formats\n  'stencil8': {gl: GL.STENCIL_INDEX8, rb: true}, // 8 stencil bits\n\n  'depth16unorm': {gl: GL.DEPTH_COMPONENT16, dataFormat: GL.DEPTH_COMPONENT, types: [GL.UNSIGNED_SHORT], rb: true}, // 16 depth bits\n  'depth24plus': {gl: GL.DEPTH_COMPONENT24, dataFormat: GL.DEPTH_COMPONENT, types: [GL.UNSIGNED_INT]},\n  'depth32float': {gl: GL.DEPTH_COMPONENT32F, dataFormat: GL.DEPTH_COMPONENT, types: [GL.FLOAT], rb: true},\n\n  // The depth component of the \"depth24plus\" and \"depth24plus-stencil8\" formats may be implemented as either a 24-bit depth value or a \"depth32float\" value.\n  'depth24plus-stencil8': {gl: GL.DEPTH24_STENCIL8, rb: true, depthTexture: true, dataFormat: GL.DEPTH_STENCIL, types: [GL.UNSIGNED_INT_24_8]},\n  // \"depth32float-stencil8\" feature - TODO below is render buffer only?\n  'depth32float-stencil8': {gl: GL.DEPTH32F_STENCIL8, dataFormat: GL.DEPTH_STENCIL, types: [GL.FLOAT_32_UNSIGNED_INT_24_8_REV], rb: true},\n\n  // BC compressed formats: check device.features.has(\"texture-compression-bc\");\n\n  'bc1-rgb-unorm-webgl': {gl: GL.COMPRESSED_RGB_S3TC_DXT1_EXT, x: X_S3TC},\n  'bc1-rgb-unorm-srgb-webgl': {gl: GL.COMPRESSED_SRGB_S3TC_DXT1_EXT, x: X_S3TC_SRGB},\n\n  'bc1-rgba-unorm': {gl: GL.COMPRESSED_RGBA_S3TC_DXT1_EXT, x: X_S3TC},\n  'bc1-rgba-unorm-srgb': {gl: GL.COMPRESSED_SRGB_S3TC_DXT1_EXT, x: X_S3TC_SRGB},\n  'bc2-rgba-unorm': {gl: GL.COMPRESSED_RGBA_S3TC_DXT3_EXT, x: X_S3TC},\n  'bc2-rgba-unorm-srgb': {gl: GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT, x: X_S3TC_SRGB},\n  'bc3-rgba-unorm': {gl: GL.COMPRESSED_RGBA_S3TC_DXT5_EXT, x: X_S3TC},\n  'bc3-rgba-unorm-srgb': {gl: GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT, x: X_S3TC_SRGB},\n  'bc4-r-unorm': {gl: GL.COMPRESSED_RED_RGTC1_EXT, x: X_RGTC},\n  'bc4-r-snorm': {gl: GL.COMPRESSED_SIGNED_RED_RGTC1_EXT, x: X_RGTC},\n  'bc5-rg-unorm': {gl: GL.COMPRESSED_RED_GREEN_RGTC2_EXT, x: X_RGTC},\n  'bc5-rg-snorm': {gl: GL.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT, x: X_RGTC},\n  'bc6h-rgb-ufloat': {gl: GL.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT, x: X_BPTC},\n  'bc6h-rgb-float': {gl: GL.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT, x: X_BPTC},\n  'bc7-rgba-unorm': {gl: GL.COMPRESSED_RGBA_BPTC_UNORM_EXT, x: X_BPTC},\n  'bc7-rgba-unorm-srgb': {gl: GL.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT, x: X_BPTC},\n\n  // WEBGL_compressed_texture_etc: device.features.has(\"texture-compression-etc2\")\n  // Note: Supposedly guaranteed availability compressed formats in WebGL2, but through CPU decompression\n\n  'etc2-rgb8unorm': {gl: GL.COMPRESSED_RGB8_ETC2},\n  'etc2-rgb8unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ETC2},\n  'etc2-rgb8a1unorm': {gl: GL.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2},\n  'etc2-rgb8a1unorm-srgb': {gl: GL.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2},\n  'etc2-rgba8unorm': {gl: GL.COMPRESSED_RGBA8_ETC2_EAC},\n  'etc2-rgba8unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC},\n\n  'eac-r11unorm': {gl: GL.COMPRESSED_R11_EAC},\n  'eac-r11snorm': {gl: GL.COMPRESSED_SIGNED_R11_EAC},\n  'eac-rg11unorm': {gl: GL.COMPRESSED_RG11_EAC},\n  'eac-rg11snorm': {gl: GL.COMPRESSED_SIGNED_RG11_EAC},\n\n  // X_ASTC compressed formats: device.features.has(\"texture-compression-astc\")\n\n  'astc-4x4-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_4x4_KHR},\n  'astc-4x4-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR},\n  'astc-5x4-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_5x4_KHR},\n  'astc-5x4-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR},\n  'astc-5x5-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_5x5_KHR},\n  'astc-5x5-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR},\n  'astc-6x5-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_6x5_KHR},\n  'astc-6x5-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR},\n  'astc-6x6-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_6x6_KHR},\n  'astc-6x6-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR},\n  'astc-8x5-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_8x5_KHR},\n  'astc-8x5-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR},\n  'astc-8x6-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_8x6_KHR},\n  'astc-8x6-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR},\n  'astc-8x8-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_8x8_KHR},\n  'astc-8x8-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR},\n  'astc-10x5-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_10x10_KHR},\n  'astc-10x5-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR},\n  'astc-10x6-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_10x6_KHR},\n  'astc-10x6-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR},\n  'astc-10x8-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_10x8_KHR},\n  'astc-10x8-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR},\n  'astc-10x10-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_10x10_KHR},\n  'astc-10x10-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR},\n  'astc-12x10-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_12x10_KHR},\n  'astc-12x10-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR},\n  'astc-12x12-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_12x12_KHR},\n  'astc-12x12-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR},\n\n  // WEBGL_compressed_texture_pvrtc\n\n  'pvrtc-rgb4unorm-webgl': {gl: GL.COMPRESSED_RGB_PVRTC_4BPPV1_IMG},\n  'pvrtc-rgba4unorm-webgl': {gl: GL.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG},\n  'pvrtc-rbg2unorm-webgl': {gl: GL.COMPRESSED_RGB_PVRTC_2BPPV1_IMG},\n  'pvrtc-rgba2unorm-webgl': {gl: GL.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG},\n\n  // WEBGL_compressed_texture_etc1\n\n  'etc1-rbg-unorm-webgl': {gl: GL.COMPRESSED_RGB_ETC1_WEBGL},\n\n  // WEBGL_compressed_texture_atc\n\n  'atc-rgb-unorm-webgl': {gl: GL.COMPRESSED_RGB_ATC_WEBGL},\n  'atc-rgba-unorm-webgl': {gl: GL.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL},\n  'atc-rgbai-unorm-webgl': {gl: GL.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL}\n};\n\n// FUNCTIONS\n\n/** Checks if a texture format is supported */\nexport function isWebGLTextureFormatCapabilitiesed(\n  gl: WebGL2RenderingContext,\n  format: TextureFormat,\n  extensions: GLExtensions\n): boolean {\n  const webglTextureInfo = WEBGL_TEXTURE_FORMATS[format];\n  // Check that we have a GL constant\n  if (!webglTextureInfo?.gl) {\n    return false;\n  }\n\n  // Check extensions\n  const extension = webglTextureInfo.x;\n  if (extension) {\n    return Boolean(getWebGLExtension(gl, extension, extensions));\n  }\n  return true;\n}\n\n/** Checks if a texture format is supported, renderable, filterable etc */\nexport function getTextureFormatCapabilitiesWebGL(\n  gl: WebGL2RenderingContext,\n  formatSupport: TextureFormatCapabilities,\n  extensions: GLExtensions\n): DeviceTextureFormatCapabilities {\n  let supported = formatSupport.create;\n  const webglFormatInfo = WEBGL_TEXTURE_FORMATS[formatSupport.format];\n\n  // Support Check that we have a GL constant\n  if (webglFormatInfo?.gl === undefined) {\n    supported = false;\n  }\n\n  if (webglFormatInfo?.x) {\n    supported = supported && Boolean(getWebGLExtension(gl, webglFormatInfo.x, extensions));\n  }\n\n  return {\n    format: formatSupport.format,\n    // @ts-ignore\n    create: supported && formatSupport.create,\n    // @ts-ignore\n    render: supported && formatSupport.render,\n    // @ts-ignore\n    filter: supported && formatSupport.filter,\n    // @ts-ignore\n    blend: supported && formatSupport.blend,\n    // @ts-ignore\n    store: supported && formatSupport.store\n  };\n}\n\n/** Get parameters necessary to work with format in WebGL: internalFormat, dataFormat, type, compressed, */\nexport function getTextureFormatWebGL(format: TextureFormat): {\n  internalFormat: GL;\n  format: GLTexelDataFormat;\n  type: GLPixelType;\n  compressed: boolean;\n} {\n  const formatData = WEBGL_TEXTURE_FORMATS[format];\n  const webglFormat = convertTextureFormatToGL(format);\n  const decoded = decodeTextureFormat(format);\n  return {\n    internalFormat: webglFormat,\n    format:\n      formatData?.dataFormat ||\n      getWebGLPixelDataFormat(decoded.channels, decoded.integer, decoded.normalized, webglFormat),\n    // depth formats don't have a type\n    type: decoded.dataType\n      ? getGLFromVertexType(decoded.dataType)\n      : formatData?.types?.[0] || GL.UNSIGNED_BYTE,\n    compressed: decoded.compressed || false\n  };\n}\n\nexport function getDepthStencilAttachmentWebGL(\n  format: TextureFormat\n): GL.DEPTH_ATTACHMENT | GL.STENCIL_ATTACHMENT | GL.DEPTH_STENCIL_ATTACHMENT {\n  const formatInfo = decodeTextureFormat(format);\n  switch (formatInfo.attachment) {\n    case 'depth':\n      return GL.DEPTH_ATTACHMENT;\n    case 'stencil':\n      return GL.STENCIL_ATTACHMENT;\n    case 'depth-stencil':\n      return GL.DEPTH_STENCIL_ATTACHMENT;\n    default:\n      throw new Error(`Not a depth stencil format: ${format}`);\n  }\n}\n\n/** TODO - VERY roundabout legacy way of calculating bytes per pixel */\nexport function getTextureFormatBytesPerPixel(format: TextureFormat): number {\n  const formatInfo = decodeTextureFormat(format);\n  return formatInfo.bytesPerPixel;\n}\n\n// DATA TYPE HELPERS\n\nexport function getWebGLPixelDataFormat(\n  channels: 'r' | 'rg' | 'rgb' | 'rgba' | 'bgra',\n  integer: boolean,\n  normalized: boolean,\n  format: GL\n): GLTexelDataFormat {\n  // WebGL1 formats use same internalFormat\n  if (format === GL.RGBA || format === GL.RGB) {\n    return format;\n  }\n  // prettier-ignore\n  switch (channels) {\n    case 'r': return integer && !normalized ? GL.RED_INTEGER : GL.RED;\n    case 'rg': return integer && !normalized ? GL.RG_INTEGER : GL.RG;\n    case 'rgb': return integer && !normalized ? GL.RGB_INTEGER : GL.RGB;\n    case 'rgba': return integer && !normalized ? GL.RGBA_INTEGER : GL.RGBA;\n    case 'bgra': throw new Error('bgra pixels not supported by WebGL');\n    default: return GL.RGBA;\n  }\n}\n\n/**\n * Map WebGPU style texture format strings to GL constants\n */\nfunction convertTextureFormatToGL(format: TextureFormat): GL | undefined {\n  const formatInfo = WEBGL_TEXTURE_FORMATS[format];\n  const webglFormat = formatInfo?.gl;\n  if (webglFormat === undefined) {\n    throw new Error(`Unsupported texture format ${format}`);\n  }\n  return webglFormat;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Feature detection for WebGL\n// Provides a function that enables simple checking of which WebGL features are\n\nimport {DeviceFeature, DeviceFeatures} from '@luma.gl/core';\nimport {GLExtensions} from '@luma.gl/constants';\nimport {getWebGLExtension} from '../../context/helpers/webgl-extensions';\nimport {\n  isTextureFeature,\n  checkTextureFeature,\n  TEXTURE_FEATURES\n} from '../converters/webgl-texture-table';\n\n/**\n * Defines luma.gl \"feature\" names and semantics\n * when value is 'string' it is the name of the extension that enables this feature\n */\nconst WEBGL_FEATURES: Partial<Record<DeviceFeature, boolean | string>> = {\n  // optional WebGPU features\n  'depth-clip-control': 'EXT_depth_clamp', // TODO these seem subtly different\n  // 'timestamp-query' // GPUQueryType \"timestamp-query\"\n  // \"indirect-first-instance\"\n  // Textures are handled by getTextureFeatures()\n  // 'depth32float-stencil8' // GPUTextureFormat 'depth32float-stencil8'\n\n  // optional WebGL features\n  'timer-query-webgl': 'EXT_disjoint_timer_query_webgl2',\n  'compilation-status-async-webgl': 'KHR_parallel_shader_compile',\n  'polygon-mode-webgl': 'WEBGL_polygon_mode',\n  'provoking-vertex-webgl': 'WEBGL_provoking_vertex',\n  'shader-clip-cull-distance-webgl': 'WEBGL_clip_cull_distance',\n  'shader-noperspective-interpolation-webgl': 'NV_shader_noperspective_interpolation',\n  'shader-conservative-depth-webgl': 'EXT_conservative_depth'\n\n  // Textures are handled by getTextureFeatures()\n};\n\n/**\n * WebGL extensions exposed as luma.gl features\n * To minimize GL log noise and improve performance, this class ensures that\n * - WebGL extensions are not queried until the corresponding feature is checked.\n * - WebGL extensions are only queried once.\n */\nexport class WebGLDeviceFeatures extends DeviceFeatures {\n  protected gl: WebGL2RenderingContext;\n  protected extensions: GLExtensions;\n  protected testedFeatures = new Set<DeviceFeature>();\n\n  constructor(\n    gl: WebGL2RenderingContext,\n    extensions: GLExtensions,\n    disabledFeatures: Partial<Record<DeviceFeature, boolean>>\n  ) {\n    super([], disabledFeatures);\n    this.gl = gl;\n    this.extensions = extensions;\n    // TODO - is this really needed?\n    // Enable EXT_float_blend first: https://developer.mozilla.org/en-US/docs/Web/API/EXT_float_blend\n    getWebGLExtension(gl, 'EXT_color_buffer_float', extensions);\n  }\n\n  *[Symbol.iterator](): IterableIterator<DeviceFeature> {\n    const features = this.getFeatures();\n    for (const feature of features) {\n      if (this.has(feature)) {\n        yield feature;\n      }\n    }\n    return [];\n  }\n\n  override has(feature: DeviceFeature): boolean {\n    if (this.disabledFeatures?.[feature]) {\n      return false;\n    }\n\n    // We have already tested this feature\n    if (!this.testedFeatures.has(feature)) {\n      this.testedFeatures.add(feature);\n\n      // Check the feature once\n      if (isTextureFeature(feature) && checkTextureFeature(this.gl, feature, this.extensions)) {\n        this.features.add(feature);\n      }\n\n      if (this.getWebGLFeature(feature)) {\n        this.features.add(feature);\n      }\n    }\n    return this.features.has(feature);\n  }\n\n  // FOR DEVICE\n\n  initializeFeatures() {\n    // Initialize all features by checking them.\n    // Except WEBGL_polygon_mode since Chrome logs ugly console warnings\n    const features = this.getFeatures().filter(feature => feature !== 'polygon-mode-webgl');\n    for (const feature of features) {\n      this.has(feature);\n    }\n  }\n\n  // IMPLEMENTATION\n\n  getFeatures() {\n    return [...Object.keys(WEBGL_FEATURES), ...Object.keys(TEXTURE_FEATURES)] as DeviceFeature[];\n  }\n\n  /** Extract all WebGL features */\n  protected getWebGLFeature(feature: DeviceFeature): boolean {\n    const featureInfo = WEBGL_FEATURES[feature];\n    // string value requires checking the corresponding WebGL extension\n    const isSupported =\n      typeof featureInfo === 'string'\n        ? Boolean(getWebGLExtension(this.gl, featureInfo, this.extensions))\n        : Boolean(featureInfo);\n\n    return isSupported;\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {DeviceLimits} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\n\n// prettier-ignore\nexport class WebGLDeviceLimits extends DeviceLimits {\n  get maxTextureDimension1D() { return 0; } // WebGL does not support 1D textures\n  get maxTextureDimension2D() { return this.getParameter(GL.MAX_TEXTURE_SIZE); }\n  get maxTextureDimension3D() { return this.getParameter(GL.MAX_3D_TEXTURE_SIZE); }\n  get maxTextureArrayLayers() { return this.getParameter(GL.MAX_ARRAY_TEXTURE_LAYERS); }\n  get maxBindGroups() { return 0; }\n  get maxDynamicUniformBuffersPerPipelineLayout() { return 0; } // TBD\n  get maxDynamicStorageBuffersPerPipelineLayout() { return 0; } // TBD\n  get maxSampledTexturesPerShaderStage() { return this.getParameter(GL.MAX_VERTEX_TEXTURE_IMAGE_UNITS); } // ) TBD\n  get maxSamplersPerShaderStage() { return this.getParameter(GL.MAX_COMBINED_TEXTURE_IMAGE_UNITS); }\n  get maxStorageBuffersPerShaderStage() { return 0; } // TBD\n  get maxStorageTexturesPerShaderStage() { return 0; } // TBD\n  get maxUniformBuffersPerShaderStage() { return this.getParameter(GL.MAX_UNIFORM_BUFFER_BINDINGS); }\n  get maxUniformBufferBindingSize() { return this.getParameter(GL.MAX_UNIFORM_BLOCK_SIZE); }\n  get maxStorageBufferBindingSize() { return 0; }\n  get minUniformBufferOffsetAlignment() { return this.getParameter(GL.UNIFORM_BUFFER_OFFSET_ALIGNMENT); }\n  get minStorageBufferOffsetAlignment() { return 0; } \n  get maxVertexBuffers() { return 16; } // WebGL 2 supports 16 buffers, see https://github.com/gpuweb/gpuweb/issues/4284\n  get maxVertexAttributes() { return this.getParameter(GL.MAX_VERTEX_ATTRIBS); }\n  get maxVertexBufferArrayStride() { return 2048; } // TBD, this is just the default value from WebGPU\n  get maxInterStageShaderComponents() { return this.getParameter(GL.MAX_VARYING_COMPONENTS); }\n  get maxComputeWorkgroupStorageSize() { return 0; } // WebGL does not support compute shaders\n  get maxComputeInvocationsPerWorkgroup() { return 0; } // WebGL does not support compute shaders\n  get maxComputeWorkgroupSizeX() { return 0; } // WebGL does not support compute shaders\n  get maxComputeWorkgroupSizeY() { return 0; } // WebGL does not support compute shaders\n  get maxComputeWorkgroupSizeZ() { return 0; } // WebGL does not support compute shaders\n  get maxComputeWorkgroupsPerDimension() { return 0;} // WebGL does not support compute shaders\n\n  // PRIVATE\n\n  protected gl: WebGL2RenderingContext;\n  protected limits: Partial<Record<GL, number>> = {};\n\n  constructor(gl: WebGL2RenderingContext) {\n    super();\n    this.gl = gl;\n  }\n\n  protected getParameter(parameter: GL): number {\n    if (this.limits[parameter] === undefined) {\n      this.limits[parameter] = this.gl.getParameter(parameter);\n    }\n    return this.limits[parameter] || 0;\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {FramebufferProps} from '@luma.gl/core';\nimport {Framebuffer} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\nimport {WebGLDevice} from '../webgl-device';\nimport {WEBGLTexture} from './webgl-texture';\nimport {WEBGLTextureView} from './webgl-texture-view';\nimport {getDepthStencilAttachmentWebGL} from '../converters/webgl-texture-table';\n\nexport type Attachment = WEBGLTextureView | WEBGLTexture; // | WEBGLRenderbuffer;\n\n/** luma.gl Framebuffer, WebGL implementation  */\nexport class WEBGLFramebuffer extends Framebuffer {\n  device: WebGLDevice;\n  gl: WebGL2RenderingContext;\n  handle: WebGLFramebuffer;\n\n  colorAttachments: WEBGLTextureView[] = [];\n  depthStencilAttachment: WEBGLTextureView | null = null;\n\n  constructor(device: WebGLDevice, props: FramebufferProps) {\n    super(device, props);\n\n    // WebGL default framebuffer handle is null\n    const isDefaultFramebuffer = props.handle === null;\n\n    this.device = device;\n    this.gl = device.gl;\n    this.handle =\n      this.props.handle || isDefaultFramebuffer ? this.props.handle : this.gl.createFramebuffer();\n\n    if (!isDefaultFramebuffer) {\n      // default framebuffer handle is null, so we can't set spector metadata...\n      device.setSpectorMetadata(this.handle, {id: this.props.id, props: this.props});\n\n      // Auto create textures for attachments if needed\n      this.autoCreateAttachmentTextures();\n\n      this.updateAttachments();\n    }\n  }\n\n  /** destroys any auto created resources etc. */\n  override destroy(): void {\n    super.destroy(); // destroys owned resources etc.\n    if (!this.destroyed && this.handle !== null) {\n      this.gl.deleteFramebuffer(this.handle);\n      // this.handle = null;\n    }\n  }\n\n  protected updateAttachments(): void {\n    /** Attach from a map of attachments */\n    // @ts-expect-error native bindFramebuffer is overridden by our state tracker\n    const prevHandle: WebGLFramebuffer | null = this.gl.bindFramebuffer(\n      GL.FRAMEBUFFER,\n      this.handle\n    );\n\n    // Walk the attachments\n    for (let i = 0; i < this.colorAttachments.length; ++i) {\n      const attachment = this.colorAttachments[i];\n      if (attachment) {\n        const attachmentPoint = GL.COLOR_ATTACHMENT0 + i;\n        this._attachTextureView(attachmentPoint, attachment);\n      }\n    }\n\n    if (this.depthStencilAttachment) {\n      const attachmentPoint = getDepthStencilAttachmentWebGL(\n        this.depthStencilAttachment.props.format\n      );\n      this._attachTextureView(attachmentPoint, this.depthStencilAttachment);\n    }\n\n    /** Check the status */\n    if (this.device.props.debug) {\n      const status = this.gl.checkFramebufferStatus(GL.FRAMEBUFFER) as GL;\n      if (status !== GL.FRAMEBUFFER_COMPLETE) {\n        throw new Error(`Framebuffer ${_getFrameBufferStatus(status)}`);\n      }\n    }\n\n    this.gl.bindFramebuffer(GL.FRAMEBUFFER, prevHandle);\n  }\n\n  // PRIVATE\n\n  /** In WebGL we must use renderbuffers for depth/stencil attachments (unless we have extensions) */\n  // protected override createDepthStencilTexture(format: TextureFormat): Texture {\n  //   // return new WEBGLRenderbuffer(this.device, {\n  //   return new WEBGLTexture(this.device, {\n  //     id: `${this.id}-depth-stencil`,\n  //     format,\n  //     width: this.width,\n  //     height: this.height,\n  //     mipmaps: false\n  //   });\n  // }\n\n  /**\n   * @param attachment\n   * @param texture\n   * @param layer = 0 - index into WEBGLTextureArray and Texture3D or face for `TextureCubeMap`\n   * @param level = 0 - mipmapLevel\n   */\n  protected _attachTextureView(attachment: GL, textureView: WEBGLTextureView): void {\n    const {gl} = this.device;\n    const {texture} = textureView;\n    const level = textureView.props.baseMipLevel;\n    const layer = textureView.props.baseArrayLayer;\n\n    gl.bindTexture(texture.glTarget, texture.handle);\n\n    switch (texture.glTarget) {\n      case GL.TEXTURE_2D_ARRAY:\n      case GL.TEXTURE_3D:\n        gl.framebufferTextureLayer(GL.FRAMEBUFFER, attachment, texture.handle, level, layer);\n        break;\n\n      case GL.TEXTURE_CUBE_MAP:\n        // layer must be a cubemap face (or if index, converted to cube map face)\n        const face = mapIndexToCubeMapFace(layer);\n        gl.framebufferTexture2D(GL.FRAMEBUFFER, attachment, face, texture.handle, level);\n        break;\n\n      case GL.TEXTURE_2D:\n        gl.framebufferTexture2D(GL.FRAMEBUFFER, attachment, GL.TEXTURE_2D, texture.handle, level);\n        break;\n\n      default:\n        throw new Error('Illegal texture type');\n    }\n\n    gl.bindTexture(texture.glTarget, null);\n  }\n}\n\n// Helper functions\n\n// Map an index to a cube map face constant\nfunction mapIndexToCubeMapFace(layer: number | GL): GL {\n  // TEXTURE_CUBE_MAP_POSITIVE_X is a big value (0x8515)\n  // if smaller assume layer is index, otherwise assume it is already a cube map face constant\n  return layer < (GL.TEXTURE_CUBE_MAP_POSITIVE_X as number)\n    ? layer + GL.TEXTURE_CUBE_MAP_POSITIVE_X\n    : layer;\n}\n\n// Helper METHODS\n// Get a string describing the framebuffer error if installed\nfunction _getFrameBufferStatus(status: GL) {\n  switch (status) {\n    case GL.FRAMEBUFFER_COMPLETE:\n      return 'success';\n    case GL.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n      return 'Mismatched attachments';\n    case GL.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n      return 'No attachments';\n    case GL.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n      return 'Height/width mismatch';\n    case GL.FRAMEBUFFER_UNSUPPORTED:\n      return 'Unsupported or split attachments';\n    // WebGL2\n    case GL.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:\n      return 'Samples mismatch';\n    // OVR_multiview2 extension\n    // case GL.FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR: return 'baseViewIndex mismatch';\n    default:\n      return `${status}`;\n  }\n}\n\n/**\n * Attachment resize is expected to be a noop if size is same\n *\nprotected override resizeAttachments(width: number, height: number): this {\n  // for default framebuffer, just update the stored size\n  if (this.handle === null) {\n    // assert(width === undefined && height === undefined);\n    this.width = this.gl.drawingBufferWidth;\n    this.height = this.gl.drawingBufferHeight;\n    return this;\n  }\n\n  if (width === undefined) {\n    width = this.gl.drawingBufferWidth;\n  }\n  if (height === undefined) {\n    height = this.gl.drawingBufferHeight;\n  }\n\n  // TODO Not clear that this is better than default destroy/create implementation\n\n  for (const colorAttachment of this.colorAttachments) {\n    colorAttachment.texture.clone({width, height});\n  }\n  if (this.depthStencilAttachment) {\n    this.depthStencilAttachment.texture.resize({width, height});\n  }\n  return this;\n}\n*/\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {CanvasContextProps, TextureFormat} from '@luma.gl/core';\nimport {CanvasContext} from '@luma.gl/core';\nimport {WebGLDevice} from './webgl-device';\nimport {WEBGLFramebuffer} from './resources/webgl-framebuffer';\n\n/**\n * A WebGL Canvas Context which manages the canvas and handles drawing buffer resizing etc\n */\nexport class WebGLCanvasContext extends CanvasContext {\n  readonly device: WebGLDevice;\n  readonly format: TextureFormat = 'rgba8unorm';\n  readonly depthStencilFormat: TextureFormat = 'depth24plus';\n\n  presentationSize: [number, number];\n  private _framebuffer: WEBGLFramebuffer | null = null;\n\n  get [Symbol.toStringTag](): string {\n    return 'WebGLCanvasContext';\n  }\n\n  constructor(device: WebGLDevice, props: CanvasContextProps) {\n    // Note: Base class creates / looks up the canvas (unless under Node.js)\n    super(props);\n    this.device = device;\n    this.presentationSize = [-1, -1];\n    this._setAutoCreatedCanvasId(`${this.device.id}-canvas`);\n    this.update();\n  }\n\n  getCurrentFramebuffer(): WEBGLFramebuffer {\n    this.update();\n    // Setting handle to null returns a reference to the default framebuffer\n    this._framebuffer = this._framebuffer || new WEBGLFramebuffer(this.device, {handle: null});\n    return this._framebuffer;\n  }\n\n  /** Resizes and updates render targets if necessary */\n  update() {\n    const size = this.getPixelSize();\n    const sizeChanged =\n      size[0] !== this.presentationSize[0] || size[1] !== this.presentationSize[1];\n    if (sizeChanged) {\n      this.presentationSize = size;\n      this.resize();\n    }\n  }\n\n  /**\n   * Resize the canvas' drawing buffer.\n   *\n   * Can match the canvas CSS size, and optionally also consider devicePixelRatio\n   * Can be called every frame\n   *\n   * Regardless of size, the drawing buffer will always be scaled to the viewport, but\n   * for best visual results, usually set to either:\n   *  canvas CSS width x canvas CSS height\n   *  canvas CSS width * devicePixelRatio x canvas CSS height * devicePixelRatio\n   * See http://webgl2fundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html\n   */\n  resize(options?: {width?: number; height?: number; useDevicePixels?: boolean | number}): void {\n    if (!this.device.gl) return;\n\n    // Resize browser context .\n    if (this.canvas) {\n      const devicePixelRatio = this.getDevicePixelRatio(options?.useDevicePixels);\n      this.setDevicePixelRatio(devicePixelRatio, options);\n      return;\n    }\n  }\n\n  commit() {\n    // gl.commit was ultimately removed from the WebGL standard??\n    // if (this.offScreen && this.gl.commit) {\n    //   // @ts-expect-error gl.commit is not officially part of WebGL2RenderingContext\n    //   this.gl.commit();\n    // }\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/**\n * Load a script (identified by an url). When the url returns, the\n * content of this file is added into a new script element, attached to the DOM (body element)\n * @param scriptUrl defines the url of the script to laod\n * @param scriptId defines the id of the script element\n */\nexport async function loadScript(scriptUrl: string, scriptId?: string): Promise<Event> {\n  const head = document.getElementsByTagName('head')[0];\n  if (!head) {\n    throw new Error('loadScript');\n  }\n\n  const script = document.createElement('script');\n  script.setAttribute('type', 'text/javascript');\n  script.setAttribute('src', scriptUrl);\n  if (scriptId) {\n    script.id = scriptId;\n  }\n\n  return new Promise((resolve, reject) => {\n    script.onload = resolve;\n    script.onerror = error =>\n      reject(new Error(`Unable to load script '${scriptUrl}': ${error as string}`));\n    head.appendChild(script);\n  });\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {log} from '@luma.gl/core';\nimport {loadScript} from '../../utils/load-script';\n\nimport type {Spector} from './spector-types';\n\n/** Spector debug initialization options */\ntype SpectorProps = {\n  /** Whether spector.js is enabled */\n  debugSpectorJS?: boolean;\n  /** URL to load spector script from. Typically a CDN URL */\n  debugSpectorJSUrl?: string;\n  /** Canvas to monitor */\n  gl?: WebGL2RenderingContext;\n};\n\nconst LOG_LEVEL = 1;\n\nlet spector: Spector = null;\nlet initialized: boolean = false;\n\ndeclare global {\n  // @ts-ignore\n  // eslint-disable-next-line no-var\n  var SPECTOR: Spector;\n}\n\nexport const DEFAULT_SPECTOR_PROPS: Required<SpectorProps> = {\n  debugSpectorJS: log.get('debug-spectorjs'),\n  // https://github.com/BabylonJS/Spector.js#basic-usage\n  // https://forum.babylonjs.com/t/spectorcdn-is-temporarily-off/48241\n  // spectorUrl: 'https://spectorcdn.babylonjs.com/spector.bundle.js';\n  debugSpectorJSUrl: 'https://cdn.jsdelivr.net/npm/spectorjs@0.9.30/dist/spector.bundle.js',\n  gl: undefined!\n};\n\n/** Loads spector from CDN if not already installed */\nexport async function loadSpectorJS(props: {debugSpectorJSUrl?: string}): Promise<void> {\n  if (!globalThis.SPECTOR) {\n    try {\n      await loadScript(props.debugSpectorJSUrl || DEFAULT_SPECTOR_PROPS.debugSpectorJSUrl);\n    } catch (error) {\n      log.warn(String(error));\n    }\n  }\n}\n\nexport function initializeSpectorJS(props: SpectorProps): Spector | null {\n  props = {...DEFAULT_SPECTOR_PROPS, ...props};\n  if (!props.debugSpectorJS) {\n    return null;\n  }\n\n  if (!spector && globalThis.SPECTOR && !globalThis.luma?.spector) {\n    log.probe(LOG_LEVEL, 'SPECTOR found and initialized. Start with `luma.spector.displayUI()`')();\n    const {Spector: SpectorJS} = globalThis.SPECTOR as any;\n    spector = new SpectorJS();\n    if (globalThis.luma) {\n      (globalThis.luma as any).spector = spector;\n    }\n  }\n\n  if (!spector) {\n    return null;\n  }\n\n  if (!initialized) {\n    initialized = true;\n\n    // enables recording some extra information merged in the capture like texture memory sizes and formats\n    spector.spyCanvases();\n    // A callback when results are ready\n    spector?.onCaptureStarted.add((capture: unknown) =>\n      log.info('Spector capture started:', capture)()\n    );\n    spector?.onCapture.add((capture: unknown) => {\n      log.info('Spector capture complete:', capture)();\n      // Use undocumented Spector API to open the UI with our capture\n      // See https://github.com/BabylonJS/Spector.js/blob/767ad1195a25b85a85c381f400eb50a979239eca/src/spector.ts#L124\n      spector?.getResultUI();\n      // @ts-expect-error private\n      spector?.resultView.display();\n      // @ts-expect-error private\n      spector?.resultView.addCapture(capture);\n    });\n  }\n\n  if (props.gl) {\n    // capture startup\n    const gl = props.gl;\n    // @ts-expect-error\n    const device = gl.device;\n    spector?.startCapture(props.gl, 500); // 500 commands\n    // @ts-expect-error\n    gl.device = device;\n\n    new Promise(resolve => setTimeout(resolve, 2000)).then(_ => {\n      log.info('Spector capture stopped after 2 seconds')();\n      spector?.stopCapture();\n      // spector?.displayUI();\n    });\n  }\n\n  return spector;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {log} from '@luma.gl/core';\n// Rename constant to prevent inlining. We need the full set of constants for generating debug strings.\nimport {GL as GLEnum} from '@luma.gl/constants';\nimport {isBrowser} from '@probe.gl/env';\nimport {loadScript} from '../../utils/load-script';\n\nconst WEBGL_DEBUG_CDN_URL = 'https://unpkg.com/webgl-debug@2.0.1/index.js';\n\ntype DebugContextProps = {\n  debugWebGL?: boolean;\n  traceWebGL?: boolean;\n};\n\ntype ContextData = {\n  realContext?: WebGL2RenderingContext;\n  debugContext?: WebGL2RenderingContext;\n};\n\n// Helper to get shared context data\nfunction getWebGLContextData(gl: any): ContextData {\n  gl.luma = gl.luma || {};\n  return gl.luma;\n}\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var WebGLDebugUtils: any;\n}\n\n/**\n * Loads Khronos WebGLDeveloperTools from CDN if not already installed\n * const WebGLDebugUtils = require('webgl-debug');\n * @see https://github.com/KhronosGroup/WebGLDeveloperTools\n * @see https://github.com/vorg/webgl-debug\n */\nexport async function loadWebGLDeveloperTools(): Promise<void> {\n  if (isBrowser() && !globalThis.WebGLDebugUtils) {\n    globalThis.global = globalThis.global || globalThis;\n    // @ts-expect-error Developer tools expects global to be set\n    globalThis.global.module = {};\n    await loadScript(WEBGL_DEBUG_CDN_URL);\n  }\n}\n\n// Returns (a potentially new) context with debug instrumentation turned off or on.\n// Note that this actually returns a new context\nexport function makeDebugContext(\n  gl: WebGL2RenderingContext,\n  props: DebugContextProps = {}\n): WebGL2RenderingContext {\n  return props.debugWebGL || props.traceWebGL ? getDebugContext(gl, props) : getRealContext(gl);\n}\n\n// Returns the real context from either of the real/debug contexts\nfunction getRealContext(gl: WebGL2RenderingContext): WebGL2RenderingContext {\n  const data = getWebGLContextData(gl);\n  // If the context has a realContext member, it is a debug context so return the realContext\n  return data.realContext ? data.realContext : gl;\n}\n\n// Returns the debug context from either of the real/debug contexts\nfunction getDebugContext(\n  gl: WebGL2RenderingContext,\n  props: DebugContextProps\n): WebGL2RenderingContext {\n  if (!globalThis.WebGLDebugUtils) {\n    log.warn('webgl-debug not loaded')();\n    return gl;\n  }\n\n  const data = getWebGLContextData(gl);\n\n  // If this already has a debug context, return it.\n  if (data.debugContext) {\n    return data.debugContext;\n  }\n\n  // Create a new debug context\n  globalThis.WebGLDebugUtils.init({...GLEnum, ...gl});\n  const glDebug = globalThis.WebGLDebugUtils.makeDebugContext(\n    gl,\n    onGLError.bind(null, props),\n    onValidateGLFunc.bind(null, props)\n  );\n\n  // Make sure we have all WebGL2 and extension constants (todo dynamic import to circumvent minification?)\n  for (const key in GLEnum) {\n    if (!(key in glDebug) && typeof GLEnum[key] === 'number') {\n      glDebug[key] = GLEnum[key];\n    }\n  }\n\n  // Ensure we have a clean prototype on the instrumented object\n  // Note: setPrototypeOf does come with perf warnings, but we already take a bigger perf reduction\n  // by synchronizing the WebGL errors after each WebGL call.\n  class WebGLDebugContext {}\n  Object.setPrototypeOf(glDebug, Object.getPrototypeOf(gl));\n  Object.setPrototypeOf(WebGLDebugContext, glDebug);\n  const debugContext = Object.create(WebGLDebugContext);\n  // Store the debug context\n  data.realContext = gl;\n  data.debugContext = debugContext;\n  debugContext.debug = true;\n\n  // Return it\n  return debugContext;\n}\n\n// DEBUG TRACING\n\nfunction getFunctionString(functionName: string, functionArgs): string {\n  // Cover bug in webgl-debug-tools\n  functionArgs = Array.from(functionArgs).map(arg => (arg === undefined ? 'undefined' : arg));\n  let args = globalThis.WebGLDebugUtils.glFunctionArgsToString(functionName, functionArgs);\n  args = `${args.slice(0, 100)}${args.length > 100 ? '...' : ''}`;\n  return `gl.${functionName}(${args})`;\n}\n\nfunction onGLError(props: DebugContextProps, err, functionName: string, args: any[]): void {\n  // Cover bug in webgl-debug-tools\n  args = Array.from(args).map(arg => (arg === undefined ? 'undefined' : arg));\n  const errorMessage = globalThis.WebGLDebugUtils.glEnumToString(err);\n  const functionArgs = globalThis.WebGLDebugUtils.glFunctionArgsToString(functionName, args);\n  const message = `${errorMessage} in gl.${functionName}(${functionArgs})`;\n  log.error(message)();\n  debugger; // eslint-disable-line\n  // throw new Error(message);\n}\n\n// Don't generate function string until it is needed\nfunction onValidateGLFunc(\n  props: DebugContextProps,\n  functionName: string,\n  functionArgs: any[]\n): void {\n  let functionString: string = '';\n  if (log.level >= 1) {\n    functionString = getFunctionString(functionName, functionArgs);\n    if (props.traceWebGL) {\n      log.log(1, functionString)();\n    }\n  }\n\n  for (const arg of functionArgs) {\n    if (arg === undefined) {\n      functionString = functionString || getFunctionString(functionName, functionArgs);\n      debugger; // eslint-disable-line\n      // throw new Error(`Undefined argument: ${functionString}`);\n    }\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nconst uidCounters: Record<string, number> = {};\n\n/**\n * Returns a UID.\n * @param id= - Identifier base name\n * @return uid\n **/\nexport function uid(id: string = 'id'): string {\n  uidCounters[id] = uidCounters[id] || 1;\n  const count = uidCounters[id]++;\n  return `${id}-${count}`;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {BufferProps} from '@luma.gl/core';\nimport {Buffer} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\nimport {WebGLDevice} from '../webgl-device';\n\n/** WebGL Buffer interface */\nexport class WEBGLBuffer extends Buffer {\n  readonly device: WebGLDevice;\n  readonly gl: WebGL2RenderingContext;\n  readonly handle: WebGLBuffer;\n\n  /** Target in OpenGL defines the type of buffer */\n  readonly glTarget: GL.ARRAY_BUFFER | GL.ELEMENT_ARRAY_BUFFER | GL.UNIFORM_BUFFER;\n  /** Usage is a hint on how frequently the buffer will be updates */\n  readonly glUsage: GL.STATIC_DRAW | GL.DYNAMIC_DRAW;\n  /** Index type is needed when issuing draw calls, so we pre-compute it */\n  readonly glIndexType: GL.UNSIGNED_SHORT | GL.UNSIGNED_INT = GL.UNSIGNED_SHORT;\n\n  /** Number of bytes allocated on the GPU for this buffer */\n  byteLength: number;\n  /** Number of bytes used */\n  bytesUsed: number;\n\n  constructor(device: WebGLDevice, props: BufferProps = {}) {\n    super(device, props);\n\n    this.device = device;\n    this.gl = this.device.gl;\n\n    const handle = typeof props === 'object' ? props.handle : undefined;\n    this.handle = handle || this.gl.createBuffer();\n    device.setSpectorMetadata(this.handle, {...this.props, data: typeof this.props.data});\n\n    // - In WebGL1, need to make sure we use GL.ELEMENT_ARRAY_BUFFER when initializing element buffers\n    //   otherwise buffer type will lock to generic (non-element) buffer\n    // - In WebGL2, we can use GL.COPY_READ_BUFFER which avoids locking the type here\n    this.glTarget = getWebGLTarget(this.props.usage);\n    this.glUsage = getWebGLUsage(this.props.usage);\n    this.glIndexType = this.props.indexType === 'uint32' ? GL.UNSIGNED_INT : GL.UNSIGNED_SHORT;\n\n    // Set data: (re)initializes the buffer\n    if (props.data) {\n      this._initWithData(props.data, props.byteOffset, props.byteLength);\n    } else {\n      this._initWithByteLength(props.byteLength || 0);\n    }\n  }\n\n  // PRIVATE METHODS\n\n  /** Allocate a new buffer and initialize to contents of typed array */\n  _initWithData(\n    data: ArrayBuffer | ArrayBufferView,\n    byteOffset: number = 0,\n    byteLength: number = data.byteLength + byteOffset\n  ): void {\n    // const glTarget = this.device.isWebGL2 ? GL.COPY_WRITE_BUFFER : this.glTarget;\n    const glTarget = this.glTarget;\n    this.gl.bindBuffer(glTarget, this.handle);\n    this.gl.bufferData(glTarget, byteLength, this.glUsage);\n    this.gl.bufferSubData(glTarget, byteOffset, data);\n    this.gl.bindBuffer(glTarget, null);\n\n    this.bytesUsed = byteLength;\n    this.byteLength = byteLength;\n\n    this._setDebugData(data, byteOffset, byteLength);\n    this.trackAllocatedMemory(byteLength);\n  }\n\n  // Allocate a GPU buffer of specified size.\n  _initWithByteLength(byteLength: number): this {\n    // assert(byteLength >= 0);\n\n    // Workaround needed for Safari (#291):\n    // gl.bufferData with size equal to 0 crashes. Instead create zero sized array.\n    let data = byteLength;\n    if (byteLength === 0) {\n      // @ts-expect-error\n      data = new Float32Array(0);\n    }\n\n    // const glTarget = this.device.isWebGL2 ? GL.COPY_WRITE_BUFFER : this.glTarget;\n    const glTarget = this.glTarget;\n\n    this.gl.bindBuffer(glTarget, this.handle);\n    this.gl.bufferData(glTarget, data, this.glUsage);\n    this.gl.bindBuffer(glTarget, null);\n\n    this.bytesUsed = byteLength;\n    this.byteLength = byteLength;\n\n    this._setDebugData(null, 0, byteLength);\n    this.trackAllocatedMemory(byteLength);\n\n    return this;\n  }\n\n  override destroy(): void {\n    if (!this.destroyed && this.handle) {\n      this.removeStats();\n      this.trackDeallocatedMemory();\n      this.gl.deleteBuffer(this.handle);\n      this.destroyed = true;\n      // @ts-expect-error\n      this.handle = null;\n    }\n  }\n\n  override write(data: ArrayBufferView, byteOffset: number = 0): void {\n    const srcOffset = 0;\n    const byteLength = undefined; // data.byteLength;\n\n    // Create the buffer - binding it here for the first time locks the type\n    // In WebGL2, use GL.COPY_WRITE_BUFFER to avoid locking the type\n    const glTarget = GL.COPY_WRITE_BUFFER;\n    this.gl.bindBuffer(glTarget, this.handle);\n    // WebGL2: subData supports additional srcOffset and length parameters\n    if (srcOffset !== 0 || byteLength !== undefined) {\n      this.gl.bufferSubData(glTarget, byteOffset, data, srcOffset, byteLength);\n    } else {\n      this.gl.bufferSubData(glTarget, byteOffset, data);\n    }\n    this.gl.bindBuffer(glTarget, null);\n\n    this._setDebugData(data, byteOffset, data.byteLength);\n  }\n\n  /** Asynchronously read data from the buffer */\n  override async readAsync(byteOffset = 0, byteLength?: number): Promise<Uint8Array> {\n    return this.readSyncWebGL(byteOffset, byteLength);\n  }\n\n  /** Synchronously read data from the buffer. WebGL only. */\n  override readSyncWebGL(byteOffset = 0, byteLength?: number): Uint8Array {\n    byteLength = byteLength ?? this.byteLength - byteOffset;\n    const data = new Uint8Array(byteLength);\n    const dstOffset = 0;\n\n    // Use GL.COPY_READ_BUFFER to avoid disturbing other targets and locking type\n    this.gl.bindBuffer(GL.COPY_READ_BUFFER, this.handle);\n    this.gl.getBufferSubData(GL.COPY_READ_BUFFER, byteOffset, data, dstOffset, byteLength);\n    this.gl.bindBuffer(GL.COPY_READ_BUFFER, null);\n\n    // Update local `data` if offsets are 0\n    this._setDebugData(data, byteOffset, byteLength);\n\n    return data;\n  }\n}\n\n/**\n * Returns a WebGL buffer target\n *\n * @param usage\n * static MAP_READ = 0x01;\n * static MAP_WRITE = 0x02;\n * static COPY_SRC = 0x0004;\n * static COPY_DST = 0x0008;\n * static INDEX = 0x0010;\n * static VERTEX = 0x0020;\n * static UNIFORM = 0x0040;\n * static STORAGE = 0x0080;\n * static INDIRECT = 0x0100;\n * static QUERY_RESOLVE = 0x0200;\n *\n * @returns WebGL buffer targe\n *\n * Buffer bind points in WebGL2\n * gl.COPY_READ_BUFFER: Buffer for copying from one buffer object to another.\n * gl.COPY_WRITE_BUFFER: Buffer for copying from one buffer object to another.\n * gl.TRANSFORM_FEEDBACK_BUFFER: Buffer for transform feedback operations.\n * gl.PIXEL_PACK_BUFFER: Buffer used for pixel transfer operations.\n * gl.PIXEL_UNPACK_BUFFER: Buffer used for pixel transfer operations.\n */\nfunction getWebGLTarget(\n  usage: number\n): GL.ARRAY_BUFFER | GL.ELEMENT_ARRAY_BUFFER | GL.UNIFORM_BUFFER {\n  if (usage & Buffer.INDEX) {\n    return GL.ELEMENT_ARRAY_BUFFER;\n  }\n  if (usage & Buffer.VERTEX) {\n    return GL.ARRAY_BUFFER;\n  }\n  if (usage & Buffer.UNIFORM) {\n    return GL.UNIFORM_BUFFER;\n  }\n\n  // Binding a buffer for the first time locks the type\n  // In WebGL2, we can use GL.COPY_WRITE_BUFFER to avoid locking the type\n  return GL.ARRAY_BUFFER;\n}\n\n/** @todo usage is not passed correctly */\nfunction getWebGLUsage(usage: number): GL.STATIC_DRAW | GL.DYNAMIC_DRAW {\n  if (usage & Buffer.INDEX) {\n    return GL.STATIC_DRAW;\n  }\n  if (usage & Buffer.VERTEX) {\n    return GL.STATIC_DRAW;\n  }\n  if (usage & Buffer.UNIFORM) {\n    return GL.DYNAMIC_DRAW;\n  }\n  return GL.STATIC_DRAW;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {CompilerMessage} from '@luma.gl/core';\n\n/**\n * Parse a WebGL-format GLSL compilation log into an array of WebGPU style message records.\n * This follows documented WebGL conventions for compilation logs.\n * Based on https://github.com/wwwtyro/gl-format-compiler-error (public domain)\n */\nexport function parseShaderCompilerLog(errLog: string): readonly CompilerMessage[] {\n  // Parse the error - note: browser and driver dependent\n  const lines = errLog.split(/\\r?\\n/);\n\n  const messages: CompilerMessage[] = [];\n\n  for (const line of lines) {\n    if (line.length <= 1) {\n      continue; // eslint-disable-line no-continue\n    }\n\n    const segments: string[] = line.split(':');\n\n    // Check for messages with no line information `ERROR: unsupported shader version`\n    if (segments.length === 2) {\n      const [messageType, message] = segments;\n      messages.push({\n        message: message.trim(),\n        type: getMessageType(messageType),\n        lineNum: 0,\n        linePos: 0\n      });\n      continue; // eslint-disable-line no-continue\n    }\n\n    const [messageType, linePosition, lineNumber, ...rest] = segments;\n\n    let lineNum = parseInt(lineNumber, 10);\n    if (isNaN(lineNum)) {\n      lineNum = 0;\n    }\n\n    let linePos = parseInt(linePosition, 10);\n    if (isNaN(linePos)) {\n      linePos = 0;\n    }\n\n    messages.push({\n      message: rest.join(':').trim(),\n      type: getMessageType(messageType),\n      lineNum,\n      linePos // TODO\n    });\n  }\n\n  return messages;\n}\n\n/** Ensure supported type */\nfunction getMessageType(messageType: string): 'warning' | 'error' | 'info' {\n  const MESSAGE_TYPES = ['warning', 'error', 'info'];\n  const lowerCaseType = messageType.toLowerCase();\n  return (MESSAGE_TYPES.includes(lowerCaseType) ? lowerCaseType : 'info') as\n    | 'warning'\n    | 'error'\n    | 'info';\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Shader, ShaderProps, CompilerMessage, log} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\nimport {parseShaderCompilerLog} from '../helpers/parse-shader-compiler-log';\nimport {WebGLDevice} from '../webgl-device';\n\n/**\n * An immutable compiled shader program that execute portions of the GPU Pipeline\n */\nexport class WEBGLShader extends Shader {\n  readonly device: WebGLDevice;\n  readonly handle: WebGLShader;\n\n  constructor(device: WebGLDevice, props: ShaderProps) {\n    super(device, props);\n    this.device = device;\n    switch (this.props.stage) {\n      case 'vertex':\n        this.handle = this.props.handle || this.device.gl.createShader(GL.VERTEX_SHADER);\n        break;\n      case 'fragment':\n        this.handle = this.props.handle || this.device.gl.createShader(GL.FRAGMENT_SHADER);\n        break;\n      default:\n        throw new Error(this.props.stage);\n    }\n    this._compile(this.source);\n  }\n\n  override destroy(): void {\n    if (this.handle) {\n      this.removeStats();\n      this.device.gl.deleteShader(this.handle);\n      // this.handle = null;\n      this.destroyed = true;\n    }\n  }\n\n  get asyncCompilationStatus(): Promise<'pending' | 'success' | 'error'> {\n    return this._waitForCompilationComplete().then(() => this.compilationStatus);\n  }\n\n  override async getCompilationInfo(): Promise<readonly CompilerMessage[]> {\n    await this._waitForCompilationComplete();\n    return this.getCompilationInfoSync();\n  }\n\n  override getCompilationInfoSync(): readonly CompilerMessage[] {\n    const shaderLog = this.device.gl.getShaderInfoLog(this.handle);\n    return shaderLog ? parseShaderCompilerLog(shaderLog) : [];\n  }\n\n  override getTranslatedSource(): string | null {\n    const extensions = this.device.getExtension('WEBGL_debug_shaders');\n    const ext = extensions.WEBGL_debug_shaders;\n    return ext?.getTranslatedShaderSource(this.handle) || null;\n  }\n\n  // PRIVATE METHODS\n\n  /** Compile a shader and get compilation status */\n  protected async _compile(source: string): Promise<void> {\n    source = source.startsWith('#version ') ? source : `#version 300 es\\n${source}`;\n\n    const {gl} = this.device;\n    gl.shaderSource(this.handle, source);\n    gl.compileShader(this.handle);\n\n    // For performance reasons, avoid checking shader compilation errors on production\n    if (!this.device.props.debug) {\n      this.compilationStatus = 'pending';\n      return;\n    }\n\n    // Sync case - slower, but advantage is that it throws in the constructor, making break on error more useful\n    if (!this.device.features.has('compilation-status-async-webgl')) {\n      this._getCompilationStatus();\n      // The `Shader` base class will determine if debug window should be opened based on this.compilationStatus\n      this.debugShader();\n      if (this.compilationStatus === 'error') {\n        throw new Error(`GLSL compilation errors in ${this.props.stage} shader ${this.props.id}`);\n      }\n      return;\n    }\n\n    // async case\n    log.once(1, 'Shader compilation is asynchronous')();\n    await this._waitForCompilationComplete();\n    log.info(2, `Shader ${this.id} - async compilation complete: ${this.compilationStatus}`)();\n    this._getCompilationStatus();\n\n    // The `Shader` base class will determine if debug window should be opened based on this.compilationStatus\n    this.debugShader();\n  }\n\n  /** Use KHR_parallel_shader_compile extension if available */\n  protected async _waitForCompilationComplete(): Promise<void> {\n    const waitMs = async (ms: number) => await new Promise(resolve => setTimeout(resolve, ms));\n    const DELAY_MS = 10; // Shader compilation is typically quite fast (with some exceptions)\n\n    // If status polling is not available, we can't wait for completion. Just wait a little to minimize blocking\n    if (!this.device.features.has('compilation-status-async-webgl')) {\n      await waitMs(DELAY_MS);\n      return;\n    }\n\n    const {gl} = this.device;\n    for (;;) {\n      const complete = gl.getShaderParameter(this.handle, GL.COMPLETION_STATUS_KHR);\n      if (complete) {\n        return;\n      }\n      await waitMs(DELAY_MS);\n    }\n  }\n\n  /**\n   * Get the shader compilation status\n   * TODO - Load log even when no error reported, to catch warnings?\n   * https://gamedev.stackexchange.com/questions/30429/how-to-detect-glsl-warnings\n   */\n  protected _getCompilationStatus() {\n    this.compilationStatus = this.device.gl.getShaderParameter(this.handle, GL.COMPILE_STATUS)\n      ? 'success'\n      : 'error';\n  }\n}\n\n// TODO - Original code from luma.gl v8 - keep until new debug functionality has matured\n// if (!compilationSuccess) {\n//   const parsedLog = shaderLog ? parseShaderCompilerLog(shaderLog) : [];\n//   const messages = parsedLog.filter(message => message.type === 'error');\n//   const formattedLog = formatCompilerLog(messages, source, {showSourceCode: 'all', html: true});\n//   const shaderDescription = `${this.stage} shader ${shaderName}`;\n//   log.error(`GLSL compilation errors in ${shaderDescription}\\n${formattedLog}`)();\n//   displayShaderLog(parsedLog, source, shaderName);\n// }\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {CompareFunction, StencilOperation, BlendOperation, BlendFactor} from '@luma.gl/core';\nimport {Device, log, Parameters, PolygonMode, ProvokingVertex} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\nimport type {\n  GLBlendEquation,\n  GLBlendFunction,\n  GLFunction,\n  GLParameters,\n  GLPolygonMode,\n  GLProvokingVertex,\n  GLStencilOp\n} from '@luma.gl/constants';\nimport {setGLParameters} from '../../context/parameters/unified-parameter-api';\nimport {WebGLDevice} from '../webgl-device';\n\n/* eslint-disable no-unused-expressions */ // For expression ? gl.enable() : gl.disable()\n\n/**\n * Execute a function with a set of temporary WebGL parameter overrides\n * - Saves current \"global\" WebGL context settings\n * - Sets the supplies WebGL context parameters,\n * - Executes supplied function\n * - Restores parameters\n * - Returns the return value of the supplied function\n */\nexport function withDeviceAndGLParameters<T = unknown>(\n  device: Device,\n  parameters: Parameters,\n  glParameters: GLParameters,\n  func: (_?: Device) => T\n): T {\n  if (isObjectEmpty(parameters)) {\n    // Avoid setting state if no parameters provided. Just call and return\n    return func(device);\n  }\n\n  // Wrap in a try-catch to ensure that parameters are restored on exceptions\n  const webglDevice = device as WebGLDevice;\n  webglDevice.pushState();\n  try {\n    setDeviceParameters(device, parameters);\n    setGLParameters(webglDevice.gl, glParameters);\n    return func(device);\n  } finally {\n    webglDevice.popState();\n  }\n}\n\n/**\n * Execute a function with a set of temporary WebGL parameter overrides\n * - Saves current \"global\" WebGL context settings\n * - Sets the supplies WebGL context parameters,\n * - Executes supplied function\n * - Restores parameters\n * - Returns the return value of the supplied function\n * @deprecated use withDeviceParameters instead\n */\nexport function withGLParameters<T = unknown>(\n  device: Device,\n  parameters: GLParameters,\n  func: (_?: Device) => T\n): T {\n  if (isObjectEmpty(parameters)) {\n    // Avoid setting state if no parameters provided. Just call and return\n    return func(device);\n  }\n\n  // Wrap in a try-catch to ensure that parameters are restored on exceptions\n  const webglDevice = device as WebGLDevice;\n  webglDevice.pushState();\n  try {\n    setGLParameters(webglDevice.gl, parameters);\n    return func(device);\n  } finally {\n    webglDevice.popState();\n  }\n}\n\n/**\n * Execute a function with a set of temporary WebGL parameter overrides\n * - Saves current \"global\" WebGL context settings\n * - Sets the supplies WebGL context parameters,\n * - Executes supplied function\n * - Restores parameters\n * - Returns the return value of the supplied function\n */\nexport function withDeviceParameters<T = unknown>(\n  device: Device,\n  parameters: Parameters,\n  func: (_?: Device) => T\n): T {\n  if (isObjectEmpty(parameters)) {\n    // Avoid setting state if no parameters provided. Just call and return\n    return func(device);\n  }\n\n  // Wrap in a try-catch to ensure that parameters are restored on exceptions'\n  const webglDevice = device as WebGLDevice;\n  webglDevice.pushState();\n  try {\n    setDeviceParameters(device, parameters);\n    return func(device);\n  } finally {\n    webglDevice.popState();\n  }\n}\n\n/** Set WebGPU Style Parameters */\nexport function setDeviceParameters(device: Device, parameters: Parameters) {\n  const webglDevice = device as WebGLDevice;\n  const {gl} = webglDevice;\n\n  // RASTERIZATION SETTINGS\n  if (parameters.cullMode) {\n    switch (parameters.cullMode) {\n      case 'none':\n        gl.disable(GL.CULL_FACE);\n        break;\n      case 'front':\n        gl.enable(GL.CULL_FACE);\n        gl.cullFace(GL.FRONT);\n        break;\n      case 'back':\n        gl.enable(GL.CULL_FACE);\n        gl.cullFace(GL.BACK);\n        break;\n    }\n  }\n\n  if (parameters.frontFace) {\n    gl.frontFace(\n      map('frontFace', parameters.frontFace, {\n        ccw: GL.CCW,\n        cw: GL.CW\n      })\n    );\n  }\n\n  if (parameters.unclippedDepth) {\n    if (device.features.has('depth-clip-control')) {\n      // EXT_depth_clamp\n      gl.enable(GL.DEPTH_CLAMP_EXT);\n    }\n  }\n\n  if (parameters.depthBias !== undefined) {\n    gl.enable(GL.POLYGON_OFFSET_FILL);\n    gl.polygonOffset(parameters.depthBias, parameters.depthBiasSlopeScale || 0);\n  }\n\n  // depthBiasSlopeScale: {\n  //   // Handled by depthBias\n  // },\n\n  // WEBGL EXTENSIONS\n\n  if (parameters.provokingVertex) {\n    if (device.features.has('provoking-vertex-webgl')) {\n      const extensions = webglDevice.getExtension('WEBGL_provoking_vertex');\n      const ext = extensions.WEBGL_provoking_vertex;\n\n      const vertex = map<ProvokingVertex, GLProvokingVertex>(\n        'provokingVertex',\n        parameters.provokingVertex,\n        {\n          first: GL.FIRST_VERTEX_CONVENTION_WEBGL,\n          last: GL.LAST_VERTEX_CONVENTION_WEBGL\n        }\n      );\n      ext?.provokingVertexWEBGL(vertex);\n    }\n  }\n\n  if (parameters.polygonMode || parameters.polygonOffsetLine) {\n    if (device.features.has('polygon-mode-webgl')) {\n      if (parameters.polygonMode) {\n        const extensions = webglDevice.getExtension('WEBGL_polygon_mode');\n        const ext = extensions.WEBGL_polygon_mode;\n        const mode = map<PolygonMode, GLPolygonMode>('polygonMode', parameters.polygonMode, {\n          fill: GL.FILL_WEBGL,\n          line: GL.LINE_WEBGL\n        });\n        ext?.polygonModeWEBGL(GL.FRONT, mode);\n        ext?.polygonModeWEBGL(GL.BACK, mode);\n      }\n\n      if (parameters.polygonOffsetLine) {\n        gl.enable(GL.POLYGON_OFFSET_LINE_WEBGL);\n      }\n    }\n  }\n\n  if (device.features.has('shader-clip-cull-distance-webgl')) {\n    if (parameters.clipDistance0) {\n      gl.enable(GL.CLIP_DISTANCE0_WEBGL);\n    }\n    if (parameters.clipDistance1) {\n      gl.enable(GL.CLIP_DISTANCE1_WEBGL);\n    }\n    if (parameters.clipDistance2) {\n      gl.enable(GL.CLIP_DISTANCE2_WEBGL);\n    }\n    if (parameters.clipDistance3) {\n      gl.enable(GL.CLIP_DISTANCE3_WEBGL);\n    }\n    if (parameters.clipDistance4) {\n      gl.enable(GL.CLIP_DISTANCE4_WEBGL);\n    }\n    if (parameters.clipDistance5) {\n      gl.enable(GL.CLIP_DISTANCE5_WEBGL);\n    }\n    if (parameters.clipDistance6) {\n      gl.enable(GL.CLIP_DISTANCE6_WEBGL);\n    }\n    if (parameters.clipDistance7) {\n      gl.enable(GL.CLIP_DISTANCE7_WEBGL);\n    }\n  }\n\n  // DEPTH STENCIL\n\n  if (parameters.depthWriteEnabled !== undefined) {\n    gl.depthMask(mapBoolean('depthWriteEnabled', parameters.depthWriteEnabled));\n  }\n\n  if (parameters.depthCompare) {\n    parameters.depthCompare !== 'always' ? gl.enable(GL.DEPTH_TEST) : gl.disable(GL.DEPTH_TEST);\n    gl.depthFunc(convertCompareFunction('depthCompare', parameters.depthCompare));\n  }\n\n  if (parameters.stencilWriteMask) {\n    const mask = parameters.stencilWriteMask;\n    gl.stencilMaskSeparate(GL.FRONT, mask);\n    gl.stencilMaskSeparate(GL.BACK, mask);\n  }\n\n  if (parameters.stencilReadMask) {\n    // stencilReadMask is handle inside stencil***Compare.\n    log.warn('stencilReadMask not supported under WebGL');\n  }\n\n  if (parameters.stencilCompare) {\n    const mask = parameters.stencilReadMask || 0xffffffff;\n    const glValue = convertCompareFunction('depthCompare', parameters.stencilCompare);\n    // TODO - ensure back doesn't overwrite\n    parameters.stencilCompare !== 'always'\n      ? gl.enable(GL.STENCIL_TEST)\n      : gl.disable(GL.STENCIL_TEST);\n    gl.stencilFuncSeparate(GL.FRONT, glValue, 0, mask);\n    gl.stencilFuncSeparate(GL.BACK, glValue, 0, mask);\n  }\n\n  if (\n    parameters.stencilPassOperation &&\n    parameters.stencilFailOperation &&\n    parameters.stencilDepthFailOperation\n  ) {\n    const dppass = convertStencilOperation('stencilPassOperation', parameters.stencilPassOperation);\n    const sfail = convertStencilOperation('stencilFailOperation', parameters.stencilFailOperation);\n    const dpfail = convertStencilOperation(\n      'stencilDepthFailOperation',\n      parameters.stencilDepthFailOperation\n    );\n    gl.stencilOpSeparate(GL.FRONT, sfail, dpfail, dppass);\n    gl.stencilOpSeparate(GL.BACK, sfail, dpfail, dppass);\n  }\n\n  // stencilDepthFailOperation() {\n  //   // handled by stencilPassOperation\n  // },\n\n  // stencilFailOperation() {\n  //   // handled by stencilPassOperation\n  // },\n\n  // COLOR STATE\n  switch (parameters.blend) {\n    case true:\n      gl.enable(GL.BLEND);\n      break;\n    case false:\n      gl.disable(GL.BLEND);\n      break;\n    default:\n    // leave WebGL blend state unchanged if `parameters.blend` is not set\n  }\n\n  if (parameters.blendColorOperation || parameters.blendAlphaOperation) {\n    const colorEquation = convertBlendOperationToEquation(\n      'blendColorOperation',\n      parameters.blendColorOperation || 'add'\n    );\n    const alphaEquation = convertBlendOperationToEquation(\n      'blendAlphaOperation',\n      parameters.blendAlphaOperation || 'add'\n    );\n    gl.blendEquationSeparate(colorEquation, alphaEquation);\n\n    const colorSrcFactor = convertBlendFactorToFunction(\n      'blendColorSrcFactor',\n      parameters.blendColorSrcFactor || 'one'\n    );\n    const colorDstFactor = convertBlendFactorToFunction(\n      'blendColorDstFactor',\n      parameters.blendColorDstFactor || 'zero'\n    );\n    const alphaSrcFactor = convertBlendFactorToFunction(\n      'blendAlphaSrcFactor',\n      parameters.blendAlphaSrcFactor || 'one'\n    );\n    const alphaDstFactor = convertBlendFactorToFunction(\n      'blendAlphaDstFactor',\n      parameters.blendAlphaDstFactor || 'zero'\n    );\n    gl.blendFuncSeparate(colorSrcFactor, colorDstFactor, alphaSrcFactor, alphaDstFactor);\n  }\n}\n\n/*\n      rasterizationState: {\n        cullMode: \"back\",\n      },\n\n      depthStencilState: {\n        depthWriteEnabled: true,\n        depthCompare: \"less\",\n        format: \"depth24plus-stencil8\",\n      },\n\n      colorStates: [\n        {\n          format: \"bgra8unorm\",\n          // colorBlend.srcFactor = wgpu::BlendFactor::SrcAlpha;\n          // colorBlend.dstFactor = wgpu::BlendFactor::OneMinusSrcAlpha;\n          // alphaBlend.srcFactor = wgpu::BlendFactor::SrcAlpha;\n          // alphaBlend.dstFactor = wgpu::BlendFactor::OneMinusSrcAlpha;\n        },\n      ],\n    });\n*/\n\nexport function convertCompareFunction(parameter: string, value: CompareFunction): GLFunction {\n  return map<CompareFunction, GLFunction>(parameter, value, {\n    never: GL.NEVER,\n    less: GL.LESS,\n    equal: GL.EQUAL,\n    'less-equal': GL.LEQUAL,\n    greater: GL.GREATER,\n    'not-equal': GL.NOTEQUAL,\n    'greater-equal': GL.GEQUAL,\n    always: GL.ALWAYS\n  });\n}\n\nexport function convertToCompareFunction(parameter: string, value: GLFunction): CompareFunction {\n  return map<GLFunction, CompareFunction>(parameter, value, {\n    [GL.NEVER]: 'never',\n    [GL.LESS]: 'less',\n    [GL.EQUAL]: 'equal',\n    [GL.LEQUAL]: 'less-equal',\n    [GL.GREATER]: 'greater',\n    [GL.NOTEQUAL]: 'not-equal',\n    [GL.GEQUAL]: 'greater-equal',\n    [GL.ALWAYS]: 'always'\n  });\n}\n\nfunction convertStencilOperation(parameter: string, value: StencilOperation): GL {\n  return map<StencilOperation, GLStencilOp>(parameter, value, {\n    keep: GL.KEEP,\n    zero: GL.ZERO,\n    replace: GL.REPLACE,\n    invert: GL.INVERT,\n    'increment-clamp': GL.INCR,\n    'decrement-clamp': GL.DECR,\n    'increment-wrap': GL.INCR_WRAP,\n    'decrement-wrap': GL.DECR_WRAP\n  });\n}\n\nfunction convertBlendOperationToEquation(\n  parameter: string,\n  value: BlendOperation\n): GLBlendEquation {\n  return map<BlendOperation, GLBlendEquation>(parameter, value, {\n    add: GL.FUNC_ADD,\n    subtract: GL.FUNC_SUBTRACT,\n    'reverse-subtract': GL.FUNC_REVERSE_SUBTRACT,\n    min: GL.MIN,\n    max: GL.MAX\n  });\n}\n\nfunction convertBlendFactorToFunction(parameter: string, value: BlendFactor): GLBlendFunction {\n  return map<BlendFactor, GLBlendFunction>(parameter, value, {\n    one: GL.ONE,\n    zero: GL.ZERO,\n    'src-color': GL.SRC_COLOR,\n    'one-minus-src-color': GL.ONE_MINUS_SRC_COLOR,\n    'dst-color': GL.DST_COLOR,\n    'one-minus-dst-color': GL.ONE_MINUS_DST_COLOR,\n    'src-alpha': GL.SRC_ALPHA,\n    'one-minus-src-alpha': GL.ONE_MINUS_SRC_ALPHA,\n    'dst-alpha': GL.DST_ALPHA,\n    'one-minus-dst-alpha': GL.ONE_MINUS_DST_ALPHA,\n    'src-alpha-saturated': GL.SRC_ALPHA_SATURATE,\n    'constant-color': GL.CONSTANT_COLOR,\n    'one-minus-constant-color': GL.ONE_MINUS_CONSTANT_COLOR,\n    'constant-alpha': GL.CONSTANT_ALPHA,\n    'one-minus-constant-alpha': GL.ONE_MINUS_CONSTANT_ALPHA\n  });\n}\n\nfunction message(parameter: string, value: any): string {\n  return `Illegal parameter ${value} for ${parameter}`;\n}\n\nfunction map<K extends string | number, V>(parameter: string, value: K, valueMap: Record<K, V>): V {\n  if (!(value in valueMap)) {\n    throw new Error(message(parameter, value));\n  }\n  return valueMap[value];\n}\n\nfunction mapBoolean(parameter: string, value: boolean): boolean {\n  return value;\n}\n\n/** Returns true if given object is empty, false otherwise. */\nfunction isObjectEmpty(obj: object): boolean {\n  let isEmpty = true;\n  // @ts-ignore key is unused\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  for (const key in obj) {\n    isEmpty = false;\n    break;\n  }\n  return isEmpty;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// SAMPLER FILTERS\nimport {SamplerProps} from '@luma.gl/core';\nimport {GL, GLSamplerParameters} from '@luma.gl/constants';\nimport {convertCompareFunction} from './device-parameters';\n\n/**\n * Convert WebGPU-style sampler props to WebGL\n * @param props\n * @returns\n */\nexport function convertSamplerParametersToWebGL(props: SamplerProps): GLSamplerParameters {\n  const params: GLSamplerParameters = {};\n  if (props.addressModeU) {\n    params[GL.TEXTURE_WRAP_S] = convertAddressMode(props.addressModeU);\n  }\n  if (props.addressModeV) {\n    params[GL.TEXTURE_WRAP_T] = convertAddressMode(props.addressModeV);\n  }\n  if (props.addressModeW) {\n    params[GL.TEXTURE_WRAP_R] = convertAddressMode(props.addressModeW);\n  }\n  if (props.magFilter) {\n    params[GL.TEXTURE_MAG_FILTER] = convertMaxFilterMode(props.magFilter);\n  }\n  if (props.minFilter || props.mipmapFilter) {\n    // TODO - arbitrary choice of linear?\n    params[GL.TEXTURE_MIN_FILTER] = convertMinFilterMode(\n      props.minFilter || 'linear',\n      props.mipmapFilter\n    );\n  }\n  if (props.lodMinClamp !== undefined) {\n    params[GL.TEXTURE_MIN_LOD] = props.lodMinClamp;\n  }\n  if (props.lodMaxClamp !== undefined) {\n    params[GL.TEXTURE_MAX_LOD] = props.lodMaxClamp;\n  }\n  if (props.type === 'comparison-sampler') {\n    // Setting prop.compare turns this into a comparison sampler\n    params[GL.TEXTURE_COMPARE_MODE] = GL.COMPARE_REF_TO_TEXTURE;\n  }\n  if (props.compare) {\n    params[GL.TEXTURE_COMPARE_FUNC] = convertCompareFunction('compare', props.compare);\n  }\n  // Note depends on WebGL extension\n  if (props.maxAnisotropy) {\n    params[GL.TEXTURE_MAX_ANISOTROPY_EXT] = props.maxAnisotropy;\n  }\n  return params;\n}\n\n// HELPERS\n\n/** Convert address more */\nfunction convertAddressMode(\n  addressMode: 'clamp-to-edge' | 'repeat' | 'mirror-repeat'\n): GL.CLAMP_TO_EDGE | GL.REPEAT | GL.MIRRORED_REPEAT {\n  switch (addressMode) {\n    case 'clamp-to-edge':\n      return GL.CLAMP_TO_EDGE;\n    case 'repeat':\n      return GL.REPEAT;\n    case 'mirror-repeat':\n      return GL.MIRRORED_REPEAT;\n  }\n}\n\nfunction convertMaxFilterMode(maxFilter: 'nearest' | 'linear'): GL.NEAREST | GL.LINEAR {\n  switch (maxFilter) {\n    case 'nearest':\n      return GL.NEAREST;\n    case 'linear':\n      return GL.LINEAR;\n  }\n}\n\n/**\n * WebGPU has separate min filter and mipmap filter,\n * WebGL is combined and effectively offers 6 options\n */\nfunction convertMinFilterMode(\n  minFilter: 'nearest' | 'linear',\n  mipmapFilter: 'none' | 'nearest' | 'linear' = 'none'\n):\n  | GL.NEAREST\n  | GL.LINEAR\n  | GL.NEAREST_MIPMAP_NEAREST\n  | GL.LINEAR_MIPMAP_NEAREST\n  | GL.NEAREST_MIPMAP_LINEAR\n  | GL.LINEAR_MIPMAP_LINEAR {\n  if (!mipmapFilter) {\n    return convertMaxFilterMode(minFilter);\n  }\n  switch (mipmapFilter) {\n    case 'none':\n      return convertMaxFilterMode(minFilter);\n    case 'nearest':\n      return minFilter === 'nearest' ? GL.NEAREST_MIPMAP_NEAREST : GL.NEAREST_MIPMAP_LINEAR;\n    case 'linear':\n      return minFilter === 'nearest' ? GL.LINEAR_MIPMAP_NEAREST : GL.LINEAR_MIPMAP_LINEAR;\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Sampler, SamplerProps} from '@luma.gl/core';\nimport {GL, GLSamplerParameters} from '@luma.gl/constants';\nimport {convertSamplerParametersToWebGL} from '../converters/sampler-parameters';\nimport type {WebGLDevice} from '../webgl-device';\n\n/**\n * Sampler object -\n * so that they can be set directly on the texture\n * https://github.com/WebGLSamples/WebGL2Samples/blob/master/samples/sampler_object.html\n */\nexport class WEBGLSampler extends Sampler {\n  readonly device: WebGLDevice;\n  readonly handle: WebGLSampler;\n  readonly parameters: GLSamplerParameters;\n\n  constructor(device: WebGLDevice, props: SamplerProps) {\n    super(device, props);\n    this.device = device;\n    this.parameters = convertSamplerParametersToWebGL(props);\n    this.handle = this.handle || this.device.gl.createSampler();\n    this._setSamplerParameters(this.parameters);\n  }\n\n  override destroy(): void {\n    if (this.handle) {\n      this.device.gl.deleteSampler(this.handle);\n      // @ts-expect-error read-only/undefined\n      this.handle = undefined;\n    }\n  }\n\n  override toString(): string {\n    return `Sampler(${this.id},${JSON.stringify(this.props)})`;\n  }\n\n  /** Set sampler parameters on the sampler */\n  private _setSamplerParameters(parameters: GLSamplerParameters): void {\n    for (const [pname, value] of Object.entries(parameters)) {\n      // Apparently there are integer/float conversion issues requires two parameter setting functions in JavaScript.\n      // For now, pick the float version for parameters specified as GLfloat.\n      const param = Number(pname) as GL.TEXTURE_MIN_LOD | GL.TEXTURE_MAX_LOD;\n      switch (param) {\n        case GL.TEXTURE_MIN_LOD:\n        case GL.TEXTURE_MAX_LOD:\n          this.device.gl.samplerParameterf(this.handle, param, value);\n          break;\n        default:\n          this.device.gl.samplerParameteri(this.handle, param, value);\n          break;\n      }\n    }\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device, TextureViewProps} from '@luma.gl/core';\n// import {decodeTextureFormat} from '@luma.gl/core';\nimport {TextureView, Texture} from '@luma.gl/core';\n\nimport {WebGLDevice} from '../webgl-device';\nimport {WEBGLTexture} from './webgl-texture';\n\nexport class WEBGLTextureView extends TextureView {\n  readonly device: WebGLDevice;\n  readonly gl: WebGL2RenderingContext;\n  readonly handle: null; // Does not have a WebGL representation\n  readonly texture: WEBGLTexture;\n\n  constructor(device: Device, props: TextureViewProps & {texture: WEBGLTexture}) {\n    super(device, {...Texture.defaultProps, ...props});\n\n    this.device = device as WebGLDevice;\n    this.gl = this.device.gl;\n    this.handle = null;\n    this.texture = props.texture;\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {TypedArray, TypedArrayConstructor} from '@math.gl/types';\nimport {GL, GLDataType, GLPixelType} from '@luma.gl/constants';\n\nconst ERR_TYPE_DEDUCTION = 'Failed to deduce GL constant from typed array';\n\n/**\n * Converts TYPED ARRAYS to corresponding GL constant\n * Used to auto deduce gl parameter types\n * @deprecated Use getDataTypeFromTypedArray\n * @param arrayOrType\n * @returns\n */\nexport function getGLTypeFromTypedArray(arrayOrType: TypedArray): GLDataType {\n  // If typed array, look up constructor\n  const type = ArrayBuffer.isView(arrayOrType) ? arrayOrType.constructor : arrayOrType;\n  switch (type) {\n    case Float32Array:\n      return GL.FLOAT;\n    case Uint16Array:\n      return GL.UNSIGNED_SHORT;\n    case Uint32Array:\n      return GL.UNSIGNED_INT;\n    case Uint8Array:\n      return GL.UNSIGNED_BYTE;\n    case Uint8ClampedArray:\n      return GL.UNSIGNED_BYTE;\n    case Int8Array:\n      return GL.BYTE;\n    case Int16Array:\n      return GL.SHORT;\n    case Int32Array:\n      return GL.INT;\n    default:\n      throw new Error(ERR_TYPE_DEDUCTION);\n  }\n}\n\n/**\n * Converts GL constant to corresponding TYPED ARRAY\n * Used to auto deduce gl parameter types\n * @deprecated Use getTypedArrayFromDataType\n * @param glType\n * @param param1\n * @returns\n */\n// eslint-disable-next-line complexity\nexport function getTypedArrayFromGLType(\n  glType: GLDataType | GLPixelType,\n  options?: {\n    clamped?: boolean;\n  }\n): TypedArrayConstructor {\n  const {clamped = true} = options || {};\n  // Sorted in some order of likelihood to reduce amount of comparisons\n  switch (glType) {\n    case GL.FLOAT:\n      return Float32Array;\n    case GL.UNSIGNED_SHORT:\n    case GL.UNSIGNED_SHORT_5_6_5:\n    case GL.UNSIGNED_SHORT_4_4_4_4:\n    case GL.UNSIGNED_SHORT_5_5_5_1:\n      return Uint16Array;\n    case GL.UNSIGNED_INT:\n      return Uint32Array;\n    case GL.UNSIGNED_BYTE:\n      return clamped ? Uint8ClampedArray : Uint8Array;\n    case GL.BYTE:\n      return Int8Array;\n    case GL.SHORT:\n      return Int16Array;\n    case GL.INT:\n      return Int32Array;\n    default:\n      throw new Error('Failed to deduce typed array type from GL constant');\n  }\n}\n\n/**\n * Flip rows (can be used on arrays returned from `Framebuffer.readPixels`)\n * https: *stackoverflow.com/questions/41969562/\n * how-can-i-flip-the-result-of-webglrenderingcontext-readpixels\n * @param param0\n */\nexport function flipRows(options: {\n  data: TypedArray;\n  width: number;\n  height: number;\n  bytesPerPixel?: number;\n  temp?: Uint8Array;\n}): void {\n  const {data, width, height, bytesPerPixel = 4, temp} = options;\n  const bytesPerRow = width * bytesPerPixel;\n\n  // make a temp buffer to hold one row\n  const tempBuffer = temp || new Uint8Array(bytesPerRow);\n  for (let y = 0; y < height / 2; ++y) {\n    const topOffset = y * bytesPerRow;\n    const bottomOffset = (height - y - 1) * bytesPerRow;\n    // make copy of a row on the top half\n    tempBuffer.set(data.subarray(topOffset, topOffset + bytesPerRow));\n    // copy a row from the bottom half to the top\n    data.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n    // copy the copy of the top half row to the bottom half\n    data.set(tempBuffer, bottomOffset);\n  }\n}\n\nexport function scalePixels(options: {data: TypedArray; width: number; height: number}): {\n  data: Uint8Array;\n  width: number;\n  height: number;\n} {\n  const {data, width, height} = options;\n  const newWidth = Math.round(width / 2);\n  const newHeight = Math.round(height / 2);\n  const newData = new Uint8Array(newWidth * newHeight * 4);\n  for (let y = 0; y < newHeight; y++) {\n    for (let x = 0; x < newWidth; x++) {\n      for (let c = 0; c < 4; c++) {\n        newData[(y * newWidth + x) * 4 + c] = data[(y * 2 * width + x * 2) * 4 + c];\n      }\n    }\n  }\n  return {data: newData, width: newWidth, height: newHeight};\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {GL} from '@luma.gl/constants';\n\n// Returns number of components in a specific readPixels WebGL format\nexport function glFormatToComponents(format) {\n  switch (format) {\n    case GL.ALPHA:\n    case GL.R32F:\n    case GL.RED:\n    case GL.RED_INTEGER:\n      return 1;\n    case GL.RG32I:\n    case GL.RG32UI:\n    case GL.RG32F:\n    case GL.RG_INTEGER:\n    case GL.RG:\n      return 2;\n    case GL.RGB:\n    case GL.RGB_INTEGER:\n    case GL.RGB32F:\n      return 3;\n    case GL.RGBA:\n    case GL.RGBA_INTEGER:\n    case GL.RGBA32F:\n      return 4;\n    // TODO: Add support for additional WebGL2 formats\n    default:\n      return 0;\n  }\n}\n\n// Return byte count for given readPixels WebGL type\nexport function glTypeToBytes(type) {\n  switch (type) {\n    case GL.UNSIGNED_BYTE:\n      return 1;\n    case GL.UNSIGNED_SHORT_5_6_5:\n    case GL.UNSIGNED_SHORT_4_4_4_4:\n    case GL.UNSIGNED_SHORT_5_5_5_1:\n      return 2;\n    case GL.FLOAT:\n      return 4;\n    // TODO: Add support for additional WebGL2 types\n    default:\n      return 0;\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {GLParameters, setGLParameters} from '../parameters/unified-parameter-api';\nimport {WebGLStateTracker} from './webgl-state-tracker';\n\n/**\n * Execute a function with a set of temporary WebGL parameter overrides\n * - Saves current \"global\" WebGL context settings\n * - Sets the supplies WebGL context parameters,\n * - Executes supplied function\n * - Restores parameters\n * - Returns the return value of the supplied function\n */\nexport function withGLParameters(\n  gl: WebGL2RenderingContext,\n  parameters: GLParameters & {nocatch?: boolean},\n  func: any\n): any {\n  if (isObjectEmpty(parameters)) {\n    // Avoid setting state if no parameters provided. Just call and return\n    return func(gl);\n  }\n\n  const {nocatch = true} = parameters;\n\n  const webglState = WebGLStateTracker.get(gl);\n  webglState.push();\n  setGLParameters(gl, parameters);\n\n  // Setup is done, call the function\n  let value;\n\n  if (nocatch) {\n    // Avoid try catch to minimize stack size impact for safe execution paths\n    value = func(gl);\n    webglState.pop();\n  } else {\n    // Wrap in a try-catch to ensure that parameters are restored on exceptions\n    try {\n      value = func(gl);\n    } finally {\n      webglState.pop();\n    }\n  }\n\n  return value;\n}\n\n// Helpers\n\n// Returns true if given object is empty, false otherwise.\nfunction isObjectEmpty(object) {\n  // @ts-ignore - dummy key variable\n  for (const key in object) {\n    return false;\n  }\n  return true;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n//\n// WebGL... the texture API from hell... hopefully made simpler\n//\n\nimport {TypedArray} from '@math.gl/types';\nimport type {ExternalImage} from '@luma.gl/core';\nimport {Buffer, Texture, Framebuffer, FramebufferProps} from '@luma.gl/core';\nimport {\n  GL,\n  GLTextureTarget,\n  GLTextureCubeMapTarget,\n  GLTexelDataFormat,\n  GLPixelType,\n  GLDataType\n} from '@luma.gl/constants';\n\nimport {WEBGLFramebuffer} from '../resources/webgl-framebuffer';\nimport {getGLTypeFromTypedArray, getTypedArrayFromGLType} from './typed-array-utils';\nimport {glFormatToComponents, glTypeToBytes} from './format-utils';\nimport {WEBGLBuffer} from '../resources/webgl-buffer';\nimport {WEBGLTexture} from '../resources/webgl-texture';\nimport {withGLParameters} from '../../context/state-tracker/with-parameters';\n\n/** A \"border\" parameter is required in many WebGL texture APIs, but must always be 0... */\nconst BORDER = 0;\n\n/**\n * Options for setting data into a texture\n */\nexport type WebGLSetTextureOptions = {\n  dimension: '1d' | '2d' | '2d-array' | 'cube' | 'cube-array' | '3d';\n  height: number;\n  width: number;\n  depth: number;\n  mipLevel?: number;\n  glTarget: GLTextureTarget;\n  glInternalFormat: GL;\n  glFormat: GLTexelDataFormat;\n  glType: GLPixelType;\n  compressed?: boolean;\n  byteOffset?: number;\n  byteLength?: number;\n};\n\n/**\n * Options for copying an image or data into a texture\n *\n * @param {GLenum} format - internal format of image data.\n * @param {GLenum} type\n *  - format of array (autodetect from type) or\n *  - (WEBGL2) format of buffer or ArrayBufferView\n * @param {GLenum} dataFormat - format of image data.\n * @param {Number} offset - (WEBGL2) offset from start of buffer\n * @parameters - temporary settings to be applied, can be used to supply pixel store settings.\n */\nexport type WebGLCopyTextureOptions = {\n  dimension: '1d' | '2d' | '2d-array' | 'cube' | 'cube-array' | '3d';\n  /** mip level to be updated */\n  mipLevel?: number;\n  /** width of the sub image to be updated */\n  width: number;\n  /** height of the sub image to be updated */\n  height: number;\n  /** depth of texture to be updated */\n  depth?: number;\n  /** xOffset from where texture to be updated */\n  x?: number;\n  /** yOffset from where texture to be updated */\n  y?: number;\n  /** yOffset from where texture to be updated */\n  z?: number;\n\n  glTarget: GLTextureTarget;\n  glInternalFormat: GL;\n  glFormat: GL;\n  glType: GL;\n  compressed?: boolean;\n  byteOffset?: number;\n  byteLength?: number;\n};\n\n/**\n * Initializes a texture memory space\n * Clear all the textures and mip levels of a two-dimensional or array texture at the same time.\n * On some implementations faster than repeatedly setting levels\n *\n * @note From WebGL 2 spec section 3.7.6:\n * @see https://registry.khronos.org/webgl/specs/latest/2.0/\n * - The image contents are set as if a buffer of sufficient size initialized to 0 would be passed to each level's texImage2D/3D\n * - texStorage2D should be considered a preferred alternative to texImage2D. It may have lower memory costs than texImage2D in some implementations.\n * - Once texStorage*D has been called, the texture is immutable and can only be updated with texSubImage*(), not texImage()\n */\nexport function initializeTextureStorage(\n  gl: WebGL2RenderingContext,\n  levels: number,\n  options: WebGLSetTextureOptions\n): void {\n  const {dimension, width, height, depth = 0} = options;\n  const {glInternalFormat} = options;\n  const glTarget = options.glTarget; // getWebGLCubeFaceTarget(options.glTarget, dimension, depth);\n  switch (dimension) {\n    case '2d-array':\n    case '3d':\n      gl.texStorage3D(glTarget, levels, glInternalFormat, width, height, depth);\n      break;\n\n    default:\n      gl.texStorage2D(glTarget, levels, glInternalFormat, width, height);\n  }\n}\n\n/**\n * Copy a region of compressed data from a GPU memory buffer into this texture.\n */\nexport function copyExternalImageToMipLevel(\n  gl: WebGL2RenderingContext,\n  handle: WebGLTexture,\n  image: ExternalImage,\n  options: WebGLCopyTextureOptions & {flipY?: boolean}\n): void {\n  const {width, height} = options;\n  const {dimension, depth = 0, mipLevel = 0} = options;\n  const {x = 0, y = 0, z = 0} = options;\n  const {glFormat, glType} = options;\n\n  const glTarget = getWebGLCubeFaceTarget(options.glTarget, dimension, depth);\n\n  const glParameters = options.flipY ? {[GL.UNPACK_FLIP_Y_WEBGL]: true} : {};\n  withGLParameters(gl, glParameters, () => {\n    switch (dimension) {\n      case '2d-array':\n      case '3d':\n        gl.bindTexture(glTarget, handle);\n        // prettier-ignore\n        gl.texSubImage3D(glTarget, mipLevel, x, y, z, width, height, depth, glFormat, glType, image);\n        gl.bindTexture(glTarget, null);\n        break;\n\n      case '2d':\n      case 'cube':\n        gl.bindTexture(glTarget, handle);\n        // prettier-ignore\n        gl.texSubImage2D(glTarget, mipLevel, x, y, width, height, glFormat, glType, image);\n        gl.bindTexture(glTarget, null);\n        break;\n\n      default:\n        throw new Error(dimension);\n    }\n  });\n}\n\n/**\n * Copy a region of data from a CPU memory buffer into this texture.\n */\nexport function copyCPUDataToMipLevel(\n  gl: WebGL2RenderingContext,\n  typedArray: TypedArray,\n  options: WebGLCopyTextureOptions\n): void {\n  const {dimension, width, height, depth = 0, mipLevel = 0, byteOffset = 0} = options;\n  const {x = 0, y = 0, z = 0} = options;\n  const {glFormat, glType, compressed} = options;\n  const glTarget = getWebGLCubeFaceTarget(options.glTarget, dimension, depth);\n\n  // gl.bindTexture(glTarget, null);\n\n  switch (dimension) {\n    case '2d-array':\n    case '3d':\n      if (compressed) {\n        // prettier-ignore\n        gl.compressedTexSubImage3D(glTarget, mipLevel, x, y, z, width, height, depth, glFormat, typedArray, byteOffset); // , byteLength\n      } else {\n        // prettier-ignore\n        gl.texSubImage3D(glTarget, mipLevel, x, y, z, width, height, depth, glFormat, glType, typedArray, byteOffset); // , byteLength\n      }\n      break;\n\n    case '2d':\n    case 'cube':\n      if (compressed) {\n        // prettier-ignore\n        gl.compressedTexSubImage2D(glTarget, mipLevel, x, y, width, height, glFormat, typedArray, byteOffset); // , byteLength\n      } else {\n        // prettier-ignore\n        gl.texSubImage2D(glTarget, mipLevel, x, y, width, height, glFormat, glType, typedArray, byteOffset); // , byteLength\n      }\n      break;\n\n    default:\n      throw new Error(dimension);\n  }\n}\n\n/**\n * Copy a region of compressed data from a GPU memory buffer into this texture.\n */\nexport function copyGPUBufferToMipLevel(\n  gl: WebGL2RenderingContext,\n  webglBuffer: WebGLBuffer,\n  byteLength: number,\n  options: WebGLCopyTextureOptions\n): void {\n  const {dimension, width, height, depth = 0, mipLevel = 0, byteOffset = 0} = options;\n  const {x = 0, y = 0, z = 0} = options;\n  const {glFormat, glType, compressed} = options;\n  const glTarget = getWebGLCubeFaceTarget(options.glTarget, dimension, depth);\n\n  gl.bindBuffer(GL.PIXEL_UNPACK_BUFFER, webglBuffer);\n\n  switch (dimension) {\n    case '2d-array':\n    case '3d':\n      // 3 dimensional textures requires 3D texture functions\n      if (compressed) {\n        // TODO enable extension?\n        // prettier-ignore\n        gl.compressedTexSubImage3D(glTarget, mipLevel, x, y, z, width, height, depth, glFormat, byteLength, byteOffset);\n      } else {\n        // prettier-ignore\n        gl.texSubImage3D(glTarget, mipLevel, x, y, z, width, height, depth, glFormat, glType, byteOffset);\n      }\n      break;\n\n    case '2d':\n    case 'cube':\n      if (compressed) {\n        // prettier-ignore\n        gl.compressedTexSubImage2D(glTarget, mipLevel, x, y, width, height, glFormat, byteLength, byteOffset);\n      } else {\n        // prettier-ignore\n        gl.texSubImage2D(glTarget, mipLevel, x, y, width, height, BORDER, glFormat, byteOffset);\n      }\n      break;\n\n    default:\n      throw new Error(dimension);\n  }\n}\n\n// INTERNAL HELPERS\n\n/** Convert a WebGPU style texture constant to a WebGL style texture constant */\nexport function getWebGLTextureTarget(\n  dimension: '1d' | '2d' | '2d-array' | 'cube' | 'cube-array' | '3d'\n): GLTextureTarget {\n  // prettier-ignore\n  switch (dimension) {\n    case '1d': break; // not supported in any WebGL version\n    case '2d': return GL.TEXTURE_2D; // supported in WebGL1\n    case '3d': return GL.TEXTURE_3D; // supported in WebGL2\n    case 'cube': return GL.TEXTURE_CUBE_MAP; // supported in WebGL1\n    case '2d-array': return GL.TEXTURE_2D_ARRAY; // supported in WebGL2\n    case 'cube-array': break; // not supported in any WebGL version\n  }\n  throw new Error(dimension);\n}\n\n/**\n * In WebGL, cube maps specify faces by overriding target instead of using the depth parameter.\n * @note We still bind the texture using GL.TEXTURE_CUBE_MAP, but we need to use the face-specific target when setting mip levels.\n * @returns glTarget unchanged, if dimension !== 'cube'.\n */\nexport function getWebGLCubeFaceTarget(\n  glTarget: GLTextureTarget,\n  dimension: '1d' | '2d' | '2d-array' | 'cube' | 'cube-array' | '3d',\n  level: number\n): GLTextureTarget | GLTextureCubeMapTarget {\n  return dimension === 'cube' ? GL.TEXTURE_CUBE_MAP_POSITIVE_X + level : glTarget;\n}\n\n// texImage methods\n\n/**\n * Clear a texture mip level.\n * Wrapper for the messy WebGL texture API\n *\nexport function clearMipLevel(gl: WebGL2RenderingContext, options: WebGLSetTextureOptions): void {\n  const {dimension, width, height, depth = 0, mipLevel = 0} = options;\n  const {glInternalFormat, glFormat, glType, compressed} = options;\n  const glTarget = getWebGLCubeFaceTarget(options.glTarget, dimension, depth);\n\n  switch (dimension) {\n    case '2d-array':\n    case '3d':\n      if (compressed) {\n        // prettier-ignore\n        gl.compressedTexImage3D(glTarget, mipLevel, glInternalFormat, width, height, depth, BORDER, null);\n      } else {\n        // prettier-ignore\n        gl.texImage3D( glTarget, mipLevel, glInternalFormat, width, height, depth, BORDER, glFormat, glType, null);\n      }\n      break;\n\n    case '2d':\n    case 'cube':\n      if (compressed) {\n        // prettier-ignore\n        gl.compressedTexImage2D(glTarget, mipLevel, glInternalFormat, width, height, BORDER, null);\n      } else {\n        // prettier-ignore\n        gl.texImage2D(glTarget, mipLevel, glInternalFormat, width, height, BORDER, glFormat, glType, null);\n      }\n      break;\n\n    default:\n      throw new Error(dimension);\n  }\n}\n  */\n\n/**\n * Set a texture mip level to the contents of an external image.\n * Wrapper for the messy WebGL texture API\n * @note Corresponds to WebGPU device.queue.copyExternalImageToTexture()\n *\nexport function setMipLevelFromExternalImage(\n  gl: WebGL2RenderingContext,\n  image: ExternalImage,\n  options: WebGLSetTextureOptions\n): void {\n  const {dimension, width, height, depth = 0, level = 0} = options;\n  const {glInternalFormat, glType} = options;\n\n  const glTarget = getWebGLCubeFaceTarget(options.glTarget, dimension, depth);\n\n  // TODO - we can't change texture width (due to WebGPU limitations) -\n  // and the width/heigh of an external image is implicit, so why do we need to extract it?\n  // So what width height do we supply? The image size or the texture size?\n  // const {width, height} = Texture.getExternalImageSize(image);\n\n  switch (dimension) {\n    case '2d-array':\n    case '3d':\n      // prettier-ignore\n      gl.texImage3D(glTarget, level, glInternalFormat, width, height, depth, BORDER, glInternalFormat, glType, image);\n      break;\n\n    case '2d':\n    case 'cube':\n      // prettier-ignore\n      gl.texImage2D(glTarget, level, glInternalFormat, width, height, BORDER, glInternalFormat, glType, image);\n      break;\n\n    default:\n      throw new Error(dimension);\n  }\n}\n\n/**\n * Set a texture mip level from CPU memory\n * Wrapper for the messy WebGL texture API\n * @note Not available (directly) in WebGPU\n *\nexport function setMipLevelFromTypedArray(\n  gl: WebGL2RenderingContext,\n  data: TypedArray,\n  parameters: {},\n  options: {\n    dimension: '1d' | '2d' | '2d-array' | 'cube' | 'cube-array' | '3d';\n    height: number;\n    width: number;\n    depth?: number;\n    level?: number;\n    offset?: number;\n    glTarget: GLTextureTarget;\n    glInternalFormat: GL;\n    glFormat: GL;\n    glType: GL;\n    compressed?: boolean;\n  }\n): void {\n  const {dimension, width, height, depth = 0, level = 0, offset = 0} = options;\n  const {glInternalFormat, glFormat, glType, compressed} = options;\n\n  const glTarget = getWebGLCubeFaceTarget(options.glTarget, dimension, depth);\n\n  withGLParameters(gl, parameters, () => {\n    switch (dimension) {\n      case '2d-array':\n      case '3d':\n        if (compressed) {\n          // prettier-ignore\n          gl.compressedTexImage3D(glTarget, level, glInternalFormat, width, height, depth, BORDER, data);\n        } else {\n          // prettier-ignore\n          gl.texImage3D( glTarget, level, glInternalFormat, width, height, depth, BORDER, glFormat, glType, data);\n        }\n        break;\n\n      case '2d':\n        if (compressed) {\n          // prettier-ignore\n          gl.compressedTexImage2D(glTarget, level, glInternalFormat, width, height, BORDER, data);\n        } else {\n          // prettier-ignore\n          gl.texImage2D( glTarget, level, glInternalFormat, width, height, BORDER, glFormat, glType, data, offset);\n        }\n        break;\n\n      default:\n        throw new Error(dimension);\n    }\n  });\n}\n\n/**\n   * Set a texture level from CPU memory\n   * @note Not available (directly) in WebGPU\n  _setMipLevelFromTypedArray(\n    depth: number,\n    level: number,\n    data: TextureLevelData,\n    offset = 0,\n    parameters\n  ): void {\n    withGLParameters(this.gl, parameters, () => {\n      switch (this.props.dimension) {\n        case '2d-array':\n        case '3d':\n          if (this.compressed) {\n            // prettier-ignore\n            this.device.gl.compressedTexImage3D(this.glTarget, level, this.glInternalFormat, data.width, data.height, depth, BORDER, data.data);\n          } else {\n            // prettier-ignore\n            this.gl.texImage3D( this.glTarget, level, this.glInternalFormat, this.width, this.height, depth, BORDER, this.glFormat, this.glType, data.data);\n          }\n          break;\n\n        case '2d':\n          if (this.compressed) {\n            // prettier-ignore\n            this.device.gl.compressedTexImage2D(this.glTarget, level, this.glInternalFormat, data.width, data.height, BORDER, data.data);\n          } else {\n            // prettier-ignore\n            this.device.gl.texImage2D( this.glTarget, level, this.glInternalFormat, this.width, this.height, BORDER, this.glFormat, this.glType, data.data, offset);\n          }\n          break;\n\n        default:\n          throw new Error(this.props.dimension);\n      }\n    });\n  }\n\n * Set a texture level from a GPU buffer\n *\nexport function setMipLevelFromGPUBuffer(\n  gl: WebGL2RenderingContext,\n  buffer: Buffer,\n  options: WebGLSetTextureOptions\n): void {\n  const {dimension, width, height, depth = 0, level = 0, byteOffset = 0} = options;\n  const {glInternalFormat, glFormat, glType, compressed} = options;\n  const glTarget = getWebGLCubeFaceTarget(options.glTarget, dimension, depth);\n\n  const webglBuffer = buffer as WEBGLBuffer;\n  const imageSize = buffer.byteLength;\n\n  // In WebGL the source buffer is not a parameter. Instead it needs to be bound to a special bind point\n  gl.bindBuffer(GL.PIXEL_UNPACK_BUFFER, webglBuffer.handle);\n\n  switch (dimension) {\n    case '2d-array':\n    case '3d':\n      if (compressed) {\n        // prettier-ignore\n        gl.compressedTexImage3D(glTarget, level, glInternalFormat, width, height, depth, BORDER, imageSize, byteOffset);\n      } else {\n        // prettier-ignore\n        gl.texImage3D(glTarget, level, glInternalFormat, width, height, depth, BORDER, glFormat, glType, byteOffset);\n      }\n      break;\n\n    case '2d':\n      if (compressed) {\n        // prettier-ignore\n        gl.compressedTexImage2D(glTarget, level, glInternalFormat, width, height, BORDER, imageSize, byteOffset);\n      } else {\n        // prettier-ignore\n        gl.texImage2D(glTarget, level, glInternalFormat, width, height, BORDER, glFormat, glType, byteOffset);\n      }\n      break;\n\n    default:\n      throw new Error(dimension);\n  }\n\n  gl.bindBuffer(GL.PIXEL_UNPACK_BUFFER, null);\n}\n*/\nexport type ReadPixelsToArrayOptions = {\n  sourceX?: number;\n  sourceY?: number;\n  sourceFormat?: number;\n  sourceAttachment?: number;\n  target?: Uint8Array | Uint16Array | Float32Array;\n  // following parameters are auto deduced if not provided\n  sourceWidth?: number;\n  sourceHeight?: number;\n  sourceDepth?: number;\n  sourceType?: number;\n};\n\nexport type ReadPixelsToBufferOptions = {\n  sourceX?: number;\n  sourceY?: number;\n  sourceFormat?: number;\n  target?: Buffer; // A new Buffer object is created when not provided.\n  targetByteOffset?: number; // byte offset in buffer object\n  // following parameters are auto deduced if not provided\n  sourceWidth?: number;\n  sourceHeight?: number;\n  sourceType?: number;\n};\n\n/**\n * Copies data from a type  or a Texture object into ArrayBuffer object.\n * App can provide targetPixelArray or have it auto allocated by this method\n *  newly allocated by this method unless provided by app.\n * @deprecated Use CommandEncoder.copyTextureToBuffer and Buffer.read\n * @note Slow requires roundtrip to GPU\n *\n * @param source\n * @param options\n * @returns pixel array,\n */\nexport function readPixelsToArray(\n  source: Framebuffer | Texture,\n  options?: ReadPixelsToArrayOptions\n): Uint8Array | Uint16Array | Float32Array {\n  const {\n    sourceX = 0,\n    sourceY = 0,\n    sourceAttachment = 0 // TODO - support gl.readBuffer\n  } = options || {};\n  let {\n    target = null,\n    // following parameters are auto deduced if not provided\n    sourceWidth,\n    sourceHeight,\n    sourceDepth,\n    sourceFormat,\n    sourceType\n  } = options || {};\n\n  const {framebuffer, deleteFramebuffer} = getFramebuffer(source);\n  // assert(framebuffer);\n  const {gl, handle} = framebuffer;\n\n  sourceWidth ||= framebuffer.width;\n  sourceHeight ||= framebuffer.height;\n\n  const texture = framebuffer.colorAttachments[sourceAttachment]?.texture;\n  if (!texture) {\n    throw new Error(`Invalid framebuffer attachment ${sourceAttachment}`);\n  }\n  sourceDepth = texture?.depth || 1;\n\n  sourceFormat ||= texture?.glFormat || GL.RGBA;\n  // Deduce the type from color attachment if not provided.\n  sourceType ||= texture?.glType || GL.UNSIGNED_BYTE;\n\n  // Deduce type and allocated pixelArray if needed\n  target = getPixelArray(target, sourceType, sourceFormat, sourceWidth, sourceHeight, sourceDepth);\n\n  // Pixel array available, if necessary, deduce type from it.\n  sourceType = sourceType || getGLTypeFromTypedArray(target);\n\n  // Note: luma.gl overrides bindFramebuffer so that we can reliably restore the previous framebuffer (this is the only function for which we do that)\n  const prevHandle = gl.bindFramebuffer(\n    GL.FRAMEBUFFER,\n    handle\n  ) as unknown as WebGLFramebuffer | null;\n\n  // Select the color attachment to read from\n  gl.readBuffer(gl.COLOR_ATTACHMENT0 + sourceAttachment);\n\n  // There is a lot of hedging in the WebGL2 spec about what formats are guaranteed to be readable\n  // (It should always be possible to read RGBA/UNSIGNED_BYTE, but most other combinations are not guaranteed)\n  // Querying is possible but expensive:\n  // const {device} = framebuffer;\n  // texture.glReadFormat ||= gl.getParameter(gl.IMPLEMENTATION_COLOR_READ_FORMAT);\n  // texture.glReadType ||= gl.getParameter(gl.IMPLEMENTATION_COLOR_READ_TYPE);\n  // console.log('params', device.getGLKey(texture.glReadFormat), device.getGLKey(texture.glReadType));\n\n  gl.readPixels(sourceX, sourceY, sourceWidth, sourceHeight, sourceFormat, sourceType, target);\n  gl.readBuffer(gl.COLOR_ATTACHMENT0);\n  gl.bindFramebuffer(GL.FRAMEBUFFER, prevHandle || null);\n\n  if (deleteFramebuffer) {\n    framebuffer.destroy();\n  }\n\n  return target;\n}\n\n/**\n * Copies data from a Framebuffer or a Texture object into a Buffer object.\n * NOTE: doesn't wait for copy to be complete, it programs GPU to perform a DMA transffer.\n * @deprecated Use CommandEncoder\n * @param source\n * @param options\n */\nexport function readPixelsToBuffer(\n  source: Framebuffer | Texture,\n  options?: ReadPixelsToBufferOptions\n): WEBGLBuffer {\n  const {\n    target,\n    sourceX = 0,\n    sourceY = 0,\n    sourceFormat = GL.RGBA,\n    targetByteOffset = 0\n  } = options || {};\n  // following parameters are auto deduced if not provided\n  let {sourceWidth, sourceHeight, sourceType} = options || {};\n  const {framebuffer, deleteFramebuffer} = getFramebuffer(source);\n  // assert(framebuffer);\n  sourceWidth = sourceWidth || framebuffer.width;\n  sourceHeight = sourceHeight || framebuffer.height;\n\n  // Asynchronous read (PIXEL_PACK_BUFFER) is WebGL2 only feature\n  const webglFramebuffer = framebuffer;\n\n  // deduce type if not available.\n  sourceType = sourceType || GL.UNSIGNED_BYTE;\n\n  let webglBufferTarget = target as unknown as WEBGLBuffer | undefined;\n  if (!webglBufferTarget) {\n    // Create new buffer with enough size\n    const components = glFormatToComponents(sourceFormat);\n    const byteCount = glTypeToBytes(sourceType);\n    const byteLength = targetByteOffset + sourceWidth * sourceHeight * components * byteCount;\n    webglBufferTarget = webglFramebuffer.device.createBuffer({byteLength});\n  }\n\n  // TODO(donmccurdy): Do we have tests to confirm this is working?\n  const commandEncoder = source.device.createCommandEncoder();\n  commandEncoder.copyTextureToBuffer({\n    sourceTexture: source as Texture,\n    width: sourceWidth,\n    height: sourceHeight,\n    origin: [sourceX, sourceY],\n    destinationBuffer: webglBufferTarget,\n    byteOffset: targetByteOffset\n  });\n  commandEncoder.destroy();\n\n  if (deleteFramebuffer) {\n    framebuffer.destroy();\n  }\n\n  return webglBufferTarget;\n}\n\n/**\n * Copy a rectangle from a Framebuffer or Texture object into a texture (at an offset)\n * @deprecated Use CommandEncoder\n */\n// eslint-disable-next-line complexity, max-statements\nexport function copyToTexture(\n  sourceTexture: Framebuffer | Texture,\n  destinationTexture: Texture | GL,\n  options?: {\n    sourceX?: number;\n    sourceY?: number;\n\n    targetX?: number;\n    targetY?: number;\n    targetZ?: number;\n    targetMipmaplevel?: number;\n    targetInternalFormat?: number;\n\n    width?: number; // defaults to target width\n    height?: number; // defaults to target height\n  }\n): Texture {\n  const {\n    sourceX = 0,\n    sourceY = 0,\n    // attachment = GL.COLOR_ATTACHMENT0, // TODO - support gl.readBuffer\n    targetMipmaplevel = 0,\n    targetInternalFormat = GL.RGBA\n  } = options || {};\n  let {\n    targetX,\n    targetY,\n    targetZ,\n    width, // defaults to target width\n    height // defaults to target height\n  } = options || {};\n\n  const {framebuffer, deleteFramebuffer} = getFramebuffer(sourceTexture);\n  // assert(framebuffer);\n  const webglFramebuffer = framebuffer;\n  const {device, handle} = webglFramebuffer;\n  const isSubCopy =\n    typeof targetX !== 'undefined' ||\n    typeof targetY !== 'undefined' ||\n    typeof targetZ !== 'undefined';\n  targetX = targetX || 0;\n  targetY = targetY || 0;\n  targetZ = targetZ || 0;\n  const prevHandle = device.gl.bindFramebuffer(GL.FRAMEBUFFER, handle);\n  // TODO - support gl.readBuffer (WebGL2 only)\n  // const prevBuffer = gl.readBuffer(attachment);\n  // assert(target);\n  let texture: WEBGLTexture | null = null;\n  let textureTarget: GL;\n  if (destinationTexture instanceof WEBGLTexture) {\n    texture = destinationTexture;\n    width = Number.isFinite(width) ? width : texture.width;\n    height = Number.isFinite(height) ? height : texture.height;\n    texture?.bind(0);\n    // @ts-ignore\n    textureTarget = texture.target;\n  } else {\n    // @ts-ignore\n    textureTarget = target;\n  }\n\n  if (!isSubCopy) {\n    device.gl.copyTexImage2D(\n      textureTarget,\n      targetMipmaplevel,\n      targetInternalFormat,\n      sourceX,\n      sourceY,\n      width,\n      height,\n      0 /* border must be 0 */\n    );\n  } else {\n    switch (textureTarget) {\n      case GL.TEXTURE_2D:\n      case GL.TEXTURE_CUBE_MAP:\n        device.gl.copyTexSubImage2D(\n          textureTarget,\n          targetMipmaplevel,\n          targetX,\n          targetY,\n          sourceX,\n          sourceY,\n          width,\n          height\n        );\n        break;\n      case GL.TEXTURE_2D_ARRAY:\n      case GL.TEXTURE_3D:\n        device.gl.copyTexSubImage3D(\n          textureTarget,\n          targetMipmaplevel,\n          targetX,\n          targetY,\n          targetZ,\n          sourceX,\n          sourceY,\n          width,\n          height\n        );\n        break;\n      default:\n    }\n  }\n  if (texture) {\n    texture.unbind();\n  }\n  // @ts-expect-error\n  device.gl.bindFramebuffer(GL.FRAMEBUFFER, prevHandle || null);\n  if (deleteFramebuffer) {\n    framebuffer.destroy();\n  }\n  return texture;\n}\n\nfunction getFramebuffer(source: Texture | Framebuffer): {\n  framebuffer: WEBGLFramebuffer;\n  deleteFramebuffer: boolean;\n} {\n  if (!(source instanceof Framebuffer)) {\n    return {framebuffer: toFramebuffer(source), deleteFramebuffer: true};\n  }\n  return {framebuffer: source as WEBGLFramebuffer, deleteFramebuffer: false};\n}\n\n/**\n * Wraps a given texture into a framebuffer object, that can be further used\n * to read data from the texture object.\n */\nexport function toFramebuffer(texture: Texture, props?: FramebufferProps): WEBGLFramebuffer {\n  const {device, width, height, id} = texture;\n  const framebuffer = device.createFramebuffer({\n    ...props,\n    id: `framebuffer-for-${id}`,\n    width,\n    height,\n    colorAttachments: [texture]\n  });\n  return framebuffer as WEBGLFramebuffer;\n}\n\n// eslint-disable-next-line max-params\nfunction getPixelArray(\n  pixelArray,\n  glType: GLDataType | GLPixelType,\n  glFormat: GL,\n  width: number,\n  height: number,\n  depth?: number\n): Uint8Array | Uint16Array | Float32Array {\n  if (pixelArray) {\n    return pixelArray;\n  }\n  // const formatInfo = decodeTextureFormat(format);\n  // Allocate pixel array if not already available, using supplied type\n  glType ||= GL.UNSIGNED_BYTE;\n  const ArrayType = getTypedArrayFromGLType(glType, {clamped: false});\n  const components = glFormatToComponents(glFormat);\n  // TODO - check for composite type (components = 1).\n  return new ArrayType(width * height * components) as Uint8Array | Uint16Array | Float32Array;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {\n  Device,\n  TextureProps,\n  TextureViewProps,\n  Sampler,\n  SamplerProps,\n  SamplerParameters,\n  TextureCubeFace,\n  ExternalImage,\n  Texture1DData,\n  Texture2DData,\n  Texture3DData,\n  TextureCubeData,\n  TextureArrayData,\n  TextureCubeArrayData\n} from '@luma.gl/core';\nimport {Texture, log} from '@luma.gl/core';\nimport {\n  GL,\n  GLPixelType,\n  GLSamplerParameters,\n  GLTexelDataFormat,\n  GLTextureTarget\n} from '@luma.gl/constants';\nimport {getTextureFormatWebGL} from '../converters/webgl-texture-table';\nimport {convertSamplerParametersToWebGL} from '../converters/sampler-parameters';\nimport {WebGLDevice} from '../webgl-device';\nimport {WEBGLSampler} from './webgl-sampler';\nimport {WEBGLTextureView} from './webgl-texture-view';\n\nimport {\n  initializeTextureStorage,\n  // clearMipLevel,\n  copyExternalImageToMipLevel,\n  copyCPUDataToMipLevel,\n  // copyGPUBufferToMipLevel,\n  getWebGLTextureTarget\n} from '../helpers/webgl-texture-utils';\n\n/**\n * WebGL... the texture API from hell... hopefully made simpler\n */\nexport class WEBGLTexture extends Texture {\n  // readonly MAX_ATTRIBUTES: number;\n  readonly device: WebGLDevice;\n  readonly gl: WebGL2RenderingContext;\n  handle: WebGLTexture;\n\n  sampler: WEBGLSampler = undefined; // TODO - currently unused in WebGL. Create dummy sampler?\n  view: WEBGLTextureView = undefined; // TODO - currently unused in WebGL. Create dummy view?\n\n  mipmaps: boolean;\n\n  // Texture type\n  /** Whether the internal format is compressed */\n  compressed: boolean;\n\n  /**\n   * The WebGL target corresponding to the texture type\n   * @note `target` cannot be modified by bind:\n   * textures are special because when you first bind them to a target,\n   * When you first bind a texture as a GL_TEXTURE_2D, you are saying that this texture is a 2D texture.\n   * And it will always be a 2D texture; this state cannot be changed ever.\n   * A texture that was first bound as a GL_TEXTURE_2D, must always be bound as a GL_TEXTURE_2D;\n   * attempting to bind it as GL_TEXTURE_3D will give rise to a run-time error\n   */\n  glTarget: GLTextureTarget;\n  /** The WebGL format - essentially channel structure */\n  glFormat: GLTexelDataFormat;\n  /** The WebGL data format - the type of each channel */\n  glType: GLPixelType;\n  /** The WebGL constant corresponding to the WebGPU style constant in format */\n  glInternalFormat: GL;\n\n  // state\n  /** Texture binding slot - TODO - move to texture view? */\n  textureUnit: number = 0;\n\n  constructor(device: Device, props: TextureProps) {\n    super(device, props);\n\n    // Texture base class strips out the data prop, so we need to add it back in\n    const propsWithData = {...this.props};\n    propsWithData.data = props.data;\n\n    this.device = device as WebGLDevice;\n    this.gl = this.device.gl;\n\n    // Note: In WebGL the texture target defines the type of texture on first bind.\n    this.glTarget = getWebGLTextureTarget(this.props.dimension);\n\n    // The target format of this texture\n    const formatInfo = getTextureFormatWebGL(this.props.format);\n    this.glInternalFormat = formatInfo.internalFormat;\n    this.glFormat = formatInfo.format;\n    this.glType = formatInfo.type;\n    this.compressed = formatInfo.compressed;\n    this.mipmaps = Boolean(this.props.mipmaps);\n\n    this._initialize(propsWithData);\n\n    Object.seal(this);\n  }\n\n  /** Initialize texture with supplied props */\n  // eslint-disable-next-line max-statements\n  _initialize(propsWithData: TextureProps): void {\n    this.handle = this.props.handle || this.gl.createTexture();\n    this.device.setSpectorMetadata(this.handle, {...this.props, data: propsWithData.data});\n\n    let {width, height} = propsWithData;\n\n    if (!width || !height) {\n      const textureSize = Texture.getTextureDataSize(propsWithData.data);\n      width = textureSize?.width || 1;\n      height = textureSize?.height || 1;\n    }\n\n    // Store opts for accessors\n    this.width = width;\n    this.height = height;\n    this.depth = propsWithData.depth;\n\n    // Set texture sampler parameters\n    this.setSampler(propsWithData.sampler);\n    // @ts-ignore TODO - fix types\n    this.view = new WEBGLTextureView(this.device, {...this.props, texture: this});\n\n    this.bind();\n    initializeTextureStorage(this.gl, this.mipLevels, this);\n\n    if (propsWithData.data) {\n      // prettier-ignore\n      switch (propsWithData.dimension) {\n        case '1d': this.setTexture1DData(propsWithData.data); break;\n        case '2d': this.setTexture2DData(propsWithData.data); break;\n        case '3d': this.setTexture3DData(propsWithData.data); break;\n        case 'cube': this.setTextureCubeData(propsWithData.data); break;\n        case '2d-array': this.setTextureArrayData(propsWithData.data); break;\n        case 'cube-array': this.setTextureCubeArrayData(propsWithData.data); break;\n        // @ts-expect-error\n        default: throw new Error(propsWithData.dimension);\n      }\n    }\n\n    if (this.mipmaps) {\n      this.generateMipmap();\n    }\n  }\n\n  override destroy(): void {\n    if (this.handle) {\n      this.gl.deleteTexture(this.handle);\n      this.removeStats();\n      this.trackDeallocatedMemory('Texture');\n      // this.handle = null;\n      this.destroyed = true;\n    }\n  }\n\n  createView(props: TextureViewProps): WEBGLTextureView {\n    return new WEBGLTextureView(this.device, {...props, texture: this});\n  }\n\n  setSampler(sampler: Sampler | SamplerProps = {}): void {\n    let samplerProps: SamplerParameters;\n    if (sampler instanceof WEBGLSampler) {\n      this.sampler = sampler;\n      samplerProps = sampler.props;\n    } else {\n      this.sampler = new WEBGLSampler(this.device, sampler);\n      samplerProps = sampler as SamplerProps;\n    }\n\n    const parameters = convertSamplerParametersToWebGL(samplerProps);\n    this._setSamplerParameters(parameters);\n  }\n\n  // Call to regenerate mipmaps after modifying texture(s)\n  generateMipmap(options?: {force?: boolean}): void {\n    const isFilterableAndRenderable =\n      this.device.isTextureFormatRenderable(this.props.format) &&\n      this.device.isTextureFormatFilterable(this.props.format);\n    if (!isFilterableAndRenderable) {\n      log.warn(`${this} is not renderable or filterable, may not be able to generate mipmaps`)();\n      if (!options?.force) {\n        return;\n      }\n    }\n\n    try {\n      this.gl.bindTexture(this.glTarget, this.handle);\n      this.gl.generateMipmap(this.glTarget);\n    } catch (error) {\n      log.warn(`Error generating mipmap for ${this}: ${(error as Error).message}`)();\n    } finally {\n      this.gl.bindTexture(this.glTarget, null);\n    }\n  }\n\n  // Image Data Setters\n  copyExternalImage(options: {\n    image: ExternalImage;\n    sourceX?: number;\n    sourceY?: number;\n    width?: number;\n    height?: number;\n    depth?: number;\n    mipLevel?: number;\n    x?: number;\n    y?: number;\n    z?: number;\n    aspect?: 'all' | 'stencil-only' | 'depth-only';\n    colorSpace?: 'srgb';\n    premultipliedAlpha?: boolean;\n    flipY?: boolean;\n  }): {width: number; height: number} {\n    const size = Texture.getExternalImageSize(options.image);\n    const opts = {...Texture.defaultCopyExternalImageOptions, ...size, ...options};\n\n    const {image, depth, mipLevel, x, y, z, flipY} = opts;\n    let {width, height} = opts;\n    const {dimension, glTarget, glFormat, glInternalFormat, glType} = this;\n\n    // WebGL will error if we try to copy outside the bounds of the texture\n    width = Math.min(width, this.width - x);\n    height = Math.min(height, this.height - y);\n\n    if (options.sourceX || options.sourceY) {\n      // requires copyTexSubImage2D from a framebuffer'\n      throw new Error('WebGL does not support sourceX/sourceY)');\n    }\n\n    copyExternalImageToMipLevel(this.device.gl, this.handle, image, {\n      dimension,\n      mipLevel,\n      x,\n      y,\n      z,\n      width,\n      height,\n      depth,\n      glFormat,\n      glInternalFormat,\n      glType,\n      glTarget,\n      flipY\n    });\n\n    return {width: opts.width, height: opts.height};\n  }\n\n  setTexture1DData(data: Texture1DData): void {\n    throw new Error('setTexture1DData not supported in WebGL.');\n  }\n\n  /** Set a simple texture */\n  setTexture2DData(lodData: Texture2DData, depth = 0): void {\n    this.bind();\n\n    const lodArray = Texture.normalizeTextureData(lodData, this);\n\n    // If the user provides multiple LODs, then automatic mipmap\n    // generation generateMipmap() should be disabled to avoid overwriting them.\n    if (lodArray.length > 1 && this.props.mipmaps !== false) {\n      log.warn(`Texture ${this.id} mipmap and multiple LODs.`)();\n    }\n\n    for (let lodLevel = 0; lodLevel < lodArray.length; lodLevel++) {\n      const imageData = lodArray[lodLevel];\n      this._setMipLevel(depth, lodLevel, imageData);\n    }\n\n    this.unbind();\n  }\n\n  /**\n   * Sets a 3D texture\n   * @param data\n   */\n  setTexture3DData(data: Texture3DData): void {\n    if (this.props.dimension !== '3d') {\n      throw new Error(this.id);\n    }\n    if (ArrayBuffer.isView(data)) {\n      this.bind();\n      copyCPUDataToMipLevel(this.device.gl, data, this);\n      this.unbind();\n    }\n  }\n\n  /**\n   * Set a Texture Cube Data\n   * @todo - could support TextureCubeArray with depth\n   * @param data\n   * @param index\n   */\n  setTextureCubeData(data: TextureCubeData, depth: number = 0): void {\n    if (this.props.dimension !== 'cube') {\n      throw new Error(this.id);\n    }\n    for (const face of Texture.CubeFaces) {\n      this.setTextureCubeFaceData(data[face], face);\n    }\n  }\n\n  /**\n   * Sets an entire texture array\n   * @param data\n   */\n  setTextureArrayData(data: TextureArrayData): void {\n    if (this.props.dimension !== '2d-array') {\n      throw new Error(this.id);\n    }\n    throw new Error('setTextureArrayData not implemented.');\n  }\n\n  /**\n   * Sets an entire texture cube array\n   * @param data\n   */\n  setTextureCubeArrayData(data: TextureCubeArrayData): void {\n    throw new Error('setTextureCubeArrayData not supported in WebGL2.');\n  }\n\n  setTextureCubeFaceData(lodData: Texture2DData, face: TextureCubeFace, depth: number = 0): void {\n    // assert(this.props.dimension === 'cube');\n\n    // If the user provides multiple LODs, then automatic mipmap\n    // generation generateMipmap() should be disabled to avoid overwriting them.\n    if (Array.isArray(lodData) && lodData.length > 1 && this.props.mipmaps !== false) {\n      log.warn(`${this.id} has mipmap and multiple LODs.`)();\n    }\n\n    const faceDepth = Texture.CubeFaces.indexOf(face);\n\n    this.setTexture2DData(lodData, faceDepth);\n  }\n\n  // DEPRECATED METHODS\n\n  /** Update external texture (video frame or canvas) @deprecated Use ExternalTexture */\n  update(): void {\n    throw new Error('Texture.update() not implemented. Use ExternalTexture');\n  }\n\n  // INTERNAL METHODS\n\n  /** @todo update this method to accept LODs */\n  setImageDataForFace(options): void {\n    const {\n      face,\n      width,\n      height,\n      pixels,\n      data,\n      format = GL.RGBA,\n      type = GL.UNSIGNED_BYTE\n      // generateMipmap = false // TODO\n    } = options;\n\n    const {gl} = this;\n\n    const imageData = pixels || data;\n\n    this.bind();\n    if (imageData instanceof Promise) {\n      imageData.then(resolvedImageData =>\n        this.setImageDataForFace(\n          Object.assign({}, options, {\n            face,\n            data: resolvedImageData,\n            pixels: resolvedImageData\n          })\n        )\n      );\n    } else if (this.width || this.height) {\n      gl.texImage2D(face, 0, format, width, height, 0 /* border*/, format, type, imageData);\n    } else {\n      gl.texImage2D(face, 0, format, format, type, imageData);\n    }\n  }\n\n  _getImageDataMap(faceData: Record<string | GL, any>): Record<GL, any> {\n    for (let i = 0; i < Texture.CubeFaces.length; ++i) {\n      const faceName = Texture.CubeFaces[i];\n      if (faceData[faceName]) {\n        faceData[GL.TEXTURE_CUBE_MAP_POSITIVE_X + i] = faceData[faceName];\n        delete faceData[faceName];\n      }\n    }\n    return faceData;\n  }\n\n  // RESOURCE METHODS\n\n  /**\n   * Sets sampler parameters on texture\n   */\n  _setSamplerParameters(parameters: GLSamplerParameters): void {\n    log.log(1, `${this.id} sampler parameters`, this.device.getGLKeys(parameters))();\n\n    this.gl.bindTexture(this.glTarget, this.handle);\n    for (const [pname, pvalue] of Object.entries(parameters)) {\n      const param = Number(pname) as keyof GLSamplerParameters;\n      const value = pvalue;\n\n      // Apparently integer/float issues require two different texture parameter setting functions in JavaScript.\n      // For now, pick the float version for parameters specified as GLfloat.\n      switch (param) {\n        case GL.TEXTURE_MIN_LOD:\n        case GL.TEXTURE_MAX_LOD:\n          this.gl.texParameterf(this.glTarget, param, value);\n          break;\n\n        case GL.TEXTURE_MIN_FILTER:\n          this.gl.texParameteri(this.glTarget, param, value);\n          break;\n\n        case GL.TEXTURE_WRAP_S:\n        case GL.TEXTURE_WRAP_T:\n          this.gl.texParameteri(this.glTarget, param, value);\n          break;\n        case GL.TEXTURE_MAX_ANISOTROPY_EXT:\n          // We have to query feature before using it\n          if (this.device.features.has('texture-filterable-anisotropic-webgl')) {\n            this.gl.texParameteri(this.glTarget, param, value);\n          }\n          break;\n        default:\n          this.gl.texParameteri(this.glTarget, param, value);\n          break;\n      }\n    }\n\n    this.gl.bindTexture(this.glTarget, null);\n  }\n\n  // INTERNAL SETTERS\n\n  /**\n   * Copy a region of data from a CPU memory buffer into this texture.\n   * @todo -   GLUnpackParameters parameters\n   */\n  protected _setMipLevel(\n    depth: number,\n    mipLevel: number,\n    textureData: Texture2DData,\n    glTarget: GL = this.glTarget\n  ) {\n    // if (!textureData) {\n    //   clearMipLevel(this.device.gl, {...this, depth, level});\n    //   return;\n    // }\n\n    if (Texture.isExternalImage(textureData)) {\n      copyExternalImageToMipLevel(this.device.gl, this.handle, textureData, {\n        ...this,\n        depth,\n        mipLevel,\n        glTarget,\n        flipY: this.props.flipY\n      });\n      return;\n    }\n\n    // @ts-expect-error\n    if (Texture.isTextureLevelData(textureData)) {\n      copyCPUDataToMipLevel(this.device.gl, textureData.data, {\n        ...this,\n        depth,\n        mipLevel,\n        glTarget\n      });\n      return;\n    }\n\n    throw new Error('Texture: invalid image data');\n  }\n  // HELPERS\n\n  getActiveUnit(): number {\n    return this.gl.getParameter(GL.ACTIVE_TEXTURE) - GL.TEXTURE0;\n  }\n\n  bind(textureUnit?: number): number {\n    const {gl} = this;\n\n    if (textureUnit !== undefined) {\n      this.textureUnit = textureUnit;\n      gl.activeTexture(gl.TEXTURE0 + textureUnit);\n    }\n\n    gl.bindTexture(this.glTarget, this.handle);\n    return textureUnit;\n  }\n\n  unbind(textureUnit?: number): number | undefined {\n    const {gl} = this;\n\n    if (textureUnit !== undefined) {\n      this.textureUnit = textureUnit;\n      gl.activeTexture(gl.TEXTURE0 + textureUnit);\n    }\n\n    gl.bindTexture(this.glTarget, null);\n    return textureUnit;\n  }\n}\n\n// TODO - Remove when texture refactor is complete\n\n/*\nsetCubeMapData(options: {\n  width: number;\n  height: number;\n  data: Record<GL, Texture2DData> | Record<TextureCubeFace, Texture2DData>;\n  format?: any;\n  type?: any;\n  /** @deprecated Use .data *\n  pixels: any;\n}): void {\n  const {gl} = this;\n\n  const {width, height, pixels, data, format = GL.RGBA, type = GL.UNSIGNED_BYTE} = options;\n\n  // pixel data (imageDataMap) is an Object from Face to Image or Promise.\n  // For example:\n  // {\n  // GL.TEXTURE_CUBE_MAP_POSITIVE_X : Image-or-Promise,\n  // GL.TEXTURE_CUBE_MAP_NEGATIVE_X : Image-or-Promise,\n  // ... }\n  // To provide multiple level-of-details (LODs) this can be Face to Array\n  // of Image or Promise, like this\n  // {\n  // GL.TEXTURE_CUBE_MAP_POSITIVE_X : [Image-or-Promise-LOD-0, Image-or-Promise-LOD-1],\n  // GL.TEXTURE_CUBE_MAP_NEGATIVE_X : [Image-or-Promise-LOD-0, Image-or-Promise-LOD-1],\n  // ... }\n\n  const imageDataMap = this._getImageDataMap(pixels || data);\n\n  const resolvedFaces = WEBGLTexture.FACES.map(face => {\n    const facePixels = imageDataMap[face];\n    return Array.isArray(facePixels) ? facePixels : [facePixels];\n  });\n  this.bind();\n\n  WEBGLTexture.FACES.forEach((face, index) => {\n    if (resolvedFaces[index].length > 1 && this.props.mipmaps !== false) {\n      // If the user provides multiple LODs, then automatic mipmap\n      // generation generateMipmap() should be disabled to avoid overwritting them.\n      log.warn(`${this.id} has mipmap and multiple LODs.`)();\n    }\n    resolvedFaces[index].forEach((image, lodLevel) => {\n      // TODO: adjust width & height for LOD!\n      if (width && height) {\n        gl.texImage2D(face, lodLevel, format, width, height, 0 /* border*, format, type, image);\n      } else {\n        gl.texImage2D(face, lodLevel, format, format, type, image);\n      }\n    });\n  });\n\n  this.unbind();\n}\n*/\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {NumericArray, NumberArray4} from '@math.gl/types';\nimport {RenderPass, RenderPassProps, RenderPassParameters} from '@luma.gl/core';\nimport {WebGLDevice} from '../webgl-device';\nimport {GL, GLParameters} from '@luma.gl/constants';\nimport {withGLParameters} from '../../context/state-tracker/with-parameters';\nimport {setGLParameters} from '../../context/parameters/unified-parameter-api';\nimport {WEBGLQuerySet} from './webgl-query-set';\nimport {WEBGLFramebuffer} from './webgl-framebuffer';\n\nconst COLOR_CHANNELS = [0x1, 0x2, 0x4, 0x8]; // GPUColorWrite RED, GREEN, BLUE, ALPHA\n\nexport class WEBGLRenderPass extends RenderPass {\n  readonly device: WebGLDevice;\n\n  /** Parameters that should be applied before each draw call */\n  glParameters: GLParameters;\n\n  constructor(device: WebGLDevice, props: RenderPassProps) {\n    super(device, props);\n    this.device = device;\n\n    // If no viewport is provided, apply reasonably defaults\n    let viewport;\n    if (!props?.parameters?.viewport) {\n      if (props?.framebuffer) {\n        // Set the viewport to the size of the framebuffer\n        const {width, height} = props.framebuffer;\n        viewport = [0, 0, width, height];\n      } else {\n        // Instead of using our own book-keeping, we can just read the values from the WebGL context\n        const [width, height] = device.getCanvasContext().getDrawingBufferSize();\n        viewport = [0, 0, width, height];\n      }\n    }\n\n    // TODO - do parameters (scissorRect) affect the clear operation?\n    this.device.pushState();\n    this.setParameters({viewport, ...this.props.parameters});\n\n    // Specify mapping of draw buffer locations to color attachments\n    const webglFramebuffer = this.props.framebuffer as WEBGLFramebuffer;\n    if (webglFramebuffer?.handle) {\n      if (this.props.framebuffer) {\n        const drawBuffers = this.props.framebuffer.colorAttachments.map(\n          (_, i) => GL.COLOR_ATTACHMENT0 + i\n        );\n        this.device.gl.drawBuffers(drawBuffers);\n      } else {\n        this.device.gl.drawBuffers([GL.BACK]);\n      }\n    }\n\n    // Hack - for now WebGL draws in \"immediate mode\" (instead of queueing the operations)...\n    this.clear();\n  }\n\n  end(): void {\n    this.device.popState();\n    // should add commands to CommandEncoder.\n  }\n\n  pushDebugGroup(groupLabel: string): void {}\n  popDebugGroup(): void {}\n  insertDebugMarker(markerLabel: string): void {}\n\n  // beginOcclusionQuery(queryIndex: number): void;\n  // endOcclusionQuery(): void;\n\n  // executeBundles(bundles: Iterable<GPURenderBundle>): void;\n\n  /**\n   * Maps RenderPass parameters to GL parameters\n   */\n  setParameters(parameters: RenderPassParameters = {}): void {\n    const glParameters: GLParameters = {...this.glParameters};\n\n    // Framebuffers are specified using parameters in WebGL\n    glParameters.framebuffer = this.props.framebuffer || null;\n\n    if (this.props.depthReadOnly) {\n      glParameters.depthMask = !this.props.depthReadOnly;\n    }\n\n    glParameters.stencilMask = this.props.stencilReadOnly ? 0 : 1;\n\n    glParameters[GL.RASTERIZER_DISCARD] = this.props.discard;\n\n    // Map the four renderpass parameters to WebGL parameters\n    if (parameters.viewport) {\n      // WebGPU viewports are 6 coordinates (X, Y, Z)\n      if (parameters.viewport.length >= 6) {\n        glParameters.viewport = parameters.viewport.slice(0, 4) as NumberArray4;\n        glParameters.depthRange = [parameters.viewport[4], parameters.viewport[5]];\n      } else {\n        // WebGL viewports are 4 coordinates (X, Y)\n        glParameters.viewport = parameters.viewport as NumberArray4;\n      }\n    }\n    if (parameters.scissorRect) {\n      glParameters.scissorTest = true;\n      glParameters.scissor = parameters.scissorRect;\n    }\n    if (parameters.blendConstant) {\n      glParameters.blendColor = parameters.blendConstant;\n    }\n    if (parameters.stencilReference) {\n      // eslint-disable-next-line no-console\n      console.warn('RenderPassParameters.stencilReference not yet implemented in WebGL');\n      // parameters.stencilFunc = [func, ref, mask];\n      // Does this work?\n      parameters[GL.STENCIL_REF] = parameters.stencilReference;\n    }\n\n    if (parameters.colorMask) {\n      glParameters.colorMask = COLOR_CHANNELS.map(channel =>\n        Boolean(channel & parameters.colorMask)\n      );\n    }\n\n    this.glParameters = glParameters;\n\n    setGLParameters(this.device.gl, glParameters);\n  }\n\n  beginOcclusionQuery(queryIndex: number): void {\n    const webglQuerySet = this.props.occlusionQuerySet as WEBGLQuerySet;\n    webglQuerySet?.beginOcclusionQuery();\n  }\n\n  override endOcclusionQuery(): void {\n    const webglQuerySet = this.props.occlusionQuerySet as WEBGLQuerySet;\n    webglQuerySet?.endOcclusionQuery();\n  }\n\n  // PRIVATE\n\n  /**\n   * Optionally clears depth, color and stencil buffers based on parameters\n   */\n  protected clear(): void {\n    const glParameters: GLParameters = {...this.glParameters};\n\n    let clearMask = 0;\n\n    if (this.props.clearColors) {\n      this.props.clearColors.forEach((color, drawBufferIndex) => {\n        if (color) {\n          this.clearColorBuffer(drawBufferIndex, color);\n        }\n      });\n    }\n\n    if (this.props.clearColor !== false && this.props.clearColors === undefined) {\n      clearMask |= GL.COLOR_BUFFER_BIT;\n      glParameters.clearColor = this.props.clearColor;\n    }\n    if (this.props.clearDepth !== false) {\n      clearMask |= GL.DEPTH_BUFFER_BIT;\n      glParameters.clearDepth = this.props.clearDepth;\n    }\n    if (this.props.clearStencil !== false) {\n      clearMask |= GL.STENCIL_BUFFER_BIT;\n      glParameters.clearStencil = this.props.clearStencil;\n    }\n\n    if (clearMask !== 0) {\n      // Temporarily set any clear \"colors\" and call clear\n      withGLParameters(this.device.gl, glParameters, () => {\n        this.device.gl.clear(clearMask);\n      });\n    }\n  }\n\n  /**\n   * WebGL2 - clear a specific color buffer\n   */\n  protected clearColorBuffer(drawBuffer: number = 0, value: NumericArray = [0, 0, 0, 0]) {\n    withGLParameters(this.device.gl, {framebuffer: this.props.framebuffer}, () => {\n      // Method selection per OpenGL ES 3 docs\n      switch (value.constructor) {\n        case Int8Array:\n        case Int16Array:\n        case Int32Array:\n          this.device.gl.clearBufferiv(GL.COLOR, drawBuffer, value);\n          break;\n        case Uint8Array:\n        case Uint8ClampedArray:\n        case Uint16Array:\n        case Uint32Array:\n          this.device.gl.clearBufferuiv(GL.COLOR, drawBuffer, value);\n          break;\n        case Float32Array:\n          this.device.gl.clearBufferfv(GL.COLOR, drawBuffer, value);\n          break;\n        default:\n          throw new Error('clearColorBuffer: color must be typed array');\n      }\n    });\n  }\n\n  /*\n  clearDepthStencil() {\n      case GL.DEPTH:\n        this.device.gl.clearBufferfv(GL.DEPTH, 0, [value]);\n        break;\n\n      case GL_STENCIL:\n        this.device.gl.clearBufferiv(GL.STENCIL, 0, [value]);\n        break;\n\n      case GL.DEPTH_STENCIL:\n        const [depth, stencil] = value;\n        this.device.gl.clearBufferfi(GL.DEPTH_STENCIL, 0, depth, stencil);\n        break;\n\n      default:\n        assert(false, ERR_ARGUMENTS);\n    }\n  });\n  */\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {ShaderUniformType, ShaderAttributeType, VertexFormat} from '@luma.gl/core';\nimport {GL, GLUniformType, GLSamplerType, GLCompositeType, GLDataType} from '@luma.gl/constants';\n\n/** Check is uniform is of sampler type */\nexport function isSamplerUniform(type: GLUniformType): boolean {\n  return SAMPLER_TYPES.includes(type as GLSamplerType);\n}\n\nconst SAMPLER_TYPES: GLSamplerType[] = [\n  GL.SAMPLER_2D,\n  GL.SAMPLER_CUBE,\n  GL.SAMPLER_3D,\n  GL.SAMPLER_2D_SHADOW,\n  GL.SAMPLER_2D_ARRAY,\n  GL.SAMPLER_2D_ARRAY_SHADOW,\n  GL.SAMPLER_CUBE_SHADOW,\n  GL.INT_SAMPLER_2D,\n  GL.INT_SAMPLER_3D,\n  GL.INT_SAMPLER_CUBE,\n  GL.INT_SAMPLER_2D_ARRAY,\n  GL.UNSIGNED_INT_SAMPLER_2D,\n  GL.UNSIGNED_INT_SAMPLER_3D,\n  GL.UNSIGNED_INT_SAMPLER_CUBE,\n  GL.UNSIGNED_INT_SAMPLER_2D_ARRAY\n];\n\n// Composite types table\nconst COMPOSITE_GL_TYPES: Record<\n  GLCompositeType,\n  [GLDataType, number, string, ShaderUniformType, VertexFormat?]\n> = {\n  [GL.FLOAT]: [GL.FLOAT, 1, 'float', 'f32', 'float32'],\n  [GL.FLOAT_VEC2]: [GL.FLOAT, 2, 'vec2', 'vec2<f32>', 'float32x2'],\n  [GL.FLOAT_VEC3]: [GL.FLOAT, 3, 'vec3', 'vec3<f32>', 'float32x3'],\n  [GL.FLOAT_VEC4]: [GL.FLOAT, 4, 'vec4', 'vec4<f32>', 'float32x4'],\n\n  [GL.INT]: [GL.INT, 1, 'int', 'i32', 'sint32'],\n  [GL.INT_VEC2]: [GL.INT, 2, 'ivec2', 'vec2<i32>', 'sint32x2'],\n  [GL.INT_VEC3]: [GL.INT, 3, 'ivec3', 'vec3<i32>', 'sint32x3'],\n  [GL.INT_VEC4]: [GL.INT, 4, 'ivec4', 'vec4<i32>', 'sint32x4'],\n\n  [GL.UNSIGNED_INT]: [GL.UNSIGNED_INT, 1, 'uint', 'u32', 'uint32'],\n  [GL.UNSIGNED_INT_VEC2]: [GL.UNSIGNED_INT, 2, 'uvec2', 'vec2<u32>', 'uint32x2'],\n  [GL.UNSIGNED_INT_VEC3]: [GL.UNSIGNED_INT, 3, 'uvec3', 'vec3<u32>', 'uint32x3'],\n  [GL.UNSIGNED_INT_VEC4]: [GL.UNSIGNED_INT, 4, 'uvec4', 'vec4<u32>', 'uint32x4'],\n\n  [GL.BOOL]: [GL.FLOAT, 1, 'bool', 'f32', 'float32'],\n  [GL.BOOL_VEC2]: [GL.FLOAT, 2, 'bvec2', 'vec2<f32>', 'float32x2'],\n  [GL.BOOL_VEC3]: [GL.FLOAT, 3, 'bvec3', 'vec3<f32>', 'float32x3'],\n  [GL.BOOL_VEC4]: [GL.FLOAT, 4, 'bvec4', 'vec4<f32>', 'float32x4'],\n\n  // TODO - are sizes/components below correct?\n  [GL.FLOAT_MAT2]: [GL.FLOAT, 8, 'mat2', 'mat2x2<f32>'], // 4\n  [GL.FLOAT_MAT2x3]: [GL.FLOAT, 8, 'mat2x3', 'mat2x3<f32>'], // 6\n  [GL.FLOAT_MAT2x4]: [GL.FLOAT, 8, 'mat2x4', 'mat2x4<f32>'], // 8\n\n  [GL.FLOAT_MAT3x2]: [GL.FLOAT, 12, 'mat3x2', 'mat3x2<f32>'], // 6\n  [GL.FLOAT_MAT3]: [GL.FLOAT, 12, 'mat3', 'mat3x3<f32>'], // 9\n  [GL.FLOAT_MAT3x4]: [GL.FLOAT, 12, 'mat3x4', 'mat3x4<f32>'], // 12\n\n  [GL.FLOAT_MAT4x2]: [GL.FLOAT, 16, 'mat4x2', 'mat4x2<f32>'], // 8\n  [GL.FLOAT_MAT4x3]: [GL.FLOAT, 16, 'mat4x3', 'mat4x3<f32>'], // 12\n  [GL.FLOAT_MAT4]: [GL.FLOAT, 16, 'mat4', 'mat4x4<f32>'] // 16\n};\n\n/** Decomposes a composite type (GL.VEC3) into a basic type (GL.FLOAT) and components (3) */\nexport function decodeGLUniformType(glUniformType: GL): {\n  format: ShaderUniformType;\n  components: number;\n  glType: GLDataType;\n} {\n  const typeAndSize = COMPOSITE_GL_TYPES[glUniformType];\n  if (!typeAndSize) {\n    throw new Error('uniform');\n  }\n  const [glType, components, , format] = typeAndSize;\n  return {format, components, glType};\n}\n\n/** Decomposes a composite type (GL.VEC3) into a basic type (GL.FLOAT) and components (3) */\nexport function decodeGLAttributeType(glAttributeType: GL): {\n  attributeType: ShaderAttributeType;\n  vertexFormat: VertexFormat;\n  components: number;\n  // glType: GLDataType;\n} {\n  const typeAndSize = COMPOSITE_GL_TYPES[glAttributeType];\n  if (!typeAndSize) {\n    throw new Error('attribute');\n  }\n  const [, components, , shaderType, vertexFormat] = typeAndSize;\n  // TODO sanity - if (shaderType.startsWith('mat' ...))\n  const attributeType = shaderType as unknown as ShaderAttributeType;\n  return {attributeType, vertexFormat, components}; // , glType};\n}\n\n/** Decomposes a composite type GL.VEC3 into a basic type (GL.FLOAT) and components (3) */\nexport function decomposeCompositeGLDataType(\n  compositeGLDataType: GLCompositeType\n): {type: GLDataType; components: number} | null {\n  const typeAndSize = COMPOSITE_GL_TYPES[compositeGLDataType];\n  if (!typeAndSize) {\n    return null;\n  }\n  const [type, components] = typeAndSize;\n  return {type, components};\n}\n\nexport function getCompositeGLDataType(\n  type: GL,\n  components\n): {glType: GLDataType; name: string} | null {\n  switch (type) {\n    case GL.BYTE:\n    case GL.UNSIGNED_BYTE:\n    case GL.SHORT:\n    case GL.UNSIGNED_SHORT:\n      type = GL.FLOAT;\n      break;\n    default:\n  }\n\n  for (const glType in COMPOSITE_GL_TYPES) {\n    const [compType, compComponents, name] = COMPOSITE_GL_TYPES[glType];\n    if (compType === type && compComponents === components) {\n      return {glType: Number(glType), name};\n    }\n  }\n  return null;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {\n  ShaderLayout,\n  UniformBinding,\n  UniformBlockBinding,\n  AttributeDeclaration,\n  VaryingBinding\n} from '@luma.gl/core';\n\nimport {GL} from '@luma.gl/constants';\nimport {decodeGLUniformType, decodeGLAttributeType, isSamplerUniform} from './decode-webgl-types';\n\n/**\n * Extract metadata describing binding information for a program's shaders\n * Note: `linkProgram()` needs to have been called\n * (although linking does not need to have been successful).\n */\nexport function getShaderLayoutFromGLSL(\n  gl: WebGL2RenderingContext,\n  program: WebGLProgram\n): ShaderLayout {\n  const shaderLayout: ShaderLayout = {\n    attributes: [],\n    bindings: []\n  };\n\n  shaderLayout.attributes = readAttributeDeclarations(gl, program);\n\n  // Uniform blocks\n  const uniformBlocks: UniformBlockBinding[] = readUniformBlocks(gl, program);\n  for (const uniformBlock of uniformBlocks) {\n    const uniforms = uniformBlock.uniforms.map(uniform => ({\n      name: uniform.name,\n      format: uniform.format,\n      byteOffset: uniform.byteOffset,\n      byteStride: uniform.byteStride,\n      arrayLength: uniform.arrayLength\n    }));\n    shaderLayout.bindings.push({\n      type: 'uniform',\n      name: uniformBlock.name,\n      group: 0,\n      location: uniformBlock.location,\n      visibility: (uniformBlock.vertex ? 0x1 : 0) & (uniformBlock.fragment ? 0x2 : 0),\n      minBindingSize: uniformBlock.byteLength,\n      uniforms\n    });\n  }\n\n  const uniforms: UniformBinding[] = readUniformBindings(gl, program);\n  let textureUnit = 0;\n  for (const uniform of uniforms) {\n    if (isSamplerUniform(uniform.type)) {\n      const {viewDimension, sampleType} = getSamplerInfo(uniform.type);\n      shaderLayout.bindings.push({\n        type: 'texture',\n        name: uniform.name,\n        group: 0,\n        location: textureUnit,\n        viewDimension,\n        sampleType\n      });\n\n      // @ts-expect-error\n      uniform.textureUnit = textureUnit;\n      textureUnit += 1;\n    }\n  }\n\n  if (uniforms.length) {\n    shaderLayout.uniforms = uniforms;\n  }\n\n  // Varyings\n  const varyings: VaryingBinding[] = readVaryings(gl, program);\n  // Note - samplers are always in unform bindings, even if uniform blocks are used\n  if (varyings?.length) {\n    shaderLayout.varyings = varyings;\n  }\n\n  return shaderLayout;\n}\n\n// HELPERS\n\n/**\n * Extract info about all transform feedback varyings\n *\n * linkProgram needs to have been called, although linking does not need to have been successful\n */\nfunction readAttributeDeclarations(\n  gl: WebGL2RenderingContext,\n  program: WebGLProgram\n): AttributeDeclaration[] {\n  const attributes: AttributeDeclaration[] = [];\n\n  const count = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n  for (let index = 0; index < count; index++) {\n    const activeInfo = gl.getActiveAttrib(program, index);\n    if (!activeInfo) {\n      throw new Error('activeInfo');\n    }\n    const {name, type: compositeType /* , size*/} = activeInfo;\n    const location = gl.getAttribLocation(program, name);\n    // Add only user provided attributes, for built-in attributes like `gl_InstanceID` location will be < 0\n    if (location >= 0) {\n      const {attributeType} = decodeGLAttributeType(compositeType);\n\n      // Whether an attribute is instanced is essentially fixed by the structure of the shader code,\n      // so it is arguably a static property of the shader.\n      // There is no hint in the shader declarations\n      // Heuristic: Any attribute name containing the word \"instance\" will be assumed to be instanced\n      const stepMode = /instance/i.test(name) ? 'instance' : 'vertex';\n\n      attributes.push({\n        name,\n        location,\n        stepMode,\n        type: attributeType\n        // size - for arrays, size is the number of elements in the array\n      });\n    }\n  }\n\n  // Sort by declaration order\n  attributes.sort((a: AttributeDeclaration, b: AttributeDeclaration) => a.location - b.location);\n  return attributes;\n}\n\n/**\n * Extract info about all transform feedback varyings\n *\n * linkProgram needs to have been called, although linking does not need to have been successful\n */\nfunction readVaryings(gl: WebGL2RenderingContext, program: WebGLProgram): VaryingBinding[] {\n  const varyings: VaryingBinding[] = [];\n\n  const count = gl.getProgramParameter(program, GL.TRANSFORM_FEEDBACK_VARYINGS);\n  for (let location = 0; location < count; location++) {\n    const activeInfo = gl.getTransformFeedbackVarying(program, location);\n    if (!activeInfo) {\n      throw new Error('activeInfo');\n    }\n    const {name, type: compositeType, size} = activeInfo;\n    const {glType, components} = decodeGLUniformType(compositeType);\n    const varying = {location, name, type: glType, size: size * components}; // Base values\n    varyings.push(varying);\n  }\n\n  varyings.sort((a, b) => a.location - b.location);\n  return varyings;\n}\n\n/**\n * Extract info about all uniforms\n *\n * Query uniform locations and build name to setter map.\n */\nfunction readUniformBindings(gl: WebGL2RenderingContext, program: WebGLProgram): UniformBinding[] {\n  const uniforms: UniformBinding[] = [];\n\n  const uniformCount = gl.getProgramParameter(program, GL.ACTIVE_UNIFORMS);\n  for (let i = 0; i < uniformCount; i++) {\n    const activeInfo = gl.getActiveUniform(program, i);\n    if (!activeInfo) {\n      throw new Error('activeInfo');\n    }\n    const {name: rawName, size, type} = activeInfo;\n    const {name, isArray} = parseUniformName(rawName);\n    let webglLocation = gl.getUniformLocation(program, name);\n    const uniformInfo = {\n      // WebGL locations are uniquely typed but just numbers\n      location: webglLocation as number,\n      name,\n      size,\n      type,\n      isArray\n    };\n    uniforms.push(uniformInfo);\n\n    // Array (e.g. matrix) uniforms can occupy several 4x4 byte banks\n    if (uniformInfo.size > 1) {\n      for (let j = 0; j < uniformInfo.size; j++) {\n        const elementName = `${name}[${j}]`;\n\n        webglLocation = gl.getUniformLocation(program, elementName);\n\n        const arrayElementUniformInfo = {\n          ...uniformInfo,\n          name: elementName,\n          location: webglLocation as number\n        };\n\n        uniforms.push(arrayElementUniformInfo);\n      }\n    }\n  }\n  return uniforms;\n}\n\n/**\n * Extract info about all \"active\" uniform blocks\n * @note In WebGL, \"active\" just means that unused (inactive) blocks may have been optimized away during linking)\n */\nfunction readUniformBlocks(\n  gl: WebGL2RenderingContext,\n  program: WebGLProgram\n): UniformBlockBinding[] {\n  const getBlockParameter = (blockIndex: number, pname: GL): any =>\n    gl.getActiveUniformBlockParameter(program, blockIndex, pname);\n\n  const uniformBlocks: UniformBlockBinding[] = [];\n\n  const blockCount = gl.getProgramParameter(program, GL.ACTIVE_UNIFORM_BLOCKS);\n  for (let blockIndex = 0; blockIndex < blockCount; blockIndex++) {\n    const blockInfo: UniformBlockBinding = {\n      name: gl.getActiveUniformBlockName(program, blockIndex) || '',\n      location: getBlockParameter(blockIndex, GL.UNIFORM_BLOCK_BINDING),\n      byteLength: getBlockParameter(blockIndex, GL.UNIFORM_BLOCK_DATA_SIZE),\n      vertex: getBlockParameter(blockIndex, GL.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      fragment: getBlockParameter(blockIndex, GL.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      uniformCount: getBlockParameter(blockIndex, GL.UNIFORM_BLOCK_ACTIVE_UNIFORMS),\n      uniforms: [] as any[]\n    };\n\n    const uniformIndices =\n      (getBlockParameter(blockIndex, GL.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES) as number[]) || [];\n\n    const uniformType = gl.getActiveUniforms(program, uniformIndices, GL.UNIFORM_TYPE); // Array of GLenum indicating the types of the uniforms.\n    const uniformArrayLength = gl.getActiveUniforms(program, uniformIndices, GL.UNIFORM_SIZE); // Array of GLuint indicating the sizes of the uniforms.\n    // const uniformBlockIndex = gl.getActiveUniforms(\n    //   program,\n    //   uniformIndices,\n    //   GL.UNIFORM_BLOCK_INDEX\n    // ); // Array of GLint indicating the block indices of the uniforms.\n    const uniformOffset = gl.getActiveUniforms(program, uniformIndices, GL.UNIFORM_OFFSET); // Array of GLint indicating the uniform buffer offsets.\n    const uniformStride = gl.getActiveUniforms(program, uniformIndices, GL.UNIFORM_ARRAY_STRIDE); // Array of GLint indicating the strides between the elements.\n    // const uniformMatrixStride = gl.getActiveUniforms(\n    //   program,\n    //   uniformIndices,\n    //   GL.UNIFORM_MATRIX_STRIDE\n    // ); // Array of GLint indicating the strides between columns of a column-major matrix or a row-major matrix.\n    // const uniformRowMajor = gl.getActiveUniforms(program, uniformIndices, GL.UNIFORM_IS_ROW_MAJOR);\n    for (let i = 0; i < blockInfo.uniformCount; ++i) {\n      const activeInfo = gl.getActiveUniform(program, uniformIndices[i]);\n      if (!activeInfo) {\n        throw new Error('activeInfo');\n      }\n\n      blockInfo.uniforms.push({\n        name: activeInfo.name,\n        format: decodeGLUniformType(uniformType[i]).format,\n        type: uniformType[i],\n        arrayLength: uniformArrayLength[i],\n        byteOffset: uniformOffset[i],\n        byteStride: uniformStride[i]\n        // matrixStride: uniformStride[i],\n        // rowMajor: uniformRowMajor[i]\n      });\n    }\n\n    uniformBlocks.push(blockInfo);\n  }\n\n  uniformBlocks.sort((a, b) => a.location - b.location);\n  return uniformBlocks;\n}\n\n/**\n * TOOD - compare with a above, confirm copy, then delete\n  const bindings: Binding[] = [];\n  const count = gl.getProgramParameter(program, gl.ACTIVE_UNIFORM_BLOCKS);\n  for (let blockIndex = 0; blockIndex < count; blockIndex++) {\n    const vertex = gl.getActiveUniformBlockParameter(program, blockIndex, gl.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n    const fragment = gl.getActiveUniformBlockParameter(program, blockIndex, gl.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n    const visibility = (vertex) + (fragment);\n    const binding: BufferBinding = {\n      location: gl.getActiveUniformBlockParameter(program, blockIndex, gl.UNIFORM_BLOCK_BINDING),\n      // name: gl.getActiveUniformBlockName(program, blockIndex),\n      type: 'uniform',\n      visibility,\n      minBindingSize: gl.getActiveUniformBlockParameter(program, blockIndex, gl.UNIFORM_BLOCK_DATA_SIZE),\n      // uniformCount: gl.getActiveUniformBlockParameter(program, blockIndex, gl.UNIFORM_BLOCK_ACTIVE_UNIFORMS),\n      // uniformIndices: gl.getActiveUniformBlockParameter(program, blockIndex, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES),\n    }\n    bindings.push(binding);\n  }\n*/\n\nconst SAMPLER_UNIFORMS_GL_TO_GPU: Record<\n  number,\n  [\n    '1d' | '2d' | '2d-array' | 'cube' | 'cube-array' | '3d',\n    'float' | 'unfilterable-float' | 'depth' | 'sint' | 'uint'\n  ]\n> = {\n  [GL.SAMPLER_2D]: ['2d', 'float'],\n  [GL.SAMPLER_CUBE]: ['cube', 'float'],\n  [GL.SAMPLER_3D]: ['3d', 'float'],\n  [GL.SAMPLER_2D_SHADOW]: ['3d', 'depth'],\n  [GL.SAMPLER_2D_ARRAY]: ['2d-array', 'float'],\n  [GL.SAMPLER_2D_ARRAY_SHADOW]: ['2d-array', 'depth'],\n  [GL.SAMPLER_CUBE_SHADOW]: ['cube', 'float'],\n  [GL.INT_SAMPLER_2D]: ['2d', 'sint'],\n  [GL.INT_SAMPLER_3D]: ['3d', 'sint'],\n  [GL.INT_SAMPLER_CUBE]: ['cube', 'sint'],\n  [GL.INT_SAMPLER_2D_ARRAY]: ['2d-array', 'uint'],\n  [GL.UNSIGNED_INT_SAMPLER_2D]: ['2d', 'uint'],\n  [GL.UNSIGNED_INT_SAMPLER_3D]: ['3d', 'uint'],\n  [GL.UNSIGNED_INT_SAMPLER_CUBE]: ['cube', 'uint'],\n  [GL.UNSIGNED_INT_SAMPLER_2D_ARRAY]: ['2d-array', 'uint']\n};\n\ntype SamplerInfo = {\n  viewDimension: '1d' | '2d' | '2d-array' | 'cube' | 'cube-array' | '3d';\n  sampleType: 'float' | 'unfilterable-float' | 'depth' | 'sint' | 'uint';\n};\n\nfunction getSamplerInfo(type: GL): SamplerInfo {\n  const sampler = SAMPLER_UNIFORMS_GL_TO_GPU[type];\n  if (!sampler) {\n    throw new Error('sampler');\n  }\n  const [viewDimension, sampleType] = sampler;\n  return {viewDimension, sampleType};\n}\n\n// HELPERS\n\nfunction parseUniformName(name: string): {name: string; length: number; isArray: boolean} {\n  // Shortcut to avoid redundant or bad matches\n  if (name[name.length - 1] !== ']') {\n    return {\n      name,\n      length: 1,\n      isArray: false\n    };\n  }\n\n  // if array name then clean the array brackets\n  const UNIFORM_NAME_REGEXP = /([^[]*)(\\[[0-9]+\\])?/;\n  const matches = UNIFORM_NAME_REGEXP.exec(name);\n  if (!matches || matches.length < 2) {\n    throw new Error(`Failed to parse GLSL uniform name ${name}`);\n  }\n\n  return {\n    name: matches[1],\n    length: matches[2] ? 1 : 0,\n    isArray: Boolean(matches[2])\n  };\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* eslint-disable */\n\n// Uniforms\nimport type {UniformValue} from '@luma.gl/core';\nimport {GL, GLCompositeType, GLSamplerType} from '@luma.gl/constants';\n\n/** Set a raw uniform (without type conversion and caching) */\n/* eslint-disable max-len */\nexport function setUniform(\n  gl: WebGL2RenderingContext,\n  location: WebGLUniformLocation,\n  type: GLCompositeType | GLSamplerType,\n  value: UniformValue\n): void {\n  const gl2 = gl as WebGL2RenderingContext;\n\n  // Prepare the value for WebGL setters\n  let uniformValue = value;\n  if (uniformValue === true) {\n    uniformValue = 1;\n  }\n  if (uniformValue === false) {\n    uniformValue = 0;\n  }\n  const arrayValue = typeof uniformValue === 'number' ? [uniformValue] : uniformValue;\n\n  // prettier-ignore\n  switch (type) {\n    case GL.SAMPLER_2D:\n    case GL.SAMPLER_CUBE:\n    case GL.SAMPLER_3D:\n    case GL.SAMPLER_2D_SHADOW:\n    case GL.SAMPLER_2D_ARRAY:\n    case GL.SAMPLER_2D_ARRAY_SHADOW:\n    case GL.SAMPLER_CUBE_SHADOW:\n    case GL.INT_SAMPLER_2D:\n    case GL.INT_SAMPLER_3D:\n    case GL.INT_SAMPLER_CUBE:\n    case GL.INT_SAMPLER_2D_ARRAY:\n    case GL.UNSIGNED_INT_SAMPLER_2D:\n    case GL.UNSIGNED_INT_SAMPLER_3D:\n    case GL.UNSIGNED_INT_SAMPLER_CUBE:\n    case GL.UNSIGNED_INT_SAMPLER_2D_ARRAY:\n      if (typeof value !== 'number') {\n        throw new Error('samplers must be set to integers');\n      }\n      return gl.uniform1i(location, value);\n\n    case GL.FLOAT: return gl.uniform1fv(location, arrayValue);\n    case GL.FLOAT_VEC2: return gl.uniform2fv(location, arrayValue);\n    case GL.FLOAT_VEC3: return gl.uniform3fv(location, arrayValue);\n    case GL.FLOAT_VEC4: return gl.uniform4fv(location, arrayValue);\n\n    case GL.INT: return gl.uniform1iv(location, arrayValue);\n    case GL.INT_VEC2: return gl.uniform2iv(location, arrayValue);\n    case GL.INT_VEC3: return gl.uniform3iv(location, arrayValue);\n    case GL.INT_VEC4: return gl.uniform4iv(location, arrayValue);\n\n    case GL.BOOL: return gl.uniform1iv(location, arrayValue);\n    case GL.BOOL_VEC2: return gl.uniform2iv(location, arrayValue);\n    case GL.BOOL_VEC3: return gl.uniform3iv(location, arrayValue);\n    case GL.BOOL_VEC4: return gl.uniform4iv(location, arrayValue);\n\n    // WEBGL2 - unsigned integers\n    case GL.UNSIGNED_INT: return gl2.uniform1uiv(location, arrayValue, 1);\n    case GL.UNSIGNED_INT_VEC2: return gl2.uniform2uiv(location, arrayValue, 2);\n    case GL.UNSIGNED_INT_VEC3: return gl2.uniform3uiv(location, arrayValue, 3);\n    case GL.UNSIGNED_INT_VEC4: return gl2.uniform4uiv(location, arrayValue, 4);\n\n    // WebGL2 - quadratic matrices\n    // false: don't transpose the matrix\n    case GL.FLOAT_MAT2: return gl.uniformMatrix2fv(location, false, arrayValue);\n    case GL.FLOAT_MAT3: return gl.uniformMatrix3fv(location, false, arrayValue);\n    case GL.FLOAT_MAT4: return gl.uniformMatrix4fv(location, false, arrayValue);\n\n    // WebGL2 - rectangular matrices\n    case GL.FLOAT_MAT2x3: return gl2.uniformMatrix2x3fv(location, false, arrayValue);\n    case GL.FLOAT_MAT2x4: return gl2.uniformMatrix2x4fv(location, false, arrayValue);\n    case GL.FLOAT_MAT3x2: return gl2.uniformMatrix3x2fv(location, false, arrayValue);\n    case GL.FLOAT_MAT3x4: return gl2.uniformMatrix3x4fv(location, false, arrayValue);\n    case GL.FLOAT_MAT4x2: return gl2.uniformMatrix4x2fv(location, false, arrayValue);\n    case GL.FLOAT_MAT4x3: return gl2.uniformMatrix4x3fv(location, false, arrayValue);\n  }\n\n  throw new Error('Illegal uniform');\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {UniformValue, Binding} from '@luma.gl/core';\nimport {isNumericArray} from '@math.gl/types';\n\nexport function isUniformValue(value: unknown): value is UniformValue {\n  return isNumericArray(value) !== null || typeof value === 'number' || typeof value === 'boolean';\n}\n\ntype UniformsAndBindings = {\n  bindings: Record<string, Binding>;\n  uniforms: Record<string, UniformValue>;\n};\n\nexport function splitUniformsAndBindings(\n  uniforms: Record<string, Binding | UniformValue>\n): UniformsAndBindings {\n  const result: UniformsAndBindings = {bindings: {}, uniforms: {}};\n  Object.keys(uniforms).forEach(name => {\n    const uniform = uniforms[name];\n    if (isUniformValue(uniform)) {\n      result.uniforms[name] = uniform;\n    } else {\n      result.bindings[name] = uniform;\n    }\n  });\n\n  return result;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {GL, GLPrimitiveTopology, GLPrimitive} from '@luma.gl/constants';\nimport {PrimitiveTopology} from '@luma.gl/core';\n\n// Counts the number of complete primitives given a number of vertices and a drawMode\nexport function getPrimitiveDrawMode(drawMode: GLPrimitiveTopology): GLPrimitive {\n  switch (drawMode) {\n    case GL.POINTS:\n      return GL.POINTS;\n    case GL.LINES:\n      return GL.LINES;\n    case GL.LINE_STRIP:\n      return GL.LINES;\n    case GL.LINE_LOOP:\n      return GL.LINES;\n    case GL.TRIANGLES:\n      return GL.TRIANGLES;\n    case GL.TRIANGLE_STRIP:\n      return GL.TRIANGLES;\n    case GL.TRIANGLE_FAN:\n      return GL.TRIANGLES;\n    default:\n      throw new Error('drawMode');\n  }\n}\n\n// Counts the number of complete \"primitives\" given a number of vertices and a drawMode\nexport function getPrimitiveCount(options: {\n  drawMode: GLPrimitiveTopology;\n  vertexCount: number;\n}): number {\n  const {drawMode, vertexCount} = options;\n  switch (drawMode) {\n    case GL.POINTS:\n    case GL.LINE_LOOP:\n      return vertexCount;\n    case GL.LINES:\n      return vertexCount / 2;\n    case GL.LINE_STRIP:\n      return vertexCount - 1;\n    case GL.TRIANGLES:\n      return vertexCount / 3;\n    case GL.TRIANGLE_STRIP:\n    case GL.TRIANGLE_FAN:\n      return vertexCount - 2;\n    default:\n      throw new Error('drawMode');\n  }\n}\n\n// Counts the number of vertices after splitting the vertex stream into separate \"primitives\"\nexport function getVertexCount(options: {\n  drawMode: GLPrimitiveTopology;\n  vertexCount: number;\n}): number {\n  const {drawMode, vertexCount} = options;\n  const primitiveCount = getPrimitiveCount({drawMode, vertexCount});\n  switch (getPrimitiveDrawMode(drawMode)) {\n    case GL.POINTS:\n      return primitiveCount;\n    case GL.LINES:\n      return primitiveCount * 2;\n    case GL.TRIANGLES:\n      return primitiveCount * 3;\n    default:\n      throw new Error('drawMode');\n  }\n}\n\n/** Get the primitive type for draw */\nexport function getGLDrawMode(\n  topology: PrimitiveTopology\n):\n  | GL.POINTS\n  | GL.LINES\n  | GL.LINE_STRIP\n  | GL.LINE_LOOP\n  | GL.TRIANGLES\n  | GL.TRIANGLE_STRIP\n  | GL.TRIANGLE_FAN {\n  // prettier-ignore\n  switch (topology) {\n    case 'point-list': return GL.POINTS;\n    case 'line-list': return GL.LINES;\n    case 'line-strip': return GL.LINE_STRIP;\n    case 'triangle-list': return GL.TRIANGLES;\n    case 'triangle-strip': return GL.TRIANGLE_STRIP;\n    default: throw new Error(topology);\n  }\n}\n\n/** Get the primitive type for transform feedback */\nexport function getGLPrimitive(topology: PrimitiveTopology): GL.POINTS | GL.LINES | GL.TRIANGLES {\n  // prettier-ignore\n  switch (topology) {\n    case 'point-list': return GL.POINTS;\n    case 'line-list': return GL.LINES;\n    case 'line-strip': return GL.LINES;\n    case 'triangle-list': return GL.TRIANGLES;\n    case 'triangle-strip': return GL.TRIANGLES;\n    default: throw new Error(topology);\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {\n  RenderPipelineProps,\n  RenderPipelineParameters,\n  PrimitiveTopology,\n  ShaderLayout,\n  UniformValue,\n  Binding,\n  RenderPass,\n  VertexArray\n} from '@luma.gl/core';\nimport {RenderPipeline, log} from '@luma.gl/core';\n// import {getAttributeInfosFromLayouts} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\n\nimport {getShaderLayoutFromGLSL} from '../helpers/get-shader-layout';\nimport {withDeviceAndGLParameters} from '../converters/device-parameters';\nimport {setUniform} from '../helpers/set-uniform';\nimport {splitUniformsAndBindings} from '../../utils/split-uniforms-and-bindings';\n// import {copyUniform, checkUniformValues} from '../../classes/uniforms';\n\nimport {WebGLDevice} from '../webgl-device';\nimport {WEBGLBuffer} from './webgl-buffer';\nimport {WEBGLShader} from './webgl-shader';\nimport {WEBGLFramebuffer} from './webgl-framebuffer';\nimport {WEBGLTexture} from './webgl-texture';\nimport {WEBGLTextureView} from './webgl-texture-view';\nimport {WEBGLRenderPass} from './webgl-render-pass';\nimport {WEBGLTransformFeedback} from './webgl-transform-feedback';\nimport {getGLDrawMode} from '../helpers/webgl-topology-utils';\n\nconst LOG_PROGRAM_PERF_PRIORITY = 4;\n\n/** Creates a new render pipeline */\nexport class WEBGLRenderPipeline extends RenderPipeline {\n  /** The WebGL device that created this render pipeline */\n  device: WebGLDevice;\n  /** Handle to underlying WebGL program */\n  handle: WebGLProgram;\n  /** vertex shader */\n  vs: WEBGLShader;\n  /** fragment shader */\n  fs: WEBGLShader;\n  /** The layout extracted from shader by WebGL introspection APIs */\n  introspectedLayout: ShaderLayout;\n\n  /** Uniforms set on this model */\n  uniforms: Record<string, UniformValue> = {};\n  /** Bindings set on this model */\n  bindings: Record<string, Binding> = {};\n  /** WebGL varyings */\n  varyings: string[] | null = null;\n\n  _uniformCount: number = 0;\n  _uniformSetters: Record<string, Function> = {}; // TODO are these used?\n\n  constructor(device: WebGLDevice, props: RenderPipelineProps) {\n    super(device, props);\n    this.device = device;\n    this.handle = this.props.handle || this.device.gl.createProgram();\n    this.device.setSpectorMetadata(this.handle, {id: this.props.id});\n\n    // Create shaders if needed\n    this.vs = props.vs as WEBGLShader;\n    this.fs = props.fs as WEBGLShader;\n    // assert(this.vs.stage === 'vertex');\n    // assert(this.fs.stage === 'fragment');\n\n    // Setup varyings if supplied\n    // @ts-expect-error WebGL only\n    const {varyings, bufferMode = GL.SEPARATE_ATTRIBS} = props;\n    if (varyings && varyings.length > 0) {\n      this.varyings = varyings;\n      this.device.gl.transformFeedbackVaryings(this.handle, varyings, bufferMode);\n    }\n\n    this._linkShaders();\n\n    log.time(1, `RenderPipeline ${this.id} - shaderLayout introspection`)();\n    this.introspectedLayout = getShaderLayoutFromGLSL(this.device.gl, this.handle);\n    log.timeEnd(1, `RenderPipeline ${this.id} - shaderLayout introspection`)();\n\n    // Merge provided layout with introspected layout\n    this.shaderLayout = mergeShaderLayout(this.introspectedLayout, props.shaderLayout);\n  }\n\n  override destroy(): void {\n    if (this.handle) {\n      this.device.gl.deleteProgram(this.handle);\n      // this.handle = null;\n      this.destroyed = true;\n    }\n  }\n\n  /**\n   * Bindings include: textures, samplers and uniform buffers\n   * @todo needed for portable model\n   */\n  setBindings(bindings: Record<string, Binding>, options?: {disableWarnings?: boolean}): void {\n    // if (log.priority >= 2) {\n    //   checkUniformValues(uniforms, this.id, this._uniformSetters);\n    // }\n\n    for (const [name, value] of Object.entries(bindings)) {\n      // Accept both `xyz` and `xyzUniforms` as valid names for `xyzUniforms` uniform block\n      // This convention allows shaders to name uniform blocks as `uniform appUniforms {} app;`\n      // and reference them as `app` from both GLSL and JS.\n      // TODO - this is rather hacky - we could also remap the name directly in the shader layout.\n      const binding =\n        this.shaderLayout.bindings.find(binding_ => binding_.name === name) ||\n        this.shaderLayout.bindings.find(binding_ => binding_.name === `${name}Uniforms`);\n\n      if (!binding) {\n        const validBindings = this.shaderLayout.bindings\n          .map(binding_ => `\"${binding_.name}\"`)\n          .join(', ');\n        if (!options?.disableWarnings) {\n          log.warn(\n            `No binding \"${name}\" in render pipeline \"${this.id}\", expected one of ${validBindings}`,\n            value\n          )();\n        }\n        continue; // eslint-disable-line no-continue\n      }\n      if (!value) {\n        log.warn(`Unsetting binding \"${name}\" in render pipeline \"${this.id}\"`)();\n      }\n      switch (binding.type) {\n        case 'uniform':\n          // @ts-expect-error\n          if (!(value instanceof WEBGLBuffer) && !(value.buffer instanceof WEBGLBuffer)) {\n            throw new Error('buffer value');\n          }\n          break;\n        case 'texture':\n          if (\n            !(\n              value instanceof WEBGLTextureView ||\n              value instanceof WEBGLTexture ||\n              value instanceof WEBGLFramebuffer\n            )\n          ) {\n            throw new Error('texture value');\n          }\n          break;\n        case 'sampler':\n          log.warn(`Ignoring sampler ${name}`)();\n          break;\n        default:\n          throw new Error(binding.type);\n      }\n\n      this.bindings[name] = value;\n    }\n  }\n\n  /** @todo needed for portable model\n   * @note The WebGL API is offers many ways to draw things\n   * This function unifies those ways into a single call using common parameters with sane defaults\n   */\n  draw(options: {\n    renderPass: RenderPass;\n    parameters?: RenderPipelineParameters;\n    topology?: PrimitiveTopology;\n    vertexArray: VertexArray;\n    isInstanced?: boolean;\n    vertexCount?: number;\n    indexCount?: number;\n    instanceCount?: number;\n    firstVertex?: number;\n    firstIndex?: number;\n    firstInstance?: number;\n    baseVertex?: number;\n    transformFeedback?: WEBGLTransformFeedback;\n  }): boolean {\n    const {\n      renderPass,\n      parameters = this.props.parameters,\n      topology = this.props.topology,\n      vertexArray,\n      vertexCount,\n      // indexCount,\n      instanceCount,\n      isInstanced = false,\n      firstVertex = 0,\n      // firstIndex,\n      // firstInstance,\n      // baseVertex,\n      transformFeedback\n    } = options;\n\n    const glDrawMode = getGLDrawMode(topology);\n    const isIndexed: boolean = Boolean(vertexArray.indexBuffer);\n    const glIndexType = (vertexArray.indexBuffer as WEBGLBuffer)?.glIndexType;\n    // Note that we sometimes get called with 0 instances\n\n    // If we are using async linking, we need to wait until linking completes\n    if (this.linkStatus !== 'success') {\n      log.info(2, `RenderPipeline:${this.id}.draw() aborted - waiting for shader linking`)();\n      return false;\n    }\n\n    // Avoid WebGL draw call when not rendering any data or values are incomplete\n    // Note: async textures set as uniforms might still be loading.\n    // Now that all uniforms have been updated, check if any texture\n    // in the uniforms is not yet initialized, then we don't draw\n    if (!this._areTexturesRenderable()) {\n      log.info(2, `RenderPipeline:${this.id}.draw() aborted - textures not yet loaded`)();\n      //  Note: false means that the app needs to redraw the pipeline again.\n      return false;\n    }\n\n    // (isInstanced && instanceCount === 0)\n    // if (vertexCount === 0) {\n    //   log.info(2, `RenderPipeline:${this.id}.draw() aborted - no vertices to draw`)();\n    //   Note: false means that the app needs to redraw the pipeline again.\n    //   return true;\n    // }\n\n    this.device.gl.useProgram(this.handle);\n\n    // Note: Rebinds constant attributes before each draw call\n    vertexArray.bindBeforeRender(renderPass);\n\n    if (transformFeedback) {\n      transformFeedback.begin(this.props.topology);\n    }\n\n    // We have to apply bindings before every draw call since other draw calls will overwrite\n    this._applyBindings();\n    this._applyUniforms();\n\n    const webglRenderPass = renderPass as WEBGLRenderPass;\n\n    withDeviceAndGLParameters(this.device, parameters, webglRenderPass.glParameters, () => {\n      if (isIndexed && isInstanced) {\n        this.device.gl.drawElementsInstanced(\n          glDrawMode,\n          vertexCount || 0, // indexCount?\n          glIndexType,\n          firstVertex,\n          instanceCount || 0\n        );\n        // } else if (isIndexed && this.device.isWebGL2 && !isNaN(start) && !isNaN(end)) {\n        //   this.device.gldrawRangeElements(glDrawMode, start, end, vertexCount, glIndexType, offset);\n      } else if (isIndexed) {\n        this.device.gl.drawElements(glDrawMode, vertexCount || 0, glIndexType, firstVertex); // indexCount?\n      } else if (isInstanced) {\n        this.device.gl.drawArraysInstanced(\n          glDrawMode,\n          firstVertex,\n          vertexCount || 0,\n          instanceCount || 0\n        );\n      } else {\n        this.device.gl.drawArrays(glDrawMode, firstVertex, vertexCount || 0);\n      }\n\n      if (transformFeedback) {\n        transformFeedback.end();\n      }\n    });\n\n    vertexArray.unbindAfterRender(renderPass);\n\n    return true;\n  }\n\n  // DEPRECATED METHODS\n\n  override setUniformsWebGL(uniforms: Record<string, UniformValue>) {\n    const {bindings} = splitUniformsAndBindings(uniforms);\n    Object.keys(bindings).forEach(name => {\n      log.warn(\n        `Unsupported value \"${JSON.stringify(\n          bindings[name]\n        )}\" used in setUniforms() for key ${name}. Use setBindings() instead?`\n      )();\n    });\n    // TODO - check against layout\n    Object.assign(this.uniforms, uniforms);\n  }\n\n  // PRIVATE METHODS\n\n  // setAttributes(attributes: Record<string, Buffer>): void {}\n  // setBindings(bindings: Record<string, Binding>): void {}\n\n  protected async _linkShaders() {\n    const {gl} = this.device;\n    gl.attachShader(this.handle, this.vs.handle);\n    gl.attachShader(this.handle, this.fs.handle);\n    log.time(LOG_PROGRAM_PERF_PRIORITY, `linkProgram for ${this.id}`)();\n    gl.linkProgram(this.handle);\n    log.timeEnd(LOG_PROGRAM_PERF_PRIORITY, `linkProgram for ${this.id}`)();\n\n    // TODO Avoid checking program linking error in production\n    if (log.level === 0) {\n      // return;\n    }\n\n    if (!this.device.features.has('compilation-status-async-webgl')) {\n      const status = this._getLinkStatus();\n      this._reportLinkStatus(status);\n      return;\n    }\n\n    // async case\n    log.once(1, 'RenderPipeline linking is asynchronous')();\n    await this._waitForLinkComplete();\n    log.info(2, `RenderPipeline ${this.id} - async linking complete: ${this.linkStatus}`)();\n    const status = this._getLinkStatus();\n    this._reportLinkStatus(status);\n  }\n\n  /** Report link status. First, check for shader compilation failures if linking fails */\n  async _reportLinkStatus(status: 'success' | 'linking' | 'validation'): Promise<void> {\n    switch (status) {\n      case 'success':\n        return;\n\n      default:\n        // First check for shader compilation failures if linking fails\n        switch (this.vs.compilationStatus) {\n          case 'error':\n            this.vs.debugShader();\n            throw new Error(`Error during compilation of shader ${this.vs.id}`);\n          case 'pending':\n            this.vs.asyncCompilationStatus.then(() => this.vs.debugShader());\n            break;\n          case 'success':\n            break;\n        }\n\n        switch (this.fs?.compilationStatus) {\n          case 'error':\n            this.fs.debugShader();\n            throw new Error(`Error during compilation of shader ${this.fs.id}`);\n          case 'pending':\n            this.fs.asyncCompilationStatus.then(() => this.fs.debugShader());\n            break;\n          case 'success':\n            break;\n        }\n\n        const linkErrorLog = this.device.gl.getProgramInfoLog(this.handle);\n        throw new Error(`Error during ${status}: ${linkErrorLog}`);\n    }\n  }\n\n  /**\n   * Get the shader compilation status\n   * TODO - Load log even when no error reported, to catch warnings?\n   * https://gamedev.stackexchange.com/questions/30429/how-to-detect-glsl-warnings\n   */\n  _getLinkStatus(): 'success' | 'linking' | 'validation' {\n    const {gl} = this.device;\n    const linked = gl.getProgramParameter(this.handle, gl.LINK_STATUS);\n    if (!linked) {\n      this.linkStatus = 'error';\n      return 'linking';\n    }\n\n    gl.validateProgram(this.handle);\n    const validated = gl.getProgramParameter(this.handle, gl.VALIDATE_STATUS);\n    if (!validated) {\n      this.linkStatus = 'error';\n      return 'validation';\n    }\n\n    this.linkStatus = 'success';\n    return 'success';\n  }\n\n  /** Use KHR_parallel_shader_compile extension if available */\n  async _waitForLinkComplete(): Promise<void> {\n    const waitMs = async (ms: number) => await new Promise(resolve => setTimeout(resolve, ms));\n    const DELAY_MS = 10; // Shader compilation is typically quite fast (with some exceptions)\n\n    // If status polling is not available, we can't wait for completion. Just wait a little to minimize blocking\n    if (!this.device.features.has('compilation-status-async-webgl')) {\n      await waitMs(DELAY_MS);\n      return;\n    }\n\n    const {gl} = this.device;\n    for (;;) {\n      const complete = gl.getProgramParameter(this.handle, GL.COMPLETION_STATUS_KHR);\n      if (complete) {\n        return;\n      }\n      await waitMs(DELAY_MS);\n    }\n  }\n\n  /**\n   * Checks if all texture-values uniforms are renderable (i.e. loaded)\n   * Update a texture if needed (e.g. from video)\n   * Note: This is currently done before every draw call\n   */\n  _areTexturesRenderable() {\n    let texturesRenderable = true;\n\n    for (const bindingInfo of this.shaderLayout.bindings) {\n      if (\n        !this.bindings[bindingInfo.name] &&\n        !this.bindings[bindingInfo.name.replace(/Uniforms$/, '')]\n      ) {\n        log.warn(`Binding ${bindingInfo.name} not found in ${this.id}`)();\n        texturesRenderable = false;\n      }\n    }\n\n    // TODO - remove this should be handled by ExternalTexture\n    // for (const [, texture] of Object.entries(this.bindings)) {\n    //   if (texture instanceof WEBGLTexture) {\n    //     texture.update();\n    //   }\n    // }\n\n    return texturesRenderable;\n  }\n\n  /** Apply any bindings (before each draw call) */\n  _applyBindings() {\n    // If we are using async linking, we need to wait until linking completes\n    if (this.linkStatus !== 'success') {\n      return;\n    }\n\n    const {gl} = this.device;\n    gl.useProgram(this.handle);\n\n    let textureUnit = 0;\n    let uniformBufferIndex = 0;\n    for (const binding of this.shaderLayout.bindings) {\n      // Accept both `xyz` and `xyzUniforms` as valid names for `xyzUniforms` uniform block\n      const value =\n        this.bindings[binding.name] || this.bindings[binding.name.replace(/Uniforms$/, '')];\n      if (!value) {\n        throw new Error(`No value for binding ${binding.name} in ${this.id}`);\n      }\n      switch (binding.type) {\n        case 'uniform':\n          // Set buffer\n          const {name} = binding;\n          const location = gl.getUniformBlockIndex(this.handle, name);\n          if ((location as GL) === GL.INVALID_INDEX) {\n            throw new Error(`Invalid uniform block name ${name}`);\n          }\n          gl.uniformBlockBinding(this.handle, uniformBufferIndex, location);\n          // console.debug(binding, location);\n          if (value instanceof WEBGLBuffer) {\n            gl.bindBufferBase(GL.UNIFORM_BUFFER, uniformBufferIndex, value.handle);\n          } else {\n            gl.bindBufferRange(\n              GL.UNIFORM_BUFFER,\n              uniformBufferIndex,\n              // @ts-expect-error\n              value.buffer.handle,\n              // @ts-expect-error\n              value.offset || 0,\n              // @ts-expect-error\n              value.size || value.buffer.byteLength - value.offset\n            );\n          }\n          uniformBufferIndex += 1;\n          break;\n\n        case 'texture':\n          if (\n            !(\n              value instanceof WEBGLTextureView ||\n              value instanceof WEBGLTexture ||\n              value instanceof WEBGLFramebuffer\n            )\n          ) {\n            throw new Error('texture');\n          }\n          let texture: WEBGLTexture;\n          if (value instanceof WEBGLTextureView) {\n            texture = value.texture;\n          } else if (value instanceof WEBGLTexture) {\n            texture = value;\n          } else if (\n            value instanceof WEBGLFramebuffer &&\n            value.colorAttachments[0] instanceof WEBGLTextureView\n          ) {\n            log.warn(\n              'Passing framebuffer in texture binding may be deprecated. Use fbo.colorAttachments[0] instead'\n            )();\n            texture = value.colorAttachments[0].texture;\n          } else {\n            throw new Error('No texture');\n          }\n\n          gl.activeTexture(GL.TEXTURE0 + textureUnit);\n          gl.bindTexture(texture.glTarget, texture.handle);\n          // gl.bindSampler(textureUnit, sampler.handle);\n          textureUnit += 1;\n          break;\n\n        case 'sampler':\n          // ignore\n          break;\n\n        case 'storage':\n        case 'read-only-storage':\n          throw new Error(`binding type '${binding.type}' not supported in WebGL`);\n      }\n    }\n  }\n\n  /**\n   * Due to program sharing, uniforms need to be reset before every draw call\n   * (though caching will avoid redundant WebGL calls)\n   */\n  _applyUniforms() {\n    for (const uniformLayout of this.shaderLayout.uniforms || []) {\n      const {name, location, type, textureUnit} = uniformLayout;\n      const value = this.uniforms[name] ?? textureUnit;\n      if (value !== undefined) {\n        setUniform(this.device.gl, location, type, value);\n      }\n    }\n  }\n}\n\n/**\n * Merges an provided shader layout into a base shader layout\n * In WebGL, this allows the auto generated shader layout to be overridden by the application\n * Typically to change the format of the vertex attributes (from float32x4 to uint8x4 etc).\n * @todo Drop this? Aren't all use cases covered by mergeBufferLayout()?\n */\nfunction mergeShaderLayout(baseLayout: ShaderLayout, overrideLayout: ShaderLayout): ShaderLayout {\n  // Deep clone the base layout\n  const mergedLayout: ShaderLayout = {\n    ...baseLayout,\n    attributes: baseLayout.attributes.map(attribute => ({...attribute}))\n  };\n  // Merge the attributes\n  for (const attribute of overrideLayout?.attributes || []) {\n    const baseAttribute = mergedLayout.attributes.find(attr => attr.name === attribute.name);\n    if (!baseAttribute) {\n      log.warn(`shader layout attribute ${attribute.name} not present in shader`);\n    } else {\n      baseAttribute.type = attribute.type || baseAttribute.type;\n      baseAttribute.stepMode = attribute.stepMode || baseAttribute.stepMode;\n    }\n  }\n  return mergedLayout;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {\n  CopyBufferToBufferOptions,\n  CopyBufferToTextureOptions,\n  CopyTextureToBufferOptions,\n  CopyTextureToTextureOptions\n  // ClearTextureOptions,\n  // ReadTextureOptions\n} from '@luma.gl/core';\nimport {CommandBuffer, Texture, Framebuffer} from '@luma.gl/core';\nimport {\n  GL,\n  GLTextureTarget,\n  GLTextureCubeMapTarget\n  // GLTexelDataFormat,\n  // GLPixelType,\n  // GLDataType\n} from '@luma.gl/constants';\n\nimport {WebGLDevice} from '../webgl-device';\nimport {WEBGLBuffer} from './webgl-buffer';\nimport {WEBGLTexture} from './webgl-texture';\nimport {WEBGLFramebuffer} from './webgl-framebuffer';\nimport {getTextureFormatWebGL} from '../converters/webgl-texture-table';\n\ntype CopyBufferToBufferCommand = {\n  name: 'copy-buffer-to-buffer';\n  options: CopyBufferToBufferOptions;\n};\n\ntype CopyBufferToTextureCommand = {\n  name: 'copy-buffer-to-texture';\n  options: CopyBufferToTextureOptions;\n};\n\ntype CopyTextureToBufferCommand = {\n  name: 'copy-texture-to-buffer';\n  options: CopyTextureToBufferOptions;\n};\n\ntype CopyTextureToTextureCommand = {\n  name: 'copy-texture-to-texture';\n  options: CopyTextureToTextureOptions;\n};\n\ntype ClearTextureCommand = {\n  name: 'clear-texture';\n  options: {}; // ClearTextureOptions;\n};\n\ntype ReadTextureCommand = {\n  name: 'read-texture';\n  options: {}; // ReadTextureOptions;\n};\n\ntype Command =\n  | CopyBufferToBufferCommand\n  | CopyBufferToTextureCommand\n  | CopyTextureToBufferCommand\n  | CopyTextureToTextureCommand\n  | ClearTextureCommand\n  | ReadTextureCommand;\n\nexport class WEBGLCommandBuffer extends CommandBuffer {\n  device: WebGLDevice;\n  commands: Command[] = [];\n\n  constructor(device: WebGLDevice) {\n    super(device, {});\n    this.device = device;\n  }\n\n  submitCommands(commands: Command[] = this.commands) {\n    for (const command of commands) {\n      switch (command.name) {\n        case 'copy-buffer-to-buffer':\n          _copyBufferToBuffer(this.device, command.options);\n          break;\n        case 'copy-buffer-to-texture':\n          _copyBufferToTexture(this.device, command.options);\n          break;\n        case 'copy-texture-to-buffer':\n          _copyTextureToBuffer(this.device, command.options);\n          break;\n        case 'copy-texture-to-texture':\n          _copyTextureToTexture(this.device, command.options);\n          break;\n        // case 'clear-texture':\n        //   _clearTexture(this.device, command.options);\n        //   break;\n        default:\n          throw new Error(command.name);\n      }\n    }\n  }\n}\n\nfunction _copyBufferToBuffer(device: WebGLDevice, options: CopyBufferToBufferOptions): void {\n  const source = options.sourceBuffer as WEBGLBuffer;\n  const destination = options.destinationBuffer as WEBGLBuffer;\n\n  // {In WebGL2 we can p}erform the copy on the GPU\n  // Use GL.COPY_READ_BUFFER+GL.COPY_WRITE_BUFFER avoid disturbing other targets and locking type\n  device.gl.bindBuffer(GL.COPY_READ_BUFFER, source.handle);\n  device.gl.bindBuffer(GL.COPY_WRITE_BUFFER, destination.handle);\n  device.gl.copyBufferSubData(\n    GL.COPY_READ_BUFFER,\n    GL.COPY_WRITE_BUFFER,\n    options.sourceOffset ?? 0,\n    options.destinationOffset ?? 0,\n    options.size\n  );\n  device.gl.bindBuffer(GL.COPY_READ_BUFFER, null);\n  device.gl.bindBuffer(GL.COPY_WRITE_BUFFER, null);\n}\n\n/**\n * Copies data from a Buffer object into a Texture object\n * NOTE: doesn't wait for copy to be complete\n */\nfunction _copyBufferToTexture(device: WebGLDevice, options: CopyBufferToTextureOptions): void {\n  throw new Error('Not implemented');\n}\n\n/**\n * Copies data from a Texture object into a Buffer object.\n * NOTE: doesn't wait for copy to be complete\n */\nfunction _copyTextureToBuffer(device: WebGLDevice, options: CopyTextureToBufferOptions): void {\n  const {\n    /** Texture to copy to/from. */\n    sourceTexture,\n    /**  Mip-map level of the texture to copy to/from. (Default 0) */\n    mipLevel = 0,\n    /** Defines which aspects of the texture to copy to/from. */\n    aspect = 'all',\n\n    /** Width to copy */\n    width = options.sourceTexture.width,\n    /** Height to copy */\n    height = options.sourceTexture.height,\n    depthOrArrayLayers = 0,\n    /** Defines the origin of the copy - the minimum corner of the texture sub-region to copy to/from. */\n    origin = [0, 0],\n\n    /** Destination buffer */\n    destinationBuffer,\n    /** Offset, in bytes, from the beginning of the buffer to the start of the image data (default 0) */\n    byteOffset = 0,\n    /**\n     * The stride, in bytes, between the beginning of each block row and the subsequent block row.\n     * Required if there are multiple block rows (i.e. the copy height or depth is more than one block).\n     */\n    bytesPerRow,\n    /**\n     * Number of block rows per single image of the texture.\n     * rowsPerImage &times; bytesPerRow is the stride, in bytes, between the beginning of each image of data and the subsequent image.\n     * Required if there are multiple images (i.e. the copy depth is more than one).\n     */\n    rowsPerImage\n  } = options;\n\n  // TODO - Not possible to read just stencil or depth part in WebGL?\n  if (aspect !== 'all') {\n    throw new Error('aspect not supported in WebGL');\n  }\n\n  // TODO - mipLevels are set when attaching texture to framebuffer\n  if (mipLevel !== 0 || depthOrArrayLayers !== 0 || bytesPerRow || rowsPerImage) {\n    throw new Error('not implemented');\n  }\n\n  // Asynchronous read (PIXEL_PACK_BUFFER) is WebGL2 only feature\n  const {framebuffer, destroyFramebuffer} = getFramebuffer(sourceTexture);\n  let prevHandle: WebGLFramebuffer | null | undefined;\n  try {\n    const webglBuffer = destinationBuffer as WEBGLBuffer;\n    const sourceWidth = width || framebuffer.width;\n    const sourceHeight = height || framebuffer.height;\n    const sourceParams = getTextureFormatWebGL(\n      framebuffer.colorAttachments[0].texture.props.format\n    );\n    const sourceFormat = sourceParams.format;\n    const sourceType = sourceParams.type;\n\n    // if (!target) {\n    //   // Create new buffer with enough size\n    //   const components = glFormatToComponents(sourceFormat);\n    //   const byteCount = glTypeToBytes(sourceType);\n    //   const byteLength = byteOffset + sourceWidth * sourceHeight * components * byteCount;\n    //   target = device.createBuffer({byteLength});\n    // }\n\n    device.gl.bindBuffer(GL.PIXEL_PACK_BUFFER, webglBuffer.handle);\n    // @ts-expect-error native bindFramebuffer is overridden by our state tracker\n    prevHandle = device.gl.bindFramebuffer(GL.FRAMEBUFFER, framebuffer.handle);\n\n    device.gl.readPixels(\n      origin[0],\n      origin[1],\n      sourceWidth,\n      sourceHeight,\n      sourceFormat,\n      sourceType,\n      byteOffset\n    );\n  } finally {\n    device.gl.bindBuffer(GL.PIXEL_PACK_BUFFER, null);\n    // prevHandle may be unassigned if the try block failed before binding\n    if (prevHandle !== undefined) {\n      device.gl.bindFramebuffer(GL.FRAMEBUFFER, prevHandle);\n    }\n\n    if (destroyFramebuffer) {\n      framebuffer.destroy();\n    }\n  }\n}\n\n/**\n * Copies data from a Framebuffer or a Texture object into a Buffer object.\n * NOTE: doesn't wait for copy to be complete, it programs GPU to perform a DMA transfer.\nexport function readPixelsToBuffer(\n  source: Framebuffer | Texture,\n  options?: {\n    sourceX?: number;\n    sourceY?: number;\n    sourceFormat?: number;\n    target?: Buffer; // A new Buffer object is created when not provided.\n    targetByteOffset?: number; // byte offset in buffer object\n    // following parameters are auto deduced if not provided\n    sourceWidth?: number;\n    sourceHeight?: number;\n    sourceType?: number;\n  }\n): Buffer\n */\n\n/**\n * Copy a rectangle from a Framebuffer or Texture object into a texture (at an offset)\n */\n// eslint-disable-next-line complexity, max-statements\nfunction _copyTextureToTexture(device: WebGLDevice, options: CopyTextureToTextureOptions): void {\n  const {\n    /** Texture to copy to/from. */\n    sourceTexture,\n    /**  Mip-map level of the texture to copy to (Default 0) */\n    destinationMipLevel = 0,\n    /** Defines which aspects of the texture to copy to/from. */\n    // aspect = 'all',\n    /** Defines the origin of the copy - the minimum corner of the texture sub-region to copy from. */\n    origin = [0, 0],\n\n    /** Defines the origin of the copy - the minimum corner of the texture sub-region to copy to. */\n    destinationOrigin = [0, 0],\n\n    /** Texture to copy to/from. */\n    destinationTexture\n    /**  Mip-map level of the texture to copy to/from. (Default 0) */\n    // destinationMipLevel = options.mipLevel,\n    /** Defines the origin of the copy - the minimum corner of the texture sub-region to copy to/from. */\n    // destinationOrigin = [0, 0],\n    /** Defines which aspects of the texture to copy to/from. */\n    // destinationAspect = options.aspect,\n  } = options;\n\n  let {\n    width = options.destinationTexture.width,\n    height = options.destinationTexture.height\n    // depthOrArrayLayers = 0\n  } = options;\n\n  const {framebuffer, destroyFramebuffer} = getFramebuffer(sourceTexture);\n  const [sourceX, sourceY] = origin;\n  const [destinationX, destinationY, destinationZ] = destinationOrigin;\n\n  // @ts-expect-error native bindFramebuffer is overridden by our state tracker\n  const prevHandle: WebGLFramebuffer | null = device.gl.bindFramebuffer(\n    GL.FRAMEBUFFER,\n    framebuffer.handle\n  );\n  // TODO - support gl.readBuffer (WebGL2 only)\n  // const prevBuffer = gl.readBuffer(attachment);\n\n  let texture: WEBGLTexture = null;\n  let textureTarget: GL;\n  if (destinationTexture instanceof WEBGLTexture) {\n    texture = destinationTexture;\n    width = Number.isFinite(width) ? width : texture.width;\n    height = Number.isFinite(height) ? height : texture.height;\n    texture.bind(0);\n    textureTarget = texture.glTarget;\n  } else {\n    throw new Error('invalid destination');\n  }\n\n  switch (textureTarget) {\n    case GL.TEXTURE_2D:\n    case GL.TEXTURE_CUBE_MAP:\n      device.gl.copyTexSubImage2D(\n        textureTarget,\n        destinationMipLevel,\n        destinationX,\n        destinationY,\n        sourceX,\n        sourceY,\n        width,\n        height\n      );\n      break;\n    case GL.TEXTURE_2D_ARRAY:\n    case GL.TEXTURE_3D:\n      device.gl.copyTexSubImage3D(\n        textureTarget,\n        destinationMipLevel,\n        destinationX,\n        destinationY,\n        destinationZ,\n        sourceX,\n        sourceY,\n        width,\n        height\n      );\n      break;\n    default:\n  }\n\n  if (texture) {\n    texture.unbind();\n  }\n  device.gl.bindFramebuffer(GL.FRAMEBUFFER, prevHandle);\n  if (destroyFramebuffer) {\n    framebuffer.destroy();\n  }\n}\n\n/** Clear one mip level of a texture *\nfunction _clearTexture(device: WebGLDevice, options: ClearTextureOptions) {\n  const BORDER = 0;\n  const {dimension, width, height, depth = 0, mipLevel = 0} = options;\n  const {glInternalFormat, glFormat, glType, compressed} = options;\n  const glTarget = getWebGLCubeFaceTarget(options.glTarget, dimension, depth);\n\n  switch (dimension) {\n    case '2d-array':\n    case '3d':\n      if (compressed) {\n        // prettier-ignore\n        device.gl.compressedTexImage3D(glTarget, mipLevel, glInternalFormat, width, height, depth, BORDER, null);\n      } else {\n        // prettier-ignore\n        device.gl.texImage3D( glTarget, mipLevel, glInternalFormat, width, height, depth, BORDER, glFormat, glType, null);\n      }\n      break;\n\n    case '2d':\n    case 'cube':\n      if (compressed) {\n        // prettier-ignore\n        device.gl.compressedTexImage2D(glTarget, mipLevel, glInternalFormat, width, height, BORDER, null);\n      } else {\n        // prettier-ignore\n        device.gl.texImage2D(glTarget, mipLevel, glInternalFormat, width, height, BORDER, glFormat, glType, null);\n      }\n      break;\n\n    default:\n      throw new Error(dimension);\n  }\n}\n  */\n\n// function _readTexture(device: WebGLDevice, options: CopyTextureToBufferOptions) {}\n\n// HELPERS\n\n/**\n * In WebGL, cube maps specify faces by overriding target instead of using the depth parameter.\n * @note We still bind the texture using GL.TEXTURE_CUBE_MAP, but we need to use the face-specific target when setting mip levels.\n * @returns glTarget unchanged, if dimension !== 'cube'.\n */\nexport function getWebGLCubeFaceTarget(\n  glTarget: GLTextureTarget,\n  dimension: '1d' | '2d' | '2d-array' | 'cube' | 'cube-array' | '3d',\n  level: number\n): GLTextureTarget | GLTextureCubeMapTarget {\n  return dimension === 'cube' ? GL.TEXTURE_CUBE_MAP_POSITIVE_X + level : glTarget;\n}\n\n/** Wrap a texture in a framebuffer so that we can use WebGL APIs that work on framebuffers */\nfunction getFramebuffer(source: Texture | Framebuffer): {\n  framebuffer: WEBGLFramebuffer;\n  destroyFramebuffer: boolean;\n} {\n  if (source instanceof Texture) {\n    const {width, height, id} = source;\n    const framebuffer = source.device.createFramebuffer({\n      id: `framebuffer-for-${id}`,\n      width,\n      height,\n      colorAttachments: [source]\n    }) as unknown as WEBGLFramebuffer;\n\n    return {framebuffer, destroyFramebuffer: true};\n  }\n  return {framebuffer: source as unknown as WEBGLFramebuffer, destroyFramebuffer: false};\n}\n\n/**\n * Returns number of components in a specific readPixels WebGL format\n * @todo use shadertypes utils instead?\n */\nexport function glFormatToComponents(format): 1 | 2 | 3 | 4 {\n  switch (format) {\n    case GL.ALPHA:\n    case GL.R32F:\n    case GL.RED:\n      return 1;\n    case GL.RG32F:\n    case GL.RG:\n      return 2;\n    case GL.RGB:\n    case GL.RGB32F:\n      return 3;\n    case GL.RGBA:\n    case GL.RGBA32F:\n      return 4;\n    // TODO: Add support for additional WebGL2 formats\n    default:\n      throw new Error('GLFormat');\n  }\n}\n\n/**\n * Return byte count for given readPixels WebGL type\n * @todo use shadertypes utils instead?\n */\nexport function glTypeToBytes(type: GL): 1 | 2 | 4 {\n  switch (type) {\n    case GL.UNSIGNED_BYTE:\n      return 1;\n    case GL.UNSIGNED_SHORT_5_6_5:\n    case GL.UNSIGNED_SHORT_4_4_4_4:\n    case GL.UNSIGNED_SHORT_5_5_5_1:\n      return 2;\n    case GL.FLOAT:\n      return 4;\n    // TODO: Add support for additional WebGL2 types\n    default:\n      throw new Error('GLType');\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {CommandEncoder, CommandEncoderProps} from '@luma.gl/core';\nimport type {\n  CopyBufferToBufferOptions,\n  CopyBufferToTextureOptions,\n  CopyTextureToBufferOptions,\n  CopyTextureToTextureOptions,\n  // ClearTextureOptions,\n  // ReadTextureOptions,\n  QuerySet,\n  Buffer\n} from '@luma.gl/core';\n\nimport {WEBGLCommandBuffer} from './webgl-command-buffer';\nimport {WebGLDevice} from '../webgl-device';\n\nexport class WEBGLCommandEncoder extends CommandEncoder {\n  readonly device: WebGLDevice;\n\n  readonly commandBuffer: WEBGLCommandBuffer;\n\n  constructor(device: WebGLDevice, props: CommandEncoderProps) {\n    super(device, props);\n    this.device = device;\n    this.commandBuffer = new WEBGLCommandBuffer(device);\n  }\n\n  override destroy(): void {}\n\n  override finish(): void {\n    this.commandBuffer.submitCommands();\n  }\n\n  // beginRenderPass(GPURenderPassDescriptor descriptor): GPURenderPassEncoder;\n  // beginComputePass(optional GPUComputePassDescriptor descriptor = {}): GPUComputePassEncoder;\n  // finish(options?: {id?: string}): GPUCommandBuffer;\n\n  copyBufferToBuffer(options: CopyBufferToBufferOptions): void {\n    this.commandBuffer.commands.push({name: 'copy-buffer-to-buffer', options});\n  }\n\n  copyBufferToTexture(options: CopyBufferToTextureOptions) {\n    this.commandBuffer.commands.push({name: 'copy-buffer-to-texture', options});\n  }\n\n  copyTextureToBuffer(options: CopyTextureToBufferOptions): void {\n    this.commandBuffer.commands.push({name: 'copy-texture-to-buffer', options});\n  }\n\n  copyTextureToTexture(options: CopyTextureToTextureOptions): void {\n    this.commandBuffer.commands.push({name: 'copy-texture-to-texture', options});\n  }\n\n  // clearTexture(options: ClearTextureOptions): void {\n  //   this.commandBuffer.commands.push({name: 'copy-texture-to-texture', options});\n  // }\n\n  override pushDebugGroup(groupLabel: string): void {}\n  override popDebugGroup() {}\n\n  override insertDebugMarker(markerLabel: string): void {}\n\n  override resolveQuerySet(\n    querySet: QuerySet,\n    destination: Buffer,\n    options?: {\n      firstQuery?: number;\n      queryCount?: number;\n      destinationOffset?: number;\n    }\n  ): void {}\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {NumericArray} from '@math.gl/types';\n\n// Uses copyWithin to significantly speed up typed array value filling\nexport function fillArray(options: {\n  target: NumericArray;\n  source: NumericArray;\n  start?: number;\n  count?: number;\n}): NumericArray {\n  const {target, source, start = 0, count = 1} = options;\n  const length = source.length;\n  const total = count * length;\n  let copied = 0;\n  for (let i = start; copied < length; copied++) {\n    target[i++] = source[copied];\n  }\n\n  while (copied < total) {\n    // If we have copied less than half, copy everything we got\n    // else copy remaining in one operation\n    if (copied < total - copied) {\n      target.copyWithin(start + copied, start, start + copied);\n      copied *= 2;\n    } else {\n      target.copyWithin(start + copied, start, start + total - copied);\n      copied = total;\n    }\n  }\n\n  return options.target;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {TypedArray, NumericArray} from '@math.gl/types';\nimport type {Device, Buffer, VertexArrayProps} from '@luma.gl/core';\nimport {VertexArray, getScratchArray} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\nimport {getBrowser} from '@probe.gl/env';\n\nimport {WebGLDevice} from '../webgl-device';\nimport {WEBGLBuffer} from '../resources/webgl-buffer';\n\nimport {getGLFromVertexType} from '../converters/vertex-formats';\nimport {fillArray} from '../../utils/fill-array';\n\n/** VertexArrayObject wrapper */\nexport class WEBGLVertexArray extends VertexArray {\n  override get [Symbol.toStringTag](): string {\n    return 'VertexArray';\n  }\n\n  readonly device: WebGLDevice;\n  readonly handle: WebGLVertexArrayObject;\n\n  /** Attribute 0 buffer constant */\n  private buffer: WEBGLBuffer | null = null;\n  private bufferValue = null;\n\n  /** * Attribute 0 can not be disable on most desktop OpenGL based browsers */\n  static isConstantAttributeZeroSupported(device: Device): boolean {\n    return getBrowser() === 'Chrome';\n  }\n\n  // Create a VertexArray\n  constructor(device: WebGLDevice, props: VertexArrayProps) {\n    super(device, props);\n    this.device = device;\n    this.handle = this.device.gl.createVertexArray()!;\n  }\n\n  override destroy(): void {\n    super.destroy();\n    if (this.buffer) {\n      this.buffer?.destroy();\n    }\n    if (this.handle) {\n      this.device.gl.deleteVertexArray(this.handle);\n      // @ts-expect-error read-only/undefined\n      this.handle = undefined!;\n    }\n\n    // Auto-delete elements?\n    // return [this.elements];\n  }\n\n  /**\n  // Set (bind/unbind) an elements buffer, for indexed rendering.\n  // Must be a Buffer bound to GL.ELEMENT_ARRAY_BUFFER or null. Constants not supported\n   *\n   * @param elementBuffer\n   */\n  setIndexBuffer(indexBuffer: Buffer | null): void {\n    const buffer = indexBuffer as WEBGLBuffer;\n    // Explicitly allow `null` to support clearing the index buffer\n    if (buffer && buffer.glTarget !== GL.ELEMENT_ARRAY_BUFFER) {\n      throw new Error('Use .setBuffer()');\n    }\n    // In WebGL The GL.ELEMENT_ARRAY_BUFFER_BINDING is stored on the VertexArrayObject\n    this.device.gl.bindVertexArray(this.handle);\n    this.device.gl.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, buffer ? buffer.handle : null);\n\n    this.indexBuffer = buffer;\n\n    // Unbind to prevent unintended changes to the VAO.\n    this.device.gl.bindVertexArray(null);\n  }\n\n  /** Set a location in vertex attributes array to a buffer, enables the location, sets divisor */\n  setBuffer(location: number, attributeBuffer: Buffer): void {\n    const buffer = attributeBuffer as WEBGLBuffer;\n    // Sanity check target\n    if (buffer.glTarget === GL.ELEMENT_ARRAY_BUFFER) {\n      throw new Error('Use .setIndexBuffer()');\n    }\n\n    const {size, type, stride, offset, normalized, integer, divisor} = this._getAccessor(location);\n\n    this.device.gl.bindVertexArray(this.handle);\n    // A non-zero buffer object must be bound to the GL_ARRAY_BUFFER target\n    this.device.gl.bindBuffer(GL.ARRAY_BUFFER, buffer.handle);\n\n    // WebGL2 supports *integer* data formats, i.e. GPU will see integer values\n    if (integer) {\n      this.device.gl.vertexAttribIPointer(location, size, type, stride, offset);\n    } else {\n      // Attaches ARRAY_BUFFER with specified buffer format to location\n      this.device.gl.vertexAttribPointer(location, size, type, normalized, stride, offset);\n    }\n    // Clear binding - keeping it may cause [.WebGL-0x12804417100]\n    // GL_INVALID_OPERATION: A transform feedback buffer that would be written to is also bound to a non-transform-feedback target\n    this.device.gl.bindBuffer(GL.ARRAY_BUFFER, null);\n\n    // Mark as non-constant\n    this.device.gl.enableVertexAttribArray(location);\n    // Set the step mode 0=vertex, 1=instance\n    this.device.gl.vertexAttribDivisor(location, divisor || 0);\n\n    this.attributes[location] = buffer;\n\n    // Unbind to prevent unintended changes to the VAO.\n    this.device.gl.bindVertexArray(null);\n  }\n\n  /** Set a location in vertex attributes array to a constant value, disables the location */\n  override setConstantWebGL(location: number, value: TypedArray): void {\n    this._enable(location, false);\n    this.attributes[location] = value;\n  }\n\n  override bindBeforeRender(): void {\n    this.device.gl.bindVertexArray(this.handle);\n    this._applyConstantAttributes();\n  }\n\n  override unbindAfterRender(): void {\n    // Unbind to prevent unintended changes to the VAO.\n    this.device.gl.bindVertexArray(null);\n  }\n\n  // Internal methods\n\n  /**\n   * Constant attributes need to be reset before every draw call\n   * Any attribute that is disabled in the current vertex array object\n   * is read from the context's global constant value for that attribute location.\n   * @note Constant attributes are only supported in WebGL, not in WebGPU\n   */\n  protected _applyConstantAttributes(): void {\n    for (let location = 0; location < this.maxVertexAttributes; ++location) {\n      const constant = this.attributes[location];\n      // A typed array means this is a constant\n      if (ArrayBuffer.isView(constant)) {\n        this.device.setConstantAttributeWebGL(location, constant);\n      }\n    }\n  }\n\n  /**\n   * Set a location in vertex attributes array to a buffer, enables the location, sets divisor\n   * @note requires vertex array to be bound\n   */\n  // protected _setAttributeLayout(location: number): void {\n  //   const {size, type, stride, offset, normalized, integer, divisor} = this._getAccessor(location);\n\n  //   // WebGL2 supports *integer* data formats, i.e. GPU will see integer values\n  //   if (integer) {\n  //     this.device.gl.vertexAttribIPointer(location, size, type, stride, offset);\n  //   } else {\n  //     // Attaches ARRAY_BUFFER with specified buffer format to location\n  //     this.device.gl.vertexAttribPointer(location, size, type, normalized, stride, offset);\n  //   }\n  //   this.device.gl.vertexAttribDivisor(location, divisor || 0);\n  // }\n\n  /** Get an accessor from the  */\n  protected _getAccessor(location: number) {\n    const attributeInfo = this.attributeInfos[location];\n    if (!attributeInfo) {\n      throw new Error(`Unknown attribute location ${location}`);\n    }\n    const glType = getGLFromVertexType(attributeInfo.bufferDataType);\n    return {\n      size: attributeInfo.bufferComponents,\n      type: glType,\n      stride: attributeInfo.byteStride,\n      offset: attributeInfo.byteOffset,\n      normalized: attributeInfo.normalized,\n      // it is the shader attribute declaration, not the vertex memory format,\n      // that determines if the data in the buffer will be treated as integers.\n      //\n      // Also note that WebGL supports assigning non-normalized integer data to floating point attributes,\n      // but as far as we can tell, WebGPU does not.\n      integer: attributeInfo.integer,\n      divisor: attributeInfo.stepMode === 'instance' ? 1 : 0\n    };\n  }\n\n  /**\n   * Enabling an attribute location makes it reference the currently bound buffer\n   * Disabling an attribute location makes it reference the global constant value\n   * TODO - handle single values for size 1 attributes?\n   * TODO - convert classic arrays based on known type?\n   */\n  protected _enable(location: number, enable = true): void {\n    // Attribute 0 cannot be disabled in most desktop OpenGL based browsers...\n    const canDisableAttributeZero = WEBGLVertexArray.isConstantAttributeZeroSupported(this.device);\n    const canDisableAttribute = canDisableAttributeZero || location !== 0;\n\n    if (enable || canDisableAttribute) {\n      location = Number(location);\n      this.device.gl.bindVertexArray(this.handle);\n      if (enable) {\n        this.device.gl.enableVertexAttribArray(location);\n      } else {\n        this.device.gl.disableVertexAttribArray(location);\n      }\n      this.device.gl.bindVertexArray(null);\n    }\n  }\n\n  /**\n   * Provide a means to create a buffer that is equivalent to a constant.\n   * NOTE: Desktop OpenGL cannot disable attribute 0.\n   * https://stackoverflow.com/questions/20305231/webgl-warning-attribute-0-is-disabled-\n   * this-has-significant-performance-penalty\n   */\n  getConstantBuffer(elementCount: number, value: TypedArray): Buffer {\n    // Create buffer only when needed, and reuse it (avoids inflating buffer creation statistics)\n\n    const constantValue = normalizeConstantArrayValue(value);\n\n    const byteLength = constantValue.byteLength * elementCount;\n    const length = constantValue.length * elementCount;\n\n    if (this.buffer && byteLength !== this.buffer.byteLength) {\n      throw new Error(\n        `Buffer size is immutable, byte length ${byteLength} !== ${this.buffer.byteLength}.`\n      );\n    }\n    let updateNeeded = !this.buffer;\n\n    this.buffer = this.buffer || this.device.createBuffer({byteLength});\n\n    // Reallocate and update contents if needed\n    updateNeeded = updateNeeded || !compareConstantArrayValues(constantValue, this.bufferValue);\n\n    if (updateNeeded) {\n      // Create a typed array that is big enough, and fill it with the required data\n      const typedArray = getScratchArray(value.constructor, length);\n      fillArray({target: typedArray, source: constantValue, start: 0, count: length});\n      this.buffer.write(typedArray);\n      this.bufferValue = value;\n    }\n\n    return this.buffer;\n  }\n}\n\n// HELPER FUNCTIONS\n\n/**\n * TODO - convert Arrays based on known type? (read type from accessor, don't assume Float32Array)\n * TODO - handle single values for size 1 attributes?\n */\nfunction normalizeConstantArrayValue(arrayValue: NumericArray) {\n  if (Array.isArray(arrayValue)) {\n    return new Float32Array(arrayValue);\n  }\n  return arrayValue;\n}\n\n/**\n *\n */\nfunction compareConstantArrayValues(v1: NumericArray, v2: NumericArray): boolean {\n  if (!v1 || !v2 || v1.length !== v2.length || v1.constructor !== v2.constructor) {\n    return false;\n  }\n  for (let i = 0; i < v1.length; ++i) {\n    if (v1[i] !== v2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n", "import type {PrimitiveTopology, ShaderLayout, TransformFeedbackProps} from '@luma.gl/core';\nimport {log, TransformFeedback, Buffer, BufferRange} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\nimport {WebGLDevice} from '../webgl-device';\nimport {WEBGLBuffer} from '../../index';\nimport {getGLPrimitive} from '../helpers/webgl-topology-utils';\n\nexport class WEBGLTransformFeedback extends TransformFeedback {\n  readonly device: WebGLDevice;\n  readonly gl: WebGL2RenderingContext;\n  readonly handle: WebGLTransformFeedback;\n\n  /**\n   * NOTE: The Model already has this information while drawing, but\n   * TransformFeedback currently needs it internally, to look up\n   * varying information outside of a draw() call.\n   */\n  readonly layout: ShaderLayout;\n  buffers: Record<string, BufferRange> = {};\n  unusedBuffers: Record<string, Buffer> = {};\n  /**\n   * Allows us to avoid a Chrome bug where a buffer that is already bound to a\n   * different target cannot be bound to 'TRANSFORM_FEEDBACK_BUFFER' target.\n   * This a major workaround, see: https://github.com/KhronosGroup/WebGL/issues/2346\n   */\n  bindOnUse = true;\n  private _bound: boolean = false;\n\n  constructor(device: WebGLDevice, props: TransformFeedbackProps) {\n    super(device, props);\n\n    this.device = device;\n    this.gl = device.gl;\n    this.handle = this.props.handle || this.gl.createTransformFeedback();\n    this.layout = this.props.layout;\n\n    if (props.buffers) {\n      this.setBuffers(props.buffers);\n    }\n\n    Object.seal(this);\n  }\n\n  override destroy(): void {\n    this.gl.deleteTransformFeedback(this.handle);\n    super.destroy();\n  }\n\n  begin(topology: PrimitiveTopology = 'point-list'): void {\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, this.handle);\n    if (this.bindOnUse) {\n      this._bindBuffers();\n    }\n    this.gl.beginTransformFeedback(getGLPrimitive(topology));\n  }\n\n  end(): void {\n    this.gl.endTransformFeedback();\n    if (this.bindOnUse) {\n      this._unbindBuffers();\n    }\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, null);\n  }\n\n  // SUBCLASS\n\n  setBuffers(buffers: Record<string, Buffer | BufferRange>): void {\n    this.buffers = {};\n    this.unusedBuffers = {};\n\n    this.bind(() => {\n      for (const bufferName in buffers) {\n        this.setBuffer(bufferName, buffers[bufferName]);\n      }\n    });\n  }\n\n  setBuffer(locationOrName: string | number, bufferOrRange: Buffer | BufferRange): void {\n    const location = this._getVaryingIndex(locationOrName);\n    const {buffer, byteLength, byteOffset} = this._getBufferRange(bufferOrRange);\n\n    if (location < 0) {\n      this.unusedBuffers[locationOrName] = buffer;\n      log.warn(`${this.id} unusedBuffers varying buffer ${locationOrName}`)();\n      return;\n    }\n\n    this.buffers[location] = {buffer, byteLength, byteOffset};\n\n    // Need to avoid chrome bug where buffer that is already bound to a different target\n    // cannot be bound to 'TRANSFORM_FEEDBACK_BUFFER' target.\n    if (!this.bindOnUse) {\n      this._bindBuffer(location, buffer, byteOffset, byteLength);\n    }\n  }\n\n  getBuffer(locationOrName: string | number): Buffer | BufferRange | null {\n    if (isIndex(locationOrName)) {\n      return this.buffers[locationOrName] || null;\n    }\n    const location = this._getVaryingIndex(locationOrName);\n    return location >= 0 ? this.buffers[location] : null;\n  }\n\n  bind(funcOrHandle = this.handle) {\n    if (typeof funcOrHandle !== 'function') {\n      this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, funcOrHandle);\n      return this;\n    }\n\n    let value: unknown;\n\n    if (!this._bound) {\n      this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, this.handle);\n      this._bound = true;\n      value = funcOrHandle();\n      this._bound = false;\n      this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, null);\n    } else {\n      value = funcOrHandle();\n    }\n\n    return value;\n  }\n\n  unbind() {\n    this.bind(null);\n  }\n\n  // PRIVATE METHODS\n\n  /** Extract offsets for bindBufferRange */\n  protected _getBufferRange(\n    bufferOrRange: Buffer | {buffer: Buffer; byteOffset?: number; byteLength?: number}\n  ): Required<BufferRange> {\n    if (bufferOrRange instanceof WEBGLBuffer) {\n      return {buffer: bufferOrRange, byteOffset: 0, byteLength: bufferOrRange.byteLength};\n    }\n\n    // To use bindBufferRange either offset or size must be specified.\n    // @ts-expect-error Must be a BufferRange.\n    const {buffer, byteOffset = 0, byteLength = bufferOrRange.buffer.byteLength} = bufferOrRange;\n    return {buffer, byteOffset, byteLength};\n  }\n\n  protected _getVaryingIndex(locationOrName: string | number): number {\n    if (isIndex(locationOrName)) {\n      return Number(locationOrName);\n    }\n\n    for (const varying of this.layout.varyings) {\n      if (locationOrName === varying.name) {\n        return varying.location;\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   * Need to avoid chrome bug where buffer that is already bound to a different target\n   * cannot be bound to 'TRANSFORM_FEEDBACK_BUFFER' target.\n   */\n  protected _bindBuffers(): void {\n    for (const bufferIndex in this.buffers) {\n      const {buffer, byteLength, byteOffset} = this._getBufferRange(this.buffers[bufferIndex]);\n      this._bindBuffer(Number(bufferIndex), buffer, byteOffset, byteLength);\n    }\n  }\n\n  protected _unbindBuffers(): void {\n    for (const bufferIndex in this.buffers) {\n      this.gl.bindBufferBase(GL.TRANSFORM_FEEDBACK_BUFFER, Number(bufferIndex), null);\n    }\n  }\n\n  protected _bindBuffer(index: number, buffer: Buffer, byteOffset = 0, byteLength?: number): void {\n    const handle = buffer && (buffer as WEBGLBuffer).handle;\n    if (!handle || byteLength === undefined) {\n      this.gl.bindBufferBase(GL.TRANSFORM_FEEDBACK_BUFFER, index, handle);\n    } else {\n      this.gl.bindBufferRange(GL.TRANSFORM_FEEDBACK_BUFFER, index, handle, byteOffset, byteLength);\n    }\n  }\n}\n\n/**\n * Returns true if the given value is an integer, or a string that\n * trivially converts to an integer (only numeric characters).\n */\nfunction isIndex(value: string | number): boolean {\n  if (typeof value === 'number') {\n    return Number.isInteger(value);\n  }\n  return /^\\d+$/.test(value);\n}\n", "// WebGL2 Query (also handles disjoint timer extensions)\nimport {QuerySet, QuerySetProps} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\nimport {WebGLDevice} from '../webgl-device';\n\n/**\n * Asynchronous queries for different kinds of information\n */\nexport class WEBGLQuerySet extends QuerySet {\n  device: WebGLDevice;\n  handle: WebGLQuery;\n\n  target: number | null = null;\n  _queryPending = false;\n  _pollingPromise: Promise<any> | null = null;\n\n  override get [Symbol.toStringTag](): string {\n    return 'Query';\n  }\n\n  // Create a query class\n  constructor(device: WebGLDevice, props: QuerySetProps) {\n    super(device, props);\n    this.device = device;\n\n    if (props.count > 1) {\n      throw new Error('WebGL QuerySet can only have one value');\n    }\n\n    this.handle = this.device.gl.createQuery();\n    Object.seal(this);\n  }\n\n  override destroy() {\n    this.device.gl.deleteQuery(this.handle);\n  }\n\n  // FOR RENDER PASS AND COMMAND ENCODER\n\n  /**\n   * Shortcut for timer query (dependent on extension in both WebGL1 and 2)\n   * Measures GPU time delta between this call and a matching `end` call in the\n   * GPU instruction stream.\n   */\n  beginTimestampQuery(): void {\n    return this._begin(GL.TIME_ELAPSED_EXT);\n  }\n\n  endTimestampQuery(): void {\n    this._end();\n  }\n\n  // Shortcut for occlusion queries\n  beginOcclusionQuery(options?: {conservative?: boolean}): void {\n    return this._begin(\n      options?.conservative ? GL.ANY_SAMPLES_PASSED_CONSERVATIVE : GL.ANY_SAMPLES_PASSED\n    );\n  }\n\n  endOcclusionQuery() {\n    this._end();\n  }\n\n  // Shortcut for transformFeedbackQuery\n  beginTransformFeedbackQuery(): void {\n    return this._begin(GL.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN);\n  }\n\n  endTransformFeedbackQuery(): void {\n    this._end();\n  }\n\n  async resolveQuery(): Promise<bigint[]> {\n    const value = await this.pollQuery();\n    return [value];\n  }\n\n  // PRIVATE METHODS\n\n  /**\n   * Due to OpenGL API limitations, after calling `begin()` on one Query\n   * instance, `end()` must be called on that same instance before\n   * calling `begin()` on another query. While there can be multiple\n   * outstanding queries representing disjoint `begin()`/`end()` intervals.\n   * It is not possible to interleave or overlap `begin` and `end` calls.\n   */\n  protected _begin(target: number): void {\n    // Don't start a new query if one is already active.\n    if (this._queryPending) {\n      return;\n    }\n\n    this.target = target;\n    this.device.gl.beginQuery(this.target, this.handle);\n\n    return;\n  }\n\n  // ends the current query\n  protected _end(): void {\n    // Can't end a new query if the last one hasn't been resolved.\n    if (this._queryPending) {\n      return;\n    }\n\n    if (this.target) {\n      this.device.gl.endQuery(this.target);\n      this.target = null;\n      this._queryPending = true;\n    }\n    return;\n  }\n\n  // Returns true if the query result is available\n  isResultAvailable(): boolean {\n    if (!this._queryPending) {\n      return false;\n    }\n\n    const resultAvailable = this.device.gl.getQueryParameter(\n      this.handle,\n      GL.QUERY_RESULT_AVAILABLE\n    );\n    if (resultAvailable) {\n      this._queryPending = false;\n    }\n    return resultAvailable;\n  }\n\n  // Timing query is disjoint, i.e. results are invalid\n  isTimerDisjoint(): boolean {\n    return this.device.gl.getParameter(GL.GPU_DISJOINT_EXT);\n  }\n\n  // Returns query result.\n  getResult(): any {\n    return this.device.gl.getQueryParameter(this.handle, GL.QUERY_RESULT);\n  }\n\n  // Returns the query result, converted to milliseconds to match JavaScript conventions.\n  getTimerMilliseconds() {\n    return this.getResult() / 1e6;\n  }\n\n  // Polls the query\n  pollQuery(limit: number = Number.POSITIVE_INFINITY): Promise<any> {\n    if (this._pollingPromise) {\n      return this._pollingPromise;\n    }\n\n    let counter = 0;\n\n    this._pollingPromise = new Promise((resolve, reject) => {\n      const poll = () => {\n        if (this.isResultAvailable()) {\n          resolve(this.getResult());\n          this._pollingPromise = null;\n        } else if (counter++ > limit) {\n          reject('Timed out');\n          this._pollingPromise = null;\n        } else {\n          requestAnimationFrame(poll);\n        }\n      };\n\n      requestAnimationFrame(poll);\n    });\n\n    return this._pollingPromise;\n  }\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {TypedArray} from '@math.gl/types';\nimport type {\n  DeviceProps,\n  DeviceInfo,\n  DeviceTextureFormatCapabilities,\n  CanvasContextProps,\n  Buffer,\n  Texture,\n  Framebuffer,\n  VertexArray,\n  VertexArrayProps,\n  BufferProps,\n  ShaderProps,\n  // Sampler,\n  SamplerProps,\n  TextureProps,\n  ExternalTexture,\n  ExternalTextureProps,\n  FramebufferProps,\n  // RenderPipeline,\n  RenderPipelineProps,\n  ComputePipeline,\n  ComputePipelineProps,\n  // RenderPass,\n  RenderPassProps,\n  ComputePass,\n  ComputePassProps,\n  // CommandEncoder,\n  CommandEncoderProps,\n  TransformFeedbackProps,\n  QuerySetProps\n} from '@luma.gl/core';\nimport {Device, CanvasContext, log} from '@luma.gl/core';\nimport type {GLExtensions} from '@luma.gl/constants';\nimport {WebGLStateTracker} from '../context/state-tracker/webgl-state-tracker';\nimport {createBrowserContext} from '../context/helpers/create-browser-context';\nimport {getDeviceInfo} from './device-helpers/webgl-device-info';\nimport {WebGLDeviceFeatures} from './device-helpers/webgl-device-features';\nimport {WebGLDeviceLimits} from './device-helpers/webgl-device-limits';\nimport {WebGLCanvasContext} from './webgl-canvas-context';\nimport type {Spector} from '../context/debug/spector-types';\nimport {initializeSpectorJS} from '../context/debug/spector';\nimport {makeDebugContext} from '../context/debug/webgl-developer-tools';\nimport {getTextureFormatCapabilitiesWebGL} from './converters/webgl-texture-table';\nimport {uid} from '../utils/uid';\n\nimport {WEBGLBuffer} from './resources/webgl-buffer';\nimport {WEBGLShader} from './resources/webgl-shader';\nimport {WEBGLSampler} from './resources/webgl-sampler';\nimport {WEBGLTexture} from './resources/webgl-texture';\nimport {WEBGLFramebuffer} from './resources/webgl-framebuffer';\nimport {WEBGLRenderPass} from './resources/webgl-render-pass';\nimport {WEBGLRenderPipeline} from './resources/webgl-render-pipeline';\nimport {WEBGLCommandEncoder} from './resources/webgl-command-encoder';\nimport {WEBGLVertexArray} from './resources/webgl-vertex-array';\nimport {WEBGLTransformFeedback} from './resources/webgl-transform-feedback';\nimport {WEBGLQuerySet} from './resources/webgl-query-set';\n\nimport {readPixelsToArray, readPixelsToBuffer} from './helpers/webgl-texture-utils';\nimport {\n  setGLParameters,\n  getGLParameters,\n  resetGLParameters\n} from '../context/parameters/unified-parameter-api';\nimport {withGLParameters} from '../context/state-tracker/with-parameters';\nimport {getWebGLExtension} from '../context/helpers/webgl-extensions';\n\n/** WebGPU style Device API for a WebGL context */\nexport class WebGLDevice extends Device {\n  //\n  // Public `Device` API\n  //\n\n  /** type of this device */\n  readonly type = 'webgl';\n\n  // Use the ! assertion to handle the case where _reuseDevices causes the constructor to return early\n  /** The underlying WebGL context */\n  readonly handle!: WebGL2RenderingContext;\n  features!: WebGLDeviceFeatures;\n  limits!: WebGLDeviceLimits;\n\n  readonly info!: DeviceInfo;\n  readonly canvasContext!: WebGLCanvasContext;\n\n  readonly lost: Promise<{reason: 'destroyed'; message: string}>;\n\n  private _resolveContextLost?: (value: {reason: 'destroyed'; message: string}) => void;\n\n  /** WebGL2 context. */\n  readonly gl!: WebGL2RenderingContext;\n  readonly debug: boolean = false;\n\n  /** State used by luma.gl classes: TODO - move to canvasContext*/\n  readonly _canvasSizeInfo = {clientWidth: 0, clientHeight: 0, devicePixelRatio: 1};\n\n  /** State used by luma.gl classes - TODO - not used? */\n  readonly _extensions: GLExtensions = {};\n  _polyfilled: boolean = false;\n\n  /** Instance of Spector.js (if initialized) */\n  spectorJS!: Spector | null;\n\n  //\n  // Public API\n  //\n\n  constructor(props: DeviceProps) {\n    super({...props, id: props.id || uid('webgl-device')});\n\n    const canvasContextProps = Device._getCanvasContextProps(props);\n\n    // WebGL requires a canvas to be created before creating the context\n    if (!canvasContextProps) {\n      throw new Error('WebGLDevice requires props.createCanvasContext to be set');\n    }\n\n    // Check if the WebGL context is already associated with a device\n    // Note that this can be avoided in webgl2adapter.create() if\n    // DeviceProps._reuseDevices is set.\n    // @ts-expect-error device is attached to context\n    let device: WebGLDevice | undefined = canvasContextProps.canvas?.gl?.device;\n    if (device) {\n      throw new Error(`WebGL context already attached to device ${device.id}`);\n    }\n\n    // Create and instrument context\n    this.canvasContext = new WebGLCanvasContext(this, canvasContextProps);\n\n    this.lost = new Promise<{reason: 'destroyed'; message: string}>(resolve => {\n      this._resolveContextLost = resolve;\n    });\n\n    const webglContextAttributes: WebGLContextAttributes = {...props.webgl};\n    // Copy props from CanvasContextProps\n    if (canvasContextProps.alphaMode === 'premultiplied') {\n      webglContextAttributes.premultipliedAlpha = true;\n    }\n    if (props.powerPreference !== undefined) {\n      webglContextAttributes.powerPreference = props.powerPreference;\n    }\n\n    // Check if we should attach to an externally created context or create a new context\n    const externalGLContext = this.props._handle as WebGL2RenderingContext | null;\n\n    const gl =\n      externalGLContext ||\n      createBrowserContext(\n        this.canvasContext.canvas,\n        {\n          onContextLost: (event: Event) =>\n            this._resolveContextLost?.({\n              reason: 'destroyed',\n              message: 'Entered sleep mode, or too many apps or browser tabs are using the GPU.'\n            }),\n          // eslint-disable-next-line no-console\n          onContextRestored: (event: Event) => console.log('WebGL context restored')\n        },\n        webglContextAttributes\n      );\n\n    if (!gl) {\n      throw new Error('WebGL context creation failed');\n    }\n\n    // Note that the browser will only create one WebGL context per canvas.\n    // This means that a newly created gl context may already have a device attached to it.\n    // @ts-expect-error luma.gl stores a device reference on the context.\n    device = gl.device;\n    if (device) {\n      if (props._reuseDevices) {\n        log.log(\n          1,\n          `Not creating a new Device, instead returning a reference to Device ${device.id} already attached to WebGL context`,\n          device\n        )();\n        device._reused = true;\n        return device;\n      }\n      throw new Error(`WebGL context already attached to device ${device.id}`);\n    }\n\n    this.handle = gl;\n    this.gl = gl;\n\n    // Add spector debug instrumentation to context\n    // We need to trust spector integration to decide if spector should be initialized\n    // We also run spector instrumentation first, otherwise spector can clobber luma instrumentation.\n    this.spectorJS = initializeSpectorJS({...this.props, gl: this.handle});\n\n    // Instrument context\n    (this.gl as any).device = this; // Update GL context: Link webgl context back to device\n    // TODO - remove, this is only used to detect debug contexts.\n    (this.gl as any)._version = 2; // Update GL context: Store WebGL version field on gl context (HACK to identify debug contexts)\n\n    // initialize luma Device fields\n    this.info = getDeviceInfo(this.gl, this._extensions);\n    this.limits = new WebGLDeviceLimits(this.gl);\n    this.features = new WebGLDeviceFeatures(\n      this.gl,\n      this._extensions,\n      this.props._disabledFeatures\n    );\n    if (this.props._initializeFeatures) {\n      this.features.initializeFeatures();\n    }\n\n    if (canvasContextProps.autoResize !== false) {\n      this.canvasContext.resize();\n    }\n\n    // Install context state tracking\n    const glState = new WebGLStateTracker(this.gl, {\n      log: (...args: any[]) => log.log(1, ...args)()\n    });\n    glState.trackState(this.gl, {copyState: false});\n\n    // DEBUG contexts: Add luma debug instrumentation to the context, force log level to at least 1\n    const debugWebGL = props.debugWebGL || props.debug;\n    const traceWebGL = props.debugWebGL;\n    if (debugWebGL) {\n      this.gl = makeDebugContext(this.gl, {debugWebGL, traceWebGL});\n      log.warn('WebGL debug mode activated. Performance reduced.')();\n      if (props.debugWebGL) {\n        log.level = Math.max(log.level, 1);\n      }\n    }\n  }\n\n  /**\n   * Destroys the device\n   *\n   * @note \"Detaches\" from the WebGL context unless _reuseDevices is true.\n   *\n   * @note The underlying WebGL context is not immediately destroyed,\n   * but may be destroyed later through normal JavaScript garbage collection.\n   * This is a fundamental limitation since WebGL does not offer any\n   * browser API for destroying WebGL contexts.\n   */\n  destroy(): void {\n    // Note that deck.gl (especially in React strict mode) depends on being able\n    // to asynchronously create a Device against the same canvas (i.e. WebGL context)\n    // multiple times and getting the same device back. Since deck.gl is not aware\n    // of this sharing, it might call destroy() multiple times on the same device.\n    // Therefore we must do nothing in destroy() if props._reuseDevices is true\n    if (!this.props._reuseDevices && !this._reused) {\n      // Delete the reference to the device that we store on the WebGL context\n      delete (this.gl as any).device;\n    }\n  }\n\n  get isLost(): boolean {\n    return this.gl.isContextLost();\n  }\n\n  // IMPLEMENTATION OF ABSTRACT DEVICE\n\n  createCanvasContext(props?: CanvasContextProps): CanvasContext {\n    throw new Error('WebGL only supports a single canvas');\n  }\n\n  createBuffer(props: BufferProps | ArrayBuffer | ArrayBufferView): WEBGLBuffer {\n    const newProps = this._normalizeBufferProps(props);\n    return new WEBGLBuffer(this, newProps);\n  }\n\n  createTexture(props: TextureProps): WEBGLTexture {\n    return new WEBGLTexture(this, props);\n  }\n\n  createExternalTexture(props: ExternalTextureProps): ExternalTexture {\n    throw new Error('createExternalTexture() not implemented'); // return new Program(props);\n  }\n\n  createSampler(props: SamplerProps): WEBGLSampler {\n    return new WEBGLSampler(this, props);\n  }\n\n  createShader(props: ShaderProps): WEBGLShader {\n    return new WEBGLShader(this, props);\n  }\n\n  createFramebuffer(props: FramebufferProps): WEBGLFramebuffer {\n    return new WEBGLFramebuffer(this, props);\n  }\n\n  createVertexArray(props: VertexArrayProps): VertexArray {\n    return new WEBGLVertexArray(this, props);\n  }\n\n  createTransformFeedback(props: TransformFeedbackProps): WEBGLTransformFeedback {\n    return new WEBGLTransformFeedback(this, props);\n  }\n\n  createQuerySet(props: QuerySetProps): WEBGLQuerySet {\n    return new WEBGLQuerySet(this, props);\n  }\n\n  createRenderPipeline(props: RenderPipelineProps): WEBGLRenderPipeline {\n    return new WEBGLRenderPipeline(this, props);\n  }\n\n  beginRenderPass(props: RenderPassProps): WEBGLRenderPass {\n    return new WEBGLRenderPass(this, props);\n  }\n\n  createComputePipeline(props?: ComputePipelineProps): ComputePipeline {\n    throw new Error('ComputePipeline not supported in WebGL');\n  }\n\n  beginComputePass(props: ComputePassProps): ComputePass {\n    throw new Error('ComputePass not supported in WebGL');\n  }\n\n  private renderPass: WEBGLRenderPass | null = null;\n\n  override createCommandEncoder(props: CommandEncoderProps = {}): WEBGLCommandEncoder {\n    return new WEBGLCommandEncoder(this, props);\n  }\n\n  /**\n   * Offscreen Canvas Support: Commit the frame\n   * https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/commit\n   * Chrome's offscreen canvas does not require gl.commit\n   */\n  submit(): void {\n    this.renderPass?.end();\n    this.renderPass = null;\n    // this.canvasContext.commit();\n  }\n\n  //\n  // TEMPORARY HACKS - will be removed in v9.1\n  //\n\n  /** @deprecated - should use command encoder */\n  override readPixelsToArrayWebGL(\n    source: Framebuffer | Texture,\n    options?: {\n      sourceX?: number;\n      sourceY?: number;\n      sourceFormat?: number;\n      sourceAttachment?: number;\n      target?: Uint8Array | Uint16Array | Float32Array;\n      // following parameters are auto deduced if not provided\n      sourceWidth?: number;\n      sourceHeight?: number;\n      sourceType?: number;\n    }\n  ): Uint8Array | Uint16Array | Float32Array {\n    return readPixelsToArray(source, options);\n  }\n\n  /** @deprecated - should use command encoder */\n  override readPixelsToBufferWebGL(\n    source: Framebuffer | Texture,\n    options?: {\n      sourceX?: number;\n      sourceY?: number;\n      sourceFormat?: number;\n      target?: Buffer; // A new Buffer object is created when not provided.\n      targetByteOffset?: number; // byte offset in buffer object\n      // following parameters are auto deduced if not provided\n      sourceWidth?: number;\n      sourceHeight?: number;\n      sourceType?: number;\n    }\n  ): Buffer {\n    return readPixelsToBuffer(source, options);\n  }\n\n  override setParametersWebGL(parameters: any): void {\n    setGLParameters(this.gl, parameters);\n  }\n\n  override getParametersWebGL(parameters: any): any {\n    return getGLParameters(this.gl, parameters);\n  }\n\n  override withParametersWebGL(parameters: any, func: any): any {\n    return withGLParameters(this.gl, parameters, func);\n  }\n\n  override resetWebGL(): void {\n    log.warn('WebGLDevice.resetWebGL is deprecated, use only for debugging')();\n    resetGLParameters(this.gl);\n  }\n\n  override _getDeviceSpecificTextureFormatCapabilities(\n    capabilities: DeviceTextureFormatCapabilities\n  ): DeviceTextureFormatCapabilities {\n    return getTextureFormatCapabilitiesWebGL(this.gl, capabilities, this._extensions);\n  }\n\n  //\n  // WebGL-only API (not part of `Device` API)\n  //\n\n  /**\n   * Triggers device (or WebGL context) loss.\n   * @note primarily intended for testing how application reacts to device loss\n   */\n  override loseDevice(): boolean {\n    let deviceLossTriggered = false;\n    const extensions = this.getExtension('WEBGL_lose_context');\n    const ext = extensions.WEBGL_lose_context;\n    if (ext) {\n      deviceLossTriggered = true;\n      ext.loseContext();\n      // ext.loseContext should trigger context loss callback but the platform may not do this, so do it explicitly\n    }\n    this._resolveContextLost?.({\n      reason: 'destroyed',\n      message: 'Application triggered context loss'\n    });\n    return deviceLossTriggered;\n  }\n\n  /** Save current WebGL context state onto an internal stack */\n  pushState(): void {\n    const webglState = WebGLStateTracker.get(this.gl);\n    webglState.push();\n  }\n\n  /** Restores previously saved context state */\n  popState(): void {\n    const webglState = WebGLStateTracker.get(this.gl);\n    webglState.pop();\n  }\n\n  /**\n   * Storing data on a special field on WebGLObjects makes that data visible in SPECTOR chrome debug extension\n   * luma.gl ids and props can be inspected\n   */\n  setSpectorMetadata(handle: unknown, props: Record<string, unknown>) {\n    // @ts-expect-error\n    // eslint-disable-next-line camelcase\n    handle.__SPECTOR_Metadata = props;\n  }\n\n  /**\n   * Returns the GL.<KEY> constant that corresponds to a numeric value of a GL constant\n   * Be aware that there are some duplicates especially for constants that are 0,\n   * so this isn't guaranteed to return the right key in all cases.\n   */\n  getGLKey(value: unknown, options?: {emptyIfUnknown?: boolean}): string {\n    const number = Number(value);\n    for (const key in this.gl) {\n      // @ts-ignore expect-error depends on settings\n      if (this.gl[key] === number) {\n        return `GL.${key}`;\n      }\n    }\n    // No constant found. Stringify the value and return it.\n    return options?.emptyIfUnknown ? '' : String(value);\n  }\n\n  /**\n   * Returns a map with any GL.<KEY> constants mapped to strings, both for keys and values\n   */\n  getGLKeys(glParameters: Record<number, unknown>): Record<string, string> {\n    const opts = {emptyIfUnknown: true};\n    return Object.entries(glParameters).reduce<Record<string, string>>((keys, [key, value]) => {\n      // eslint-disable-next-line @typescript-eslint/no-base-to-string\n      keys[`${key}:${this.getGLKey(key, opts)}`] = `${value}:${this.getGLKey(value, opts)}`;\n      return keys;\n    }, {});\n  }\n\n  /** Store constants */\n  _constants: (TypedArray | null)[];\n\n  /**\n   * Set a constant value for a location. Disabled attributes at that location will read from this value\n   * @note WebGL constants are stored globally on the WebGL context, not the VertexArray\n   * so they need to be updated before every render\n   * @todo - remember/cache values to avoid setting them unnecessarily?\n   */\n  setConstantAttributeWebGL(location: number, constant: TypedArray): void {\n    const maxVertexAttributes = this.limits.maxVertexAttributes;\n    this._constants = this._constants || new Array(maxVertexAttributes).fill(null);\n    const currentConstant = this._constants[location];\n    if (currentConstant && compareConstantArrayValues(currentConstant, constant)) {\n      log.info(\n        1,\n        `setConstantAttributeWebGL(${location}) could have been skipped, value unchanged`\n      )();\n    }\n    this._constants[location] = constant;\n\n    switch (constant.constructor) {\n      case Float32Array:\n        setConstantFloatArray(this, location, constant as Float32Array);\n        break;\n      case Int32Array:\n        setConstantIntArray(this, location, constant as Int32Array);\n        break;\n      case Uint32Array:\n        setConstantUintArray(this, location, constant as Uint32Array);\n        break;\n      default:\n        throw new Error('constant');\n    }\n  }\n\n  /** Ensure extensions are only requested once */\n  getExtension(name: keyof GLExtensions): GLExtensions {\n    getWebGLExtension(this.gl, name, this._extensions);\n    return this._extensions;\n  }\n}\n\n/** Set constant float array attribute */\nfunction setConstantFloatArray(device: WebGLDevice, location: number, array: Float32Array): void {\n  switch (array.length) {\n    case 1:\n      device.gl.vertexAttrib1fv(location, array);\n      break;\n    case 2:\n      device.gl.vertexAttrib2fv(location, array);\n      break;\n    case 3:\n      device.gl.vertexAttrib3fv(location, array);\n      break;\n    case 4:\n      device.gl.vertexAttrib4fv(location, array);\n      break;\n    default:\n    // assert(false);\n  }\n}\n\n/** Set constant signed int array attribute */\nfunction setConstantIntArray(device: WebGLDevice, location: number, array: Int32Array): void {\n  device.gl.vertexAttribI4iv(location, array);\n  // TODO - not clear if we need to use the special forms, more testing needed\n  // switch (array.length) {\n  //   case 1:\n  //     gl.vertexAttribI1iv(location, array);\n  //     break;\n  //   case 2:\n  //     gl.vertexAttribI2iv(location, array);\n  //     break;\n  //   case 3:\n  //     gl.vertexAttribI3iv(location, array);\n  //     break;\n  //   case 4:\n  //     break;\n  //   default:\n  //     assert(false);\n  // }\n}\n\n/** Set constant unsigned int array attribute */\nfunction setConstantUintArray(device: WebGLDevice, location: number, array: Uint32Array) {\n  device.gl.vertexAttribI4uiv(location, array);\n  // TODO - not clear if we need to use the special forms, more testing needed\n  // switch (array.length) {\n  //   case 1:\n  //     gl.vertexAttribI1uiv(location, array);\n  //     break;\n  //   case 2:\n  //     gl.vertexAttribI2uiv(location, array);\n  //     break;\n  //   case 3:\n  //     gl.vertexAttribI3uiv(location, array);\n  //     break;\n  //   case 4:\n  //     gl.vertexAttribI4uiv(location, array);\n  //     break;\n  //   default:\n  //     assert(false);\n  // }\n}\n\n/**\n * Compares contents of two typed arrays\n * @todo max length?\n */\nfunction compareConstantArrayValues(v1: TypedArray, v2: TypedArray): boolean {\n  if (!v1 || !v2 || v1.length !== v2.length || v1.constructor !== v2.constructor) {\n    return false;\n  }\n  for (let i = 0; i < v1.length; ++i) {\n    if (v1[i] !== v2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Goal is to make WebGL2 contexts look like WebGL1\n// @note Partly inspired by with some older code from the `regl` library\n\n/* eslint-disable camelcase */\n\nimport {GL} from '@luma.gl/constants';\n\n// webgl1 extensions natively supported by webgl2\nconst WEBGL1_STATIC_EXTENSIONS = {\n  WEBGL_depth_texture: {\n    UNSIGNED_INT_24_8_WEBGL: GL.UNSIGNED_INT_24_8\n  } as const satisfies WEBGL_depth_texture,\n  OES_element_index_uint: {} as const satisfies OES_element_index_uint,\n  OES_texture_float: {} as const satisfies OES_texture_float,\n  OES_texture_half_float: {\n    // @ts-expect-error different numbers?\n    HALF_FLOAT_OES: GL.HALF_FLOAT\n  } as const satisfies OES_texture_half_float,\n  EXT_color_buffer_float: {} as const satisfies EXT_color_buffer_float,\n  OES_standard_derivatives: {\n    FRAGMENT_SHADER_DERIVATIVE_HINT_OES: GL.FRAGMENT_SHADER_DERIVATIVE_HINT\n  } as const satisfies OES_standard_derivatives,\n  EXT_frag_depth: {} as const satisfies EXT_frag_depth,\n  EXT_blend_minmax: {\n    MIN_EXT: GL.MIN,\n    MAX_EXT: GL.MAX\n  } as const satisfies EXT_blend_minmax,\n  EXT_shader_texture_lod: {} as const satisfies EXT_shader_texture_lod\n};\n\nconst getWEBGL_draw_buffers = (gl: WebGL2RenderingContext) =>\n  ({\n    drawBuffersWEBGL(buffers: number[]) {\n      return gl.drawBuffers(buffers);\n    },\n    COLOR_ATTACHMENT0_WEBGL: GL.COLOR_ATTACHMENT0,\n    COLOR_ATTACHMENT1_WEBGL: GL.COLOR_ATTACHMENT1,\n    COLOR_ATTACHMENT2_WEBGL: GL.COLOR_ATTACHMENT2,\n    COLOR_ATTACHMENT3_WEBGL: GL.COLOR_ATTACHMENT3\n  }) as const satisfies Partial<WEBGL_draw_buffers>; // - too many fields\n\nconst getOES_vertex_array_object = (gl: WebGL2RenderingContext) =>\n  ({\n    VERTEX_ARRAY_BINDING_OES: GL.VERTEX_ARRAY_BINDING,\n    createVertexArrayOES() {\n      return gl.createVertexArray();\n    },\n    deleteVertexArrayOES(vertexArray: WebGLVertexArrayObject): void {\n      return gl.deleteVertexArray(vertexArray);\n    },\n    isVertexArrayOES(vertexArray: WebGLVertexArrayObject): boolean {\n      return gl.isVertexArray(vertexArray);\n    },\n    bindVertexArrayOES(vertexArray: WebGLVertexArrayObject): void {\n      return gl.bindVertexArray(vertexArray);\n    }\n  }) as const satisfies OES_vertex_array_object;\n\nconst getANGLE_instanced_arrays = (gl: WebGL2RenderingContext) =>\n  ({\n    VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: 0x88fe,\n    drawArraysInstancedANGLE(...args) {\n      return gl.drawArraysInstanced(...args);\n    },\n    drawElementsInstancedANGLE(...args) {\n      return gl.drawElementsInstanced(...args);\n    },\n    vertexAttribDivisorANGLE(...args) {\n      return gl.vertexAttribDivisor(...args);\n    }\n  }) as const satisfies ANGLE_instanced_arrays;\n\n/**\n * Make browser return WebGL2 contexts even if WebGL1 contexts are requested\n * @param enforce\n * @returns\n */\nexport function enforceWebGL2(enforce: boolean = true): void {\n  const prototype = HTMLCanvasElement.prototype as any;\n  if (!enforce && prototype.originalGetContext) {\n    // Reset the original getContext function\n    prototype.getContext = prototype.originalGetContext;\n    prototype.originalGetContext = undefined;\n    return;\n  }\n\n  // Store the original getContext function\n  prototype.originalGetContext = prototype.getContext;\n\n  // Override the getContext function\n  prototype.getContext = function (contextId: string, options?: WebGLContextAttributes) {\n    // Attempt to force WebGL2 for all WebGL1 contexts\n    if (contextId === 'webgl' || contextId === 'experimental-webgl') {\n      const context = this.originalGetContext('webgl2', options) as WebGL2RenderingContext;\n      // Work around test mocking\n      if (context instanceof HTMLElement) {\n        polyfillWebGL1Extensions(context);\n      }\n      return context;\n    }\n    // For any other type, return the original context\n    return this.originalGetContext(contextId, options);\n  };\n}\n\n/** Install WebGL1-only extensions on WebGL2 contexts */\nexport function polyfillWebGL1Extensions(gl: WebGL2RenderingContext): void {\n  // Enable, to support float and half-float textures\n  gl.getExtension('EXT_color_buffer_float');\n\n  // WebGL1 extensions implemented using WebGL2 APIs\n  const boundExtensions = {\n    ...WEBGL1_STATIC_EXTENSIONS,\n    WEBGL_disjoint_timer_query: gl.getExtension('EXT_disjoint_timer_query_webgl2'),\n    WEBGL_draw_buffers: getWEBGL_draw_buffers(gl),\n    OES_vertex_array_object: getOES_vertex_array_object(gl),\n    ANGLE_instanced_arrays: getANGLE_instanced_arrays(gl)\n  };\n\n  // Override gl.getExtension\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const originalGetExtension = gl.getExtension;\n  gl.getExtension = function (extensionName: string) {\n    const ext = originalGetExtension.call(gl, extensionName);\n    if (ext) {\n      return ext;\n    }\n\n    // Injected extensions\n    if (extensionName in boundExtensions) {\n      return boundExtensions[extensionName];\n    }\n\n    return null;\n  };\n\n  // Override gl.getSupportedExtensions\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const originalGetSupportedExtensions = gl.getSupportedExtensions;\n  gl.getSupportedExtensions = function (): string[] | null {\n    const extensions = originalGetSupportedExtensions.apply(gl) || [];\n    return extensions?.concat(Object.keys(boundExtensions));\n  };\n}\n\n// Update unsized WebGL1 formats to sized WebGL2 formats\n// todo move to texture format file\n// export function getInternalFormat(gl: WebGL2RenderingContext, format: GL, type: GL): GL {\n//   // webgl2 texture formats\n//   // https://webgl2fundamentals.org/webgl/lessons/webgl-data-textures.html\n//   switch (format) {\n//     case GL.DEPTH_COMPONENT:\n//       return GL.DEPTH_COMPONENT24;\n//     case GL.DEPTH_STENCIL:\n//       return GL.DEPTH24_STENCIL8;\n//     case GL.RGBA:\n//       return type === GL.HALF_FLOAT ? GL.RGBA16F : GL.RGBA32F;\n//     case GL.RGB:\n//       return type === GL.HALF_FLOAT ? GL.RGB16F : GL.RGB32F;\n//     default:\n//       return format;\n//   }\n// }\n\n/*\n// texture type to update on the fly\nexport function getTextureType(gl: WebGL2RenderingContext, type: GL): GL {\n  if (type === HALF_FLOAT_OES) {\n    return GL.HALF_FLOAT;\n  }\n  return type;\n}\n\n  // And texImage2D to convert the internalFormat to webgl2.\n  const webgl2 = this;\n  const origTexImage = gl.texImage2D;\n  gl.texImage2D = function (target, miplevel, iformat, a, typeFor6, c, d, typeFor9, f) {\n    if (arguments.length == 6) {\n      var ifmt = webgl2.getInternalFormat(gl, iformat, typeFor6);\n      origTexImage.apply(gl, [target, miplevel, ifmt, a, webgl.getTextureType(gl, typeFor6), c]);\n    } else {\n      // arguments.length == 9\n      var ifmt = webgl2.getInternalFormat(gl, iformat, typeFor9);\n      origTexImage.apply(gl, [\n        target,\n        miplevel,\n        ifmt,\n        a,\n        typeFor6,\n        c,\n        d,\n        webgl2.getTextureType(gl, typeFor9),\n        f\n      ]);\n    }\n  };\n};\n*/\n", "// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Adapter, Device, DeviceProps, log} from '@luma.gl/core';\nimport {WebGLDevice} from './webgl-device';\nimport {enforceWebGL2} from '../context/polyfills/polyfill-webgl1-extensions';\nimport {loadSpectorJS, DEFAULT_SPECTOR_PROPS} from '../context/debug/spector';\nimport {loadWebGLDeveloperTools} from '../context/debug/webgl-developer-tools';\n\nconst LOG_LEVEL = 1;\n\nexport class WebGLAdapter extends Adapter {\n  /** type of device's created by this adapter */\n  readonly type: Device['type'] = 'webgl';\n\n  constructor() {\n    super();\n\n    // Add spector default props to device default props, so that runtime settings are observed\n    Device.defaultProps = {...Device.defaultProps, ...DEFAULT_SPECTOR_PROPS};\n\n    // @ts-ignore DEPRECATED For backwards compatibility luma.registerDevices\n    WebGLDevice.adapter = this;\n  }\n\n  /** Check if WebGL 2 is available */\n  isSupported(): boolean {\n    return typeof WebGL2RenderingContext !== 'undefined';\n  }\n\n  /** Force any created WebGL contexts to be WebGL2 contexts, polyfilled with WebGL1 extensions */\n  enforceWebGL2(enable: boolean): void {\n    enforceWebGL2(enable);\n  }\n\n  /**\n   * Get a device instance from a GL context\n   * Creates a WebGLCanvasContext against the contexts canvas\n   * @note autoResize will be disabled, assuming that whoever created the external context will be handling resizes.\n   * @param gl\n   * @returns\n   */\n  async attach(gl: Device | WebGL2RenderingContext): Promise<WebGLDevice> {\n    if (gl instanceof WebGLDevice) {\n      return gl;\n    }\n    // @ts-expect-error\n    if (gl?.device instanceof Device) {\n      // @ts-expect-error\n      return gl.device as WebGLDevice;\n    }\n    if (!isWebGL(gl)) {\n      throw new Error('Invalid WebGL2RenderingContext');\n    }\n\n    // We create a new device using the provided WebGL context and its canvas\n    // Assume that whoever created the external context will be handling resizes.\n    return new WebGLDevice({\n      _handle: gl,\n      createCanvasContext: {canvas: gl.canvas, autoResize: false}\n    });\n  }\n\n  async create(props: DeviceProps = {}): Promise<WebGLDevice> {\n    log.groupCollapsed(LOG_LEVEL, 'WebGLDevice created')();\n\n    const promises: Promise<unknown>[] = [];\n\n    // Load webgl and spector debug scripts from CDN if requested\n    if (props.debugWebGL || props.debug) {\n      promises.push(loadWebGLDeveloperTools());\n    }\n\n    if (props.debugSpectorJS) {\n      promises.push(loadSpectorJS(props));\n    }\n\n    // Wait for all the loads to settle before creating the context.\n    // The Device.create() functions are async, so in contrast to the constructor, we can `await` here.\n    const results = await Promise.allSettled(promises);\n    for (const result of results) {\n      if (result.status === 'rejected') {\n        log.error(`Failed to initialize debug libraries ${result.reason}`)();\n      }\n    }\n\n    const device = new WebGLDevice(props);\n\n    // Log some debug info about the newly created context\n    const message = `\\\n${device._reused ? 'Reusing' : 'Created'} device with WebGL2 ${device.debug ? 'debug ' : ''}context: \\\n${device.info.vendor}, ${device.info.renderer} for canvas: ${device.canvasContext.id}`;\n    log.probe(LOG_LEVEL, message)();\n    log.table(LOG_LEVEL, device.info)();\n\n    log.groupEnd(LOG_LEVEL)();\n\n    return device;\n  }\n}\n\n/** Check if supplied parameter is a WebGL2RenderingContext */\nfunction isWebGL(gl: any): gl is WebGL2RenderingContext {\n  if (typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext) {\n    return true;\n  }\n  // Look for debug contexts, headless gl etc\n  return Boolean(gl && Number.isFinite(gl._version));\n}\n\nexport const webgl2Adapter = new WebGLAdapter();\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport LayerManager from './layer-manager';\nimport ViewManager from './view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from './effect-manager';\nimport DeckRenderer from './deck-renderer';\nimport DeckPicker from './deck-picker';\nimport {WidgetManager, Widget} from './widget-manager';\nimport Tooltip from './tooltip';\nimport log from '../utils/log';\nimport {deepEqual} from '../utils/deep-equal';\nimport typedArrayManager from '../utils/typed-array-manager';\nimport {VERSION} from './init';\n\nimport {luma} from '@luma.gl/core';\nimport {webgl2Adapter} from '@luma.gl/webgl';\nimport {Timeline} from '@luma.gl/engine';\nimport {AnimationLoop} from '@luma.gl/engine';\nimport {GL} from '@luma.gl/constants';\nimport type {Device, DeviceProps, Framebuffer, Parameters} from '@luma.gl/core';\nimport type {ShaderModule} from '@luma.gl/shadertools';\n\nimport {Stats} from '@probe.gl/stats';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport {EVENT_HANDLERS, RECOGNIZERS, RecognizerOptions} from './constants';\n\nimport type {Effect} from './effect';\nimport type {FilterContext} from '../passes/layers-pass';\nimport type Layer from './layer';\nimport type View from '../views/view';\nimport type Viewport from '../viewports/viewport';\nimport type {EventManagerOptions, MjolnirGestureEvent, MjolnirPointerEvent} from 'mjolnir.js';\nimport type {TypedArrayManagerOptions} from '../utils/typed-array-manager';\nimport type {ViewStateChangeParameters, InteractionState} from '../controllers/controller';\nimport type {PickingInfo} from './picking/pick-info';\nimport type {PickByPointOptions, PickByRectOptions} from './deck-picker';\nimport type {LayersList} from './layer-manager';\nimport type {TooltipContent} from './tooltip';\nimport type {ViewStateMap, AnyViewStateOf, ViewOrViews, ViewStateObject} from './view-manager';\nimport {CreateDeviceProps} from '@luma.gl/core';\n\n/* global document */\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n\nconst getCursor = ({isDragging}) => (isDragging ? 'grabbing' : 'grab');\n\nexport type DeckMetrics = {\n  fps: number;\n  setPropsTime: number;\n  updateAttributesTime: number;\n  framesRedrawn: number;\n  pickTime: number;\n  pickCount: number;\n  gpuTime: number;\n  gpuTimePerFrame: number;\n  cpuTime: number;\n  cpuTimePerFrame: number;\n  bufferMemory: number;\n  textureMemory: number;\n  renderbufferMemory: number;\n  gpuMemory: number;\n};\n\ntype CursorState = {\n  /** Whether the cursor is over a pickable object */\n  isHovering: boolean;\n  /** Whether the cursor is down */\n  isDragging: boolean;\n};\n\nexport type DeckProps<ViewsT extends ViewOrViews = null> = {\n  /** Id of this Deck instance */\n  id?: string;\n  /** Width of the canvas, a number in pixels or a valid CSS string.\n   * @default `'100%'`\n   */\n  width?: string | number | null;\n  /** Height of the canvas, a number in pixels or a valid CSS string.\n   * @default `'100%'`\n   */\n  height?: string | number | null;\n  /** Additional CSS styles for the canvas. */\n  style?: Partial<CSSStyleDeclaration> | null;\n\n  /** Controls the resolution of drawing buffer used for rendering.\n   * @default `true` (use browser devicePixelRatio)\n   */\n  useDevicePixels?: boolean | number;\n  /** Extra pixels around the pointer to include while picking.\n   * @default `0`\n   */\n  pickingRadius?: number;\n\n  /** WebGL parameters to be set before each frame is rendered. */\n  parameters?: Parameters;\n  /** If supplied, will be called before a layer is drawn to determine whether it should be rendered. */\n  layerFilter?: ((context: FilterContext) => boolean) | null;\n\n  /** The container to append the auto-created canvas to.\n   * @default `document.body`\n   */\n  parent?: HTMLDivElement | null;\n\n  /** The canvas to render into.\n   * Can be either a HTMLCanvasElement or the element id.\n   * Will be auto-created if not supplied.\n   */\n  canvas?: HTMLCanvasElement | string | null;\n\n  /** Use an existing luma.gl GPU device. @note If not supplied, a new device will be created using props.deviceProps */\n  device?: Device | null;\n\n  /** A new device will be created using these props, assuming that an existing device is not supplied using props.device) */\n  deviceProps?: CreateDeviceProps;\n\n  /** WebGL context @deprecated Use props.deviceProps.webgl. Also note that preserveDrawingBuffers is true by default */\n  gl?: WebGL2RenderingContext | null;\n\n  /**\n   * The array of Layer instances to be rendered.\n   * Nested arrays are accepted, as well as falsy values (`null`, `false`, `undefined`)\n   */\n  layers?: LayersList;\n  /** The array of effects to be rendered. A lighting effect will be added if an empty array is supplied. */\n  effects?: Effect[];\n  /** A single View instance, or an array of `View` instances.\n   * @default `new MapView()`\n   */\n  views?: ViewsT;\n  /** Options for viewport interactivity, e.g. pan, rotate and zoom with mouse, touch and keyboard.\n   * This is a shorthand for defining interaction with the `views` prop if you are using the default view (i.e. a single `MapView`)\n   */\n  controller?: View['props']['controller'];\n  /**\n   * An object that describes the view state for each view in the `views` prop.\n   * Use if the camera state should be managed external to the `Deck` instance.\n   */\n  viewState?: ViewStateMap<ViewsT> | null;\n  /**\n   * If provided, the `Deck` instance will track camera state changes automatically,\n   * with `initialViewState` as its initial settings.\n   */\n  initialViewState?: ViewStateMap<ViewsT> | null;\n\n  /** Allow browser default touch actions.\n   * @default `'none'`\n   */\n  touchAction?: EventManagerOptions['touchAction'];\n  /**\n   * Optional mjolnir.js recognizer options\n   */\n  eventRecognizerOptions?: RecognizerOptions;\n\n  /** (Experimental) Render to a custom frame buffer other than to screen. */\n  _framebuffer?: Framebuffer | null;\n  /** (Experimental) Forces deck.gl to redraw layers every animation frame. */\n  _animate?: boolean;\n  /** (Experimental) If set to `false`, force disables all picking features, disregarding the `pickable` prop set in any layer. */\n  _pickable?: boolean;\n  /** (Experimental) Fine-tune attribute memory usage. See documentation for details. */\n  _typedArrayManagerProps?: TypedArrayManagerOptions;\n  /** An array of Widget instances to be added to the parent element. */\n  widgets?: Widget[];\n\n  /** Called once the GPU Device has been initiated. */\n  onDeviceInitialized?: (device: Device) => void;\n  /** @deprecated Called once the WebGL context has been initiated. */\n  onWebGLInitialized?: (gl: WebGL2RenderingContext) => void;\n  /** Called when the canvas resizes. */\n  onResize?: (dimensions: {width: number; height: number}) => void;\n  /** Called when the user has interacted with the deck.gl canvas, e.g. using mouse, touch or keyboard. */\n  onViewStateChange?: <ViewStateT extends AnyViewStateOf<ViewsT>>(\n    params: ViewStateChangeParameters<ViewStateT>\n  ) => ViewStateT | null | void;\n  /** Called when the user has interacted with the deck.gl canvas, e.g. using mouse, touch or keyboard. */\n  onInteractionStateChange?: (state: InteractionState) => void;\n  /** Called just before the canvas rerenders. */\n  onBeforeRender?: (context: {device: Device; gl: WebGL2RenderingContext}) => void;\n  /** Called right after the canvas rerenders. */\n  onAfterRender?: (context: {device: Device; gl: WebGL2RenderingContext}) => void;\n  /** Called once after gl context and all Deck components are created. */\n  onLoad?: () => void;\n  /** Called if deck.gl encounters an error.\n   * If this callback is set to `null`, errors are silently ignored.\n   * @default `console.error`\n   */\n  onError?: ((error: Error, layer?: Layer) => void) | null;\n  /** Called when the pointer moves over the canvas. */\n  onHover?: ((info: PickingInfo, event: MjolnirPointerEvent) => void) | null;\n  /** Called when clicking on the canvas. */\n  onClick?: ((info: PickingInfo, event: MjolnirGestureEvent) => void) | null;\n  /** Called when the user starts dragging on the canvas. */\n  onDragStart?: ((info: PickingInfo, event: MjolnirGestureEvent) => void) | null;\n  /** Called when dragging the canvas. */\n  onDrag?: ((info: PickingInfo, event: MjolnirGestureEvent) => void) | null;\n  /** Called when the user releases from dragging the canvas. */\n  onDragEnd?: ((info: PickingInfo, event: MjolnirGestureEvent) => void) | null;\n\n  /** (Experimental) Replace the default redraw procedure */\n  _customRender?: ((reason: string) => void) | null;\n  /** (Experimental) Called once every second with performance metrics. */\n  _onMetrics?: ((metrics: DeckMetrics) => void) | null;\n\n  /** A custom callback to retrieve the cursor type. */\n  getCursor?: (state: CursorState) => string;\n  /** Callback that takes a hovered-over point and renders a tooltip. */\n  getTooltip?: ((info: PickingInfo) => TooltipContent) | null;\n\n  /** (Debug) Flag to enable WebGL debug mode. Requires importing `@luma.gl/debug`. */\n  debug?: boolean;\n  /** (Debug) Render the picking buffer to screen. */\n  drawPickingColors?: boolean;\n};\n\nconst defaultProps: DeckProps = {\n  id: '',\n  width: '100%',\n  height: '100%',\n  style: null,\n  viewState: null,\n  initialViewState: null,\n  pickingRadius: 0,\n  layerFilter: null,\n  parameters: {},\n  parent: null,\n  device: null,\n  deviceProps: {} as DeviceProps,\n  gl: null,\n  canvas: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n  touchAction: 'none',\n  eventRecognizerOptions: {},\n  _framebuffer: null,\n  _animate: false,\n  _pickable: true,\n  _typedArrayManagerProps: {},\n  _customRender: null,\n  widgets: [],\n\n  onDeviceInitialized: noop,\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onInteractionStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLoad: noop,\n  onError: (error: Error) => log.error(error.message, error.cause)(),\n  onHover: null,\n  onClick: null,\n  onDragStart: null,\n  onDrag: null,\n  onDragEnd: null,\n  _onMetrics: null,\n\n  getCursor,\n  getTooltip: null,\n\n  debug: false,\n  drawPickingColors: false\n};\n\n/* eslint-disable max-statements */\nexport default class Deck<ViewsT extends ViewOrViews = null> {\n  static defaultProps = defaultProps;\n  // This is used to defeat tree shaking of init.js\n  // https://github.com/visgl/deck.gl/issues/3213\n  static VERSION = VERSION;\n\n  readonly props: Required<DeckProps<ViewsT>>;\n  readonly width: number = 0;\n  readonly height: number = 0;\n  // Allows attaching arbitrary data to the instance\n  readonly userData: Record<string, any> = {};\n\n  protected device: Device | null = null;\n\n  protected canvas: HTMLCanvasElement | null = null;\n  protected viewManager: ViewManager<View[]> | null = null;\n  protected layerManager: LayerManager | null = null;\n  protected effectManager: EffectManager | null = null;\n  protected deckRenderer: DeckRenderer | null = null;\n  protected deckPicker: DeckPicker | null = null;\n  protected eventManager: EventManager | null = null;\n  protected widgetManager: WidgetManager | null = null;\n  protected tooltip: Tooltip | null = null;\n  protected animationLoop: AnimationLoop | null = null;\n\n  /** Internal view state if no callback is supplied */\n  protected viewState: ViewStateObject<ViewsT> | null;\n  protected cursorState: CursorState = {\n    isHovering: false,\n    isDragging: false\n  };\n\n  protected stats = new Stats({id: 'deck.gl'});\n  protected metrics: DeckMetrics = {\n    fps: 0,\n    setPropsTime: 0,\n    updateAttributesTime: 0,\n    framesRedrawn: 0,\n    pickTime: 0,\n    pickCount: 0,\n    gpuTime: 0,\n    gpuTimePerFrame: 0,\n    cpuTime: 0,\n    cpuTimePerFrame: 0,\n    bufferMemory: 0,\n    textureMemory: 0,\n    renderbufferMemory: 0,\n    gpuMemory: 0\n  };\n  private _metricsCounter: number = 0;\n\n  private _needsRedraw: false | string = 'Initial render';\n  private _pickRequest: {\n    mode: string;\n    event: MjolnirPointerEvent | null;\n    x: number;\n    y: number;\n    radius: number;\n  } = {\n    mode: 'hover',\n    x: -1,\n    y: -1,\n    radius: 0,\n    event: null\n  };\n\n  /**\n   * Pick and store the object under the pointer on `pointerdown`.\n   * This object is reused for subsequent `onClick` and `onDrag*` callbacks.\n   */\n  private _lastPointerDownInfo: PickingInfo | null = null;\n\n  constructor(props: DeckProps<ViewsT>) {\n    // @ts-ignore views\n    this.props = {...defaultProps, ...props};\n    props = this.props;\n\n    if (props.viewState && props.initialViewState) {\n      log.warn(\n        'View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.'\n      )();\n    }\n    this.viewState = this.props.initialViewState;\n\n    // See if we already have a device\n    if (props.device) {\n      this.device = props.device;\n    }\n\n    let deviceOrPromise: Device | Promise<Device> | null = this.device;\n\n    // Attach a new luma.gl device to a WebGL2 context if supplied\n    if (!deviceOrPromise && props.gl) {\n      if (props.gl instanceof WebGLRenderingContext) {\n        log.error('WebGL1 context not supported.')();\n      }\n      deviceOrPromise = webgl2Adapter.attach(props.gl);\n    }\n\n    // Create a new device\n    if (!deviceOrPromise) {\n      // Create the \"best\" device supported from the registered adapters\n      deviceOrPromise = luma.createDevice({\n        type: 'best-available',\n        // luma by default throws if a device is already attached\n        // asynchronous device creation could happen after finalize() is called\n        // TODO - createDevice should support AbortController?\n        _reuseDevices: true,\n        adapters: [webgl2Adapter],\n        ...props.deviceProps,\n        createCanvasContext: {\n          canvas: this._createCanvas(props),\n          useDevicePixels: this.props.useDevicePixels,\n          // TODO v9.2 - replace AnimationLoop's `autoResizeDrawingBuffer` with CanvasContext's `autoResize`\n          autoResize: false\n        }\n      });\n    }\n\n    this.animationLoop = this._createAnimationLoop(deviceOrPromise, props);\n\n    this.setProps(props);\n\n    // UNSAFE/experimental prop: only set at initialization to avoid performance hit\n    if (props._typedArrayManagerProps) {\n      typedArrayManager.setOptions(props._typedArrayManagerProps);\n    }\n\n    this.animationLoop.start();\n  }\n\n  /** Stop rendering and dispose all resources */\n  finalize() {\n    this.animationLoop?.stop();\n    this.animationLoop?.destroy();\n    this.animationLoop = null;\n    this._lastPointerDownInfo = null;\n\n    this.layerManager?.finalize();\n    this.layerManager = null;\n\n    this.viewManager?.finalize();\n    this.viewManager = null;\n\n    this.effectManager?.finalize();\n    this.effectManager = null;\n\n    this.deckRenderer?.finalize();\n    this.deckRenderer = null;\n\n    this.deckPicker?.finalize();\n    this.deckPicker = null;\n\n    this.eventManager?.destroy();\n    this.eventManager = null;\n\n    this.widgetManager?.finalize();\n    this.widgetManager = null;\n\n    if (!this.props.canvas && !this.props.device && !this.props.gl && this.canvas) {\n      // remove internally created canvas\n      this.canvas.parentElement?.removeChild(this.canvas);\n      this.canvas = null;\n    }\n  }\n\n  /** Partially update props */\n  setProps(props: DeckProps<ViewsT>): void {\n    this.stats.get('setProps Time').timeStart();\n\n    if ('onLayerHover' in props) {\n      log.removed('onLayerHover', 'onHover')();\n    }\n    if ('onLayerClick' in props) {\n      log.removed('onLayerClick', 'onClick')();\n    }\n    if (\n      props.initialViewState &&\n      // depth = 3 when comparing viewStates: viewId.position.0\n      !deepEqual(this.props.initialViewState, props.initialViewState, 3)\n    ) {\n      // Overwrite internal view state\n      this.viewState = props.initialViewState;\n    }\n\n    // Merge with existing props\n    Object.assign(this.props, props);\n\n    // Update CSS size of canvas\n    this._setCanvasSize(this.props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const resolvedProps: Required<DeckProps> & {\n      width: number;\n      height: number;\n      views: View[];\n      viewState: ViewStateObject<ViewsT> | null;\n    } = Object.create(this.props);\n    Object.assign(resolvedProps, {\n      views: this._getViews(),\n      width: this.width,\n      height: this.height,\n      viewState: this._getViewState()\n    });\n\n    // Update the animation loop\n    this.animationLoop?.setProps(resolvedProps);\n\n    // If initialized, update sub manager props\n    if (this.layerManager) {\n      this.viewManager!.setProps(resolvedProps);\n      // Make sure that any new layer gets initialized with the current viewport\n      this.layerManager.activateViewport(this.getViewports()[0]);\n      this.layerManager.setProps(resolvedProps);\n      this.effectManager!.setProps(resolvedProps);\n      this.deckRenderer!.setProps(resolvedProps);\n      this.deckPicker!.setProps(resolvedProps);\n      this.widgetManager!.setProps(resolvedProps);\n    }\n\n    this.stats.get('setProps Time').timeEnd();\n  }\n\n  // Public API\n\n  /**\n   * Check if a redraw is needed\n   * @returns `false` or a string summarizing the redraw reason\n   */\n  needsRedraw(\n    opts: {\n      /** Reset the redraw flag afterwards. Default `true` */\n      clearRedrawFlags: boolean;\n    } = {clearRedrawFlags: false}\n  ): false | string {\n    if (!this.layerManager) {\n      // Not initialized or already finalized\n      return false;\n    }\n    if (this.props._animate) {\n      return 'Deck._animate';\n    }\n\n    let redraw: false | string = this._needsRedraw;\n\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    const viewManagerNeedsRedraw = this.viewManager!.needsRedraw(opts);\n    const layerManagerNeedsRedraw = this.layerManager.needsRedraw(opts);\n    const effectManagerNeedsRedraw = this.effectManager!.needsRedraw(opts);\n    const deckRendererNeedsRedraw = this.deckRenderer!.needsRedraw(opts);\n\n    redraw =\n      redraw ||\n      viewManagerNeedsRedraw ||\n      layerManagerNeedsRedraw ||\n      effectManagerNeedsRedraw ||\n      deckRendererNeedsRedraw;\n    return redraw;\n  }\n\n  /**\n   * Redraw the GL context\n   * @param reason If not provided, only redraw if deemed necessary. Otherwise redraw regardless of internal states.\n   * @returns\n   */\n  redraw(reason?: string): void {\n    if (!this.layerManager) {\n      // Not yet initialized\n      return;\n    }\n    // Check if we need to redraw\n    let redrawReason = this.needsRedraw({clearRedrawFlags: true});\n    // User-supplied should take precedent, however the redraw flags get cleared regardless\n    redrawReason = reason || redrawReason;\n\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.get('Redraw Count').incrementCount();\n    if (this.props._customRender) {\n      this.props._customRender(redrawReason);\n    } else {\n      this._drawLayers(redrawReason);\n    }\n  }\n\n  /** Flag indicating that the Deck instance has initialized its resources and it's safe to call public methods. */\n  get isInitialized(): boolean {\n    return this.viewManager !== null;\n  }\n\n  /** Get a list of views that are currently rendered */\n  getViews(): View[] {\n    assert(this.viewManager);\n    return this.viewManager.views;\n  }\n\n  /** Get a list of viewports that are currently rendered.\n   * @param rect If provided, only returns viewports within the given bounding box.\n   */\n  getViewports(rect?: {x: number; y: number; width?: number; height?: number}): Viewport[] {\n    assert(this.viewManager);\n    return this.viewManager.getViewports(rect);\n  }\n\n  /** Get the current canvas element. */\n  getCanvas(): HTMLCanvasElement | null {\n    return this.canvas;\n  }\n\n  /** Query the object rendered on top at a given point */\n  pickObject(opts: {\n    /** x position in pixels */\n    x: number;\n    /** y position in pixels */\n    y: number;\n    /** Radius of tolerance in pixels. Default `0`. */\n    radius?: number;\n    /** A list of layer ids to query from. If not specified, then all pickable and visible layers are queried. */\n    layerIds?: string[];\n    /** If `true`, `info.coordinate` will be a 3D point by unprojecting the `x, y` screen coordinates onto the picked geometry. Default `false`. */\n    unproject3D?: boolean;\n  }): PickingInfo | null {\n    const infos = this._pick('pickObject', 'pickObject Time', opts).result;\n    return infos.length ? infos[0] : null;\n  }\n\n  /* Query all rendered objects at a given point */\n  pickMultipleObjects(opts: {\n    /** x position in pixels */\n    x: number;\n    /** y position in pixels */\n    y: number;\n    /** Radius of tolerance in pixels. Default `0`. */\n    radius?: number;\n    /** Specifies the max number of objects to return. Default `10`. */\n    depth?: number;\n    /** A list of layer ids to query from. If not specified, then all pickable and visible layers are queried. */\n    layerIds?: string[];\n    /** If `true`, `info.coordinate` will be a 3D point by unprojecting the `x, y` screen coordinates onto the picked geometry. Default `false`. */\n    unproject3D?: boolean;\n  }): PickingInfo[] {\n    opts.depth = opts.depth || 10;\n    return this._pick('pickObject', 'pickMultipleObjects Time', opts).result;\n  }\n\n  /* Query all objects rendered on top within a bounding box */\n  pickObjects(opts: {\n    /** Left of the bounding box in pixels */\n    x: number;\n    /** Top of the bounding box in pixels */\n    y: number;\n    /** Width of the bounding box in pixels. Default `1` */\n    width?: number;\n    /** Height of the bounding box in pixels. Default `1` */\n    height?: number;\n    /** A list of layer ids to query from. If not specified, then all pickable and visible layers are queried. */\n    layerIds?: string[];\n    /** If specified, limits the number of objects that can be returned. */\n    maxObjects?: number | null;\n  }): PickingInfo[] {\n    return this._pick('pickObjects', 'pickObjects Time', opts);\n  }\n\n  /** Experimental\n   * Add a global resource for sharing among layers\n   */\n  _addResources(\n    resources: {\n      [id: string]: any;\n    },\n    forceUpdate = false\n  ) {\n    for (const id in resources) {\n      this.layerManager!.resourceManager.add({resourceId: id, data: resources[id], forceUpdate});\n    }\n  }\n\n  /** Experimental\n   * Remove a global resource\n   */\n  _removeResources(resourceIds: string[]) {\n    for (const id of resourceIds) {\n      this.layerManager!.resourceManager.remove(id);\n    }\n  }\n\n  /** Experimental\n   * Register a default effect. Effects will be sorted by order, those with a low order will be rendered first\n   */\n  _addDefaultEffect(effect: Effect) {\n    this.effectManager!.addDefaultEffect(effect);\n  }\n\n  _addDefaultShaderModule(module: ShaderModule<Record<string, unknown>>) {\n    this.layerManager!.addDefaultShaderModule(module);\n  }\n\n  _removeDefaultShaderModule(module: ShaderModule<Record<string, unknown>>) {\n    this.layerManager?.removeDefaultShaderModule(module);\n  }\n\n  // Private Methods\n\n  private _pick(\n    method: 'pickObject',\n    statKey: string,\n    opts: PickByPointOptions & {layerIds?: string[]}\n  ): {\n    result: PickingInfo[];\n    emptyInfo: PickingInfo;\n  };\n  private _pick(\n    method: 'pickObjects',\n    statKey: string,\n    opts: PickByRectOptions & {layerIds?: string[]}\n  ): PickingInfo[];\n\n  private _pick(\n    method: 'pickObject' | 'pickObjects',\n    statKey: string,\n    opts: (PickByPointOptions | PickByRectOptions) & {layerIds?: string[]}\n  ) {\n    assert(this.deckPicker);\n\n    const {stats} = this;\n\n    stats.get('Pick Count').incrementCount();\n    stats.get(statKey).timeStart();\n\n    const infos = this.deckPicker[method]({\n      // layerManager, viewManager and effectManager are always defined if deckPicker is\n      layers: this.layerManager!.getLayers(opts),\n      views: this.viewManager!.getViews(),\n      viewports: this.getViewports(opts),\n      onViewportActive: this.layerManager!.activateViewport,\n      effects: this.effectManager!.getEffects(),\n      ...opts\n    });\n\n    stats.get(statKey).timeEnd();\n\n    return infos;\n  }\n\n  /** Resolve props.canvas to element */\n  private _createCanvas(props: DeckProps<ViewsT>): HTMLCanvasElement {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      canvas = document.getElementById(canvas) as HTMLCanvasElement;\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      canvas.id = props.id || 'deckgl-overlay';\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    Object.assign(canvas.style, props.style);\n\n    return canvas;\n  }\n\n  /** Updates canvas width and/or height, if provided as props */\n  private _setCanvasSize(props: Required<DeckProps<ViewsT>>): void {\n    if (!this.canvas) {\n      return;\n    }\n\n    const {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      const cssWidth = Number.isFinite(width) ? `${width}px` : (width as string);\n      this.canvas.style.width = cssWidth;\n    }\n    if (height || height === 0) {\n      const cssHeight = Number.isFinite(height) ? `${height}px` : (height as string);\n      // Note: position==='absolute' required for height 100% to work\n      this.canvas.style.position = props.style?.position || 'absolute';\n      this.canvas.style.height = cssHeight;\n    }\n  }\n\n  /** If canvas size has changed, reads out the new size and update */\n  private _updateCanvasSize(): void {\n    const {canvas} = this;\n    if (!canvas) {\n      return;\n    }\n    // Fallback to width/height when clientWidth/clientHeight are undefined (OffscreenCanvas).\n    const newWidth = canvas.clientWidth ?? canvas.width;\n    const newHeight = canvas.clientHeight ?? canvas.height;\n    if (newWidth !== this.width || newHeight !== this.height) {\n      // @ts-expect-error private assign to read-only property\n      this.width = newWidth;\n      // @ts-expect-error private assign to read-only property\n      this.height = newHeight;\n      this.viewManager?.setProps({width: newWidth, height: newHeight});\n      // Make sure that any new layer gets initialized with the current viewport\n      this.layerManager?.activateViewport(this.getViewports()[0]);\n      this.props.onResize({width: newWidth, height: newHeight});\n    }\n  }\n\n  private _createAnimationLoop(\n    deviceOrPromise: Device | Promise<Device>,\n    props: DeckProps<ViewsT>\n  ): AnimationLoop {\n    const {\n      // width,\n      // height,\n      gl,\n      // debug,\n      onError,\n      // onBeforeRender,\n      // onAfterRender,\n      useDevicePixels\n    } = props;\n\n    return new AnimationLoop({\n      device: deviceOrPromise,\n      useDevicePixels,\n      // TODO v9\n      autoResizeDrawingBuffer: !gl, // do not auto resize external context\n      autoResizeViewport: false,\n      // @ts-expect-error luma.gl needs to accept Promise<void> return value\n      onInitialize: context => this._setDevice(context.device),\n\n      onRender: this._onRenderFrame.bind(this),\n      // @ts-expect-error typing mismatch: AnimationLoop does not accept onError:null\n      onError\n\n      // onBeforeRender,\n      // onAfterRender,\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  private _getViewState(): ViewStateObject<ViewsT> | null {\n    return this.props.viewState || this.viewState;\n  }\n\n  // Get the view descriptor list\n  private _getViews(): View[] {\n    const {views} = this.props;\n    const normalizedViews: View[] = Array.isArray(views)\n      ? views\n      : // If null, default to a full screen map view port\n        views\n        ? [views]\n        : [new MapView({id: 'default-view'})];\n    if (normalizedViews.length && this.props.controller) {\n      // Backward compatibility: support controller prop\n      normalizedViews[0].props.controller = this.props.controller;\n    }\n    return normalizedViews;\n  }\n\n  private _onContextLost() {\n    const {onError} = this.props;\n    if (this.animationLoop && onError) {\n      onError(new Error('WebGL context is lost'));\n    }\n  }\n\n  // The `pointermove` event may fire multiple times in between two animation frames,\n  // it's a waste of time to run picking without rerender. Instead we save the last pick\n  // request and only do it once on the next animation frame.\n  /** Internal use only: event handler for pointerdown */\n  _onPointerMove = (event: MjolnirPointerEvent) => {\n    const {_pickRequest} = this;\n    if (event.type === 'pointerleave') {\n      _pickRequest.x = -1;\n      _pickRequest.y = -1;\n      _pickRequest.radius = 0;\n    } else if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    } else {\n      const pos = event.offsetCenter;\n      // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n      // assertion error when attempting to unproject the position.\n      if (!pos) {\n        return;\n      }\n      _pickRequest.x = pos.x;\n      _pickRequest.y = pos.y;\n      _pickRequest.radius = this.props.pickingRadius;\n    }\n\n    if (this.layerManager) {\n      this.layerManager.context.mousePosition = {x: _pickRequest.x, y: _pickRequest.y};\n    }\n\n    _pickRequest.event = event;\n  };\n\n  /** Actually run picking */\n  private _pickAndCallback() {\n    if (this.device?.type === 'webgpu') {\n      return;\n    }\n\n    const {_pickRequest} = this;\n\n    if (_pickRequest.event) {\n      // Perform picking\n      const {result, emptyInfo} = this._pick('pickObject', 'pickObject Time', _pickRequest);\n      this.cursorState.isHovering = result.length > 0;\n\n      // There are 4 possible scenarios:\n      // result is [outInfo, pickedInfo] (moved from one pickable layer to another)\n      // result is [outInfo] (moved outside of a pickable layer)\n      // result is [pickedInfo] (moved into or over a pickable layer)\n      // result is [] (nothing is or was picked)\n      //\n      // `layer.props.onHover` should be called on all affected layers (out/over)\n      // `deck.props.onHover` should be called with the picked info if any, or empty info otherwise\n      // `deck.props.getTooltip` should be called with the picked info if any, or empty info otherwise\n\n      // Execute callbacks\n      let pickedInfo = emptyInfo;\n      let handled = false;\n      for (const info of result) {\n        pickedInfo = info;\n        handled = info.layer?.onHover(info, _pickRequest.event) || handled;\n      }\n      if (!handled) {\n        this.props.onHover?.(pickedInfo, _pickRequest.event);\n        this.widgetManager!.onHover(pickedInfo, _pickRequest.event);\n      }\n\n      // Clear pending pickRequest\n      _pickRequest.event = null;\n    }\n  }\n\n  private _updateCursor(): void {\n    const container = this.props.parent || this.canvas;\n    if (container) {\n      container.style.cursor = this.props.getCursor(this.cursorState);\n    }\n  }\n\n  private _setDevice(device: Device) {\n    this.device = device;\n\n    if (!this.animationLoop) {\n      // finalize() has been called\n      return;\n    }\n\n    // if external context...\n    if (!this.canvas) {\n      this.canvas = this.device.canvasContext?.canvas as HTMLCanvasElement;\n      // TODO v9\n      // ts-expect-error - Currently luma.gl v9 does not expose these options\n      // All WebGLDevice contexts are instrumented, but it seems the device\n      // should have a method to start state tracking even if not enabled?\n      // instrumentGLContext(this.device.gl, {enable: true, copyState: true});\n    }\n\n    if (this.device.type === 'webgl') {\n      this.device.setParametersWebGL({\n        blend: true,\n        blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n        polygonOffsetFill: true,\n        depthTest: true,\n        depthFunc: GL.LEQUAL\n      });\n    }\n\n    this.props.onDeviceInitialized(this.device);\n    if (this.device.type === 'webgl') {\n      // Legacy callback - warn?\n      // @ts-expect-error gl is not visible on Device base class\n      this.props.onWebGLInitialized(this.device.gl);\n    }\n\n    // timeline for transitions\n    const timeline = new Timeline();\n    timeline.play();\n    this.animationLoop.attachTimeline(timeline);\n\n    this.eventManager = new EventManager(this.props.parent || this.canvas, {\n      touchAction: this.props.touchAction,\n      recognizers: Object.keys(RECOGNIZERS).map((eventName: string) => {\n        // Resolve recognizer settings\n        const [RecognizerConstructor, defaultOptions, recognizeWith, requestFailure] =\n          RECOGNIZERS[eventName];\n        const optionsOverride = this.props.eventRecognizerOptions?.[eventName];\n        const options = {...defaultOptions, ...optionsOverride, event: eventName};\n        return {\n          recognizer: new RecognizerConstructor(options),\n          recognizeWith,\n          requestFailure\n        };\n      }),\n      events: {\n        pointerdown: this._onPointerDown,\n        pointermove: this._onPointerMove,\n        pointerleave: this._onPointerMove\n      }\n    });\n    for (const eventType in EVENT_HANDLERS) {\n      this.eventManager.on(eventType, this._onEvent);\n    }\n\n    this.viewManager = new ViewManager({\n      timeline,\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange.bind(this),\n      onInteractionStateChange: this._onInteractionStateChange.bind(this),\n      views: this._getViews(),\n      viewState: this._getViewState(),\n      width: this.width,\n      height: this.height\n    });\n\n    // viewManager must be initialized before layerManager\n    // layerManager depends on viewport created by viewManager.\n    const viewport = this.viewManager.getViewports()[0];\n\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(this.device, {\n      deck: this,\n      stats: this.stats,\n      viewport,\n      timeline\n    });\n\n    this.effectManager = new EffectManager({\n      deck: this,\n      device: this.device\n    });\n\n    this.deckRenderer = new DeckRenderer(this.device);\n\n    this.deckPicker = new DeckPicker(this.device);\n\n    this.widgetManager = new WidgetManager({\n      deck: this,\n      parentElement: this.canvas?.parentElement\n    });\n    this.widgetManager.addDefault(new Tooltip());\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  /** Internal only: default render function (redraw all layers and views) */\n  _drawLayers(\n    redrawReason: string,\n    renderOptions?: {\n      target?: Framebuffer;\n      layerFilter?: (context: FilterContext) => boolean;\n      layers?: Layer[];\n      viewports?: Viewport[];\n      views?: {[viewId: string]: View};\n      pass?: string;\n      effects?: Effect[];\n      clearStack?: boolean;\n      clearCanvas?: boolean;\n    }\n  ) {\n    const {device, gl} = this.layerManager!.context;\n\n    this.props.onBeforeRender({device, gl});\n\n    const opts = {\n      target: this.props._framebuffer,\n      layers: this.layerManager!.getLayers(),\n      viewports: this.viewManager!.getViewports(),\n      onViewportActive: this.layerManager!.activateViewport,\n      views: this.viewManager!.getViews(),\n      pass: 'screen',\n      effects: this.effectManager!.getEffects(),\n      ...renderOptions\n    };\n    this.deckRenderer?.renderLayers(opts);\n\n    if (opts.pass === 'screen') {\n      // This method could be called when drawing to picking buffer, texture etc.\n      // Only when drawing to screen, update all widgets (UI components)\n      this.widgetManager!.onRedraw({\n        viewports: opts.viewports,\n        layers: opts.layers\n      });\n    }\n\n    this.props.onAfterRender({device, gl});\n  }\n\n  // Callbacks\n\n  private _onRenderFrame() {\n    this._getFrameStats();\n\n    // Log perf stats every second\n    if (this._metricsCounter++ % 60 === 0) {\n      this._getMetrics();\n      this.stats.reset();\n      log.table(4, this.metrics)();\n\n      // Experimental: report metrics\n      if (this.props._onMetrics) {\n        this.props._onMetrics(this.metrics);\n      }\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    // Note: This can trigger a redraw\n    this.layerManager!.updateLayers();\n\n    // Perform picking request if any\n    // TODO(ibgreen): Picking not yet supported on WebGPU\n    if (this.device?.type !== 'webgpu') {\n      this._pickAndCallback();\n    }\n\n    // Redraw if necessary\n    this.redraw();\n\n    // Update viewport transition if needed\n    // Note: this can trigger `onViewStateChange`, and affect layers\n    // We want to defer these changes to the next frame\n    if (this.viewManager) {\n      this.viewManager.updateViewStates();\n    }\n  }\n\n  // Callbacks\n\n  private _onViewStateChange(params: ViewStateChangeParameters & {viewId: string}) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState = {...this.viewState, [params.viewId]: viewState};\n      if (!this.props.viewState) {\n        // Apply internal view state\n        if (this.viewManager) {\n          this.viewManager.setProps({viewState: this.viewState});\n        }\n      }\n    }\n  }\n\n  private _onInteractionStateChange(interactionState: InteractionState) {\n    this.cursorState.isDragging = interactionState.isDragging || false;\n    this.props.onInteractionStateChange(interactionState);\n  }\n\n  /** Internal use only: event handler for click & drag */\n  _onEvent = (event: MjolnirGestureEvent) => {\n    const eventHandlerProp = EVENT_HANDLERS[event.type];\n    const pos = event.offsetCenter;\n\n    if (!eventHandlerProp || !pos || !this.layerManager) {\n      return;\n    }\n\n    // Reuse last picked object\n    const layers = this.layerManager.getLayers();\n    const info = this.deckPicker!.getLastPickedObject(\n      {\n        x: pos.x,\n        y: pos.y,\n        layers,\n        viewports: this.getViewports(pos)\n      },\n      this._lastPointerDownInfo\n    ) as PickingInfo;\n\n    const {layer} = info;\n    const layerHandler = layer && (layer[eventHandlerProp] || layer.props[eventHandlerProp]);\n    const rootHandler = this.props[eventHandlerProp];\n    let handled = false;\n\n    if (layerHandler) {\n      handled = layerHandler.call(layer, info, event);\n    }\n    if (!handled) {\n      rootHandler?.(info, event);\n      this.widgetManager!.onEvent(info, event);\n    }\n  };\n\n  /** Internal use only: evnet handler for pointerdown */\n  _onPointerDown = (event: MjolnirPointerEvent) => {\n    // TODO(ibgreen) Picking not yet supported on WebGPU\n    if (this.device?.type === 'webgpu') {\n      return;\n    }\n    const pos = event.offsetCenter;\n    const pickedInfo = this._pick('pickObject', 'pickObject Time', {\n      x: pos.x,\n      y: pos.y,\n      radius: this.props.pickingRadius\n    });\n    this._lastPointerDownInfo = pickedInfo.result[0] || pickedInfo.emptyInfo;\n  };\n\n  private _getFrameStats(): void {\n    const {stats} = this;\n    stats.get('frameRate').timeEnd();\n    stats.get('frameRate').timeStart();\n\n    // Get individual stats from luma.gl so reset works\n    const animationLoopStats = this.animationLoop!.stats;\n    stats.get('GPU Time').addTime(animationLoopStats.get('GPU Time').lastTiming);\n    stats.get('CPU Time').addTime(animationLoopStats.get('CPU Time').lastTiming);\n  }\n\n  private _getMetrics(): void {\n    const {metrics, stats} = this;\n    metrics.fps = stats.get('frameRate').getHz();\n    metrics.setPropsTime = stats.get('setProps Time').time;\n    metrics.updateAttributesTime = stats.get('Update Attributes').time;\n    metrics.framesRedrawn = stats.get('Redraw Count').count;\n    metrics.pickTime =\n      stats.get('pickObject Time').time +\n      stats.get('pickMultipleObjects Time').time +\n      stats.get('pickObjects Time').time;\n    metrics.pickCount = stats.get('Pick Count').count;\n\n    // Luma stats\n    metrics.gpuTime = stats.get('GPU Time').time;\n    metrics.cpuTime = stats.get('CPU Time').time;\n    metrics.gpuTimePerFrame = stats.get('GPU Time').getAverageTime();\n    metrics.cpuTimePerFrame = stats.get('CPU Time').getAverageTime();\n\n    const memoryStats = luma.stats.get('Memory Usage');\n    metrics.bufferMemory = memoryStats.get('Buffer Memory').count;\n    metrics.textureMemory = memoryStats.get('Texture Memory').count;\n    metrics.renderbufferMemory = memoryStats.get('Renderbuffer Memory').count;\n    metrics.gpuMemory = memoryStats.get('GPU Memory').count;\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {getTypedArrayFromDataType, getDataTypeFromTypedArray} from '@luma.gl/core';\nimport type {BufferAttributeLayout, VertexFormat} from '@luma.gl/core';\nimport type {TypedArrayConstructor} from '../../types/types';\nimport type {BufferAccessor, DataColumnSettings, LogicalDataType} from './data-column';\n\nexport function typedArrayFromDataType(type: LogicalDataType): TypedArrayConstructor {\n  // Sorted in some order of likelihood to reduce amount of comparisons\n  switch (type) {\n    case 'float64':\n      return Float64Array;\n    case 'uint8':\n    case 'unorm8':\n      return Uint8ClampedArray;\n    default:\n      return getTypedArrayFromDataType(type);\n  }\n}\n\nexport const dataTypeFromTypedArray = getDataTypeFromTypedArray;\n\nexport function getBufferAttributeLayout(\n  name: string,\n  accessor: BufferAccessor,\n  deviceType: 'webgpu' | 'wegbgl' | string\n): BufferAttributeLayout {\n  // TODO(ibgreen): WebGPU change. Currently we always use normalized 8 bit integers\n  const type = deviceType === 'webgpu' && accessor.type === 'uint8' ? 'unorm8' : accessor.type;\n  return {\n    attribute: name,\n    // @ts-expect-error Not all combinations are valid vertex formats; it's up to DataColumn to ensure\n    format:\n      (accessor.size as number) > 1 ? (`${type}x${accessor.size}` as VertexFormat) : accessor.type,\n    byteOffset: accessor.offset || 0\n    // Note stride is set on the top level\n  };\n}\n\nexport function getStride(accessor: DataColumnSettings<unknown>): number {\n  return accessor.stride || accessor.size * accessor.bytesPerElement;\n}\n\nexport function bufferLayoutEqual(\n  accessor1: DataColumnSettings<unknown>,\n  accessor2: DataColumnSettings<unknown>\n) {\n  return (\n    accessor1.type === accessor2.type &&\n    accessor1.size === accessor2.size &&\n    getStride(accessor1) === getStride(accessor2) &&\n    (accessor1.offset || 0) === (accessor2.offset || 0)\n  );\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* eslint-disable complexity */\nimport type {Device} from '@luma.gl/core';\nimport {Buffer, BufferLayout, BufferAttributeLayout, VertexType} from '@luma.gl/core';\n\nimport {\n  typedArrayFromDataType,\n  getBufferAttributeLayout,\n  getStride,\n  dataTypeFromTypedArray\n} from './gl-utils';\nimport typedArrayManager from '../../utils/typed-array-manager';\nimport {toDoublePrecisionArray} from '../../utils/math-utils';\nimport log from '../../utils/log';\n\nimport type {TypedArray, NumericArray, TypedArrayConstructor} from '../../types/types';\n\nexport type DataType = Exclude<VertexType, 'float16'>;\nexport type LogicalDataType = DataType | 'float64';\n\nexport type BufferAccessor = {\n  /** Vertex data type. */\n  type?: DataType;\n  /** The number of elements per vertex attribute. */\n  size?: number;\n  /** Offset of the first vertex attribute into the buffer, in bytes. */\n  offset?: number;\n  /** The offset between the beginning of consecutive vertex attributes, in bytes. */\n  stride?: number;\n};\n\nexport type ShaderAttributeOptions = Partial<BufferAccessor> & {\n  offset: number;\n  stride: number;\n  vertexOffset?: number;\n  elementOffset?: number;\n};\n\nfunction resolveShaderAttribute(\n  baseAccessor: DataColumnSettings<any>,\n  shaderAttributeOptions: Partial<ShaderAttributeOptions>\n): ShaderAttributeOptions {\n  if (shaderAttributeOptions.offset) {\n    log.removed('shaderAttribute.offset', 'vertexOffset, elementOffset')();\n  }\n\n  // All shader attributes share the parent's stride\n  const stride = getStride(baseAccessor);\n  // `vertexOffset` is used to access the neighboring vertex's value\n  // e.g. `nextPositions` in polygon\n  const vertexOffset =\n    shaderAttributeOptions.vertexOffset !== undefined\n      ? shaderAttributeOptions.vertexOffset\n      : baseAccessor.vertexOffset || 0;\n  // `elementOffset` is defined when shader attribute's size is smaller than the parent's\n  // e.g. `translations` in transform matrix\n  const elementOffset = shaderAttributeOptions.elementOffset || 0;\n  const offset =\n    // offsets defined by the attribute\n    vertexOffset * stride +\n    elementOffset * baseAccessor.bytesPerElement +\n    // offsets defined by external buffers if any\n    (baseAccessor.offset || 0);\n\n  return {\n    ...shaderAttributeOptions,\n    offset,\n    stride\n  };\n}\n\nfunction resolveDoublePrecisionShaderAttributes(\n  baseAccessor: DataColumnSettings<any>,\n  shaderAttributeOptions: Partial<ShaderAttributeOptions>\n): {\n  high: ShaderAttributeOptions;\n  low: ShaderAttributeOptions;\n} {\n  const resolvedOptions = resolveShaderAttribute(baseAccessor, shaderAttributeOptions);\n\n  return {\n    high: resolvedOptions,\n    low: {\n      ...resolvedOptions,\n      offset: resolvedOptions.offset + baseAccessor.size * 4\n    }\n  };\n}\n\nexport type DataColumnOptions<Options> = Options &\n  Omit<BufferAccessor, 'type'> & {\n    id?: string;\n    vertexOffset?: number;\n    fp64?: boolean;\n    /** Vertex data type.\n     * @default 'float32'\n     */\n    type?: LogicalDataType;\n    /** Internal API, use `type` instead */\n    logicalType?: LogicalDataType;\n    isIndexed?: boolean;\n    defaultValue?: number | number[];\n  };\n\nexport type DataColumnSettings<Options> = DataColumnOptions<Options> & {\n  type: DataType;\n  size: number;\n  logicalType?: LogicalDataType;\n  normalized: boolean;\n  bytesPerElement: number;\n  defaultValue: number[];\n  defaultType: TypedArrayConstructor;\n};\n\ntype DataColumnInternalState<Options, State> = State & {\n  externalBuffer: Buffer | null;\n  bufferAccessor: DataColumnSettings<Options>;\n  allocatedValue: TypedArray | null;\n  numInstances: number;\n  bounds: [number[], number[]] | null;\n  constant: boolean;\n};\n\nexport default class DataColumn<Options, State> {\n  device: Device;\n  id: string;\n  size: number;\n  settings: DataColumnSettings<Options>;\n  value: NumericArray | null;\n  doublePrecision: boolean;\n\n  protected _buffer: Buffer | null = null;\n  protected state: DataColumnInternalState<Options, State>;\n\n  /* eslint-disable max-statements */\n  constructor(device: Device, opts: DataColumnOptions<Options>, state: State) {\n    this.device = device;\n    this.id = opts.id || '';\n    this.size = opts.size || 1;\n\n    const logicalType = opts.logicalType || opts.type;\n    const doublePrecision = logicalType === 'float64';\n\n    let {defaultValue} = opts;\n    defaultValue = Number.isFinite(defaultValue)\n      ? [defaultValue]\n      : defaultValue || new Array(this.size).fill(0);\n\n    let bufferType: DataType;\n    if (doublePrecision) {\n      bufferType = 'float32';\n    } else if (!logicalType && opts.isIndexed) {\n      bufferType = 'uint32';\n    } else {\n      bufferType = logicalType || 'float32';\n    }\n\n    // This is the attribute type defined by the layer\n    // If an external buffer is provided, this.type may be overwritten\n    // But we always want to use defaultType for allocation\n    let defaultType = typedArrayFromDataType(logicalType || bufferType);\n    this.doublePrecision = doublePrecision;\n\n    // `fp64: false` tells a double-precision attribute to allocate Float32Arrays\n    // by default when using auto-packing. This is more efficient in use cases where\n    // high precision is unnecessary, but the `64Low` attribute is still required\n    // by the shader.\n    if (doublePrecision && opts.fp64 === false) {\n      defaultType = Float32Array;\n    }\n\n    this.value = null;\n    this.settings = {\n      ...opts,\n      defaultType,\n      defaultValue: defaultValue as number[],\n      logicalType,\n      type: bufferType,\n      normalized: bufferType.includes('norm'),\n      size: this.size,\n      bytesPerElement: defaultType.BYTES_PER_ELEMENT\n    };\n    this.state = {\n      ...state,\n      externalBuffer: null,\n      bufferAccessor: this.settings,\n      allocatedValue: null,\n      numInstances: 0,\n      bounds: null,\n      constant: false\n    };\n  }\n  /* eslint-enable max-statements */\n\n  get isConstant(): boolean {\n    return this.state.constant;\n  }\n\n  get buffer(): Buffer {\n    return this._buffer!;\n  }\n\n  get byteOffset(): number {\n    const accessor = this.getAccessor();\n    if (accessor.vertexOffset) {\n      return accessor.vertexOffset * getStride(accessor);\n    }\n    return 0;\n  }\n\n  get numInstances(): number {\n    return this.state.numInstances;\n  }\n\n  set numInstances(n: number) {\n    this.state.numInstances = n;\n  }\n\n  delete(): void {\n    if (this._buffer) {\n      this._buffer.delete();\n      this._buffer = null;\n    }\n    typedArrayManager.release(this.state.allocatedValue);\n  }\n\n  getBuffer(): Buffer | null {\n    if (this.state.constant) {\n      return null;\n    }\n    return this.state.externalBuffer || this._buffer;\n  }\n\n  getValue(\n    attributeName: string = this.id,\n    options: Partial<ShaderAttributeOptions> | null = null\n  ): Record<string, Buffer | TypedArray | null> {\n    const result: Record<string, Buffer | TypedArray | null> = {};\n    if (this.state.constant) {\n      const value = this.value as TypedArray;\n      if (options) {\n        const shaderAttributeDef = resolveShaderAttribute(this.getAccessor(), options);\n        const offset = shaderAttributeDef.offset / value.BYTES_PER_ELEMENT;\n        const size = shaderAttributeDef.size || this.size;\n        result[attributeName] = value.subarray(offset, offset + size);\n      } else {\n        result[attributeName] = value;\n      }\n    } else {\n      result[attributeName] = this.getBuffer();\n    }\n    if (this.doublePrecision) {\n      if (this.value instanceof Float64Array) {\n        result[`${attributeName}64Low`] = result[attributeName];\n      } else {\n        // Disable fp64 low part\n        result[`${attributeName}64Low`] = new Float32Array(this.size);\n      }\n    }\n    return result;\n  }\n\n  protected _getBufferLayout(\n    attributeName: string = this.id,\n    options: Partial<ShaderAttributeOptions> | null = null\n  ): BufferLayout {\n    const accessor = this.getAccessor();\n    const attributes: BufferAttributeLayout[] = [];\n    const result: BufferLayout = {\n      name: this.id,\n      byteStride: getStride(accessor),\n      attributes\n    };\n\n    if (this.doublePrecision) {\n      const doubleShaderAttributeDefs = resolveDoublePrecisionShaderAttributes(\n        accessor,\n        options || {}\n      );\n      attributes.push(\n        getBufferAttributeLayout(\n          attributeName,\n          {...accessor, ...doubleShaderAttributeDefs.high},\n          this.device.type\n        ),\n        getBufferAttributeLayout(\n          `${attributeName}64Low`,\n          {\n            ...accessor,\n            ...doubleShaderAttributeDefs.low\n          },\n          this.device.type\n        )\n      );\n    } else if (options) {\n      const shaderAttributeDef = resolveShaderAttribute(accessor, options);\n      attributes.push(\n        getBufferAttributeLayout(\n          attributeName,\n          {...accessor, ...shaderAttributeDef},\n          this.device.type\n        )\n      );\n    } else {\n      attributes.push(getBufferAttributeLayout(attributeName, accessor, this.device.type));\n    }\n    return result;\n  }\n\n  setAccessor(accessor: DataColumnSettings<Options>) {\n    this.state.bufferAccessor = accessor;\n  }\n\n  getAccessor(): DataColumnSettings<Options> {\n    return this.state.bufferAccessor;\n  }\n\n  // Returns [min: Array(size), max: Array(size)]\n  /* eslint-disable max-depth */\n  getBounds(): [number[], number[]] | null {\n    if (this.state.bounds) {\n      return this.state.bounds;\n    }\n    let result: [number[], number[]] | null = null;\n    if (this.state.constant && this.value) {\n      const min = Array.from(this.value);\n      result = [min, min];\n    } else {\n      const {value, numInstances, size} = this;\n      const len = numInstances * size;\n      if (value && len && value.length >= len) {\n        const min = new Array(size).fill(Infinity);\n        const max = new Array(size).fill(-Infinity);\n        for (let i = 0; i < len; ) {\n          for (let j = 0; j < size; j++) {\n            const v = value[i++];\n            if (v < min[j]) min[j] = v;\n            if (v > max[j]) max[j] = v;\n          }\n        }\n        result = [min, max];\n      }\n    }\n    this.state.bounds = result;\n    return result;\n  }\n\n  // returns true if success\n  // eslint-disable-next-line max-statements\n  setData(\n    data:\n      | TypedArray\n      | Buffer\n      | ({\n          constant?: boolean;\n          value?: NumericArray;\n          buffer?: Buffer;\n          /** Set to `true` if supplying float values to a unorm attribute */\n          normalized?: boolean;\n        } & Partial<BufferAccessor>)\n  ): boolean {\n    const {state} = this;\n\n    let opts: {\n      constant?: boolean;\n      value?: NumericArray;\n      buffer?: Buffer;\n    } & Partial<BufferAccessor>;\n    if (ArrayBuffer.isView(data)) {\n      opts = {value: data};\n    } else if (data instanceof Buffer) {\n      opts = {buffer: data};\n    } else {\n      opts = data;\n    }\n\n    const accessor: DataColumnSettings<Options> = {...this.settings, ...opts};\n\n    if (ArrayBuffer.isView(opts.value)) {\n      if (!opts.type) {\n        // Deduce data type\n        const is64Bit = this.doublePrecision && opts.value instanceof Float64Array;\n        if (is64Bit) {\n          accessor.type = 'float32';\n        } else {\n          const type = dataTypeFromTypedArray(opts.value);\n          accessor.type = accessor.normalized ? (type.replace('int', 'norm') as DataType) : type;\n        }\n      }\n      accessor.bytesPerElement = opts.value.BYTES_PER_ELEMENT;\n      accessor.stride = getStride(accessor);\n    }\n\n    state.bounds = null; // clear cached bounds\n\n    if (opts.constant) {\n      // set constant\n      let value = opts.value;\n      value = this._normalizeValue(value, [], 0);\n      if (this.settings.normalized) {\n        value = this.normalizeConstant(value);\n      }\n      const hasChanged = !state.constant || !this._areValuesEqual(value, this.value);\n\n      if (!hasChanged) {\n        return false;\n      }\n      state.externalBuffer = null;\n      state.constant = true;\n      this.value = ArrayBuffer.isView(value) ? value : new Float32Array(value);\n    } else if (opts.buffer) {\n      const buffer = opts.buffer;\n      state.externalBuffer = buffer;\n      state.constant = false;\n      this.value = opts.value || null;\n    } else if (opts.value) {\n      this._checkExternalBuffer(opts);\n\n      let value = opts.value as TypedArray;\n      state.externalBuffer = null;\n      state.constant = false;\n      this.value = value;\n\n      let {buffer} = this;\n      const stride = getStride(accessor);\n      const byteOffset = (accessor.vertexOffset || 0) * stride;\n\n      if (this.doublePrecision && value instanceof Float64Array) {\n        value = toDoublePrecisionArray(value, accessor);\n      }\n      if (this.settings.isIndexed) {\n        const ArrayType = this.settings.defaultType;\n        if (value.constructor !== ArrayType) {\n          // Cast the index buffer to expected type\n          value = new ArrayType(value);\n        }\n      }\n\n      // A small over allocation is used as safety margin\n      // Shader attributes may try to access this buffer with bigger offsets\n      const requiredBufferSize = value.byteLength + byteOffset + stride * 2;\n      if (!buffer || buffer.byteLength < requiredBufferSize) {\n        buffer = this._createBuffer(requiredBufferSize);\n      }\n\n      buffer.write(value, byteOffset);\n    }\n\n    this.setAccessor(accessor);\n\n    return true;\n  }\n\n  updateSubBuffer(\n    opts: {\n      startOffset?: number;\n      endOffset?: number;\n    } = {}\n  ): void {\n    this.state.bounds = null; // clear cached bounds\n\n    const value = this.value as TypedArray;\n    const {startOffset = 0, endOffset} = opts;\n    this.buffer.write(\n      this.doublePrecision && value instanceof Float64Array\n        ? toDoublePrecisionArray(value, {\n            size: this.size,\n            startIndex: startOffset,\n            endIndex: endOffset\n          })\n        : value.subarray(startOffset, endOffset),\n      startOffset * value.BYTES_PER_ELEMENT + this.byteOffset\n    );\n  }\n\n  allocate(numInstances: number, copy: boolean = false): boolean {\n    const {state} = this;\n    const oldValue = state.allocatedValue;\n\n    // Allocate at least one element to ensure a valid buffer\n    const value = typedArrayManager.allocate(oldValue, numInstances + 1, {\n      size: this.size,\n      type: this.settings.defaultType,\n      copy\n    });\n\n    this.value = value;\n\n    const {byteOffset} = this;\n    let {buffer} = this;\n\n    if (!buffer || buffer.byteLength < value.byteLength + byteOffset) {\n      buffer = this._createBuffer(value.byteLength + byteOffset);\n      if (copy && oldValue) {\n        // Upload the full existing attribute value to the GPU, so that updateBuffer\n        // can choose to only update a partial range.\n        // TODO - copy old buffer to new buffer on the GPU\n        buffer.write(\n          oldValue instanceof Float64Array ? toDoublePrecisionArray(oldValue, this) : oldValue,\n          byteOffset\n        );\n      }\n    }\n\n    state.allocatedValue = value;\n    state.constant = false;\n    state.externalBuffer = null;\n    this.setAccessor(this.settings);\n    return true;\n  }\n\n  // PRIVATE HELPER METHODS\n  protected _checkExternalBuffer(opts: {value?: NumericArray; normalized?: boolean}): void {\n    const {value} = opts;\n    if (!ArrayBuffer.isView(value)) {\n      throw new Error(`Attribute ${this.id} value is not TypedArray`);\n    }\n    const ArrayType = this.settings.defaultType;\n\n    let illegalArrayType = false;\n    if (this.doublePrecision) {\n      // not 32bit or 64bit\n      illegalArrayType = value.BYTES_PER_ELEMENT < 4;\n    }\n    if (illegalArrayType) {\n      throw new Error(`Attribute ${this.id} does not support ${value.constructor.name}`);\n    }\n    if (!(value instanceof ArrayType) && this.settings.normalized && !('normalized' in opts)) {\n      log.warn(`Attribute ${this.id} is normalized`)();\n    }\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer\n  normalizeConstant(value: NumericArray): NumericArray {\n    /* eslint-disable complexity */\n    switch (this.settings.type) {\n      case 'snorm8':\n        // normalize [-128, 127] to [-1, 1]\n        return new Float32Array(value).map(x => ((x + 128) / 255) * 2 - 1);\n\n      case 'snorm16':\n        // normalize [-32768, 32767] to [-1, 1]\n        return new Float32Array(value).map(x => ((x + 32768) / 65535) * 2 - 1);\n\n      case 'unorm8':\n        // normalize [0, 255] to [0, 1]\n        return new Float32Array(value).map(x => x / 255);\n\n      case 'unorm16':\n        // normalize [0, 65535] to [0, 1]\n        return new Float32Array(value).map(x => x / 65535);\n\n      default:\n        // No normalization for gl.FLOAT and gl.HALF_FLOAT\n        return value;\n    }\n  }\n\n  /* check user supplied values and apply fallback */\n  protected _normalizeValue(value: any, out: NumericArray, start: number): NumericArray {\n    const {defaultValue, size} = this.settings;\n\n    if (Number.isFinite(value)) {\n      out[start] = value;\n      return out;\n    }\n    if (!value) {\n      let i = size;\n      while (--i >= 0) {\n        out[start + i] = defaultValue[i];\n      }\n      return out;\n    }\n\n    // Important - switch cases are 5x more performant than a for loop!\n    /* eslint-disable no-fallthrough, default-case */\n    switch (size) {\n      case 4:\n        out[start + 3] = Number.isFinite(value[3]) ? value[3] : defaultValue[3];\n      case 3:\n        out[start + 2] = Number.isFinite(value[2]) ? value[2] : defaultValue[2];\n      case 2:\n        out[start + 1] = Number.isFinite(value[1]) ? value[1] : defaultValue[1];\n      case 1:\n        out[start + 0] = Number.isFinite(value[0]) ? value[0] : defaultValue[0];\n        break;\n\n      default:\n        // In the rare case where the attribute size > 4, do it the slow way\n        // This is used for e.g. transform matrices\n        let i = size;\n        while (--i >= 0) {\n          out[start + i] = Number.isFinite(value[i]) ? value[i] : defaultValue[i];\n        }\n    }\n\n    return out;\n  }\n\n  protected _areValuesEqual(value1: any, value2: any): boolean {\n    if (!value1 || !value2) {\n      return false;\n    }\n    const {size} = this;\n    for (let i = 0; i < size; i++) {\n      if (value1[i] !== value2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected _createBuffer(byteLength: number): Buffer {\n    if (this._buffer) {\n      this._buffer.destroy();\n    }\n\n    const {isIndexed, type} = this.settings;\n    this._buffer = this.device.createBuffer({\n      ...this._buffer?.props,\n      id: this.id,\n      // TODO(ibgreen) - WebGPU requires COPY_DST and COPY_SRC to allow write / read\n      usage: (isIndexed ? Buffer.INDEX : Buffer.VERTEX) | Buffer.COPY_DST,\n      indexType: isIndexed ? (type as 'uint16' | 'uint32') : undefined,\n      byteLength\n    });\n\n    return this._buffer;\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {NumericArray} from '../types/types';\nimport type {AccessorFunction} from '../types/layer-props';\n\nconst EMPTY_ARRAY = [];\nconst placeholderArray = [];\n\n/*\n * Create an Iterable\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * and a \"context\" tracker from the given data\n */\nexport function createIterable(\n  data,\n  startRow = 0,\n  endRow = Infinity\n): {\n  iterable: Iterable<any>;\n  objectInfo: {\n    index: number;\n    data: any;\n    target: any[];\n  };\n} {\n  let iterable: Iterable<any> = EMPTY_ARRAY;\n\n  const objectInfo = {\n    index: -1,\n    data,\n    // visitor can optionally utilize this to avoid constructing a new array for every object\n    target: []\n  };\n\n  if (!data) {\n    iterable = EMPTY_ARRAY;\n  } else if (typeof data[Symbol.iterator] === 'function') {\n    // data is already an iterable\n    iterable = data;\n  } else if (data.length > 0) {\n    placeholderArray.length = data.length;\n    iterable = placeholderArray;\n  }\n\n  if (startRow > 0 || Number.isFinite(endRow)) {\n    iterable = (Array.isArray(iterable) ? iterable : Array.from(iterable)).slice(startRow, endRow);\n    objectInfo.index = startRow - 1;\n  }\n\n  return {iterable, objectInfo};\n}\n\n/*\n * Returns true if data is an async iterable object\n */\nexport function isAsyncIterable(data): boolean {\n  return data && data[Symbol.asyncIterator];\n}\n\n/*\n * Create an accessor function from a flat buffer that yields the value at each object index\n */\nexport function getAccessorFromBuffer(\n  typedArray,\n  options: {\n    size: number;\n    stride?: number;\n    offset?: number;\n    startIndices?: NumericArray;\n    nested?: boolean;\n  }\n): AccessorFunction<any, NumericArray> {\n  const {size, stride, offset, startIndices, nested} = options;\n  const bytesPerElement = typedArray.BYTES_PER_ELEMENT;\n  const elementStride = stride ? stride / bytesPerElement : size;\n  const elementOffset = offset ? offset / bytesPerElement : 0;\n  const vertexCount = Math.floor((typedArray.length - elementOffset) / elementStride);\n\n  return (_, {index, target}) => {\n    if (!startIndices) {\n      const sourceIndex = index * elementStride + elementOffset;\n      for (let j = 0; j < size; j++) {\n        target[j] = typedArray[sourceIndex + j];\n      }\n      return target;\n    }\n    const startIndex = startIndices[index];\n    const endIndex = startIndices[index + 1] || vertexCount;\n    let result;\n\n    if (nested) {\n      result = new Array(endIndex - startIndex);\n      for (let i = startIndex; i < endIndex; i++) {\n        const sourceIndex = i * elementStride + elementOffset;\n        target = new Array(size);\n        for (let j = 0; j < size; j++) {\n          target[j] = typedArray[sourceIndex + j];\n        }\n        result[i - startIndex] = target;\n      }\n    } else if (elementStride === size) {\n      result = typedArray.subarray(\n        startIndex * size + elementOffset,\n        endIndex * size + elementOffset\n      );\n    } else {\n      result = new typedArray.constructor((endIndex - startIndex) * size);\n      let targetIndex = 0;\n      for (let i = startIndex; i < endIndex; i++) {\n        const sourceIndex = i * elementStride + elementOffset;\n        for (let j = 0; j < size; j++) {\n          result[targetIndex++] = typedArray[sourceIndex + j];\n        }\n      }\n    }\n\n    return result;\n  };\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/*\n * range (Array)\n *   + start (Number) - the start index (incl.)\n *   + end (Number) - the end index (excl.)\n * rangeList (Array) - array of sorted, combined ranges\n */\nexport const EMPTY = [];\nexport const FULL = [[0, Infinity]];\n\n// Insert a range into a range collection\nexport function add(rangeList, range) {\n  // Noop if range collection already covers all\n  if (rangeList === FULL) {\n    return rangeList;\n  }\n\n  // Validate the input range\n  if (range[0] < 0) {\n    range[0] = 0;\n  }\n  if (range[0] >= range[1]) {\n    return rangeList;\n  }\n\n  // TODO - split off to tree-shakable Range class\n  const newRangeList: number[] = [];\n  const len = rangeList.length;\n  let insertPosition = 0;\n\n  for (let i = 0; i < len; i++) {\n    const range0 = rangeList[i];\n\n    if (range0[1] < range[0]) {\n      // the current range is to the left of the new range\n      newRangeList.push(range0);\n      insertPosition = i + 1;\n    } else if (range0[0] > range[1]) {\n      // the current range is to the right of the new range\n      newRangeList.push(range0);\n    } else {\n      range = [Math.min(range0[0], range[0]), Math.max(range0[1], range[1])];\n    }\n  }\n  newRangeList.splice(insertPosition, 0, range);\n  return newRangeList;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {NumericArray} from '../../types/types';\n\nexport interface TransitionSettings {\n  type: string;\n  /** Callback to get the value that the entering vertices are transitioning from. */\n  enter?: (toValue: NumericArray, chunk?: NumericArray) => NumericArray;\n  /** Callback when the transition is started */\n  onStart?: () => void;\n  /** Callback when the transition is done */\n  onEnd?: () => void;\n  /** Callback when the transition is interrupted */\n  onInterrupt?: () => void;\n}\n\nexport type InterpolationTransitionSettings = TransitionSettings & {\n  type?: 'interpolation';\n  /** Duration of the transition animation, in milliseconds */\n  duration: number;\n  /** Easing function that maps a value from [0, 1] to [0, 1], see [http://easings.net/](http://easings.net/) */\n  easing?: (t: number) => number;\n};\n\nexport type SpringTransitionSettings = TransitionSettings & {\n  type: 'spring';\n  /** \"Tension\" factor for the spring */\n  stiffness: number;\n  /** \"Friction\" factor that counteracts the spring's acceleration */\n  damping: number;\n};\n\nconst DEFAULT_TRANSITION_SETTINGS = {\n  interpolation: {\n    duration: 0,\n    easing: t => t\n  },\n  spring: {\n    stiffness: 0.05,\n    damping: 0.5\n  }\n};\n\nexport function normalizeTransitionSettings(\n  userSettings: number | InterpolationTransitionSettings | SpringTransitionSettings,\n  layerSettings?: boolean | Partial<TransitionSettings>\n): TransitionSettings | null {\n  if (!userSettings) {\n    return null;\n  }\n  if (Number.isFinite(userSettings)) {\n    userSettings = {type: 'interpolation', duration: userSettings as number};\n  }\n  const type = (userSettings as TransitionSettings).type || 'interpolation';\n  return {\n    ...DEFAULT_TRANSITION_SETTINGS[type],\n    ...(layerSettings as TransitionSettings),\n    ...(userSettings as TransitionSettings),\n    type\n  };\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* eslint-disable complexity */\nimport DataColumn, {\n  DataColumnOptions,\n  ShaderAttributeOptions,\n  BufferAccessor,\n  DataColumnSettings\n} from './data-column';\nimport assert from '../../utils/assert';\nimport {createIterable, getAccessorFromBuffer} from '../../utils/iterable-utils';\nimport {fillArray} from '../../utils/flatten';\nimport * as range from '../../utils/range';\nimport {bufferLayoutEqual} from './gl-utils';\nimport {normalizeTransitionSettings, TransitionSettings} from './transition-settings';\nimport type {Device, Buffer, BufferLayout} from '@luma.gl/core';\n\nimport type {NumericArray, TypedArray} from '../../types/types';\n\nexport type Accessor<DataType, ReturnType> = (\n  object: DataType,\n  context: {\n    data: any;\n    index: number;\n    target: number[];\n  }\n) => ReturnType;\n\nexport type Updater = (\n  attribute: Attribute,\n  {\n    data,\n    startRow,\n    endRow,\n    props,\n    numInstances\n  }: {\n    data: any;\n    startRow: number;\n    endRow: number;\n    props: any;\n    numInstances: number;\n  }\n) => void;\n\nexport type AttributeOptions = DataColumnOptions<{\n  transition?: boolean | Partial<TransitionSettings>;\n  stepMode?: 'vertex' | 'instance' | 'dynamic';\n  noAlloc?: boolean;\n  update?: Updater;\n  accessor?: Accessor<any, any> | string | string[];\n  transform?: (value: any) => any;\n  shaderAttributes?: Record<string, Partial<ShaderAttributeOptions>>;\n}>;\n\nexport type BinaryAttribute = Partial<BufferAccessor> & {value?: TypedArray; buffer?: Buffer};\n\ntype AttributeInternalState = {\n  startIndices: NumericArray | null;\n  /** Legacy: external binary supplied via attribute name */\n  lastExternalBuffer: TypedArray | Buffer | BinaryAttribute | null;\n  /** External binary supplied via accessor name */\n  binaryValue: TypedArray | Buffer | BinaryAttribute | null;\n  binaryAccessor: Accessor<any, any> | null;\n  needsUpdate: string | boolean;\n  needsRedraw: string | boolean;\n  layoutChanged: boolean;\n  updateRanges: number[][];\n};\n\nexport default class Attribute extends DataColumn<AttributeOptions, AttributeInternalState> {\n  /** Legacy approach to set attribute value - read `isConstant` instead for attribute state */\n  constant: boolean = false;\n\n  constructor(device: Device, opts: AttributeOptions) {\n    super(device, opts, {\n      startIndices: null,\n      lastExternalBuffer: null,\n      binaryValue: null,\n      binaryAccessor: null,\n      needsUpdate: true,\n      needsRedraw: false,\n      layoutChanged: false,\n      updateRanges: range.FULL\n    });\n\n    // eslint-disable-next-line\n    this.settings.update = opts.update || (opts.accessor ? this._autoUpdater : undefined);\n\n    Object.seal(this.settings);\n    Object.seal(this.state);\n\n    // Check all fields and generate helpful error messages\n    this._validateAttributeUpdaters();\n  }\n\n  get startIndices(): NumericArray | null {\n    return this.state.startIndices;\n  }\n\n  set startIndices(layout: NumericArray | null) {\n    this.state.startIndices = layout;\n  }\n\n  needsUpdate(): string | boolean {\n    return this.state.needsUpdate;\n  }\n\n  needsRedraw({clearChangedFlags = false}: {clearChangedFlags?: boolean} = {}): string | boolean {\n    const needsRedraw = this.state.needsRedraw;\n    this.state.needsRedraw = needsRedraw && !clearChangedFlags;\n    return needsRedraw;\n  }\n\n  layoutChanged(): boolean {\n    return this.state.layoutChanged;\n  }\n\n  setAccessor(accessor: DataColumnSettings<AttributeOptions>) {\n    this.state.layoutChanged ||= !bufferLayoutEqual(accessor, this.getAccessor());\n    super.setAccessor(accessor);\n  }\n\n  getUpdateTriggers(): string[] {\n    const {accessor} = this.settings;\n\n    // Backards compatibility: allow attribute name to be used as update trigger key\n    return [this.id].concat((typeof accessor !== 'function' && accessor) || []);\n  }\n\n  supportsTransition(): boolean {\n    return Boolean(this.settings.transition);\n  }\n\n  // Resolve transition settings object if transition is enabled, otherwise `null`\n  getTransitionSetting(opts: Record<string, any>): TransitionSettings | null {\n    if (!opts || !this.supportsTransition()) {\n      return null;\n    }\n    const {accessor} = this.settings;\n    // TODO: have the layer resolve these transition settings itself?\n    const layerSettings = this.settings.transition;\n    // these are the transition settings passed in by the user\n    const userSettings = Array.isArray(accessor)\n      ? // @ts-ignore\n        opts[accessor.find(a => opts[a])]\n      : // @ts-ignore\n        opts[accessor];\n\n    // Shorthand: use duration instead of parameter object\n    return normalizeTransitionSettings(userSettings, layerSettings);\n  }\n\n  setNeedsUpdate(reason: string = this.id, dataRange?: {startRow?: number; endRow?: number}): void {\n    this.state.needsUpdate = this.state.needsUpdate || reason;\n    this.setNeedsRedraw(reason);\n    if (dataRange) {\n      const {startRow = 0, endRow = Infinity} = dataRange;\n      this.state.updateRanges = range.add(this.state.updateRanges, [startRow, endRow]);\n    } else {\n      this.state.updateRanges = range.FULL;\n    }\n  }\n\n  clearNeedsUpdate(): void {\n    this.state.needsUpdate = false;\n    this.state.updateRanges = range.EMPTY;\n  }\n\n  setNeedsRedraw(reason: string = this.id): void {\n    this.state.needsRedraw = this.state.needsRedraw || reason;\n  }\n\n  allocate(numInstances: number): boolean {\n    const {state, settings} = this;\n\n    if (settings.noAlloc) {\n      // Data is provided through a Buffer object.\n      return false;\n    }\n\n    if (settings.update) {\n      super.allocate(numInstances, state.updateRanges !== range.FULL);\n      return true;\n    }\n\n    return false;\n  }\n\n  updateBuffer({\n    numInstances,\n    data,\n    props,\n    context\n  }: {\n    numInstances: number;\n    data: any;\n    props: any;\n    context: any;\n  }): boolean {\n    if (!this.needsUpdate()) {\n      return false;\n    }\n\n    const {\n      state: {updateRanges},\n      settings: {update, noAlloc}\n    } = this;\n\n    let updated = true;\n    if (update) {\n      // Custom updater - typically for non-instanced layers\n      for (const [startRow, endRow] of updateRanges) {\n        update.call(context, this, {data, startRow, endRow, props, numInstances});\n      }\n      if (!this.value) {\n        // no value was assigned during update\n      } else if (\n        this.constant ||\n        !this.buffer ||\n        this.buffer.byteLength < (this.value as TypedArray).byteLength + this.byteOffset\n      ) {\n        this.setData({\n          value: this.value,\n          constant: this.constant\n        });\n        // Setting attribute.constant in updater is a legacy approach that interferes with allocation in the next cycle\n        // Respect it here but reset after use\n        this.constant = false;\n      } else {\n        for (const [startRow, endRow] of updateRanges) {\n          const startOffset = Number.isFinite(startRow) ? this.getVertexOffset(startRow) : 0;\n          const endOffset = Number.isFinite(endRow)\n            ? this.getVertexOffset(endRow)\n            : noAlloc || !Number.isFinite(numInstances)\n              ? this.value.length\n              : numInstances * this.size;\n\n          super.updateSubBuffer({startOffset, endOffset});\n        }\n      }\n      this._checkAttributeArray();\n    } else {\n      updated = false;\n    }\n\n    this.clearNeedsUpdate();\n    this.setNeedsRedraw();\n\n    return updated;\n  }\n\n  // Use generic value\n  // Returns true if successful\n  setConstantValue(value?: NumericArray): boolean {\n    // TODO(ibgreen): WebGPU does not support constant values\n    const isWebGPU = this.device.type === 'webgpu';\n    if (isWebGPU || value === undefined || typeof value === 'function') {\n      return false;\n    }\n\n    const hasChanged = this.setData({constant: true, value});\n\n    if (hasChanged) {\n      this.setNeedsRedraw();\n    }\n    this.clearNeedsUpdate();\n    return true;\n  }\n\n  // Use external buffer\n  // Returns true if successful\n  // eslint-disable-next-line max-statements\n  setExternalBuffer(buffer?: TypedArray | Buffer | BinaryAttribute): boolean {\n    const {state} = this;\n\n    if (!buffer) {\n      state.lastExternalBuffer = null;\n      return false;\n    }\n\n    this.clearNeedsUpdate();\n\n    if (state.lastExternalBuffer === buffer) {\n      return true;\n    }\n    state.lastExternalBuffer = buffer;\n    this.setNeedsRedraw();\n    this.setData(buffer);\n    return true;\n  }\n\n  // Binary value is a typed array packed from mapping the source data with the accessor\n  // If the returned value from the accessor is the same as the attribute value, set it directly\n  // Otherwise use the auto updater for transform/normalization\n  setBinaryValue(\n    buffer?: TypedArray | Buffer | BinaryAttribute,\n    startIndices: NumericArray | null = null\n  ): boolean {\n    const {state, settings} = this;\n\n    if (!buffer) {\n      state.binaryValue = null;\n      state.binaryAccessor = null;\n      return false;\n    }\n\n    if (settings.noAlloc) {\n      // Let the layer handle this\n      return false;\n    }\n\n    if (state.binaryValue === buffer) {\n      this.clearNeedsUpdate();\n      return true;\n    }\n    state.binaryValue = buffer;\n    this.setNeedsRedraw();\n\n    const needsUpdate = settings.transform || startIndices !== this.startIndices;\n\n    if (needsUpdate) {\n      if (ArrayBuffer.isView(buffer)) {\n        buffer = {value: buffer};\n      }\n      const binaryValue = buffer as BinaryAttribute;\n      assert(ArrayBuffer.isView(binaryValue.value), `invalid ${settings.accessor}`);\n      const needsNormalize = Boolean(binaryValue.size) && binaryValue.size !== this.size;\n\n      state.binaryAccessor = getAccessorFromBuffer(binaryValue.value, {\n        size: binaryValue.size || this.size,\n        stride: binaryValue.stride,\n        offset: binaryValue.offset,\n        startIndices: startIndices as NumericArray,\n        nested: needsNormalize\n      });\n      // Fall through to auto updater\n      return false;\n    }\n\n    this.clearNeedsUpdate();\n    this.setData(buffer);\n    return true;\n  }\n\n  getVertexOffset(row: number): number {\n    const {startIndices} = this;\n    const vertexIndex = startIndices\n      ? row < startIndices.length\n        ? startIndices[row]\n        : this.numInstances\n      : row;\n    return vertexIndex * this.size;\n  }\n\n  getValue(): Record<string, Buffer | TypedArray | null> {\n    const shaderAttributeDefs = this.settings.shaderAttributes;\n    const result = super.getValue();\n    if (!shaderAttributeDefs) {\n      return result;\n    }\n    for (const shaderAttributeName in shaderAttributeDefs) {\n      Object.assign(\n        result,\n        super.getValue(shaderAttributeName, shaderAttributeDefs[shaderAttributeName])\n      );\n    }\n    return result;\n  }\n\n  /** Generate WebGPU-style buffer layout descriptor from this attribute */\n  getBufferLayout(\n    /** A luma.gl Model-shaped object that supplies additional hint to attribute resolution */\n    modelInfo?: {isInstanced?: boolean}\n  ): BufferLayout {\n    // Clear change flag\n    this.state.layoutChanged = false;\n\n    const shaderAttributeDefs = this.settings.shaderAttributes;\n    const result: BufferLayout = super._getBufferLayout();\n    const {stepMode} = this.settings;\n    if (stepMode === 'dynamic') {\n      // If model info is provided, use isInstanced flag to determine step mode\n      // If no model info is provided, assume it's an instanced model (most common use case)\n      result.stepMode = modelInfo ? (modelInfo.isInstanced ? 'instance' : 'vertex') : 'instance';\n    } else {\n      result.stepMode = stepMode ?? 'vertex';\n    }\n\n    if (!shaderAttributeDefs) {\n      return result;\n    }\n\n    for (const shaderAttributeName in shaderAttributeDefs) {\n      const map = super._getBufferLayout(\n        shaderAttributeName,\n        shaderAttributeDefs[shaderAttributeName]\n      );\n      // @ts-ignore\n      result.attributes.push(...map.attributes);\n    }\n    return result;\n  }\n\n  /* eslint-disable max-depth, max-statements */\n  private _autoUpdater(\n    attribute: Attribute,\n    {\n      data,\n      startRow,\n      endRow,\n      props,\n      numInstances\n    }: {\n      data: any;\n      startRow: number;\n      endRow: number;\n      props: any;\n      numInstances: number;\n    }\n  ): void {\n    if (attribute.constant) {\n      // @ts-ignore TODO(ibgreen) declare context?\n      if (this.context.device.type !== 'webgpu') {\n        return;\n      }\n    }\n    const {settings, state, value, size, startIndices} = attribute;\n\n    const {accessor, transform} = settings;\n    let accessorFunc: Accessor<any, any> =\n      state.binaryAccessor ||\n      // @ts-ignore\n      (typeof accessor === 'function' ? accessor : props[accessor]);\n    // TODO(ibgreen) WebGPU needs buffers, generate an accessor function from a constant\n    if (typeof accessorFunc !== 'function') {\n      accessorFunc = () => accessorFunc;\n    }\n    assert(typeof accessorFunc === 'function', `accessor \"${accessor}\" is not a function`);\n\n    let i = attribute.getVertexOffset(startRow);\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n    for (const object of iterable) {\n      objectInfo.index++;\n\n      let objectValue = accessorFunc(object, objectInfo);\n      if (transform) {\n        // transform callbacks could be bound to a particular layer instance.\n        // always point `this` to the current layer.\n        objectValue = transform.call(this, objectValue);\n      }\n\n      if (startIndices) {\n        const numVertices =\n          (objectInfo.index < startIndices.length - 1\n            ? startIndices[objectInfo.index + 1]\n            : numInstances) - startIndices[objectInfo.index];\n        if (objectValue && Array.isArray(objectValue[0])) {\n          let startIndex = i;\n          for (const item of objectValue) {\n            attribute._normalizeValue(item, value as TypedArray, startIndex);\n            startIndex += size;\n          }\n        } else if (objectValue && objectValue.length > size) {\n          (value as TypedArray).set(objectValue, i);\n        } else {\n          attribute._normalizeValue(objectValue, objectInfo.target, 0);\n          fillArray({\n            target: value,\n            source: objectInfo.target,\n            start: i,\n            count: numVertices\n          });\n        }\n        i += numVertices * size;\n      } else {\n        attribute._normalizeValue(objectValue, value as TypedArray, i);\n        i += size;\n      }\n    }\n  }\n  /* eslint-enable max-depth, max-statements */\n\n  // Validate deck.gl level fields\n  private _validateAttributeUpdaters() {\n    const {settings} = this;\n\n    // Check that 'update' is a valid function\n    const hasUpdater = settings.noAlloc || typeof settings.update === 'function';\n    if (!hasUpdater) {\n      throw new Error(`Attribute ${this.id} missing update or accessor`);\n    }\n  }\n\n  // check that the first few elements of the attribute are reasonable\n  /* eslint-disable no-fallthrough */\n  private _checkAttributeArray() {\n    const {value} = this;\n    const limit = Math.min(4, this.size);\n    if (value && value.length >= limit) {\n      let valid = true;\n      switch (limit) {\n        case 4:\n          valid = valid && Number.isFinite(value[3]);\n        case 3:\n          valid = valid && Number.isFinite(value[2]);\n        case 2:\n          valid = valid && Number.isFinite(value[1]);\n        case 1:\n          valid = valid && Number.isFinite(value[0]);\n          break;\n        default:\n          valid = false;\n      }\n\n      if (!valid) {\n        throw new Error(`Illegal attribute generated for ${this.id}`);\n      }\n    }\n  }\n  /* eslint-enable no-fallthrough */\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {NumericArray, TypedArray} from '../types/types';\n\n/*\n * Helper function for padArray\n */\nfunction padArrayChunk(options: {\n  /** original data */\n  source: TypedArray;\n  /** output data */\n  target: TypedArray;\n  /** length per datum */\n  size: number;\n  /** callback to get new data when source is short */\n  getData: (index: number, context: NumericArray) => NumericArray;\n  /** start index */\n  start?: number;\n  /** end index */\n  end?: number;\n}): void {\n  const {source, target, start = 0, size, getData} = options;\n  const end = options.end || target.length;\n\n  const sourceLength = source.length;\n  const targetLength = end - start;\n\n  if (sourceLength > targetLength) {\n    target.set(source.subarray(0, targetLength), start);\n    return;\n  }\n\n  target.set(source, start);\n\n  if (!getData) {\n    return;\n  }\n\n  // source is not large enough to fill target space, call `getData` to get filler data\n  let i = sourceLength;\n  while (i < targetLength) {\n    const datum = getData(i, source);\n    for (let j = 0; j < size; j++) {\n      target[start + i] = datum[j] || 0;\n      i++;\n    }\n  }\n}\n\n/*\n * The padArray function stretches a source array to the size of a target array.\n   The arrays can have internal structures (like the attributes of PathLayer and\n   SolidPolygonLayer), defined by the optional sourceStartIndices and targetStartIndices parameters.\n   If the target array is larger, the getData callback is used to fill in the blanks.\n */\nexport function padArray({\n  source,\n  target,\n  size,\n  getData,\n  sourceStartIndices,\n  targetStartIndices\n}: {\n  /** original data */\n  source: TypedArray;\n  /** output data */\n  target: TypedArray;\n  /** length per datum */\n  size: number;\n  /** callback to get new data when source is short */\n  getData: (index: number, context: NumericArray) => NumericArray;\n  /** subdivision of the original data in [object0StartIndex, object1StartIndex, ...] */\n  sourceStartIndices?: NumericArray | null;\n  /** subdivision of the output data in [object0StartIndex, object1StartIndex, ...] */\n  targetStartIndices?: NumericArray | null;\n}): TypedArray {\n  if (!sourceStartIndices || !targetStartIndices) {\n    // Flat arrays\n    padArrayChunk({\n      source,\n      target,\n      size,\n      getData\n    });\n    return target;\n  }\n\n  // Arrays have internal structure\n  let sourceIndex = 0;\n  let targetIndex = 0;\n  const getChunkData = getData && ((i, chunk) => getData(i + targetIndex, chunk));\n\n  const n = Math.min(sourceStartIndices.length, targetStartIndices.length);\n\n  for (let i = 1; i < n; i++) {\n    const nextSourceIndex = sourceStartIndices[i] * size;\n    const nextTargetIndex = targetStartIndices[i] * size;\n\n    padArrayChunk({\n      source: source.subarray(sourceIndex, nextSourceIndex),\n      target,\n      start: targetIndex,\n      end: nextTargetIndex,\n      size,\n      getData: getChunkData\n    });\n\n    sourceIndex = nextSourceIndex;\n    targetIndex = nextTargetIndex;\n  }\n\n  if (targetIndex < target.length) {\n    padArrayChunk({\n      // @ts-ignore\n      source: [],\n      target,\n      start: targetIndex,\n      size,\n      getData: getChunkData\n    });\n  }\n\n  return target;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device, Buffer, VertexFormat} from '@luma.gl/core';\nimport {padArray} from '../utils/array-utils';\nimport {NumericArray, TypedArray, TypedArrayConstructor} from '../types/types';\nimport Attribute from '../lib/attribute/attribute';\nimport {GL} from '@luma.gl/constants';\n\n/** Create a new empty attribute with the same settings: type, shader layout etc. */\nexport function cloneAttribute(attribute: Attribute): Attribute {\n  // `attribute.settings` is the original options passed when constructing the attribute.\n  // This ensures that we set the proper `doublePrecision` flag and shader attributes.\n  const {device, settings, value} = attribute;\n  const newAttribute = new Attribute(device, settings);\n  // Placeholder value - necessary for generating the correct buffer layout\n  newAttribute.setData({\n    value: value instanceof Float64Array ? new Float64Array(0) : new Float32Array(0),\n    normalized: settings.normalized\n  });\n  return newAttribute;\n}\n\n/** Returns the GLSL attribute type for the given number of float32 components. */\nexport function getAttributeTypeFromSize(size: number): string {\n  switch (size) {\n    case 1:\n      return 'float';\n    case 2:\n      return 'vec2';\n    case 3:\n      return 'vec3';\n    case 4:\n      return 'vec4';\n    default:\n      throw new Error(`No defined attribute type for size \"${size}\"`);\n  }\n}\n\n/** Returns the {@link VertexFormat} for the given number of float32 components. */\nexport function getFloat32VertexFormat(size: number): VertexFormat {\n  switch (size) {\n    case 1:\n      return 'float32';\n    case 2:\n      return 'float32x2';\n    case 3:\n      return 'float32x3';\n    case 4:\n      return 'float32x4';\n    default:\n      throw new Error('invalid type size');\n  }\n}\n\nexport function cycleBuffers(buffers: Buffer[]): void {\n  buffers.push(buffers.shift() as Buffer);\n}\n\nexport function getAttributeBufferLength(attribute: Attribute, numInstances: number): number {\n  const {doublePrecision, settings, value, size} = attribute;\n  const multiplier = doublePrecision && value instanceof Float64Array ? 2 : 1;\n  let maxVertexOffset = 0;\n  const {shaderAttributes} = attribute.settings;\n  if (shaderAttributes) {\n    for (const shaderAttribute of Object.values(shaderAttributes)) {\n      maxVertexOffset = Math.max(maxVertexOffset, shaderAttribute.vertexOffset ?? 0);\n    }\n  }\n  return (\n    (settings.noAlloc ? (value as NumericArray).length : (numInstances + maxVertexOffset) * size) *\n    multiplier\n  );\n}\n\nexport function matchBuffer({\n  device,\n  source,\n  target\n}: {\n  device: Device;\n  source: Buffer;\n  target?: Buffer;\n}): Buffer {\n  if (!target || target.byteLength < source.byteLength) {\n    target?.destroy();\n    target = device.createBuffer({\n      byteLength: source.byteLength,\n      usage: source.usage\n    });\n  }\n  return target;\n}\n\n/* eslint-disable complexity */\n// This helper is used when transitioning attributes from a set of values in one buffer layout\n// to a set of values in a different buffer layout. (Buffer layouts are used when attribute values\n// within a buffer should be grouped for drawElements, like the Polygon layer.) For example, a\n// buffer layout of [3, 4] might have data [A1, A2, A3, B1, B2, B3, B4]. If it needs to transition\n// to a buffer layout of [4, 2], it should produce a buffer, using the transition setting's `enter`\n// function, that looks like this: [A1, A2, A3, A4 (user `enter` fn), B1, B2, 0]. Note: the final\n// 0 in this buffer is because we never shrink buffers, only grow them, for performance reasons.\n//\n// padBuffer may return either the original buffer, or a new buffer if the size of the original\n// was insufficient. Callers are responsible for disposing of the original buffer if needed.\nexport function padBuffer({\n  device,\n  buffer,\n  attribute,\n  fromLength,\n  toLength,\n  fromStartIndices,\n  getData = x => x\n}: {\n  device: Device;\n  buffer?: Buffer;\n  attribute: Attribute;\n  fromLength: number;\n  toLength: number;\n  fromStartIndices?: NumericArray | null;\n  getData?: (toValue: NumericArray, chunk?: NumericArray) => NumericArray;\n}): Buffer {\n  // TODO: move the precisionMultiplier logic to the attribute when retrieving\n  // its `size` and `elementOffset`?\n  const precisionMultiplier =\n    attribute.doublePrecision && attribute.value instanceof Float64Array ? 2 : 1;\n  const size = attribute.size * precisionMultiplier;\n  const byteOffset = attribute.byteOffset;\n  // Transform feedback can only write to float varyings\n  // Attributes of format unorm8/uint8 (1 byte per element) etc will be padded to float32 (4 bytes per element)\n  const targetByteOffset =\n    attribute.settings.bytesPerElement < 4\n      ? (byteOffset / attribute.settings.bytesPerElement) * 4\n      : byteOffset;\n  const toStartIndices = attribute.startIndices;\n  const hasStartIndices = fromStartIndices && toStartIndices;\n  const isConstant = attribute.isConstant;\n\n  // check if buffer needs to be padded\n  if (!hasStartIndices && buffer && fromLength >= toLength) {\n    return buffer;\n  }\n\n  const ArrayType =\n    attribute.value instanceof Float64Array\n      ? Float32Array\n      : ((attribute.value as TypedArray).constructor as TypedArrayConstructor);\n  const toData = isConstant\n    ? (attribute.value as TypedArray)\n    : // TODO(v9.1): Avoid non-portable synchronous reads.\n      new ArrayType(\n        attribute\n          .getBuffer()!\n          .readSyncWebGL(byteOffset, toLength * ArrayType.BYTES_PER_ELEMENT).buffer\n      );\n  if (attribute.settings.normalized && !isConstant) {\n    const getter = getData;\n    getData = (value, chunk) => attribute.normalizeConstant(getter(value, chunk));\n  }\n\n  const getMissingData = isConstant\n    ? (i: number, chunk: NumericArray) => getData(toData, chunk)\n    : (i: number, chunk: NumericArray) =>\n        getData(toData.subarray(i + byteOffset, i + byteOffset + size), chunk);\n\n  // TODO(v9.1): Avoid non-portable synchronous reads.\n  const source = buffer\n    ? new Float32Array(buffer.readSyncWebGL(targetByteOffset, fromLength * 4).buffer)\n    : new Float32Array(0);\n  const target = new Float32Array(toLength);\n  padArray({\n    source,\n    target,\n    sourceStartIndices: fromStartIndices,\n    targetStartIndices: toStartIndices,\n    size,\n    getData: getMissingData\n  });\n\n  if (!buffer || buffer.byteLength < target.byteLength + targetByteOffset) {\n    buffer?.destroy();\n    buffer = device.createBuffer({\n      byteLength: target.byteLength + targetByteOffset,\n      usage: GL.DYNAMIC_COPY\n    });\n  }\n  buffer.write(target, targetByteOffset);\n  return buffer;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport Transition from './transition';\nimport {cloneAttribute, getAttributeBufferLength} from './gpu-transition-utils';\n\nimport type {Device, Buffer} from '@luma.gl/core';\nimport type {Timeline} from '@luma.gl/engine';\nimport type Attribute from '../lib/attribute/attribute';\nimport type {TransitionSettings} from '../lib/attribute/transition-settings';\nimport type {NumericArray} from '../types/types';\n\nexport interface GPUTransition {\n  get type(): string;\n  get inProgress(): boolean;\n  get attributeInTransition(): Attribute;\n\n  /** Called when an attribute's values have changed and we need to start animating towards the new values */\n  start(transitionSettings: TransitionSettings, numInstances: number): void;\n  /** Called while transition is in progress */\n  update(): boolean;\n  /** Called when transition is interrupted */\n  cancel(): void;\n  /** Called when transition is disposed */\n  delete(): void;\n}\n\nexport abstract class GPUTransitionBase<SettingsT extends TransitionSettings>\n  implements GPUTransition\n{\n  abstract get type(): string;\n\n  device: Device;\n  attribute: Attribute;\n  transition: Transition;\n  settings?: SettingsT;\n  /** The attribute that holds the buffer in transition */\n  attributeInTransition: Attribute;\n  protected buffers: Buffer[] = [];\n  /** The vertex count of the last buffer.\n   * Buffer may be larger than the actual length we want to use\n   * because we only reallocate buffers when they grow, not when they shrink,\n   * due to performance costs */\n  protected currentLength: number = 0;\n  /** The start indices of the last buffer. */\n  protected currentStartIndices: NumericArray | null;\n\n  constructor({\n    device,\n    attribute,\n    timeline\n  }: {\n    device: Device;\n    attribute: Attribute;\n    timeline: Timeline;\n  }) {\n    this.device = device;\n    this.transition = new Transition(timeline);\n    this.attribute = attribute;\n    this.attributeInTransition = cloneAttribute(attribute);\n    this.currentStartIndices = attribute.startIndices;\n  }\n\n  get inProgress(): boolean {\n    return this.transition.inProgress;\n  }\n\n  start(transitionSettings: SettingsT, numInstances: number, duration: number = Infinity) {\n    this.settings = transitionSettings;\n    this.currentStartIndices = this.attribute.startIndices;\n    this.currentLength = getAttributeBufferLength(this.attribute, numInstances);\n    this.transition.start({...transitionSettings, duration});\n  }\n\n  update(): boolean {\n    const updated = this.transition.update();\n    if (updated) {\n      this.onUpdate();\n    }\n    return updated;\n  }\n\n  abstract onUpdate(): void;\n\n  protected setBuffer(buffer: Buffer) {\n    this.attributeInTransition.setData({\n      buffer,\n      normalized: this.attribute.settings.normalized,\n      // Retain placeholder value to generate correct shader layout\n      value: this.attributeInTransition.value as NumericArray\n    });\n  }\n\n  cancel(): void {\n    this.transition.cancel();\n  }\n\n  delete(): void {\n    this.cancel();\n    for (const buffer of this.buffers) {\n      buffer.destroy();\n    }\n    this.buffers.length = 0;\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device} from '@luma.gl/core';\nimport {Timeline, BufferTransform} from '@luma.gl/engine';\nimport {fp64arithmetic} from '@luma.gl/shadertools';\nimport type {ShaderModule} from '@luma.gl/shadertools';\nimport {GL} from '@luma.gl/constants';\nimport Attribute from '../lib/attribute/attribute';\nimport {\n  getAttributeTypeFromSize,\n  cycleBuffers,\n  padBuffer,\n  matchBuffer,\n  getFloat32VertexFormat\n} from './gpu-transition-utils';\nimport {GPUTransitionBase} from './gpu-transition';\n\nimport type {InterpolationTransitionSettings} from '../lib/attribute/transition-settings';\nimport type {TypedArray} from '../types/types';\n\nexport default class GPUInterpolationTransition extends GPUTransitionBase<InterpolationTransitionSettings> {\n  type = 'interpolation';\n\n  private transform: BufferTransform;\n\n  constructor({\n    device,\n    attribute,\n    timeline\n  }: {\n    device: Device;\n    attribute: Attribute;\n    timeline: Timeline;\n  }) {\n    super({device, attribute, timeline});\n    this.transform = getTransform(device, attribute);\n  }\n\n  override start(transitionSettings: InterpolationTransitionSettings, numInstances: number): void {\n    const prevLength = this.currentLength;\n    const prevStartIndices = this.currentStartIndices;\n\n    super.start(transitionSettings, numInstances, transitionSettings.duration);\n\n    if (transitionSettings.duration <= 0) {\n      this.transition.cancel();\n      return;\n    }\n\n    const {buffers, attribute} = this;\n    // Alternate between two buffers when new transitions start.\n    // Last destination buffer is used as an attribute (from state),\n    // And the other buffer is now the current buffer.\n    cycleBuffers(buffers);\n\n    buffers[0] = padBuffer({\n      device: this.device,\n      buffer: buffers[0],\n      attribute,\n      fromLength: prevLength,\n      toLength: this.currentLength,\n      fromStartIndices: prevStartIndices,\n      getData: transitionSettings.enter\n    });\n    buffers[1] = matchBuffer({\n      device: this.device,\n      source: buffers[0],\n      target: buffers[1]\n    });\n\n    this.setBuffer(buffers[1]);\n\n    const {transform} = this;\n    const model = transform.model;\n    let vertexCount = Math.floor(this.currentLength / attribute.size);\n    if (useFp64(attribute)) {\n      vertexCount /= 2;\n    }\n    model.setVertexCount(vertexCount);\n    if (attribute.isConstant) {\n      model.setAttributes({aFrom: buffers[0]});\n      model.setConstantAttributes({aTo: attribute.value as TypedArray});\n    } else {\n      model.setAttributes({\n        aFrom: buffers[0],\n        aTo: attribute.getBuffer()!\n      });\n    }\n    transform.transformFeedback.setBuffers({vCurrent: buffers[1]});\n  }\n\n  onUpdate() {\n    const {duration, easing} = this.settings!;\n    const {time} = this.transition;\n    let t = time / duration;\n    if (easing) {\n      t = easing(t);\n    }\n    const {model} = this.transform;\n    const interpolationProps: InterpolationProps = {time: t};\n    model.shaderInputs.setProps({interpolation: interpolationProps});\n\n    this.transform.run({discard: true});\n  }\n\n  override delete() {\n    super.delete();\n    this.transform.destroy();\n  }\n}\n\nconst uniformBlock = `\\\nuniform interpolationUniforms {\n  float time;\n} interpolation;\n`;\n\ntype InterpolationProps = {time: number};\n\nconst interpolationUniforms = {\n  name: 'interpolation',\n  vs: uniformBlock,\n  uniformTypes: {\n    time: 'f32'\n  }\n} as const satisfies ShaderModule<InterpolationProps>;\n\nconst vs = `\\\n#version 300 es\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nin ATTRIBUTE_TYPE aFrom;\nin ATTRIBUTE_TYPE aTo;\nout ATTRIBUTE_TYPE vCurrent;\n\nvoid main(void) {\n  vCurrent = mix(aFrom, aTo, interpolation.time);\n  gl_Position = vec4(0.0);\n}\n`;\nconst vs64 = `\\\n#version 300 es\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nin ATTRIBUTE_TYPE aFrom;\nin ATTRIBUTE_TYPE aFrom64Low;\nin ATTRIBUTE_TYPE aTo;\nin ATTRIBUTE_TYPE aTo64Low;\nout ATTRIBUTE_TYPE vCurrent;\nout ATTRIBUTE_TYPE vCurrent64Low;\n\nvec2 mix_fp64(vec2 a, vec2 b, float x) {\n  vec2 range = sub_fp64(b, a);\n  return sum_fp64(a, mul_fp64(range, vec2(x, 0.0)));\n}\n\nvoid main(void) {\n  for (int i=0; i<ATTRIBUTE_SIZE; i++) {\n    vec2 value = mix_fp64(vec2(aFrom[i], aFrom64Low[i]), vec2(aTo[i], aTo64Low[i]), interpolation.time);\n    vCurrent[i] = value.x;\n    vCurrent64Low[i] = value.y;\n  }\n  gl_Position = vec4(0.0);\n}\n`;\n\nfunction useFp64(attribute: Attribute): boolean {\n  return attribute.doublePrecision && attribute.value instanceof Float64Array;\n}\n\nfunction getTransform(device: Device, attribute: Attribute): BufferTransform {\n  const attributeSize = attribute.size;\n  const attributeType = getAttributeTypeFromSize(attributeSize);\n  const inputFormat = getFloat32VertexFormat(attributeSize);\n  const bufferLayout = attribute.getBufferLayout();\n\n  if (useFp64(attribute)) {\n    return new BufferTransform(device, {\n      vs: vs64,\n      bufferLayout: [\n        {\n          name: 'aFrom',\n          byteStride: 8 * attributeSize,\n          attributes: [\n            {attribute: 'aFrom', format: inputFormat, byteOffset: 0},\n            {attribute: 'aFrom64Low', format: inputFormat, byteOffset: 4 * attributeSize}\n          ]\n        },\n        {\n          name: 'aTo',\n          byteStride: 8 * attributeSize,\n          attributes: [\n            {attribute: 'aTo', format: inputFormat, byteOffset: 0},\n            {attribute: 'aTo64Low', format: inputFormat, byteOffset: 4 * attributeSize}\n          ]\n        }\n      ],\n      // @ts-expect-error fp64 module only sets ONE uniform via defaultUniforms\n      modules: [fp64arithmetic, interpolationUniforms],\n      defines: {\n        ATTRIBUTE_TYPE: attributeType,\n        ATTRIBUTE_SIZE: attributeSize\n      },\n      // Default uniforms are not set without this\n      moduleSettings: {},\n      varyings: ['vCurrent', 'vCurrent64Low'],\n      bufferMode: GL.INTERLEAVED_ATTRIBS,\n      disableWarnings: true\n    });\n  }\n  return new BufferTransform(device, {\n    vs,\n    bufferLayout: [\n      {name: 'aFrom', format: inputFormat},\n      {name: 'aTo', format: bufferLayout.attributes![0].format}\n    ],\n    modules: [interpolationUniforms],\n    defines: {\n      ATTRIBUTE_TYPE: attributeType\n    },\n    varyings: ['vCurrent'],\n\n    // TODO investigate why this is needed\n    disableWarnings: true\n  });\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device, Framebuffer, Texture} from '@luma.gl/core';\nimport {Timeline, BufferTransform} from '@luma.gl/engine';\nimport type {ShaderModule} from '@luma.gl/shadertools';\nimport {\n  padBuffer,\n  matchBuffer,\n  getAttributeTypeFromSize,\n  getFloat32VertexFormat,\n  cycleBuffers\n} from './gpu-transition-utils';\nimport Attribute from '../lib/attribute/attribute';\nimport {GPUTransitionBase} from './gpu-transition';\n\nimport type {SpringTransitionSettings} from '../lib/attribute/transition-settings';\nimport type {TypedArray} from '../types/types';\n\nexport default class GPUSpringTransition extends GPUTransitionBase<SpringTransitionSettings> {\n  type = 'spring';\n\n  private texture: Texture;\n  private framebuffer: Framebuffer;\n  private transform: BufferTransform;\n\n  constructor({\n    device,\n    attribute,\n    timeline\n  }: {\n    device: Device;\n    attribute: Attribute;\n    timeline: Timeline;\n  }) {\n    super({device, attribute, timeline});\n    this.texture = getTexture(device);\n    this.framebuffer = getFramebuffer(device, this.texture);\n    this.transform = getTransform(device, attribute);\n  }\n\n  override start(transitionSettings: SpringTransitionSettings, numInstances: number): void {\n    const prevLength = this.currentLength;\n    const prevStartIndices = this.currentStartIndices;\n    super.start(transitionSettings, numInstances);\n\n    const {buffers, attribute} = this;\n\n    for (let i = 0; i < 2; i++) {\n      buffers[i] = padBuffer({\n        device: this.device,\n        buffer: buffers[i],\n        attribute,\n        fromLength: prevLength,\n        toLength: this.currentLength,\n        fromStartIndices: prevStartIndices,\n        getData: transitionSettings.enter\n      });\n    }\n    buffers[2] = matchBuffer({\n      device: this.device,\n      source: buffers[0],\n      target: buffers[2]\n    });\n\n    this.setBuffer(buffers[1]);\n\n    const {model} = this.transform;\n    model.setVertexCount(Math.floor(this.currentLength / attribute.size));\n    if (attribute.isConstant) {\n      model.setConstantAttributes({aTo: attribute.value as TypedArray});\n    } else {\n      model.setAttributes({aTo: attribute.getBuffer()!});\n    }\n  }\n\n  onUpdate() {\n    const {buffers, transform, framebuffer, transition} = this;\n\n    const settings = this.settings as SpringTransitionSettings;\n\n    transform.model.setAttributes({\n      aPrev: buffers[0],\n      aCur: buffers[1]\n    });\n    transform.transformFeedback.setBuffers({vNext: buffers[2]});\n    const springProps: SpringProps = {\n      stiffness: settings.stiffness,\n      damping: settings.damping\n    };\n    transform.model.shaderInputs.setProps({spring: springProps});\n    transform.run({\n      framebuffer,\n      discard: false,\n      parameters: {viewport: [0, 0, 1, 1]},\n      clearColor: [0, 0, 0, 0]\n    });\n\n    cycleBuffers(buffers);\n    this.setBuffer(buffers[1]);\n\n    const isTransitioning = this.device.readPixelsToArrayWebGL(framebuffer)[0] > 0;\n\n    if (!isTransitioning) {\n      transition.end();\n    }\n  }\n\n  override delete() {\n    super.delete();\n    this.transform.destroy();\n    this.texture.destroy();\n    this.framebuffer.destroy();\n  }\n}\n\nconst uniformBlock = `\\\nuniform springUniforms {\n  float damping;\n  float stiffness;\n} spring;\n`;\n\ntype SpringProps = {\n  damping: number;\n  stiffness: number;\n};\n\nconst springUniforms = {\n  name: 'spring',\n  vs: uniformBlock,\n  uniformTypes: {\n    damping: 'f32',\n    stiffness: 'f32'\n  }\n} as const satisfies ShaderModule<SpringProps>;\n\nconst vs = `\\\n#version 300 es\n#define SHADER_NAME spring-transition-vertex-shader\n\n#define EPSILON 0.00001\n\nin ATTRIBUTE_TYPE aPrev;\nin ATTRIBUTE_TYPE aCur;\nin ATTRIBUTE_TYPE aTo;\nout ATTRIBUTE_TYPE vNext;\nout float vIsTransitioningFlag;\n\nATTRIBUTE_TYPE getNextValue(ATTRIBUTE_TYPE cur, ATTRIBUTE_TYPE prev, ATTRIBUTE_TYPE dest) {\n  ATTRIBUTE_TYPE velocity = cur - prev;\n  ATTRIBUTE_TYPE delta = dest - cur;\n  ATTRIBUTE_TYPE force = delta * spring.stiffness;\n  ATTRIBUTE_TYPE resistance = velocity * spring.damping;\n  return force - resistance + velocity + cur;\n}\n\nvoid main(void) {\n  bool isTransitioning = length(aCur - aPrev) > EPSILON || length(aTo - aCur) > EPSILON;\n  vIsTransitioningFlag = isTransitioning ? 1.0 : 0.0;\n\n  vNext = getNextValue(aCur, aPrev, aTo);\n  gl_Position = vec4(0, 0, 0, 1);\n  gl_PointSize = 100.0;\n}\n`;\n\nconst fs = `\\\n#version 300 es\n#define SHADER_NAME spring-transition-is-transitioning-fragment-shader\n\nin float vIsTransitioningFlag;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  if (vIsTransitioningFlag == 0.0) {\n    discard;\n  }\n  fragColor = vec4(1.0);\n}`;\n\nfunction getTransform(device: Device, attribute: Attribute): BufferTransform {\n  const attributeType = getAttributeTypeFromSize(attribute.size);\n  const format = getFloat32VertexFormat(attribute.size);\n  return new BufferTransform(device, {\n    vs,\n    fs,\n    bufferLayout: [\n      {name: 'aPrev', format},\n      {name: 'aCur', format},\n      {name: 'aTo', format: attribute.getBufferLayout().attributes![0].format}\n    ],\n    varyings: ['vNext'],\n    modules: [springUniforms],\n    defines: {ATTRIBUTE_TYPE: attributeType},\n    parameters: {\n      depthCompare: 'always',\n      blendColorOperation: 'max',\n      blendColorSrcFactor: 'one',\n      blendColorDstFactor: 'one',\n      blendAlphaOperation: 'max',\n      blendAlphaSrcFactor: 'one',\n      blendAlphaDstFactor: 'one'\n    }\n  });\n}\n\nfunction getTexture(device: Device): Texture {\n  return device.createTexture({\n    data: new Uint8Array(4),\n    format: 'rgba8unorm',\n    mipmaps: false,\n    width: 1,\n    height: 1\n  });\n}\n\nfunction getFramebuffer(device: Device, texture: Texture): Framebuffer {\n  return device.createFramebuffer({\n    id: 'spring-transition-is-transitioning-framebuffer',\n    width: 1,\n    height: 1,\n    colorAttachments: [texture]\n  });\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// deck.gl, MIT license\n\nimport GPUInterpolationTransition from '../../transitions/gpu-interpolation-transition';\nimport GPUSpringTransition from '../../transitions/gpu-spring-transition';\nimport log from '../../utils/log';\n\nimport type {Device} from '@luma.gl/core';\nimport type {Timeline} from '@luma.gl/engine';\nimport type {GPUTransition} from '../../transitions/gpu-transition';\nimport type {ConstructorOf} from '../../types/types';\nimport type Attribute from './attribute';\nimport type {TransitionSettings} from './transition-settings';\n\nconst TRANSITION_TYPES: Record<string, ConstructorOf<GPUTransition>> = {\n  interpolation: GPUInterpolationTransition,\n  spring: GPUSpringTransition\n};\n\nexport default class AttributeTransitionManager {\n  id: string;\n\n  private device: Device;\n  private timeline?: Timeline;\n\n  private transitions: {[id: string]: GPUTransition};\n  private needsRedraw: boolean;\n  private numInstances: number;\n\n  constructor(\n    device: Device,\n    {\n      id,\n      timeline\n    }: {\n      id: string;\n      timeline?: Timeline;\n    }\n  ) {\n    if (!device) throw new Error('AttributeTransitionManager is constructed without device');\n    this.id = id;\n    this.device = device;\n    this.timeline = timeline;\n\n    this.transitions = {};\n    this.needsRedraw = false;\n    this.numInstances = 1;\n  }\n\n  finalize(): void {\n    for (const attributeName in this.transitions) {\n      this._removeTransition(attributeName);\n    }\n  }\n\n  /* Public methods */\n\n  // Called when attribute manager updates\n  // Check the latest attributes for updates.\n  update({\n    attributes,\n    transitions,\n    numInstances\n  }: {\n    attributes: {[id: string]: Attribute};\n    transitions: any;\n    numInstances: number;\n  }): void {\n    // Transform class will crash if elementCount is 0\n    this.numInstances = numInstances || 1;\n\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      const settings = attribute.getTransitionSetting(transitions);\n\n      // this attribute might not support transitions?\n      if (!settings) continue; // eslint-disable-line no-continue\n      this._updateAttribute(attributeName, attribute, settings);\n    }\n\n    for (const attributeName in this.transitions) {\n      const attribute = attributes[attributeName];\n      if (!attribute || !attribute.getTransitionSetting(transitions)) {\n        // Animated attribute has been removed\n        this._removeTransition(attributeName);\n      }\n    }\n  }\n\n  // Returns `true` if attribute is transition-enabled\n  hasAttribute(attributeName: string): boolean {\n    const transition = this.transitions[attributeName];\n    return transition && transition.inProgress;\n  }\n\n  // Get all the animated attributes\n  getAttributes(): {[id: string]: Attribute} {\n    const animatedAttributes = {};\n\n    for (const attributeName in this.transitions) {\n      const transition = this.transitions[attributeName];\n      if (transition.inProgress) {\n        animatedAttributes[attributeName] = transition.attributeInTransition;\n      }\n    }\n\n    return animatedAttributes;\n  }\n\n  /* eslint-disable max-statements */\n  // Called every render cycle, run transform feedback\n  // Returns `true` if anything changes\n  run(): boolean {\n    if (this.numInstances === 0) {\n      return false;\n    }\n\n    for (const attributeName in this.transitions) {\n      const updated = this.transitions[attributeName].update();\n      if (updated) {\n        this.needsRedraw = true;\n      }\n    }\n\n    const needsRedraw = this.needsRedraw;\n    this.needsRedraw = false;\n    return needsRedraw;\n  }\n  /* eslint-enable max-statements */\n\n  /* Private methods */\n  private _removeTransition(attributeName: string): void {\n    this.transitions[attributeName].delete();\n    delete this.transitions[attributeName];\n  }\n\n  // Check an attributes for updates\n  // Returns a transition object if a new transition is triggered.\n  private _updateAttribute(\n    attributeName: string,\n    attribute: Attribute,\n    settings: TransitionSettings\n  ): void {\n    const transition = this.transitions[attributeName];\n    // an attribute can change transition type when it updates\n    // let's remove the transition when that happens so we can create the new transition type\n    // TODO: when switching transition types, make sure to carry over the attribute's\n    // previous buffers, currentLength, startIndices, etc, to be used as the starting point\n    // for the next transition\n    let isNew = !transition || transition.type !== settings.type;\n\n    if (isNew) {\n      if (transition) {\n        this._removeTransition(attributeName);\n      }\n\n      const TransitionType = TRANSITION_TYPES[settings.type];\n      if (TransitionType) {\n        this.transitions[attributeName] = new TransitionType({\n          attribute,\n          timeline: this.timeline,\n          device: this.device\n        });\n      } else {\n        log.error(`unsupported transition type '${settings.type}'`)();\n        isNew = false;\n      }\n    }\n\n    if (isNew || attribute.needsRedraw()) {\n      this.needsRedraw = true;\n      this.transitions[attributeName].start(settings, this.numInstances);\n    }\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* eslint-disable guard-for-in */\nimport Attribute, {AttributeOptions} from './attribute';\nimport log from '../../utils/log';\nimport memoize from '../../utils/memoize';\nimport {mergeBounds} from '../../utils/math-utils';\nimport debug from '../../debug/index';\nimport {NumericArray} from '../../types/types';\n\nimport AttributeTransitionManager from './attribute-transition-manager';\n\nimport type {Device, BufferLayout} from '@luma.gl/core';\nimport type {Stats} from '@probe.gl/stats';\nimport type {Timeline} from '@luma.gl/engine';\n\nconst TRACE_INVALIDATE = 'attributeManager.invalidate';\nconst TRACE_UPDATE_START = 'attributeManager.updateStart';\nconst TRACE_UPDATE_END = 'attributeManager.updateEnd';\nconst TRACE_ATTRIBUTE_UPDATE_START = 'attribute.updateStart';\nconst TRACE_ATTRIBUTE_ALLOCATE = 'attribute.allocate';\nconst TRACE_ATTRIBUTE_UPDATE_END = 'attribute.updateEnd';\n\nexport default class AttributeManager {\n  /**\n   * @classdesc\n   * Automated attribute generation and management. Suitable when a set of\n   * vertex shader attributes are generated by iteration over a data array,\n   * and updates to these attributes are needed either when the data itself\n   * changes, or when other data relevant to the calculations change.\n   *\n   * - First the application registers descriptions of its dynamic vertex\n   *   attributes using AttributeManager.add().\n   * - Then, when any change that affects attributes is detected by the\n   *   application, the app will call AttributeManager.invalidate().\n   * - Finally before it renders, it calls AttributeManager.update() to\n   *   ensure that attributes are automatically rebuilt if anything has been\n   *   invalidated.\n   *\n   * The application provided update functions describe how attributes\n   * should be updated from a data array and are expected to traverse\n   * that data array (or iterable) and fill in the attribute's typed array.\n   *\n   * Note that the attribute manager intentionally does not do advanced\n   * change detection, but instead makes it easy to build such detection\n   * by offering the ability to \"invalidate\" each attribute separately.\n   */\n  id: string;\n  device: Device;\n  attributes: Record<string, Attribute>;\n  updateTriggers: {[name: string]: string[]};\n  needsRedraw: string | boolean;\n  userData: any;\n\n  private stats?: Stats;\n  private attributeTransitionManager: AttributeTransitionManager;\n  private mergeBoundsMemoized: any = memoize(mergeBounds);\n\n  constructor(\n    device: Device,\n    {\n      id = 'attribute-manager',\n      stats,\n      timeline\n    }: {\n      id?: string;\n      stats?: Stats;\n      timeline?: Timeline;\n    } = {}\n  ) {\n    this.id = id;\n    this.device = device;\n\n    this.attributes = {};\n\n    this.updateTriggers = {};\n    this.needsRedraw = true;\n\n    this.userData = {};\n    this.stats = stats;\n\n    this.attributeTransitionManager = new AttributeTransitionManager(device, {\n      id: `${id}-transitions`,\n      timeline\n    });\n\n    // For debugging sanity, prevent uninitialized members\n    Object.seal(this);\n  }\n\n  finalize() {\n    for (const attributeName in this.attributes) {\n      this.attributes[attributeName].delete();\n    }\n    this.attributeTransitionManager.finalize();\n  }\n\n  // Returns the redraw flag, optionally clearing it.\n  // Redraw flag will be set if any attributes attributes changed since\n  // flag was last cleared.\n  //\n  // @param {String} [clearRedrawFlags=false] - whether to clear the flag\n  // @return {false|String} - reason a redraw is needed.\n  getNeedsRedraw(opts: {clearRedrawFlags?: boolean} = {clearRedrawFlags: false}): string | false {\n    const redraw = this.needsRedraw;\n    this.needsRedraw = this.needsRedraw && !opts.clearRedrawFlags;\n    return redraw && this.id;\n  }\n\n  // Sets the redraw flag.\n  // @param {Boolean} redraw=true\n  setNeedsRedraw() {\n    this.needsRedraw = true;\n  }\n\n  // Adds attributes\n  add(attributes: {[id: string]: AttributeOptions}) {\n    this._add(attributes);\n  }\n\n  // Adds attributes\n  addInstanced(attributes: {[id: string]: AttributeOptions}) {\n    this._add(attributes, {stepMode: 'instance'});\n  }\n\n  /**\n   * Removes attributes\n   * Takes an array of attribute names and delete them from\n   * the attribute map if they exists\n   *\n   * @example\n   * attributeManager.remove(['position']);\n   *\n   * @param {Object} attributeNameArray - attribute name array (see above)\n   */\n  remove(attributeNameArray: string[]) {\n    for (const name of attributeNameArray) {\n      if (this.attributes[name] !== undefined) {\n        this.attributes[name].delete();\n        delete this.attributes[name];\n      }\n    }\n  }\n\n  // Marks an attribute for update\n  invalidate(triggerName: string, dataRange?: {startRow?: number; endRow?: number}) {\n    const invalidatedAttributes = this._invalidateTrigger(triggerName, dataRange);\n    // For performance tuning\n    debug(TRACE_INVALIDATE, this, triggerName, invalidatedAttributes);\n  }\n\n  invalidateAll(dataRange?: {startRow?: number; endRow?: number}) {\n    for (const attributeName in this.attributes) {\n      this.attributes[attributeName].setNeedsUpdate(attributeName, dataRange);\n    }\n    // For performance tuning\n    debug(TRACE_INVALIDATE, this, 'all');\n  }\n\n  // Ensure all attribute buffers are updated from props or data.\n  // eslint-disable-next-line complexity\n  update({\n    data,\n    numInstances,\n    startIndices = null,\n    transitions,\n    props = {},\n    buffers = {},\n    context = {}\n  }: {\n    data: any;\n    numInstances: number;\n    startIndices?: NumericArray | null;\n    transitions: any;\n    props: any;\n    buffers: any;\n    context: any;\n  }) {\n    // keep track of whether some attributes are updated\n    let updated = false;\n\n    debug(TRACE_UPDATE_START, this);\n    if (this.stats) {\n      this.stats.get('Update Attributes').timeStart();\n    }\n\n    for (const attributeName in this.attributes) {\n      const attribute = this.attributes[attributeName];\n      const accessorName = attribute.settings.accessor;\n      attribute.startIndices = startIndices;\n      attribute.numInstances = numInstances;\n\n      if (props[attributeName]) {\n        log.removed(`props.${attributeName}`, `data.attributes.${attributeName}`)();\n      }\n\n      if (attribute.setExternalBuffer(buffers[attributeName])) {\n        // Step 1: try update attribute directly from external buffers\n      } else if (\n        attribute.setBinaryValue(\n          typeof accessorName === 'string' ? buffers[accessorName] : undefined,\n          data.startIndices\n        )\n      ) {\n        // Step 2: try set packed value from external typed array\n      } else if (\n        typeof accessorName === 'string' &&\n        !buffers[accessorName] &&\n        attribute.setConstantValue(props[accessorName])\n      ) {\n        // Step 3: try set constant value from props\n        // Note: if buffers[accessorName] is supplied, ignore props[accessorName]\n        // This may happen when setBinaryValue falls through to use the auto updater\n      } else if (attribute.needsUpdate()) {\n        // Step 4: update via updater callback\n        updated = true;\n        this._updateAttribute({\n          attribute,\n          numInstances,\n          data,\n          props,\n          context\n        });\n      }\n\n      this.needsRedraw = this.needsRedraw || attribute.needsRedraw();\n    }\n\n    if (updated) {\n      // Only initiate alloc/update (and logging) if actually needed\n      debug(TRACE_UPDATE_END, this, numInstances);\n    }\n\n    if (this.stats) {\n      this.stats.get('Update Attributes').timeEnd();\n    }\n\n    this.attributeTransitionManager.update({\n      attributes: this.attributes,\n      numInstances,\n      transitions\n    });\n  }\n\n  // Update attribute transition to the current timestamp\n  // Returns `true` if any transition is in progress\n  updateTransition() {\n    const {attributeTransitionManager} = this;\n    const transitionUpdated = attributeTransitionManager.run();\n    this.needsRedraw = this.needsRedraw || transitionUpdated;\n    return transitionUpdated;\n  }\n\n  /**\n   * Returns all attribute descriptors\n   * Note: Format matches luma.gl Model/Program.setAttributes()\n   * @return {Object} attributes - descriptors\n   */\n  getAttributes(): {[id: string]: Attribute} {\n    return {...this.attributes, ...this.attributeTransitionManager.getAttributes()};\n  }\n\n  /**\n   * Computes the spatial bounds of a given set of attributes\n   */\n  getBounds(attributeNames: string[]) {\n    const bounds = attributeNames.map(attributeName => this.attributes[attributeName]?.getBounds());\n    return this.mergeBoundsMemoized(bounds);\n  }\n\n  /**\n   * Returns changed attribute descriptors\n   * This indicates which WebGLBuffers need to be updated\n   * @return {Object} attributes - descriptors\n   */\n  getChangedAttributes(opts: {clearChangedFlags?: boolean} = {clearChangedFlags: false}): {\n    [id: string]: Attribute;\n  } {\n    const {attributes, attributeTransitionManager} = this;\n\n    const changedAttributes = {...attributeTransitionManager.getAttributes()};\n\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      if (attribute.needsRedraw(opts) && !attributeTransitionManager.hasAttribute(attributeName)) {\n        changedAttributes[attributeName] = attribute;\n      }\n    }\n\n    return changedAttributes;\n  }\n\n  /** Generate WebGPU-style buffer layout descriptors from all attributes */\n  getBufferLayouts(\n    /** A luma.gl Model-shaped object that supplies additional hint to attribute resolution */\n    modelInfo?: {\n      /** Whether the model is instanced */\n      isInstanced?: boolean;\n    }\n  ): BufferLayout[] {\n    return Object.values(this.getAttributes()).map(attribute =>\n      attribute.getBufferLayout(modelInfo)\n    );\n  }\n\n  // PRIVATE METHODS\n\n  /** Register new attributes */\n  private _add(\n    /** A map from attribute name to attribute descriptors */\n    attributes: {[id: string]: AttributeOptions},\n    /** Additional attribute settings to pass to all attributes */\n    overrideOptions?: Partial<AttributeOptions>\n  ) {\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n\n      const props: AttributeOptions = {\n        ...attribute,\n        id: attributeName,\n        size: (attribute.isIndexed && 1) || attribute.size || 1,\n        ...overrideOptions\n      };\n\n      // Initialize the attribute descriptor, with WebGL and metadata fields\n      this.attributes[attributeName] = new Attribute(this.device, props);\n    }\n\n    this._mapUpdateTriggersToAttributes();\n  }\n\n  // build updateTrigger name to attribute name mapping\n  private _mapUpdateTriggersToAttributes() {\n    const triggers: {[name: string]: string[]} = {};\n\n    for (const attributeName in this.attributes) {\n      const attribute = this.attributes[attributeName];\n      attribute.getUpdateTriggers().forEach(triggerName => {\n        if (!triggers[triggerName]) {\n          triggers[triggerName] = [];\n        }\n        triggers[triggerName].push(attributeName);\n      });\n    }\n\n    this.updateTriggers = triggers;\n  }\n\n  private _invalidateTrigger(\n    triggerName: string,\n    dataRange?: {startRow?: number; endRow?: number}\n  ): string[] {\n    const {attributes, updateTriggers} = this;\n    const invalidatedAttributes = updateTriggers[triggerName];\n\n    if (invalidatedAttributes) {\n      invalidatedAttributes.forEach(name => {\n        const attribute = attributes[name];\n        if (attribute) {\n          attribute.setNeedsUpdate(attribute.id, dataRange);\n        }\n      });\n    }\n    return invalidatedAttributes;\n  }\n\n  private _updateAttribute(opts: {\n    attribute: Attribute;\n    numInstances: number;\n    data: any;\n    props: any;\n    context: any;\n  }) {\n    const {attribute, numInstances} = opts;\n    debug(TRACE_ATTRIBUTE_UPDATE_START, attribute);\n\n    if (attribute.constant) {\n      // The attribute is flagged as constant outside of an update cycle\n      // Skip allocation and updater call\n      // @ts-ignore value can be set to an array by user but always cast to typed array during attribute update\n      attribute.setConstantValue(attribute.value);\n      return;\n    }\n\n    if (attribute.allocate(numInstances)) {\n      debug(TRACE_ATTRIBUTE_ALLOCATE, attribute, numInstances);\n    }\n\n    // Calls update on any buffers that need update\n    const updated = attribute.updateBuffer(opts);\n    if (updated) {\n      this.needsRedraw = true;\n      debug(TRACE_ATTRIBUTE_UPDATE_END, attribute, numInstances);\n    }\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {lerp} from '@math.gl/core';\nimport Transition from './transition';\n\nexport default class CPUInterpolationTransition extends Transition {\n  _value;\n\n  get value() {\n    return this._value;\n  }\n\n  _onUpdate() {\n    const {\n      time,\n      settings: {fromValue, toValue, duration, easing}\n    } = this;\n    const t = easing(time / duration);\n    this._value = lerp(fromValue, toValue, t);\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport Transition from './transition';\n\nconst EPSILON = 1e-5;\n\n/*\n * Calculate the next value in the spring transition\n * @param prev {Number} - previous value\n * @param cur {Number} - current value\n * @param dest {Number} - destination value\n * @param damping {Number}\n * @param stiffness {Number}\n */\nfunction updateSpringElement(\n  prev: number,\n  cur: number,\n  dest: number,\n  damping: number,\n  stiffness: number\n): number {\n  const velocity = cur - prev;\n  const delta = dest - cur;\n  const spring = delta * stiffness;\n  const damper = -velocity * damping;\n  return spring + damper + velocity + cur;\n}\n\n/*\n * Calculate the next value in the spring transition\n * @param prev {Number|Array} - previous value\n * @param cur {Number|Array} - current value\n * @param dest {Number|Array} - destination value\n * @param damping {Number}\n * @param stiffness {Number}\n */\nfunction updateSpring(prev: number, cur: number, dest: number, damping: number, stiffness: number);\nfunction updateSpring(\n  prev: number[],\n  cur: number[],\n  dest: number[],\n  damping: number,\n  stiffness: number\n): number[];\n\nfunction updateSpring(\n  prev: number | number[],\n  cur: number | number[],\n  dest: number | number[],\n  damping: number,\n  stiffness: number\n): number | number[] {\n  if (Array.isArray(dest)) {\n    const next: number[] = [];\n    for (let i = 0; i < dest.length; i++) {\n      next[i] = updateSpringElement(prev[i], cur[i], dest[i], damping, stiffness);\n    }\n    return next;\n  }\n  return updateSpringElement(prev as number, cur as number, dest, damping, stiffness);\n}\n\n/*\n * Calculate the distance between two numbers or two vectors\n */\nfunction distance(value1, value2) {\n  if (Array.isArray(value1)) {\n    let distanceSquare = 0;\n    for (let i = 0; i < value1.length; i++) {\n      const d = value1[i] - value2[i];\n      distanceSquare += d * d;\n    }\n    return Math.sqrt(distanceSquare);\n  }\n  return Math.abs(value1 - value2);\n}\n\nexport default class CPUSpringTransition extends Transition {\n  _prevValue;\n  _currValue;\n\n  get value() {\n    return this._currValue;\n  }\n\n  _onUpdate() {\n    // TODO - use timeline\n    // const {time} = this;\n\n    const {fromValue, toValue, damping, stiffness} = this.settings;\n    const {_prevValue = fromValue, _currValue = fromValue} = this;\n    let nextValue = updateSpring(_prevValue, _currValue, toValue, damping, stiffness);\n    const delta = distance(nextValue, toValue);\n    const velocity = distance(nextValue, _currValue);\n\n    if (delta < EPSILON && velocity < EPSILON) {\n      nextValue = toValue;\n      this.end();\n    }\n\n    this._prevValue = _currValue;\n    this._currValue = nextValue;\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {normalizeTransitionSettings} from './attribute/transition-settings';\nimport CPUInterpolationTransition from '../transitions/cpu-interpolation-transition';\nimport CPUSpringTransition from '../transitions/cpu-spring-transition';\nimport log from '../utils/log';\n\nconst TRANSITION_TYPES = {\n  interpolation: CPUInterpolationTransition,\n  spring: CPUSpringTransition\n};\n\nexport default class UniformTransitionManager {\n  transitions = new Map();\n  timeline;\n\n  constructor(timeline) {\n    this.timeline = timeline;\n  }\n\n  get active() {\n    return this.transitions.size > 0;\n  }\n\n  add(key, fromValue, toValue, settings) {\n    const {transitions} = this;\n    if (transitions.has(key)) {\n      const transition = transitions.get(key);\n      // value may not be available if `update()` has not been called. Fallback to `fromValue`\n      const {value = transition.settings.fromValue} = transition;\n      // start from interrupted position\n      fromValue = value;\n      this.remove(key);\n    }\n\n    settings = normalizeTransitionSettings(settings);\n    if (!settings) {\n      return;\n    }\n\n    const TransitionType = TRANSITION_TYPES[settings.type];\n    if (!TransitionType) {\n      log.error(`unsupported transition type '${settings.type}'`)();\n      return;\n    }\n    const transition = new TransitionType(this.timeline);\n    transition.start({\n      ...settings,\n      fromValue,\n      toValue\n    });\n    transitions.set(key, transition);\n  }\n\n  remove(key) {\n    const {transitions} = this;\n    if (transitions.has(key)) {\n      transitions.get(key).cancel();\n      transitions.delete(key);\n    }\n  }\n\n  update() {\n    const propsInTransition = {};\n\n    for (const [key, transition] of this.transitions) {\n      transition.update();\n      propsInTransition[key] = transition.value;\n      if (!transition.inProgress) {\n        // transition ended\n        this.remove(key);\n      }\n    }\n\n    return propsInTransition;\n  }\n\n  clear() {\n    for (const key of this.transitions.keys()) {\n      this.remove(key);\n    }\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {PROP_TYPES_SYMBOL} from './constants';\n\nexport function validateProps(props) {\n  const propTypes = props[PROP_TYPES_SYMBOL];\n\n  for (const propName in propTypes) {\n    const propType = propTypes[propName];\n    const {validate} = propType;\n    if (validate && !validate(props[propName], propType)) {\n      throw new Error(`Invalid prop ${propName}: ${props[propName]}`);\n    }\n  }\n}\n\n// Returns an object with \"change flags\", either false or strings indicating reason for change\nexport function diffProps(\n  props,\n  oldProps\n): {\n  dataChanged: string | false | {startRow: number; endRow?: number}[];\n  propsChanged: string | false;\n  updateTriggersChanged: Record<string, true> | false;\n  extensionsChanged: boolean;\n  transitionsChanged: Record<string, true> | false;\n} {\n  // First check if any props have changed (ignore props that will be examined separately)\n  const propsChangedReason = compareProps({\n    newProps: props,\n    oldProps,\n    propTypes: props[PROP_TYPES_SYMBOL],\n    ignoreProps: {data: null, updateTriggers: null, extensions: null, transitions: null}\n  });\n\n  // Now check if any data related props have changed\n  const dataChangedReason = diffDataProps(props, oldProps);\n\n  // Check update triggers to determine if any attributes need regeneration\n  // Note - if data has changed, all attributes will need regeneration, so skip this step\n  let updateTriggersChangedReason: false | string | Record<string, true> = false;\n  if (!dataChangedReason) {\n    updateTriggersChangedReason = diffUpdateTriggers(props, oldProps);\n  }\n\n  return {\n    dataChanged: dataChangedReason,\n    propsChanged: propsChangedReason,\n    updateTriggersChanged: updateTriggersChangedReason,\n    extensionsChanged: diffExtensions(props, oldProps),\n    transitionsChanged: diffTransitions(props, oldProps)\n  };\n}\n\nfunction diffTransitions(props, oldProps): false | Record<string, true> {\n  if (!props.transitions) {\n    return false;\n  }\n  const result: Record<string, true> = {};\n  const propTypes = props[PROP_TYPES_SYMBOL];\n  let changed = false;\n\n  for (const key in props.transitions) {\n    const propType = propTypes[key];\n    const type = propType && propType.type;\n    const isTransitionable = type === 'number' || type === 'color' || type === 'array';\n    if (isTransitionable && comparePropValues(props[key], oldProps[key], propType)) {\n      result[key] = true;\n      changed = true;\n    }\n  }\n  return changed ? result : false;\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * @param {Object} opt.oldProps - object with old key/value pairs\n * @param {Object} opt.newProps - object with new key/value pairs\n * @param {Object} opt.ignoreProps={} - object, keys that should not be compared\n * @returns {null|String} - null when values of all keys are strictly equal.\n *   if unequal, returns a string explaining what changed.\n */\n/* eslint-disable max-statements, max-depth, complexity */\n/*\n * Note: for better performance, this function assumes that both oldProps and newProps\n   inherit the same prototype (defaultProps). That is, if neither object contains own\n   property <key>, assume `oldProps.<key>` and `newProps.<key>` are equal.\n */\nexport function compareProps({\n  newProps,\n  oldProps,\n  ignoreProps = {},\n  propTypes = {},\n  triggerName = 'props'\n}): string | false {\n  // shallow equality => deep equality\n  if (oldProps === newProps) {\n    return false;\n  }\n\n  // TODO - do we need these checks? Should never happen...\n  if (typeof newProps !== 'object' || newProps === null) {\n    return `${triggerName} changed shallowly`;\n  }\n\n  if (typeof oldProps !== 'object' || oldProps === null) {\n    return `${triggerName} changed shallowly`;\n  }\n\n  // Compare explicitly defined new props against old/default values\n  for (const key of Object.keys(newProps)) {\n    if (!(key in ignoreProps)) {\n      if (!(key in oldProps)) {\n        return `${triggerName}.${key} added`;\n      }\n      const changed = comparePropValues(newProps[key], oldProps[key], propTypes[key]);\n      if (changed) {\n        return `${triggerName}.${key} ${changed}`;\n      }\n    }\n  }\n\n  // Test if any old props have been dropped\n  for (const key of Object.keys(oldProps)) {\n    if (!(key in ignoreProps)) {\n      if (!(key in newProps)) {\n        return `${triggerName}.${key} dropped`;\n      }\n      if (!Object.hasOwnProperty.call(newProps, key)) {\n        // Compare dropped old prop against default value\n        const changed = comparePropValues(newProps[key], oldProps[key], propTypes[key]);\n        if (changed) {\n          return `${triggerName}.${key} ${changed}`;\n        }\n      }\n    }\n  }\n\n  return false;\n}\n/* eslint-enable max-statements, max-depth, complexity */\n\n// HELPERS\nfunction comparePropValues(newProp, oldProp, propType) {\n  // If prop type has an equal function, invoke it\n  let equal = propType && propType.equal;\n  if (equal && !equal(newProp, oldProp, propType)) {\n    return 'changed deeply';\n  }\n\n  if (!equal) {\n    // If object has an equals function, invoke it\n    equal = newProp && oldProp && newProp.equals;\n    if (equal && !equal.call(newProp, oldProp)) {\n      return 'changed deeply';\n    }\n  }\n\n  if (!equal && oldProp !== newProp) {\n    return 'changed shallowly';\n  }\n\n  return null;\n}\n\n// The comparison of the data prop requires special handling\n// the dataComparator should be used if supplied\nfunction diffDataProps(props, oldProps): string | false | {startRow: number; endRow?: number}[] {\n  if (oldProps === null) {\n    return 'oldProps is null, initial diff';\n  }\n\n  let dataChanged: string | false | {startRow: number; endRow?: number}[] = false;\n  // Support optional app defined comparison of data\n  const {dataComparator, _dataDiff} = props;\n  if (dataComparator) {\n    if (!dataComparator(props.data, oldProps.data)) {\n      dataChanged = 'Data comparator detected a change';\n    }\n    // Otherwise, do a shallow equal on props\n  } else if (props.data !== oldProps.data) {\n    dataChanged = 'A new data container was supplied';\n  }\n  if (dataChanged && _dataDiff) {\n    dataChanged = _dataDiff(props.data, oldProps.data) || dataChanged;\n  }\n\n  return dataChanged;\n}\n\n// Checks if any update triggers have changed\n// also calls callback to invalidate attributes accordingly.\nfunction diffUpdateTriggers(props, oldProps): Record<string, true> | false {\n  if (oldProps === null) {\n    return {all: true};\n  }\n\n  // If the 'all' updateTrigger fires, ignore testing others\n  if ('all' in props.updateTriggers) {\n    const diffReason = diffUpdateTrigger(props, oldProps, 'all');\n    if (diffReason) {\n      return {all: true};\n    }\n  }\n\n  const reason: Record<string, true> = {};\n  let changed = false;\n  // If the 'all' updateTrigger didn't fire, need to check all others\n  for (const triggerName in props.updateTriggers) {\n    if (triggerName !== 'all') {\n      const diffReason = diffUpdateTrigger(props, oldProps, triggerName);\n      if (diffReason) {\n        reason[triggerName] = true;\n        changed = true;\n      }\n    }\n  }\n\n  return changed ? reason : false;\n}\n\n// Returns true if any extensions have changed\nfunction diffExtensions(props, oldProps): boolean {\n  if (oldProps === null) {\n    return true;\n  }\n\n  const oldExtensions = oldProps.extensions;\n  const {extensions} = props;\n\n  if (extensions === oldExtensions) {\n    return false;\n  }\n  if (!oldExtensions || !extensions) {\n    return true;\n  }\n  if (extensions.length !== oldExtensions.length) {\n    return true;\n  }\n  for (let i = 0; i < extensions.length; i++) {\n    if (!extensions[i].equals(oldExtensions[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction diffUpdateTrigger(props, oldProps, triggerName) {\n  let newTriggers = props.updateTriggers[triggerName];\n  newTriggers = newTriggers === undefined || newTriggers === null ? {} : newTriggers;\n  let oldTriggers = oldProps.updateTriggers[triggerName];\n  oldTriggers = oldTriggers === undefined || oldTriggers === null ? {} : oldTriggers;\n  const diffReason = compareProps({\n    oldProps: oldTriggers,\n    newProps: newTriggers,\n    triggerName\n  });\n  return diffReason;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nconst ERR_NOT_OBJECT = 'count(): argument not an object';\nconst ERR_NOT_CONTAINER = 'count(): argument not a container';\n\n/**\n * Deduces numer of elements in a JavaScript container.\n * - Auto-deduction for ES6 containers that define a count() method\n * - Auto-deduction for ES6 containers that define a size member\n * - Auto-deduction for Classic Arrays via the built-in length attribute\n * - Also handles objects, although note that this an O(N) operation\n */\nexport function count(container: any): number {\n  if (!isObject(container)) {\n    throw new Error(ERR_NOT_OBJECT);\n  }\n\n  // Check if ES6 collection \"count\" function is available\n  if (typeof container.count === 'function') {\n    return container.count();\n  }\n\n  // Check if ES6 collection \"size\" attribute is set\n  if (Number.isFinite(container.size)) {\n    return container.size;\n  }\n\n  // Check if array length attribute is set\n  // Note: checking this last since some ES6 collections (Immutable.js)\n  // emit profuse warnings when trying to access `length` attribute\n  if (Number.isFinite(container.length)) {\n    return container.length;\n  }\n\n  // Note that getting the count of an object is O(N)\n  if (isPlainObject(container)) {\n    return Object.keys(container).length;\n  }\n\n  throw new Error(ERR_NOT_CONTAINER);\n}\n\n/**\n * Checks if argument is a plain object (not a class or array etc)\n * @param {*} value - JavaScript value to be tested\n * @return {Boolean} - true if argument is a plain JavaScript object\n */\nfunction isPlainObject(value) {\n  return value !== null && typeof value === 'object' && value.constructor === Object;\n}\n\n/**\n * Checks if argument is an indexable object (not a primitive value, nor null)\n * @param {*} value - JavaScript value to be tested\n * @return {Boolean} - true if argument is a JavaScript object\n */\nfunction isObject(value) {\n  return value !== null && typeof value === 'object';\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Merge two luma.gl shader descriptors\nexport function mergeShaders(target, source) {\n  if (!source) {\n    return target;\n  }\n  const result = {...target, ...source};\n\n  if ('defines' in source) {\n    result.defines = {...target.defines, ...source.defines};\n  }\n  if ('modules' in source) {\n    result.modules = (target.modules || []).concat(source.modules);\n\n    // Hack: prject32 and project64 cannot co-exist\n    if (source.modules.some(module => module.name === 'project64')) {\n      const index = result.modules.findIndex(module => module.name === 'project32');\n      if (index >= 0) {\n        result.modules.splice(index, 1);\n      }\n    }\n  }\n  if ('inject' in source) {\n    if (!target.inject) {\n      result.inject = source.inject;\n    } else {\n      const mergedInjection = {...target.inject};\n      for (const key in source.inject) {\n        mergedInjection[key] = (mergedInjection[key] || '') + source.inject[key];\n      }\n      result.inject = mergedInjection;\n    }\n  }\n  return result;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Device, Texture, SamplerProps} from '@luma.gl/core';\n\nconst DEFAULT_TEXTURE_PARAMETERS: SamplerProps = {\n  minFilter: 'linear',\n  mipmapFilter: 'linear',\n  magFilter: 'linear',\n  addressModeU: 'clamp-to-edge',\n  addressModeV: 'clamp-to-edge'\n};\n\n// Track the textures that are created by us. They need to be released when they are no longer used.\nconst internalTextures: Record<string, string> = {};\n\n/**\n *\n * @param owner\n * @param device\n * @param image could be one of:\n *   - Texture\n *   - Browser object: Image, ImageData, ImageData, HTMLCanvasElement, HTMLVideoElement, ImageBitmap\n *   - Plain object: {width: <number>, height: <number>, data: <Uint8Array>}\n * @param parameters\n * @returns\n */\nexport function createTexture(\n  owner: string,\n  device: Device,\n  image: any,\n  sampler: SamplerProps\n): Texture | null {\n  if (image instanceof Texture) {\n    return image;\n  } else if (image.constructor && image.constructor.name !== 'Object') {\n    // Browser object\n    image = {data: image};\n  }\n\n  let samplerParameters: SamplerProps | null = null;\n  if (image.compressed) {\n    samplerParameters = {\n      minFilter: 'linear',\n      mipmapFilter: image.data.length > 1 ? 'nearest' : 'linear'\n    };\n  }\n\n  const texture = device.createTexture({\n    ...image,\n    sampler: {\n      ...DEFAULT_TEXTURE_PARAMETERS,\n      ...samplerParameters,\n      ...sampler\n    },\n    mipmaps: true\n  });\n  // Track this texture\n  internalTextures[texture.id] = owner;\n  return texture;\n}\n\nexport function destroyTexture(owner: string, texture: Texture) {\n  if (!texture || !(texture instanceof Texture)) {\n    return;\n  }\n  // Only delete the texture if requested by the same layer that created it\n  if (internalTextures[texture.id] === owner) {\n    texture.delete();\n    delete internalTextures[texture.id];\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {createTexture, destroyTexture} from '../utils/texture';\nimport {deepEqual} from '../utils/deep-equal';\n\nimport type Component from './component';\nimport type {Color, TextureSource} from '../types/layer-props';\nimport type Layer from '../lib/layer';\nimport type {SamplerProps} from '@luma.gl/core';\n\ntype BasePropType<ValueT> = {\n  value: ValueT;\n  async?: boolean;\n  validate?: (value: any, propType: PropType) => boolean;\n  equal?: (value1: ValueT, value2: ValueT, propType: PropType) => boolean;\n};\n\n/**\n * Normalized prop type definition\n */\nexport type PropType = BasePropType<any> & {\n  type: string;\n  name: string;\n  transform?: (value: any, propType: PropType, component: Component<any>) => any;\n  release?: (value: any, propType: PropType, component: Component<any>) => void;\n};\n\ntype DefaultProp<T> =\n  | T\n  | DeprecatedProp\n  | BooleanPropType\n  | NumberPropType\n  | ColorPropType\n  | ImagePropType\n  | DataPropType<T>\n  | ArrayPropType<T>\n  | ObjectPropType<T>\n  | AccessorPropType<T>\n  | FunctionPropType<T>;\n\nexport type DefaultProps<PropsT extends {} = {}> = {\n  [propName in keyof PropsT]?: DefaultProp<Required<PropsT>[propName]>;\n};\n\ntype BooleanPropType = BasePropType<boolean> & {\n  type: 'boolean';\n};\ntype NumberPropType = BasePropType<number> & {\n  type: 'number';\n  min?: number;\n  max?: number;\n};\ntype ColorPropType = BasePropType<Color | null> & {\n  type: 'color';\n  optional?: boolean;\n};\ntype ArrayPropType<T = any[]> = BasePropType<T> & {\n  type: 'array';\n  optional?: boolean;\n  /** Ignore change in the prop value.\n   * @default false\n   */\n  ignore?: boolean;\n  /** Deep-compare two prop values. Only used if `ignore: false`.\n   * When a number is supplied, used as the depth of deep-comparison. 0 is equivalent to shallow comparison, -1 is infinite depth\n   * When a boolean is supplied, `true` is equivalent to `1` (shallow compare all child fields)\n   * @default false\n   */\n  compare?: boolean | number;\n};\ntype AccessorPropType<T = any> = BasePropType<T> & {\n  type: 'accessor';\n};\ntype FunctionPropType<T = Function> = BasePropType<T> & {\n  type: 'function';\n  optional?: boolean;\n  /** @deprecated use `ignore` instead */\n  compare?: boolean;\n  /** Ignore change in the prop value.\n   * @default true\n   */\n  ignore?: boolean;\n};\ntype DataPropType<T = any> = BasePropType<T> & {\n  type: 'data';\n};\ntype ImagePropType = BasePropType<TextureSource | null> & {\n  type: 'image';\n  parameters?: SamplerProps;\n};\ntype ObjectPropType<T = any> = BasePropType<T> & {\n  type: 'object';\n  optional?: boolean;\n  /** Ignore change in the prop value.\n   * @default false\n   */\n  ignore?: boolean;\n  /** Deep-compare two prop values. Only used if `ignore: false`.\n   * When a number is supplied, used as the depth of deep-comparison. 0 is equivalent to shallow comparison, -1 is infinite depth\n   * When a boolean is supplied, `true` is equivalent to `1` (shallow compare all child fields)\n   * @default false\n   */\n  compare?: boolean | number;\n};\ntype DeprecatedProp = {\n  deprecatedFor?: string | string[];\n};\ntype PropTypeDef =\n  | DeprecatedProp\n  | boolean\n  | BooleanPropType\n  | number\n  | NumberPropType\n  | string\n  | DataPropType\n  | number[]\n  | ColorPropType\n  | ArrayPropType\n  | AccessorPropType\n  | FunctionPropType\n  | ImagePropType\n  | ObjectPropType\n  | null;\n\nconst TYPE_DEFINITIONS = {\n  boolean: {\n    validate(value, propType: BooleanPropType) {\n      return true;\n    },\n    equal(value1, value2, propType: BooleanPropType) {\n      return Boolean(value1) === Boolean(value2);\n    }\n  },\n  number: {\n    validate(value, propType: NumberPropType) {\n      return (\n        Number.isFinite(value) &&\n        (!('max' in propType) || value <= propType.max!) &&\n        (!('min' in propType) || value >= propType.min!)\n      );\n    }\n  },\n  color: {\n    validate(value, propType: ColorPropType) {\n      return (\n        (propType.optional && !value) ||\n        (isArray(value) && (value.length === 3 || value.length === 4))\n      );\n    },\n    equal(value1, value2, propType: ColorPropType) {\n      return deepEqual(value1, value2, 1);\n    }\n  },\n  accessor: {\n    validate(value, propType: AccessorPropType) {\n      const valueType = getTypeOf(value);\n      return valueType === 'function' || valueType === getTypeOf(propType.value);\n    },\n    equal(value1, value2, propType: AccessorPropType) {\n      if (typeof value2 === 'function') {\n        return true;\n      }\n      return deepEqual(value1, value2, 1);\n    }\n  },\n  array: {\n    validate(value, propType: ArrayPropType) {\n      return (propType.optional && !value) || isArray(value);\n    },\n    equal(value1, value2, propType: ArrayPropType) {\n      const {compare} = propType;\n      const depth = Number.isInteger(compare as unknown) ? (compare as number) : compare ? 1 : 0;\n      return compare ? deepEqual(value1, value2, depth) : value1 === value2;\n    }\n  },\n  object: {\n    equal(value1, value2, propType: ObjectPropType) {\n      if (propType.ignore) {\n        return true;\n      }\n      const {compare} = propType;\n      const depth = Number.isInteger(compare as unknown) ? (compare as number) : compare ? 1 : 0;\n      return compare ? deepEqual(value1, value2, depth) : value1 === value2;\n    }\n  },\n  function: {\n    validate(value, propType: FunctionPropType) {\n      return (propType.optional && !value) || typeof value === 'function';\n    },\n    equal(value1, value2, propType: FunctionPropType) {\n      // Backward compatibility - {compare: true} and {ignore: false} are equivalent\n      const shouldIgnore = !propType.compare && propType.ignore !== false;\n      return shouldIgnore || value1 === value2;\n    }\n  },\n  data: {\n    transform: (value, propType: DataPropType, component) => {\n      if (!value) {\n        return value;\n      }\n      const {dataTransform} = component.props;\n      if (dataTransform) {\n        return dataTransform(value);\n      }\n      // Detect loaders.gl v4 table format\n      if (\n        typeof value.shape === 'string' &&\n        value.shape.endsWith('-table') &&\n        Array.isArray(value.data)\n      ) {\n        return value.data;\n      }\n      return value;\n    }\n  },\n  image: {\n    transform: (value, propType: ImagePropType, component) => {\n      const context = (component as Layer).context;\n      if (!context || !context.device) {\n        return null;\n      }\n      return createTexture(component.id, context.device, value, {\n        ...propType.parameters,\n        ...component.props.textureParameters\n      });\n    },\n    release: (value, propType: ImagePropType, component) => {\n      destroyTexture(component.id, value);\n    }\n  }\n} as const;\n\nexport function parsePropTypes(propDefs: Record<string, PropTypeDef>): {\n  propTypes: Record<string, PropType>;\n  defaultProps: Record<string, any>;\n  deprecatedProps: Record<string, string[]>;\n} {\n  const propTypes = {};\n  const defaultProps = {};\n  const deprecatedProps = {};\n\n  for (const [propName, propDef] of Object.entries(propDefs)) {\n    const deprecated = (propDef as DeprecatedProp)?.deprecatedFor;\n    if (deprecated) {\n      deprecatedProps[propName] = Array.isArray(deprecated) ? deprecated : [deprecated];\n    } else {\n      const propType = parsePropType(propName, propDef);\n      propTypes[propName] = propType;\n      defaultProps[propName] = propType.value;\n    }\n  }\n  return {propTypes, defaultProps, deprecatedProps};\n}\n\n// Parses one property definition entry. Either contains:\n// * a valid prop type object ({type, ...})\n// * or just a default value, in which case type and name inference is used\nfunction parsePropType(name: string, propDef: PropTypeDef): PropType {\n  switch (getTypeOf(propDef)) {\n    case 'object':\n      return normalizePropDefinition(name, propDef);\n\n    case 'array':\n      return normalizePropDefinition(name, {type: 'array', value: propDef, compare: false});\n\n    case 'boolean':\n      return normalizePropDefinition(name, {type: 'boolean', value: propDef});\n\n    case 'number':\n      return normalizePropDefinition(name, {type: 'number', value: propDef});\n\n    case 'function':\n      // return guessFunctionType(name, propDef);\n      return normalizePropDefinition(name, {type: 'function', value: propDef, compare: true});\n\n    default:\n      return {name, type: 'unknown', value: propDef};\n  }\n}\n\nfunction normalizePropDefinition(name, propDef): PropType {\n  if (!('type' in propDef)) {\n    if (!('value' in propDef)) {\n      // If no type and value this object is likely the value\n      return {name, type: 'object', value: propDef};\n    }\n    return {name, type: getTypeOf(propDef.value), ...propDef};\n  }\n  return {name, ...TYPE_DEFINITIONS[propDef.type], ...propDef};\n}\n\nfunction isArray(value: any): boolean {\n  return Array.isArray(value) || ArrayBuffer.isView(value);\n}\n\n// improved version of javascript typeof that can distinguish arrays and null values\nfunction getTypeOf(value: any): string {\n  if (isArray(value)) {\n    return 'array';\n  }\n  if (value === null) {\n    return 'null';\n  }\n  return typeof value;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport log from '../utils/log';\nimport {isAsyncIterable} from '../utils/iterable-utils';\nimport {parsePropTypes} from './prop-types';\nimport {\n  COMPONENT_SYMBOL,\n  PROP_TYPES_SYMBOL,\n  DEPRECATED_PROPS_SYMBOL,\n  ASYNC_ORIGINAL_SYMBOL,\n  ASYNC_RESOLVED_SYMBOL,\n  ASYNC_DEFAULTS_SYMBOL\n} from './constants';\nimport {StatefulComponentProps} from './component';\nimport Component from './component';\n\n// Create a property object\nexport function createProps<PropsT extends {}>(\n  component: Component<PropsT>,\n  propObjects: Partial<PropsT>[]\n): StatefulComponentProps<PropsT> {\n  // Resolve extension value\n  let extensions: any[] | undefined;\n  for (let i = propObjects.length - 1; i >= 0; i--) {\n    const props = propObjects[i];\n    if ('extensions' in props) {\n      // @ts-expect-error TS(2339) extensions not defined\n      extensions = props.extensions;\n    }\n  }\n\n  // Create a new prop object with empty default props object\n  const propsPrototype = getPropsPrototype(component.constructor, extensions);\n  // The true default props object will be found later\n  const propsInstance = Object.create(propsPrototype);\n\n  // Props need a back pointer to the owning component\n  propsInstance[COMPONENT_SYMBOL] = component;\n  // The supplied (original) values for those async props that are set to url strings or Promises.\n  // In this case, the actual (i.e. resolved) values are looked up from component.internalState\n  propsInstance[ASYNC_ORIGINAL_SYMBOL] = {};\n  // Note: the actual (resolved) values for props that are NOT set to urls or Promises.\n  // in this case the values are served directly from this map\n  propsInstance[ASYNC_RESOLVED_SYMBOL] = {};\n\n  // \"Copy\" all sync props\n  for (let i = 0; i < propObjects.length; ++i) {\n    const props = propObjects[i];\n    // Do not use Object.assign here to avoid Symbols in props overwriting our private fields\n    // This might happen if one of the arguments is another props instance\n    for (const key in props) {\n      propsInstance[key] = props[key];\n    }\n  }\n\n  // Props must be immutable\n  Object.freeze(propsInstance);\n\n  return propsInstance;\n}\n\nconst MergedDefaultPropsCacheKey = '_mergedDefaultProps';\n\n// Return precalculated defaultProps and propType objects if available\n// build them if needed\nfunction getPropsPrototype(componentClass, extensions?: any[]) {\n  // Bail out if we're not looking at a component - for two reasons:\n  // 1. There's no reason for an ancestor of component to have props\n  // 2. If we don't bail out, we'll follow the prototype chain all the way back to the global\n  // function prototype and add _mergedDefaultProps to it, which may break other frameworks\n  // (e.g. the react-three-fiber reconciler)\n  if (!(componentClass instanceof Component.constructor)) return {};\n\n  // A string that uniquely identifies the extensions involved\n  let cacheKey = MergedDefaultPropsCacheKey;\n  if (extensions) {\n    for (const extension of extensions) {\n      const ExtensionClass = extension.constructor;\n      if (ExtensionClass) {\n        cacheKey += `:${ExtensionClass.extensionName || ExtensionClass.name}`;\n      }\n    }\n  }\n\n  const defaultProps = getOwnProperty(componentClass, cacheKey);\n  if (!defaultProps) {\n    return (componentClass[cacheKey] = createPropsPrototypeAndTypes(\n      componentClass,\n      extensions || []\n    ));\n  }\n  return defaultProps;\n}\n\n// Build defaultProps and propType objects by walking component prototype chain\nfunction createPropsPrototypeAndTypes(\n  componentClass,\n  extensions: any[]\n): Record<string, any> | null {\n  const parent = componentClass.prototype;\n  if (!parent) {\n    return null;\n  }\n\n  const parentClass = Object.getPrototypeOf(componentClass);\n  const parentDefaultProps = getPropsPrototype(parentClass);\n\n  // Parse propTypes from Component.defaultProps\n  const componentDefaultProps = getOwnProperty(componentClass, 'defaultProps') || {};\n  const componentPropDefs = parsePropTypes(componentDefaultProps);\n\n  // Merged default props object. Order: parent, self, extensions\n  const defaultProps: any = Object.assign(\n    Object.create(null),\n    parentDefaultProps,\n    componentPropDefs.defaultProps\n  );\n  // Merged prop type definitions. Order: parent, self, extensions\n  const propTypes = Object.assign(\n    Object.create(null),\n    parentDefaultProps?.[PROP_TYPES_SYMBOL],\n    componentPropDefs.propTypes\n  );\n  // Merged deprecation list. Order: parent, self, extensions\n  const deprecatedProps = Object.assign(\n    Object.create(null),\n    parentDefaultProps?.[DEPRECATED_PROPS_SYMBOL],\n    componentPropDefs.deprecatedProps\n  );\n\n  for (const extension of extensions) {\n    const extensionDefaultProps = getPropsPrototype(extension.constructor);\n    if (extensionDefaultProps) {\n      Object.assign(defaultProps, extensionDefaultProps);\n      Object.assign(propTypes, extensionDefaultProps[PROP_TYPES_SYMBOL]);\n      Object.assign(deprecatedProps, extensionDefaultProps[DEPRECATED_PROPS_SYMBOL]);\n    }\n  }\n\n  // Create any necessary property descriptors and create the default prop object\n  // Assign merged default props\n  createPropsPrototype(defaultProps, componentClass);\n\n  // Add getters/setters for async props\n  addAsyncPropsToPropPrototype(defaultProps, propTypes);\n\n  // Add setters for deprecated props\n  addDeprecatedPropsToPropPrototype(defaultProps, deprecatedProps);\n\n  // Store the precalculated props\n  defaultProps[PROP_TYPES_SYMBOL] = propTypes;\n  defaultProps[DEPRECATED_PROPS_SYMBOL] = deprecatedProps;\n\n  // Backwards compatibility\n  // TODO: remove access of hidden property from the rest of the code base\n  if (extensions.length === 0 && !hasOwnProperty(componentClass, '_propTypes')) {\n    componentClass._propTypes = propTypes;\n  }\n  return defaultProps;\n}\n\n// Builds a pre-merged default props object that component props can inherit from\nfunction createPropsPrototype(defaultProps, componentClass) {\n  // Avoid freezing `id` prop\n  const id = getComponentName(componentClass);\n\n  Object.defineProperties(defaultProps, {\n    // `id` is treated specially because layer might need to override it\n    id: {\n      writable: true,\n      value: id\n    }\n  });\n}\n\nfunction addDeprecatedPropsToPropPrototype(defaultProps, deprecatedProps) {\n  for (const propName in deprecatedProps) {\n    /* eslint-disable accessor-pairs */\n    Object.defineProperty(defaultProps, propName, {\n      enumerable: false,\n      set(newValue) {\n        const nameStr = `${this.id}: ${propName}`;\n\n        for (const newPropName of deprecatedProps[propName]) {\n          if (!hasOwnProperty(this, newPropName)) {\n            this[newPropName] = newValue;\n          }\n        }\n\n        log.deprecated(nameStr, deprecatedProps[propName].join('/'))();\n      }\n    });\n    /* eslint-enable accessor-pairs */\n  }\n}\n\n// Create descriptors for overridable props\nfunction addAsyncPropsToPropPrototype(defaultProps, propTypes) {\n  const defaultValues = {};\n\n  const descriptors = {};\n\n  // Move async props into shadow values\n  for (const propName in propTypes) {\n    const propType = propTypes[propName];\n    const {name, value} = propType;\n\n    // Note: async is ES7 keyword, can't destructure\n    if (propType.async) {\n      defaultValues[name] = value;\n      descriptors[name] = getDescriptorForAsyncProp(name);\n    }\n  }\n\n  // Default \"resolved\" values for async props, returned if value not yet resolved/set.\n  defaultProps[ASYNC_DEFAULTS_SYMBOL] = defaultValues;\n  // Shadowed object, just to make sure \"early indexing\" into the instance does not fail\n  defaultProps[ASYNC_ORIGINAL_SYMBOL] = {};\n\n  Object.defineProperties(defaultProps, descriptors);\n}\n\n// Helper: Configures getter and setter for one async prop\nfunction getDescriptorForAsyncProp(name) {\n  return {\n    enumerable: true,\n    // Save the provided value for async props in a special map\n    set(newValue) {\n      if (\n        typeof newValue === 'string' ||\n        newValue instanceof Promise ||\n        isAsyncIterable(newValue)\n      ) {\n        this[ASYNC_ORIGINAL_SYMBOL][name] = newValue;\n      } else {\n        this[ASYNC_RESOLVED_SYMBOL][name] = newValue;\n      }\n    },\n    // Only the component's state knows the true value of async prop\n    get() {\n      if (this[ASYNC_RESOLVED_SYMBOL]) {\n        // Prop value isn't async, so just return it\n        if (name in this[ASYNC_RESOLVED_SYMBOL]) {\n          const value = this[ASYNC_RESOLVED_SYMBOL][name];\n\n          return value || this[ASYNC_DEFAULTS_SYMBOL][name];\n        }\n\n        if (name in this[ASYNC_ORIGINAL_SYMBOL]) {\n          // It's an async prop value: look into component state\n          const state = this[COMPONENT_SYMBOL] && this[COMPONENT_SYMBOL].internalState;\n          if (state && state.hasAsyncProp(name)) {\n            return state.getAsyncProp(name) || this[ASYNC_DEFAULTS_SYMBOL][name];\n          }\n        }\n      }\n\n      // the prop is not supplied, or\n      // component not yet initialized/matched, return the component's default value for the prop\n      return this[ASYNC_DEFAULTS_SYMBOL][name];\n    }\n  };\n}\n\n// HELPER METHODS\n\nfunction hasOwnProperty(object, prop) {\n  return Object.prototype.hasOwnProperty.call(object, prop);\n}\n\n// Constructors have their super class constructors as prototypes\nfunction getOwnProperty(object, prop) {\n  return hasOwnProperty(object, prop) && object[prop];\n}\n\nfunction getComponentName(componentClass) {\n  const componentName = componentClass.componentName;\n  if (!componentName) {\n    log.warn(`${componentClass.name}.componentName not specified`)();\n  }\n  return componentName || componentClass.name;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {\n  COMPONENT_SYMBOL,\n  PROP_TYPES_SYMBOL,\n  ASYNC_ORIGINAL_SYMBOL,\n  ASYNC_RESOLVED_SYMBOL,\n  ASYNC_DEFAULTS_SYMBOL\n} from './constants';\nimport {PropType} from './prop-types';\nimport {createProps} from './create-props';\n\nlet counter = 0;\n\nexport type StatefulComponentProps<PropsT extends {}> = PropsT & {\n  id: string;\n  [COMPONENT_SYMBOL]: Component<PropsT>;\n  [PROP_TYPES_SYMBOL]: Record<string, PropType>;\n  [ASYNC_DEFAULTS_SYMBOL]: Partial<PropsT>;\n  [ASYNC_ORIGINAL_SYMBOL]: Partial<PropsT>;\n  [ASYNC_RESOLVED_SYMBOL]: Partial<PropsT>;\n};\n\nexport default class Component<PropsT extends {} = {}> {\n  static componentName: string = 'Component';\n  static defaultProps: Readonly<{}> = {};\n\n  id: string;\n  props: StatefulComponentProps<PropsT>;\n  count: number;\n\n  constructor(...propObjects: Partial<PropsT>[]) {\n    // Merge supplied props with default props and freeze them.\n    /* eslint-disable prefer-spread */\n    this.props = createProps<PropsT>(this, propObjects);\n    /* eslint-enable prefer-spread */\n\n    this.id = this.props.id; // The layer's id, used for matching with layers from last render cycle\n    this.count = counter++; // Keep track of how many layer instances you are generating\n  }\n\n  // clone this layer with modified props\n  clone(newProps: Partial<PropsT>) {\n    const {props} = this;\n\n    // Async props cannot be copied with Object.assign, copy them separately\n    const asyncProps: Partial<PropsT> = {};\n\n    // See async props definition in create-props.js\n    for (const key in props[ASYNC_DEFAULTS_SYMBOL]) {\n      if (key in props[ASYNC_RESOLVED_SYMBOL]) {\n        asyncProps[key] = props[ASYNC_RESOLVED_SYMBOL][key];\n      } else if (key in props[ASYNC_ORIGINAL_SYMBOL]) {\n        asyncProps[key] = props[ASYNC_ORIGINAL_SYMBOL][key];\n      }\n    }\n\n    // Some custom layer implementation may not support multiple arguments in the constructor\n    // @ts-ignore\n    return new this.constructor({...props, ...asyncProps, ...newProps});\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {isAsyncIterable} from '../utils/iterable-utils';\nimport {\n  COMPONENT_SYMBOL,\n  PROP_TYPES_SYMBOL,\n  ASYNC_ORIGINAL_SYMBOL,\n  ASYNC_RESOLVED_SYMBOL,\n  ASYNC_DEFAULTS_SYMBOL\n} from './constants';\nimport type Component from './component';\nimport {PropType} from './prop-types';\n\nconst EMPTY_PROPS = Object.freeze({});\n\n/** Internal state of an async prop */\ntype AsyncPropState = {\n  /** The prop type definition from component.defaultProps, if exists */\n  type: PropType | null;\n  /** Supplied prop value (can be url/promise, not visible to the component) */\n  lastValue: any;\n  /** Resolved prop value (valid data, can be \"shown\" to the component) */\n  resolvedValue: any;\n  /** How many loads have been issued */\n  pendingLoadCount: number;\n  /** Latest resolved load, (earlier loads will be ignored) */\n  resolvedLoadCount: number;\n};\n\nexport default class ComponentState<ComponentT extends Component> {\n  /** The component that this state instance belongs to. `null` if this state has been finalized. */\n  component: ComponentT | null;\n  onAsyncPropUpdated: (propName: string, value: any) => void;\n\n  private asyncProps: Partial<Record<string, AsyncPropState>>;\n  private oldProps: ComponentT['props'] | null;\n  private oldAsyncProps: ComponentT['props'] | null;\n\n  constructor(component: ComponentT) {\n    this.component = component;\n    this.asyncProps = {}; // Prop values that the layer sees\n    this.onAsyncPropUpdated = () => {};\n    this.oldProps = null; // Last props before update\n    this.oldAsyncProps = null; // Last props before update, with async values copied.\n  }\n\n  finalize() {\n    for (const propName in this.asyncProps) {\n      const asyncProp = this.asyncProps[propName];\n      if (asyncProp && asyncProp.type && asyncProp.type.release) {\n        // Release any resources created by transforms\n        asyncProp.type.release(\n          asyncProp.resolvedValue,\n          asyncProp.type,\n          this.component as Component\n        );\n      }\n    }\n    this.asyncProps = {};\n    this.component = null;\n    this.resetOldProps();\n  }\n\n  /* Layer-facing props API */\n\n  getOldProps(): ComponentT['props'] | typeof EMPTY_PROPS {\n    return this.oldAsyncProps || this.oldProps || EMPTY_PROPS;\n  }\n\n  resetOldProps() {\n    this.oldAsyncProps = null;\n    this.oldProps = this.component ? this.component.props : null;\n  }\n\n  // Checks if a prop is overridden\n  hasAsyncProp(propName: string): boolean {\n    return propName in this.asyncProps;\n  }\n\n  // Returns value of an overriden prop\n  getAsyncProp(propName: string): any {\n    const asyncProp = this.asyncProps[propName];\n    return asyncProp && asyncProp.resolvedValue;\n  }\n\n  isAsyncPropLoading(propName?: string): boolean {\n    if (propName) {\n      const asyncProp = this.asyncProps[propName];\n      return Boolean(\n        asyncProp &&\n          asyncProp.pendingLoadCount > 0 &&\n          asyncProp.pendingLoadCount !== asyncProp.resolvedLoadCount\n      );\n    }\n    for (const key in this.asyncProps) {\n      if (this.isAsyncPropLoading(key)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Without changing the original prop value, swap out the data resolution under the hood\n  reloadAsyncProp(propName: string, value: any) {\n    this._watchPromise(propName, Promise.resolve(value));\n  }\n\n  // Updates all async/overridden props (when new props come in)\n  // Checks if urls have changed, starts loading, or removes override\n  setAsyncProps(props: ComponentT['props']) {\n    this.component = (props[COMPONENT_SYMBOL] as ComponentT) || this.component;\n\n    // NOTE: prop param and default values are only support for testing\n    const resolvedValues = props[ASYNC_RESOLVED_SYMBOL] || {};\n    const originalValues = props[ASYNC_ORIGINAL_SYMBOL] || props;\n    const defaultValues = props[ASYNC_DEFAULTS_SYMBOL] || {};\n\n    // TODO - use async props from the layer's prop types\n    for (const propName in resolvedValues) {\n      const value = resolvedValues[propName];\n      this._createAsyncPropData(propName, defaultValues[propName]);\n      this._updateAsyncProp(propName, value);\n      // Use transformed value\n      resolvedValues[propName] = this.getAsyncProp(propName);\n    }\n\n    for (const propName in originalValues) {\n      const value = originalValues[propName];\n      // Makes sure a record exists for this prop\n      this._createAsyncPropData(propName, defaultValues[propName]);\n      this._updateAsyncProp(propName, value);\n    }\n  }\n\n  /* Placeholder methods for subclassing */\n\n  protected _fetch(propName: string, url: string): any {\n    return null;\n  }\n\n  protected _onResolve(propName: string, value: any) {} // eslint-disable-line @typescript-eslint/no-empty-function\n\n  protected _onError(propName: string, error: Error) {} // eslint-disable-line @typescript-eslint/no-empty-function\n\n  // Intercept strings (URLs) and Promises and activates loading and prop rewriting\n  private _updateAsyncProp(propName: string, value: any) {\n    if (!this._didAsyncInputValueChange(propName, value)) {\n      return;\n    }\n\n    // interpret value string as url and start a new load tracked by a promise\n    if (typeof value === 'string') {\n      value = this._fetch(propName, value);\n    }\n\n    // interprets promise and track the \"loading\"\n    if (value instanceof Promise) {\n      this._watchPromise(propName, value);\n      return;\n    }\n\n    if (isAsyncIterable(value)) {\n      this._resolveAsyncIterable(propName, value); // eslint-disable-line @typescript-eslint/no-floating-promises\n      return;\n    }\n\n    // else, normal, non-async value. Just store value for now\n    this._setPropValue(propName, value);\n  }\n\n  // Whenever async props are changing, we need to make a copy of oldProps\n  // otherwise the prop rewriting will affect the value both in props and oldProps.\n  // While the copy is relatively expensive, this only happens on load completion.\n  private _freezeAsyncOldProps() {\n    if (!this.oldAsyncProps && this.oldProps) {\n      // 1. inherit all synchronous props from oldProps\n      // 2. reconfigure the async prop descriptors to fixed values\n      this.oldAsyncProps = Object.create(this.oldProps);\n      for (const propName in this.asyncProps) {\n        Object.defineProperty(this.oldAsyncProps, propName, {\n          enumerable: true,\n          value: this.oldProps[propName]\n        });\n      }\n    }\n  }\n\n  // Checks if an input value actually changed (to avoid reloading/rewatching promises/urls)\n  private _didAsyncInputValueChange(propName: string, value: any): boolean {\n    // @ts-ignore\n    const asyncProp: AsyncPropState = this.asyncProps[propName];\n    if (value === asyncProp.resolvedValue || value === asyncProp.lastValue) {\n      return false;\n    }\n    asyncProp.lastValue = value;\n    return true;\n  }\n\n  // Set normal, non-async value\n  private _setPropValue(propName: string, value: any) {\n    // Save the current value before overwriting so that diffProps can access both\n    this._freezeAsyncOldProps();\n\n    const asyncProp = this.asyncProps[propName];\n    if (asyncProp) {\n      value = this._postProcessValue(asyncProp, value);\n      asyncProp.resolvedValue = value;\n      asyncProp.pendingLoadCount++;\n      asyncProp.resolvedLoadCount = asyncProp.pendingLoadCount;\n    }\n  }\n\n  // Set a just resolved async value, calling onAsyncPropUpdates if value changes asynchronously\n  private _setAsyncPropValue(propName: string, value: any, loadCount: number) {\n    // Only update if loadCount is larger or equal to resolvedLoadCount\n    // otherwise a more recent load has already completed\n    const asyncProp = this.asyncProps[propName];\n    if (asyncProp && loadCount >= asyncProp.resolvedLoadCount && value !== undefined) {\n      // Save the current value before overwriting so that diffProps can access both\n      this._freezeAsyncOldProps();\n\n      asyncProp.resolvedValue = value;\n      asyncProp.resolvedLoadCount = loadCount;\n\n      // Call callback to inform listener\n      this.onAsyncPropUpdated(propName, value);\n    }\n  }\n\n  // Tracks a promise, sets the prop when loaded, handles load count\n  private _watchPromise(propName: string, promise: Promise<any>) {\n    const asyncProp = this.asyncProps[propName];\n    if (asyncProp) {\n      asyncProp.pendingLoadCount++;\n      const loadCount = asyncProp.pendingLoadCount;\n      promise\n        .then(data => {\n          if (!this.component) {\n            // This component state has been finalized\n            return;\n          }\n          data = this._postProcessValue(asyncProp, data);\n          this._setAsyncPropValue(propName, data, loadCount);\n          this._onResolve(propName, data);\n        })\n        .catch(error => {\n          this._onError(propName, error);\n        });\n    }\n  }\n\n  private async _resolveAsyncIterable(\n    propName: string,\n    iterable: AsyncIterable<any>\n  ): Promise<void> {\n    if (propName !== 'data') {\n      // we only support data as async iterable\n      this._setPropValue(propName, iterable);\n      return;\n    }\n\n    const asyncProp = this.asyncProps[propName];\n    if (!asyncProp) {\n      return;\n    }\n\n    asyncProp.pendingLoadCount++;\n    const loadCount = asyncProp.pendingLoadCount;\n    let data: any[] = [];\n    let count = 0;\n\n    for await (const chunk of iterable) {\n      if (!this.component) {\n        // This component state has been finalized\n        return;\n      }\n\n      // @ts-expect-error (2339) dataTransform is not decared in base component props\n      const {dataTransform} = this.component.props;\n      if (dataTransform) {\n        data = dataTransform(chunk, data) as any[];\n      } else {\n        data = data.concat(chunk);\n      }\n\n      // Used by the default _dataDiff function\n      Object.defineProperty(data, '__diff', {\n        enumerable: false,\n        value: [{startRow: count, endRow: data.length}]\n      });\n\n      count = data.length;\n      this._setAsyncPropValue(propName, data, loadCount);\n    }\n\n    this._onResolve(propName, data);\n  }\n\n  // Give the app a chance to post process the loaded data\n  private _postProcessValue(asyncProp: AsyncPropState, value: any) {\n    const propType = asyncProp.type;\n    if (propType && this.component) {\n      if (propType.release) {\n        propType.release(asyncProp.resolvedValue, propType, this.component);\n      }\n      if (propType.transform) {\n        return propType.transform(value, propType, this.component);\n      }\n    }\n    return value;\n  }\n\n  // Creating an asyncProp record if needed\n  private _createAsyncPropData(propName: string, defaultValue: any) {\n    const asyncProp = this.asyncProps[propName];\n    if (!asyncProp) {\n      const propTypes = this.component && this.component.props[PROP_TYPES_SYMBOL];\n      // assert(defaultValue !== undefined);\n      this.asyncProps[propName] = {\n        type: propTypes && propTypes[propName],\n        lastValue: null,\n        resolvedValue: defaultValue,\n        pendingLoadCount: 0,\n        resolvedLoadCount: 0\n      };\n    }\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// deck.gl, MIT license\nimport ComponentState from '../lifecycle/component-state';\n\nimport type Layer from './layer';\nimport type AttributeManager from './attribute/attribute-manager';\nimport type Viewport from '../viewports/viewport';\nimport type UniformTransitionManager from './uniform-transition-manager';\n\nexport type ChangeFlags = {\n  // Primary changeFlags, can be strings stating reason for change\n  dataChanged: string | false | {startRow: number; endRow?: number}[];\n  propsChanged: string | false;\n  updateTriggersChanged: Record<string, true> | false;\n  extensionsChanged: boolean;\n  viewportChanged: boolean;\n  stateChanged: boolean;\n\n  // Derived changeFlags\n  propsOrDataChanged: boolean;\n  somethingChanged: boolean;\n};\n\nexport default class LayerState<LayerT extends Layer> extends ComponentState<LayerT> {\n  attributeManager: AttributeManager | null;\n  needsRedraw: boolean;\n  needsUpdate: boolean;\n  /**\n   * Sublayers rendered in a previous cycle\n   */\n  subLayers: Layer[] | null;\n  /**\n   * If the layer is using the shared instancedPickingColors buffer\n   */\n  usesPickingColorCache: boolean;\n  /**\n   * If the layer has picking buffer (pickingColors or instancePickingColors)\n   */\n  hasPickingBuffer?: boolean;\n  /**\n   * Dirty flags of the layer's props and state\n   */\n  changeFlags!: ChangeFlags;\n\n  /** The last viewport rendered by this layer */\n  viewport?: Viewport;\n\n  uniformTransitions!: UniformTransitionManager;\n  /** Populated during uniform transition to replace user-supplied values */\n  propsInTransition?: LayerT['props'];\n\n  constructor({\n    attributeManager,\n    layer\n  }: {\n    attributeManager: AttributeManager | null;\n    layer: LayerT;\n  }) {\n    super(layer);\n    this.attributeManager = attributeManager;\n    this.needsRedraw = true;\n    this.needsUpdate = true;\n    this.subLayers = null;\n    this.usesPickingColorCache = false;\n  }\n\n  get layer(): LayerT | null {\n    return this.component;\n  }\n\n  /* Override base Component methods with Layer-specific handling */\n\n  protected _fetch(propName, url: string) {\n    const layer = this.layer;\n    const fetch = layer?.props.fetch;\n    if (fetch) {\n      return fetch(url, {propName, layer});\n    }\n    return super._fetch(propName, url);\n  }\n\n  protected _onResolve(propName: string, value: any) {\n    const layer = this.layer;\n    if (layer) {\n      const onDataLoad = layer.props.onDataLoad;\n      if (propName === 'data' && onDataLoad) {\n        onDataLoad(value, {propName, layer});\n      }\n    }\n  }\n\n  protected _onError(propName: string, error: Error) {\n    const layer = this.layer;\n    if (layer) {\n      layer.raiseError(error, `loading ${propName} of ${this.layer}`);\n    }\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* eslint-disable react/no-direct-mutation-state */\nimport {Buffer, Parameters as LumaParameters, TypedArray} from '@luma.gl/core';\nimport {WebGLDevice} from '@luma.gl/webgl';\nimport {COORDINATE_SYSTEM} from './constants';\nimport AttributeManager from './attribute/attribute-manager';\nimport UniformTransitionManager from './uniform-transition-manager';\nimport {diffProps, validateProps} from '../lifecycle/props';\nimport {LIFECYCLE, Lifecycle} from '../lifecycle/constants';\nimport {count} from '../utils/count';\nimport log from '../utils/log';\nimport debug from '../debug/index';\nimport assert from '../utils/assert';\nimport memoize from '../utils/memoize';\nimport {mergeShaders} from '../utils/shader';\nimport {projectPosition, getWorldPosition} from '../shaderlib/project/project-functions';\nimport typedArrayManager from '../utils/typed-array-manager';\n\nimport Component from '../lifecycle/component';\nimport LayerState, {ChangeFlags} from './layer-state';\n\nimport {worldToPixels} from '@math.gl/web-mercator';\n\nimport {load} from '@loaders.gl/core';\n\nimport type {Loader} from '@loaders.gl/loader-utils';\nimport type {CoordinateSystem} from './constants';\nimport type Attribute from './attribute/attribute';\nimport type {Model} from '@luma.gl/engine';\nimport type {PickingInfo, GetPickingInfoParams} from './picking/pick-info';\nimport type Viewport from '../viewports/viewport';\nimport type {NumericArray} from '../types/types';\nimport type {DefaultProps} from '../lifecycle/prop-types';\nimport type {LayerData, LayerProps} from '../types/layer-props';\nimport type {LayerContext} from './layer-manager';\nimport type {BinaryAttribute} from './attribute/attribute';\nimport {RenderPass} from '@luma.gl/core';\nimport {PickingProps} from '@luma.gl/shadertools';\n\nconst TRACE_CHANGE_FLAG = 'layer.changeFlag';\nconst TRACE_INITIALIZE = 'layer.initialize';\nconst TRACE_UPDATE = 'layer.update';\nconst TRACE_FINALIZE = 'layer.finalize';\nconst TRACE_MATCHED = 'layer.matched';\n\nconst MAX_PICKING_COLOR_CACHE_SIZE = 2 ** 24 - 1;\n\nconst EMPTY_ARRAY = Object.freeze([]);\n\n// Only compare the same two viewports once\nconst areViewportsEqual = memoize(\n  ({oldViewport, viewport}: {oldViewport: Viewport; viewport: Viewport}): boolean => {\n    return oldViewport.equals(viewport);\n  }\n);\n\nlet pickingColorCache = new Uint8ClampedArray(0);\n\nconst defaultProps: DefaultProps<LayerProps> = {\n  // data: Special handling for null, see below\n  data: {type: 'data', value: EMPTY_ARRAY, async: true},\n  dataComparator: {type: 'function', value: null, optional: true},\n  _dataDiff: {\n    type: 'function',\n    // @ts-ignore __diff is not defined on data\n    value: data => data && data.__diff,\n    optional: true\n  },\n  dataTransform: {type: 'function', value: null, optional: true},\n  onDataLoad: {type: 'function', value: null, optional: true},\n  onError: {type: 'function', value: null, optional: true},\n  fetch: {\n    type: 'function',\n    value: <LayerT extends Layer>(\n      url: string,\n      {\n        propName,\n        layer,\n        loaders,\n        loadOptions,\n        signal\n      }: {\n        propName: string;\n        layer: LayerT;\n        loaders?: Loader[];\n        loadOptions?: any;\n        signal?: AbortSignal;\n      }\n    ) => {\n      const {resourceManager} = layer.context;\n      loadOptions = loadOptions || layer.getLoadOptions();\n      loaders = loaders || layer.props.loaders;\n      if (signal) {\n        loadOptions = {\n          ...loadOptions,\n          fetch: {\n            ...loadOptions?.fetch,\n            signal\n          }\n        };\n      }\n\n      let inResourceManager = resourceManager.contains(url);\n\n      if (!inResourceManager && !loadOptions) {\n        // If there is no layer-specific load options, then attempt to cache this resource in the data manager\n        resourceManager.add({resourceId: url, data: load(url, loaders), persistent: false});\n        inResourceManager = true;\n      }\n      if (inResourceManager) {\n        return resourceManager.subscribe({\n          resourceId: url,\n          onChange: data => layer.internalState?.reloadAsyncProp(propName, data),\n          consumerId: layer.id,\n          requestId: propName\n        });\n      }\n\n      return load(url, loaders, loadOptions);\n    }\n  },\n  updateTriggers: {}, // Update triggers: a core change detection mechanism in deck.gl\n\n  visible: true,\n  pickable: false,\n  opacity: {type: 'number', min: 0, max: 1, value: 1},\n  operation: 'draw',\n\n  onHover: {type: 'function', value: null, optional: true},\n  onClick: {type: 'function', value: null, optional: true},\n  onDragStart: {type: 'function', value: null, optional: true},\n  onDrag: {type: 'function', value: null, optional: true},\n  onDragEnd: {type: 'function', value: null, optional: true},\n\n  coordinateSystem: COORDINATE_SYSTEM.DEFAULT,\n  coordinateOrigin: {type: 'array', value: [0, 0, 0], compare: true},\n  modelMatrix: {type: 'array', value: null, compare: true, optional: true},\n  wrapLongitude: false,\n  positionFormat: 'XYZ',\n  colorFormat: 'RGBA',\n\n  parameters: {type: 'object', value: {}, optional: true, compare: 2},\n  loadOptions: {type: 'object', value: null, optional: true, ignore: true},\n  transitions: null,\n  extensions: [],\n  loaders: {type: 'array', value: [], optional: true, ignore: true},\n\n  // Offset depth based on layer index to avoid z-fighting.\n  // Negative values pull layer towards the camera\n  // https://www.opengl.org/archives/resources/faq/technical/polygonoffset.htm\n  getPolygonOffset: {\n    type: 'function',\n    value: ({layerIndex}) => [0, -layerIndex * 100]\n  },\n\n  // Selection/Highlighting\n  highlightedObjectIndex: null,\n  autoHighlight: false,\n  highlightColor: {type: 'accessor', value: [0, 0, 128, 128]}\n};\n\nexport type UpdateParameters<LayerT extends Layer> = {\n  props: LayerT['props'];\n  oldProps: LayerT['props'];\n  context: LayerContext;\n  changeFlags: ChangeFlags;\n};\n\ntype DrawOptions = {\n  renderPass: RenderPass;\n  shaderModuleProps: any;\n  uniforms: any;\n  parameters: any;\n  context: LayerContext;\n};\n\ntype SharedLayerState = {\n  [key: string]: unknown;\n};\n\nexport default abstract class Layer<PropsT extends {} = {}> extends Component<\n  PropsT & Required<LayerProps>\n> {\n  static defaultProps: DefaultProps = defaultProps;\n  static layerName: string = 'Layer';\n\n  static override get componentName() {\n    return Object.prototype.hasOwnProperty.call(this, 'layerName') ? this.layerName : '';\n  }\n\n  internalState: LayerState<this> | null = null;\n  lifecycle: Lifecycle = LIFECYCLE.NO_STATE; // Helps track and debug the life cycle of the layers\n\n  // context and state can technically be null before a layer is initialized/matched.\n  // However, they are most extensively accessed in a layer's lifecycle methods, where they are always defined.\n  // Checking for null state constantly in layer implementation is unnecessarily verbose.\n  context!: LayerContext; // Will reference layer manager's context, contains state shared by layers\n  state!: SharedLayerState; // Will be set to the shared layer state object during layer matching\n\n  parent: Layer | null = null;\n\n  get root(): Layer {\n    // eslint-disable-next-line\n    let layer: Layer = this;\n    while (layer.parent) {\n      layer = layer.parent;\n    }\n    return layer;\n  }\n\n  toString(): string {\n    const className = (this.constructor as typeof Layer).layerName || this.constructor.name;\n    return `${className}({id: '${this.props.id}'})`;\n  }\n\n  // Public API for users\n\n  /** Projects a point with current view state from the current layer's coordinate system to screen */\n  project(xyz: number[]): number[] {\n    assert(this.internalState);\n    const viewport = this.internalState.viewport || this.context.viewport;\n\n    const worldPosition = getWorldPosition(xyz, {\n      viewport,\n      modelMatrix: this.props.modelMatrix,\n      coordinateOrigin: this.props.coordinateOrigin,\n      coordinateSystem: this.props.coordinateSystem\n    });\n    const [x, y, z] = worldToPixels(worldPosition, viewport.pixelProjectionMatrix);\n    return xyz.length === 2 ? [x, y] : [x, y, z];\n  }\n\n  /** Unprojects a screen pixel to the current view's default coordinate system\n      Note: this does not reverse `project`. */\n  unproject(xy: number[]): number[] {\n    assert(this.internalState);\n    const viewport = this.internalState.viewport || this.context.viewport;\n    return viewport.unproject(xy);\n  }\n\n  /** Projects a point with current view state from the current layer's coordinate system to the world space */\n  projectPosition(\n    xyz: number[],\n    params?: {\n      /** The viewport to use */\n      viewport?: Viewport;\n      /** The coordinate system that the supplied position is in. Default to the same as `coordinateSystem`. */\n      fromCoordinateSystem?: CoordinateSystem;\n      /** The coordinate origin that the supplied position is in. Default to the same as `coordinateOrigin`. */\n      fromCoordinateOrigin?: [number, number, number];\n      /** Whether to apply offset mode automatically as does the project shader module.\n       * Offset mode places the origin of the common space at the given viewport's center. It is used in some use cases\n       * to improve precision in the vertex shader due to the fp32 float limitation.\n       * Use `autoOffset:false` if the returned position should not be dependent on the current viewport.\n       * Default `true` */\n      autoOffset?: boolean;\n    }\n  ): [number, number, number] {\n    assert(this.internalState);\n    const viewport = this.internalState.viewport || this.context.viewport;\n\n    return projectPosition(xyz, {\n      viewport,\n      modelMatrix: this.props.modelMatrix,\n      coordinateOrigin: this.props.coordinateOrigin,\n      coordinateSystem: this.props.coordinateSystem,\n      ...params\n    });\n  }\n\n  // Public API for custom layer implementation\n\n  /** `true` if this layer renders other layers */\n  get isComposite(): boolean {\n    return false;\n  }\n\n  /** `true` if the layer renders to screen */\n  get isDrawable(): boolean {\n    return true;\n  }\n\n  /** Updates selected state members and marks the layer for redraw */\n  setState(partialState: any): void {\n    this.setChangeFlags({stateChanged: true});\n    Object.assign(this.state, partialState);\n    this.setNeedsRedraw();\n  }\n\n  /** Sets the redraw flag for this layer, will trigger a redraw next animation frame */\n  setNeedsRedraw(): void {\n    if (this.internalState) {\n      this.internalState.needsRedraw = true;\n    }\n  }\n\n  /** Mark this layer as needs a deep update */\n  setNeedsUpdate() {\n    if (this.internalState) {\n      this.context.layerManager.setNeedsUpdate(String(this));\n      this.internalState.needsUpdate = true;\n    }\n  }\n\n  /** Returns true if all async resources are loaded */\n  get isLoaded(): boolean {\n    return this.internalState ? !this.internalState.isAsyncPropLoading() : false;\n  }\n\n  /** Returns true if using shader-based WGS84 longitude wrapping */\n  get wrapLongitude(): boolean {\n    return this.props.wrapLongitude;\n  }\n\n  /** @deprecated Returns true if the layer is visible in the picking pass */\n  isPickable(): boolean {\n    return this.props.pickable && this.props.visible;\n  }\n\n  /** Returns an array of models used by this layer, can be overriden by layer subclass */\n  getModels(): Model[] {\n    const state = this.state as {\n      models?: Model[];\n      model: Model;\n    };\n    return (state && (state.models || (state.model && [state.model]))) || [];\n  }\n\n  /** Update shader input parameters */\n  setShaderModuleProps(...props: Parameters<Model['shaderInputs']['setProps']>): void {\n    for (const model of this.getModels()) {\n      model.shaderInputs.setProps(...props);\n    }\n  }\n\n  /** Returns the attribute manager of this layer */\n  getAttributeManager(): AttributeManager | null {\n    return this.internalState && this.internalState.attributeManager;\n  }\n\n  /** Returns the most recent layer that matched to this state\n    (When reacting to an async event, this layer may no longer be the latest) */\n  getCurrentLayer(): Layer<PropsT> | null {\n    return this.internalState && this.internalState.layer;\n  }\n\n  /** Returns the default parse options for async props */\n  getLoadOptions(): any {\n    return this.props.loadOptions;\n  }\n\n  use64bitPositions(): boolean {\n    const {coordinateSystem} = this.props;\n    return (\n      coordinateSystem === COORDINATE_SYSTEM.DEFAULT ||\n      coordinateSystem === COORDINATE_SYSTEM.LNGLAT ||\n      coordinateSystem === COORDINATE_SYSTEM.CARTESIAN\n    );\n  }\n\n  // Event handling\n  onHover(info: PickingInfo, pickingEvent): boolean {\n    if (this.props.onHover) {\n      return this.props.onHover(info, pickingEvent) || false;\n    }\n    return false;\n  }\n\n  onClick(info: PickingInfo, pickingEvent): boolean {\n    if (this.props.onClick) {\n      return this.props.onClick(info, pickingEvent) || false;\n    }\n    return false;\n  }\n\n  // Returns the picking color that doesn't match any subfeature\n  // Use if some graphics do not belong to any pickable subfeature\n  // @return {Array} - a black color\n  nullPickingColor() {\n    return [0, 0, 0];\n  }\n\n  // Returns the picking color that doesn't match any subfeature\n  // Use if some graphics do not belong to any pickable subfeature\n  encodePickingColor(i, target: number[] = []): [number, number, number] {\n    target[0] = (i + 1) & 255;\n    target[1] = ((i + 1) >> 8) & 255;\n    target[2] = (((i + 1) >> 8) >> 8) & 255;\n    return target as [number, number, number];\n  }\n\n  // Returns the index corresponding to a picking color that doesn't match any subfeature\n  // @param {Uint8Array} color - color array to be decoded\n  // @return {Array} - the decoded picking color\n  decodePickingColor(color) {\n    assert(color instanceof Uint8Array);\n    const [i1, i2, i3] = color;\n    // 1 was added to seperate from no selection\n    const index = i1 + i2 * 256 + i3 * 65536 - 1;\n    return index;\n  }\n\n  /** Deduces number of instances. Intention is to support:\n    - Explicit setting of numInstances\n    - Auto-deduction for ES6 containers that define a size member\n    - Auto-deduction for Classic Arrays via the built-in length attribute\n    - Auto-deduction via arrays */\n  getNumInstances(): number {\n    // First Check if app has provided an explicit value\n    if (Number.isFinite(this.props.numInstances)) {\n      return this.props.numInstances as number;\n    }\n\n    // Second check if the layer has set its own value\n    if (this.state && this.state.numInstances !== undefined) {\n      return this.state.numInstances as number;\n    }\n\n    // Use container library to get a count for any ES6 container or object\n    return count(this.props.data);\n  }\n\n  /** Buffer layout describes how many attribute values are packed for each data object\n      The default (null) is one value each object.\n      Some data formats (e.g. paths, polygons) have various length. Their buffer layout\n      is in the form of [L0, L1, L2, ...] */\n  getStartIndices(): NumericArray | null {\n    // First Check if startIndices is provided as an explicit value\n    if (this.props.startIndices) {\n      return this.props.startIndices;\n    }\n\n    // Second check if the layer has set its own value\n    if (this.state && this.state.startIndices) {\n      return this.state.startIndices as NumericArray;\n    }\n\n    return null;\n  }\n\n  // Default implementation\n  getBounds(): [number[], number[]] | null {\n    return this.getAttributeManager()?.getBounds(['positions', 'instancePositions']);\n  }\n\n  // / LIFECYCLE METHODS - overridden by the layer subclasses\n\n  /** Called once to set up the initial state. Layers can create WebGL resources here. */\n  abstract initializeState(context: LayerContext): void;\n\n  getShaders(shaders: any): any {\n    shaders = mergeShaders(shaders, {\n      disableWarnings: true,\n      modules: this.context.defaultShaderModules\n    });\n    for (const extension of this.props.extensions) {\n      shaders = mergeShaders(shaders, extension.getShaders.call(this, extension));\n    }\n    return shaders;\n  }\n\n  /** Controls if updateState should be called. By default returns true if any prop has changed */\n  shouldUpdateState(params: UpdateParameters<Layer<PropsT>>): boolean {\n    return params.changeFlags.propsOrDataChanged;\n  }\n\n  /** Default implementation, all attributes will be invalidated and updated when data changes */\n  // eslint-disable-next-line complexity\n  updateState(params: UpdateParameters<Layer<PropsT>>): void {\n    const attributeManager = this.getAttributeManager();\n    const {dataChanged} = params.changeFlags;\n    if (dataChanged && attributeManager) {\n      if (Array.isArray(dataChanged)) {\n        // is partial update\n        for (const dataRange of dataChanged) {\n          attributeManager.invalidateAll(dataRange);\n        }\n      } else {\n        attributeManager.invalidateAll();\n      }\n    }\n\n    // Enable/disable picking buffer\n    if (attributeManager) {\n      const {props} = params;\n      const hasPickingBuffer = this.internalState!.hasPickingBuffer;\n      const needsPickingBuffer =\n        Number.isInteger(props.highlightedObjectIndex) ||\n        props.pickable ||\n        props.extensions.some(extension => extension.getNeedsPickingBuffer.call(this, extension));\n\n      // Only generate picking buffer if needed\n      if (hasPickingBuffer !== needsPickingBuffer) {\n        this.internalState!.hasPickingBuffer = needsPickingBuffer;\n        const {pickingColors, instancePickingColors} = attributeManager.attributes;\n        const pickingColorsAttribute = pickingColors || instancePickingColors;\n        if (pickingColorsAttribute) {\n          if (needsPickingBuffer && pickingColorsAttribute.constant) {\n            pickingColorsAttribute.constant = false;\n            attributeManager.invalidate(pickingColorsAttribute.id);\n          }\n          if (!pickingColorsAttribute.value && !needsPickingBuffer) {\n            pickingColorsAttribute.constant = true;\n            pickingColorsAttribute.value = [0, 0, 0];\n          }\n        }\n      }\n    }\n  }\n\n  /** Called once when layer is no longer matched and state will be discarded. Layers can destroy WebGL resources here. */\n  finalizeState(context: LayerContext): void {\n    for (const model of this.getModels()) {\n      model.destroy();\n    }\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.finalize();\n    }\n    if (this.context) {\n      this.context.resourceManager.unsubscribe({consumerId: this.id});\n    }\n    if (this.internalState) {\n      this.internalState.uniformTransitions.clear();\n      this.internalState.finalize();\n    }\n  }\n\n  // If state has a model, draw it with supplied uniforms\n  draw(opts: DrawOptions) {\n    for (const model of this.getModels()) {\n      model.draw(opts.renderPass);\n    }\n  }\n\n  // called to populate the info object that is passed to the event handler\n  // @return null to cancel event\n  getPickingInfo({info, mode, sourceLayer}: GetPickingInfoParams) {\n    const {index} = info;\n\n    if (index >= 0) {\n      // If props.data is an indexable array, get the object\n      if (Array.isArray(this.props.data)) {\n        info.object = this.props.data[index];\n      }\n    }\n\n    return info;\n  }\n\n  // END LIFECYCLE METHODS\n\n  // / INTERNAL METHODS - called by LayerManager, DeckRenderer and DeckPicker\n\n  /** (Internal) Propagate an error event through the system */\n  raiseError(error: Error, message: string): void {\n    if (message) {\n      // Duplicating error message for backward compatibility, see #7986\n      // TODO - revisit in v9\n      error = new Error(`${message}: ${error.message}`, {cause: error});\n    }\n    if (!this.props.onError?.(error)) {\n      this.context?.onError?.(error, this);\n    }\n  }\n\n  /** (Internal) Checks if this layer needs redraw */\n  getNeedsRedraw(\n    opts: {\n      /** Reset redraw flags to false after the check */\n      clearRedrawFlags: boolean;\n    } = {clearRedrawFlags: false}\n  ): string | false {\n    return this._getNeedsRedraw(opts);\n  }\n\n  /** (Internal) Checks if this layer needs a deep update */\n  needsUpdate(): boolean {\n    if (!this.internalState) {\n      return false;\n    }\n\n    // Call subclass lifecycle method\n    return (\n      this.internalState.needsUpdate ||\n      this.hasUniformTransition() ||\n      this.shouldUpdateState(this._getUpdateParams())\n    );\n    // End lifecycle method\n  }\n\n  /** Checks if this layer has ongoing uniform transition */\n  hasUniformTransition(): boolean {\n    return this.internalState?.uniformTransitions.active || false;\n  }\n\n  /** Called when this layer is rendered into the given viewport */\n  activateViewport(viewport: Viewport): void {\n    if (!this.internalState) {\n      return;\n    }\n\n    const oldViewport = this.internalState.viewport;\n    this.internalState.viewport = viewport;\n\n    if (!oldViewport || !areViewportsEqual({oldViewport, viewport})) {\n      this.setChangeFlags({viewportChanged: true});\n\n      if (this.isComposite) {\n        if (this.needsUpdate()) {\n          // Composite layers may add/remove sublayers on viewport change\n          // Because we cannot change the layers list during a draw cycle, we don't want to update sublayers right away\n          // This will not call update immediately, but mark the layerManager as needs update on the next frame\n          this.setNeedsUpdate();\n        }\n      } else {\n        this._update();\n      }\n    }\n  }\n\n  /** Default implementation of attribute invalidation, can be redefined */\n  protected invalidateAttribute(name = 'all'): void {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager) {\n      return;\n    }\n\n    if (name === 'all') {\n      attributeManager.invalidateAll();\n    } else {\n      attributeManager.invalidate(name);\n    }\n  }\n\n  /** Send updated attributes to the WebGL model */\n  protected updateAttributes(changedAttributes: {[id: string]: Attribute}) {\n    // If some buffer layout changed\n    let bufferLayoutChanged = false;\n    for (const id in changedAttributes) {\n      if (changedAttributes[id].layoutChanged()) {\n        bufferLayoutChanged = true;\n      }\n    }\n\n    for (const model of this.getModels()) {\n      this._setModelAttributes(model, changedAttributes, bufferLayoutChanged);\n    }\n  }\n\n  /** Recalculate any attributes if needed */\n  protected _updateAttributes(): void {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager) {\n      return;\n    }\n    const props = this.props;\n\n    // Figure out data length\n    const numInstances = this.getNumInstances();\n    const startIndices = this.getStartIndices();\n\n    attributeManager.update({\n      data: props.data,\n      numInstances,\n      startIndices,\n      props,\n      transitions: props.transitions,\n      // @ts-ignore (TS2339) property attribute is not present on some acceptable data types\n      buffers: props.data.attributes,\n      context: this\n    });\n\n    const changedAttributes = attributeManager.getChangedAttributes({clearChangedFlags: true});\n    this.updateAttributes(changedAttributes);\n  }\n\n  /** Update attribute transitions. This is called in drawLayer, no model updates required. */\n  private _updateAttributeTransition() {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.updateTransition();\n    }\n  }\n\n  /** Update uniform (prop) transitions. This is called in updateState, may result in model updates. */\n  private _updateUniformTransition(): Layer<PropsT>['props'] {\n    // @ts-ignore (TS2339) internalState is alwasy defined when this method is called\n    const {uniformTransitions} = this.internalState;\n    if (uniformTransitions.active) {\n      // clone props\n      const propsInTransition = uniformTransitions.update();\n      const props = Object.create(this.props);\n      for (const key in propsInTransition) {\n        Object.defineProperty(props, key, {value: propsInTransition[key]});\n      }\n      return props;\n    }\n    return this.props;\n  }\n\n  /** Updater for the automatically populated instancePickingColors attribute */\n  protected calculateInstancePickingColors(\n    attribute: Attribute,\n    {numInstances}: {numInstances: number}\n  ) {\n    if (attribute.constant) {\n      return;\n    }\n\n    // calculateInstancePickingColors always generates the same sequence.\n    // pickingColorCache saves the largest generated sequence for reuse\n    const cacheSize = Math.floor(pickingColorCache.length / 4);\n\n    // Record when using the picking buffer cache, so that layers can always point at the most recently allocated cache\n    // @ts-ignore (TS2531) internalState is always defined when this method is called\n    this.internalState.usesPickingColorCache = true;\n\n    if (cacheSize < numInstances) {\n      if (numInstances > MAX_PICKING_COLOR_CACHE_SIZE) {\n        log.warn(\n          'Layer has too many data objects. Picking might not be able to distinguish all objects.'\n        )();\n      }\n\n      pickingColorCache = typedArrayManager.allocate(pickingColorCache, numInstances, {\n        size: 4,\n        copy: true,\n        maxCount: Math.max(numInstances, MAX_PICKING_COLOR_CACHE_SIZE)\n      });\n\n      // If the attribute is larger than the cache, resize the cache and populate the missing chunk\n      const newCacheSize = Math.floor(pickingColorCache.length / 4);\n      const pickingColor: [number, number, number] = [0, 0, 0];\n      for (let i = cacheSize; i < newCacheSize; i++) {\n        this.encodePickingColor(i, pickingColor);\n        pickingColorCache[i * 4 + 0] = pickingColor[0];\n        pickingColorCache[i * 4 + 1] = pickingColor[1];\n        pickingColorCache[i * 4 + 2] = pickingColor[2];\n        pickingColorCache[i * 4 + 3] = 0;\n      }\n    }\n\n    attribute.value = pickingColorCache.subarray(0, numInstances * 4);\n  }\n\n  /** Apply changed attributes to model */\n  protected _setModelAttributes(\n    model: Model,\n    changedAttributes: {\n      [id: string]: Attribute;\n    },\n    bufferLayoutChanged = false\n  ) {\n    if (!Object.keys(changedAttributes).length) {\n      return;\n    }\n\n    if (bufferLayoutChanged) {\n      // AttributeManager is always defined when this method is called\n      const attributeManager = this.getAttributeManager()!;\n      model.setBufferLayout(attributeManager.getBufferLayouts(model));\n      // All attributes must be reset after buffer layout change\n      changedAttributes = attributeManager.getAttributes();\n    }\n\n    // @ts-ignore luma.gl type issue\n    const excludeAttributes = model.userData?.excludeAttributes || {};\n    const attributeBuffers: Record<string, Buffer> = {};\n    const constantAttributes: Record<string, TypedArray> = {};\n\n    for (const name in changedAttributes) {\n      if (excludeAttributes[name]) {\n        continue;\n      }\n      const values = changedAttributes[name].getValue();\n      for (const attributeName in values) {\n        const value = values[attributeName];\n        if (value instanceof Buffer) {\n          if (changedAttributes[name].settings.isIndexed) {\n            model.setIndexBuffer(value);\n          } else {\n            attributeBuffers[attributeName] = value;\n          }\n        } else if (value) {\n          constantAttributes[attributeName] = value;\n        }\n      }\n    }\n    // TODO - update buffer map?\n    model.setAttributes(attributeBuffers);\n    model.setConstantAttributes(constantAttributes);\n  }\n\n  /** (Internal) Sets the picking color at the specified index to null picking color. Used for multi-depth picking.\n     This method may be overriden by layer implementations */\n  disablePickingIndex(objectIndex: number) {\n    const data = this.props.data as LayerData<any>;\n    if (!('attributes' in data)) {\n      this._disablePickingIndex(objectIndex);\n      return;\n    }\n\n    // @ts-ignore (TS2531) this method is only called internally with attributeManager defined\n    const {pickingColors, instancePickingColors} = this.getAttributeManager().attributes;\n    const colors = pickingColors || instancePickingColors;\n    const externalColorAttribute =\n      colors && data.attributes && (data.attributes[colors.id] as BinaryAttribute);\n    if (externalColorAttribute && externalColorAttribute.value) {\n      const values = externalColorAttribute.value;\n      const objectColor = this.encodePickingColor(objectIndex);\n      for (let index = 0; index < data.length; index++) {\n        const i = colors.getVertexOffset(index);\n        if (\n          values[i] === objectColor[0] &&\n          values[i + 1] === objectColor[1] &&\n          values[i + 2] === objectColor[2]\n        ) {\n          this._disablePickingIndex(index);\n        }\n      }\n    } else {\n      this._disablePickingIndex(objectIndex);\n    }\n  }\n\n  // TODO - simplify subclassing interface\n  protected _disablePickingIndex(objectIndex: number): void {\n    // @ts-ignore (TS2531) this method is only called internally with attributeManager defined\n    const {pickingColors, instancePickingColors} = this.getAttributeManager().attributes;\n    const colors = pickingColors || instancePickingColors;\n    if (!colors) {\n      return;\n    }\n\n    const start = colors.getVertexOffset(objectIndex);\n    const end = colors.getVertexOffset(objectIndex + 1);\n\n    // Fill the sub buffer with 0s, 1 byte per element\n    colors.buffer.write(new Uint8Array(end - start), start);\n  }\n\n  /** (Internal) Re-enable all picking indices after multi-depth picking */\n  restorePickingColors(): void {\n    // @ts-ignore (TS2531) this method is only called internally with attributeManager defined\n    const {pickingColors, instancePickingColors} = this.getAttributeManager().attributes;\n    const colors = pickingColors || instancePickingColors;\n    if (!colors) {\n      return;\n    }\n    // The picking color cache may have been freed and then reallocated. This ensures we read from the currently allocated cache.\n    if (\n      // @ts-ignore (TS2531) this method is only called internally with internalState defined\n      this.internalState.usesPickingColorCache &&\n      (colors.value as Uint8ClampedArray).buffer !== pickingColorCache.buffer\n    ) {\n      colors.value = pickingColorCache.subarray(0, (colors.value as Uint8ClampedArray).length);\n    }\n    colors.updateSubBuffer({startOffset: 0});\n  }\n\n  /* eslint-disable max-statements */\n  /* (Internal) Called by layer manager when a new layer is found */\n  _initialize() {\n    assert(!this.internalState); // finalized layer cannot be reused\n    assert(Number.isFinite(this.props.coordinateSystem)); // invalid coordinateSystem\n\n    debug(TRACE_INITIALIZE, this);\n\n    const attributeManager = this._getAttributeManager();\n\n    if (attributeManager) {\n      // All instanced layers get instancePickingColors attribute by default\n      // Their shaders can use it to render a picking scene\n      // TODO - this slightly slows down non instanced layers\n      attributeManager.addInstanced({\n        instancePickingColors: {\n          type: 'uint8',\n          size: 4,\n          noAlloc: true,\n          // Updaters are always called with `this` pointing to the layer\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          update: this.calculateInstancePickingColors\n        }\n      });\n    }\n\n    this.internalState = new LayerState<this>({\n      attributeManager,\n      layer: this\n    });\n    this._clearChangeFlags(); // populate this.internalState.changeFlags\n\n    this.state = {};\n    // for backwards compatibility with older layers\n    // TODO - remove in next release\n    /* eslint-disable accessor-pairs */\n    Object.defineProperty(this.state, 'attributeManager', {\n      get: () => {\n        log.deprecated('layer.state.attributeManager', 'layer.getAttributeManager()')();\n        return attributeManager;\n      }\n    });\n    /* eslint-enable accessor-pairs */\n\n    this.internalState.uniformTransitions = new UniformTransitionManager(this.context.timeline);\n    this.internalState.onAsyncPropUpdated = this._onAsyncPropUpdated.bind(this);\n\n    // Ensure any async props are updated\n    this.internalState.setAsyncProps(this.props);\n\n    // Call subclass lifecycle methods\n    this.initializeState(this.context);\n\n    // Initialize extensions\n    for (const extension of this.props.extensions) {\n      extension.initializeState.call(this, this.context, extension);\n    }\n    // End subclass lifecycle methods\n\n    // initializeState callback tends to clear state\n    this.setChangeFlags({\n      dataChanged: 'init',\n      propsChanged: 'init',\n      viewportChanged: true,\n      extensionsChanged: true\n    });\n\n    this._update();\n  }\n\n  /** (Internal) Called by layer manager to transfer state from an old layer */\n  _transferState(oldLayer: Layer<PropsT>): void {\n    debug(TRACE_MATCHED, this, this === oldLayer);\n\n    const {state, internalState} = oldLayer;\n\n    if (this === oldLayer) {\n      return;\n    }\n\n    // Move internalState\n    this.internalState = internalState as LayerState<this>;\n\n    // Move state\n    this.state = state;\n    // We keep the state ref on old layers to support async actions\n    // oldLayer.state = null;\n\n    // Ensure any async props are updated\n    this.internalState.setAsyncProps(this.props);\n\n    this._diffProps(this.props, this.internalState.getOldProps() as Layer<PropsT>['props']);\n  }\n\n  /** (Internal) Called by layer manager when a new layer is added or an existing layer is matched with a new instance */\n  _update(): void {\n    // Call subclass lifecycle method\n    const stateNeedsUpdate = this.needsUpdate();\n    // End lifecycle method\n    debug(TRACE_UPDATE, this, stateNeedsUpdate);\n\n    if (!stateNeedsUpdate) {\n      return;\n    }\n\n    const currentProps = this.props;\n    const context = this.context;\n    const internalState = this.internalState as LayerState<this>;\n\n    const currentViewport = context.viewport;\n    const propsInTransition = this._updateUniformTransition();\n    internalState.propsInTransition = propsInTransition;\n    // Overwrite this.context.viewport during update to use the last activated viewport on this layer\n    // In multi-view applications, a layer may only be drawn in one of the views\n    // Which would make the \"active\" viewport different from the shared context\n    context.viewport = internalState.viewport || currentViewport;\n    // Overwrite this.props during update to use in-transition prop values\n    this.props = propsInTransition;\n\n    try {\n      const updateParams = this._getUpdateParams();\n      const oldModels = this.getModels();\n\n      // Safely call subclass lifecycle methods\n      if (context.device) {\n        this.updateState(updateParams);\n      } else {\n        try {\n          this.updateState(updateParams);\n        } catch (error) {\n          // ignore error if gl context is missing\n        }\n      }\n      // Execute extension updates\n      for (const extension of this.props.extensions) {\n        extension.updateState.call(this, updateParams, extension);\n      }\n\n      this.setNeedsRedraw();\n      // Check if attributes need recalculation\n      this._updateAttributes();\n\n      const modelChanged = this.getModels()[0] !== oldModels[0];\n      this._postUpdate(updateParams, modelChanged);\n      // End subclass lifecycle methods\n    } finally {\n      // Restore shared context\n      context.viewport = currentViewport;\n      this.props = currentProps;\n      this._clearChangeFlags();\n      internalState.needsUpdate = false;\n      internalState.resetOldProps();\n    }\n  }\n  /* eslint-enable max-statements */\n\n  /** (Internal) Called by manager when layer is about to be disposed \n      Note: not guaranteed to be called on application shutdown */\n  _finalize(): void {\n    debug(TRACE_FINALIZE, this);\n\n    // Call subclass lifecycle method\n    this.finalizeState(this.context);\n    // Finalize extensions\n    for (const extension of this.props.extensions) {\n      extension.finalizeState.call(this, this.context, extension);\n    }\n  }\n\n  // Calculates uniforms\n  _drawLayer({\n    renderPass,\n    shaderModuleProps = null,\n    uniforms = {},\n    parameters = {}\n  }: {\n    renderPass: RenderPass;\n    shaderModuleProps: any;\n    uniforms: any;\n    parameters: LumaParameters;\n  }): void {\n    this._updateAttributeTransition();\n\n    const currentProps = this.props;\n    const context = this.context;\n    // Overwrite this.props during redraw to use in-transition prop values\n    // `internalState.propsInTransition` could be missing if `updateState` failed\n    // @ts-ignore (TS2339) internalState is alwasy defined when this method is called\n    this.props = this.internalState.propsInTransition || currentProps;\n\n    try {\n      // TODO/ib - hack move to luma Model.draw\n      if (shaderModuleProps) {\n        this.setShaderModuleProps(shaderModuleProps);\n      }\n\n      // Apply polygon offset to avoid z-fighting\n      // TODO - move to draw-layers\n      const {getPolygonOffset} = this.props;\n      const offsets = (getPolygonOffset && getPolygonOffset(uniforms)) || [0, 0];\n\n      if (context.device instanceof WebGLDevice) {\n        context.device.setParametersWebGL({polygonOffset: offsets});\n      }\n\n      for (const model of this.getModels()) {\n        if (model.device.type === 'webgpu') {\n          // TODO(ibgreen): model.setParameters currently wipes parameters. Semantics TBD.\n          model.setParameters({...model.parameters, ...parameters});\n        } else {\n          model.setParameters(parameters);\n        }\n      }\n\n      // Call subclass lifecycle method\n      if (context.device instanceof WebGLDevice) {\n        context.device.withParametersWebGL(parameters, () => {\n          const opts: DrawOptions = {renderPass, shaderModuleProps, uniforms, parameters, context};\n\n          // extensions\n          for (const extension of this.props.extensions) {\n            extension.draw.call(this, opts, extension);\n          }\n\n          this.draw(opts);\n        });\n      } else {\n        const opts: DrawOptions = {renderPass, shaderModuleProps, uniforms, parameters, context};\n\n        // extensions\n        for (const extension of this.props.extensions) {\n          extension.draw.call(this, opts, extension);\n        }\n\n        this.draw(opts);\n      }\n    } finally {\n      this.props = currentProps;\n    }\n\n    // End lifecycle method\n  }\n\n  // Helper methods\n  /** Returns the current change flags */\n  getChangeFlags(): ChangeFlags | undefined {\n    return this.internalState?.changeFlags;\n  }\n\n  /* eslint-disable complexity */\n  /** Dirty some change flags, will be handled by updateLayer */\n  setChangeFlags(flags: Partial<ChangeFlags>): void {\n    if (!this.internalState) {\n      return;\n    }\n    const {changeFlags} = this.internalState;\n\n    /* eslint-disable no-fallthrough, max-depth */\n    for (const key in flags) {\n      if (flags[key]) {\n        let flagChanged = false;\n        switch (key) {\n          case 'dataChanged':\n            // changeFlags.dataChanged may be `false`, a string (reason) or an array of ranges\n            const dataChangedReason = flags[key];\n            const prevDataChangedReason = changeFlags[key];\n            if (dataChangedReason && Array.isArray(prevDataChangedReason)) {\n              // Merge partial updates\n              changeFlags.dataChanged = Array.isArray(dataChangedReason)\n                ? prevDataChangedReason.concat(dataChangedReason)\n                : dataChangedReason;\n              flagChanged = true;\n            }\n\n          default:\n            if (!changeFlags[key]) {\n              changeFlags[key] = flags[key];\n              flagChanged = true;\n            }\n        }\n        if (flagChanged) {\n          debug(TRACE_CHANGE_FLAG, this, key, flags);\n        }\n      }\n    }\n    /* eslint-enable no-fallthrough, max-depth */\n\n    // Update composite flags\n    const propsOrDataChanged = Boolean(\n      changeFlags.dataChanged ||\n        changeFlags.updateTriggersChanged ||\n        changeFlags.propsChanged ||\n        changeFlags.extensionsChanged\n    );\n    changeFlags.propsOrDataChanged = propsOrDataChanged;\n    changeFlags.somethingChanged =\n      propsOrDataChanged || changeFlags.viewportChanged || changeFlags.stateChanged;\n  }\n  /* eslint-enable complexity */\n\n  /** Clear all changeFlags, typically after an update */\n  private _clearChangeFlags(): void {\n    // @ts-ignore TS2531 this method can only be called internally with internalState assigned\n    this.internalState.changeFlags = {\n      dataChanged: false,\n      propsChanged: false,\n      updateTriggersChanged: false,\n      viewportChanged: false,\n      stateChanged: false,\n      extensionsChanged: false,\n      propsOrDataChanged: false,\n      somethingChanged: false\n    };\n  }\n\n  /** Compares the layers props with old props from a matched older layer\n      and extracts change flags that describe what has change so that state\n      can be update correctly with minimal effort */\n  private _diffProps(newProps: Layer<PropsT>['props'], oldProps: Layer<PropsT>['props']) {\n    const changeFlags = diffProps(newProps, oldProps);\n\n    // iterate over changedTriggers\n    if (changeFlags.updateTriggersChanged) {\n      for (const key in changeFlags.updateTriggersChanged) {\n        if (changeFlags.updateTriggersChanged[key]) {\n          this.invalidateAttribute(key);\n        }\n      }\n    }\n\n    // trigger uniform transitions\n    if (changeFlags.transitionsChanged) {\n      for (const key in changeFlags.transitionsChanged) {\n        // prop changed and transition is enabled\n        // @ts-ignore (TS2531) internalState is always defined when this method is called\n        this.internalState.uniformTransitions.add(\n          key,\n          oldProps[key],\n          newProps[key],\n          newProps.transitions?.[key]\n        );\n      }\n    }\n\n    return this.setChangeFlags(changeFlags);\n  }\n\n  /** (Internal) called by layer manager to perform extra props validation (in development only) */\n  validateProps(): void {\n    validateProps(this.props);\n  }\n\n  /** (Internal) Called by deck picker when the hovered object changes to update the auto highlight */\n  updateAutoHighlight(info: PickingInfo): void {\n    if (this.props.autoHighlight && !Number.isInteger(this.props.highlightedObjectIndex)) {\n      this._updateAutoHighlight(info);\n    }\n  }\n\n  // May be overriden by subclasses\n\n  // TODO - simplify subclassing interface\n  /** Update picking module parameters to highlight the hovered object */\n  protected _updateAutoHighlight(info: PickingInfo): void {\n    const picking: PickingProps = {\n      // @ts-ignore\n      highlightedObjectColor: info.picked ? info.color : null\n    };\n    const {highlightColor} = this.props;\n    if (info.picked && typeof highlightColor === 'function') {\n      // @ts-ignore\n      picking.highlightColor = highlightColor(info);\n    }\n    this.setShaderModuleProps({picking});\n    // setShaderModuleProps does not trigger redraw\n    this.setNeedsRedraw();\n  }\n\n  /** Create new attribute manager */\n  protected _getAttributeManager(): AttributeManager | null {\n    const context = this.context;\n    return new AttributeManager(context.device, {\n      id: this.props.id,\n      stats: context.stats,\n      timeline: context.timeline\n    });\n  }\n\n  // Private methods\n\n  /** Called after updateState to perform common tasks */\n  protected _postUpdate(updateParams: UpdateParameters<Layer<PropsT>>, forceUpdate: boolean) {\n    const {props, oldProps} = updateParams;\n\n    // Note: Automatic instance count update only works for single layers\n    const model = this.state.model as Model | undefined;\n    if (model?.isInstanced) {\n      model.setInstanceCount(this.getNumInstances());\n    }\n\n    // Set picking module parameters to match props\n    const {autoHighlight, highlightedObjectIndex, highlightColor} = props;\n    if (\n      forceUpdate ||\n      oldProps.autoHighlight !== autoHighlight ||\n      oldProps.highlightedObjectIndex !== highlightedObjectIndex ||\n      oldProps.highlightColor !== highlightColor\n    ) {\n      const picking: PickingProps = {};\n\n      if (Array.isArray(highlightColor)) {\n        picking.highlightColor = highlightColor as [number, number, number];\n      }\n\n      // highlightedObjectIndex will overwrite any settings from auto highlighting.\n      // Do not reset unless the value has changed.\n      if (\n        forceUpdate ||\n        oldProps.autoHighlight !== autoHighlight ||\n        highlightedObjectIndex !== oldProps.highlightedObjectIndex\n      ) {\n        picking.highlightedObjectColor =\n          Number.isFinite(highlightedObjectIndex) && (highlightedObjectIndex as number) >= 0\n            ? this.encodePickingColor(highlightedObjectIndex)\n            : null;\n      }\n\n      this.setShaderModuleProps({picking});\n    }\n  }\n\n  private _getUpdateParams(): UpdateParameters<Layer<PropsT>> {\n    return {\n      props: this.props,\n      // @ts-ignore TS2531 this method can only be called internally with internalState assigned\n      oldProps: this.internalState.getOldProps() as PropsT,\n      context: this.context,\n      // @ts-ignore TS2531 this method can only be called internally with internalState assigned\n      changeFlags: this.internalState.changeFlags\n    };\n  }\n\n  /** Checks state of attributes and model */\n  private _getNeedsRedraw(opts: {clearRedrawFlags: boolean}): string | false {\n    // this method may be called by the render loop as soon a the layer\n    // has been created, so guard against uninitialized state\n    if (!this.internalState) {\n      return false;\n    }\n\n    let redraw: string | false = false;\n    redraw = redraw || (this.internalState.needsRedraw && this.id);\n\n    // TODO - is attribute manager needed? - Model should be enough.\n    const attributeManager = this.getAttributeManager();\n    const attributeManagerNeedsRedraw = attributeManager\n      ? attributeManager.getNeedsRedraw(opts)\n      : false;\n    redraw = redraw || attributeManagerNeedsRedraw;\n\n    if (redraw) {\n      for (const extension of this.props.extensions) {\n        extension.onNeedsRedraw.call(this, extension);\n      }\n    }\n\n    this.internalState.needsRedraw = this.internalState.needsRedraw && !opts.clearRedrawFlags;\n    return redraw;\n  }\n\n  /** Callback when asyn prop is loaded */\n  private _onAsyncPropUpdated(): void {\n    // @ts-ignore TS2531 this method can only be called internally with internalState assigned\n    this._diffProps(this.props, this.internalState.getOldProps());\n    this.setNeedsUpdate();\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport Layer, {UpdateParameters} from './layer';\nimport debug from '../debug/index';\nimport {flatten} from '../utils/flatten';\n\nimport type AttributeManager from './attribute/attribute-manager';\nimport type {PickingInfo, GetPickingInfoParams} from './picking/pick-info';\nimport type {FilterContext} from '../passes/layers-pass';\nimport type {LayersList, LayerContext} from './layer-manager';\nimport type {CompositeLayerProps, Accessor, AccessorContext} from '../types/layer-props';\nimport {ConstructorOf} from '../types/types';\nimport {PROP_TYPES_SYMBOL} from '../lifecycle/constants';\n\nconst TRACE_RENDER_LAYERS = 'compositeLayer.renderLayers';\n\nexport default abstract class CompositeLayer<PropsT extends {} = {}> extends Layer<\n  PropsT & Required<CompositeLayerProps>\n> {\n  static layerName: string = 'CompositeLayer';\n\n  /** `true` if this layer renders other layers */\n  get isComposite(): boolean {\n    return true;\n  }\n\n  /** `true` if the layer renders to screen */\n  get isDrawable(): boolean {\n    return false;\n  }\n\n  /** Returns true if all async resources are loaded */\n  get isLoaded(): boolean {\n    return super.isLoaded && this.getSubLayers().every(layer => layer.isLoaded);\n  }\n\n  /** Return last rendered sub layers */\n  getSubLayers(): Layer[] {\n    return (this.internalState && this.internalState.subLayers) || [];\n  }\n\n  // initializeState is usually not needed for composite layers\n  // Provide empty definition to disable check for missing definition\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  initializeState(context: LayerContext): void {}\n\n  /** Updates selected state members and marks the composite layer to need rerender */\n  setState(updateObject: any): void {\n    super.setState(updateObject);\n    // Trigger a layer update\n    // Although conceptually layer.draw and compositeLayer.renderLayers are equivalent,\n    // they are executed during different lifecycles.\n    // draw can be called without calling updateState (e.g. most viewport changes),\n    // while renderLayers can only be called during a recursive layer update.\n    this.setNeedsUpdate();\n  }\n\n  /** called to augment the info object that is bubbled up from a sublayer\n      override Layer.getPickingInfo() because decoding / setting uniform do\n      not apply to a composite layer. */\n  getPickingInfo({info}: GetPickingInfoParams): PickingInfo {\n    const {object} = info;\n    const isDataWrapped =\n      object && object.__source && object.__source.parent && object.__source.parent.id === this.id;\n\n    if (!isDataWrapped) {\n      return info;\n    }\n\n    // override object with picked data\n    info.object = object.__source.object;\n    info.index = object.__source.index;\n\n    return info;\n  }\n\n  // Implement to generate subLayers\n  abstract renderLayers(): Layer | null | LayersList;\n\n  /**\n   * Filters sub layers at draw time. Return true if the sub layer should be drawn.\n   */\n  filterSubLayer(context: FilterContext): boolean {\n    return true;\n  }\n\n  /** Returns true if sub layer needs to be rendered */\n  protected shouldRenderSubLayer(subLayerId: string, data: any): boolean {\n    return data && data.length;\n  }\n\n  /** Returns sub layer class for a specific sublayer */\n  protected getSubLayerClass<T extends Layer>(\n    subLayerId: string,\n    DefaultLayerClass: ConstructorOf<T>\n  ): ConstructorOf<T> {\n    const {_subLayerProps: overridingProps} = this.props;\n\n    return (\n      (overridingProps &&\n        overridingProps[subLayerId] &&\n        (overridingProps[subLayerId].type as ConstructorOf<T>)) ||\n      DefaultLayerClass\n    );\n  }\n\n  /** When casting user data into another format to pass to sublayers,\n      add reference to the original object and object index */\n  protected getSubLayerRow<T>(row: T, sourceObject: any, sourceObjectIndex: number): T {\n    // @ts-ignore (TS2339) adding undefined property\n    row.__source = {\n      parent: this,\n      object: sourceObject,\n      index: sourceObjectIndex\n    };\n    return row;\n  }\n\n  /** Some composite layers cast user data into another format before passing to sublayers\n    We need to unwrap them before calling the accessor so that they see the original data\n    objects */\n  protected getSubLayerAccessor<In, Out>(accessor: Accessor<In, Out>): Accessor<In, Out> {\n    if (typeof accessor === 'function') {\n      const objectInfo: AccessorContext<In> = {\n        index: -1,\n        // @ts-ignore accessing resolved data\n        data: this.props.data,\n        target: []\n      };\n      return (x: any, i: AccessorContext<In>) => {\n        if (x && x.__source) {\n          objectInfo.index = x.__source.index;\n          // @ts-ignore (TS2349) Out is never a function\n          return accessor(x.__source.object as In, objectInfo);\n        }\n        // @ts-ignore (TS2349) Out is never a function\n        return accessor(x as In, i);\n      };\n    }\n    return accessor;\n  }\n\n  /** Returns sub layer props for a specific sublayer */\n  // eslint-disable-next-line complexity\n  protected getSubLayerProps(\n    sublayerProps: {\n      id?: string;\n      updateTriggers?: Record<string, any>;\n      [propName: string]: any;\n    } = {}\n  ): any {\n    const {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      fetch,\n      operation,\n      _subLayerProps: overridingProps\n    } = this.props;\n    const newProps = {\n      id: '',\n      updateTriggers: {},\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      fetch,\n      operation\n    };\n\n    const overridingSublayerProps =\n      overridingProps && sublayerProps.id && overridingProps[sublayerProps.id];\n    const overridingSublayerTriggers =\n      overridingSublayerProps && overridingSublayerProps.updateTriggers;\n    const sublayerId = sublayerProps.id || 'sublayer';\n\n    if (overridingSublayerProps) {\n      const propTypes = this.props[PROP_TYPES_SYMBOL];\n      const subLayerPropTypes = sublayerProps.type ? sublayerProps.type._propTypes : {};\n      for (const key in overridingSublayerProps) {\n        const propType = subLayerPropTypes[key] || propTypes[key];\n        // eslint-disable-next-line\n        if (propType && propType.type === 'accessor') {\n          overridingSublayerProps[key] = this.getSubLayerAccessor(overridingSublayerProps[key]);\n        }\n      }\n    }\n\n    Object.assign(\n      newProps,\n      sublayerProps,\n      // experimental feature that allows users to override sublayer props via parent layer prop\n      overridingSublayerProps\n    );\n    newProps.id = `${this.props.id}-${sublayerId}`;\n    newProps.updateTriggers = {\n      all: this.props.updateTriggers?.all,\n      ...sublayerProps.updateTriggers,\n      ...overridingSublayerTriggers\n    };\n\n    // Pass through extension props\n    // @ts-ignore (TS2532) extensions is always defined after merging with default props\n    for (const extension of extensions) {\n      const passThroughProps = extension.getSubLayerProps.call(this, extension);\n      if (passThroughProps) {\n        Object.assign(newProps, passThroughProps, {\n          updateTriggers: Object.assign(newProps.updateTriggers, passThroughProps.updateTriggers)\n        });\n      }\n    }\n\n    return newProps;\n  }\n\n  /** Update sub layers to highlight the hovered object */\n  protected _updateAutoHighlight(info: PickingInfo): void {\n    for (const layer of this.getSubLayers()) {\n      layer.updateAutoHighlight(info);\n    }\n  }\n\n  /** Override base Layer method */\n  protected _getAttributeManager(): AttributeManager | null {\n    return null;\n  }\n\n  /** (Internal) Called after an update to rerender sub layers */\n  protected _postUpdate(updateParams: UpdateParameters<this>, forceUpdate: boolean) {\n    // @ts-ignore (TS2531) this method is only called internally when internalState is defined\n    let subLayers = this.internalState.subLayers as Layer[];\n    const shouldUpdate = !subLayers || this.needsUpdate();\n    if (shouldUpdate) {\n      const subLayersList = this.renderLayers();\n      // Flatten the returned array, removing any null, undefined or false\n      // this allows layers to render sublayers conditionally\n      // (see CompositeLayer.renderLayers docs)\n      subLayers = flatten(subLayersList, Boolean) as Layer[];\n      // @ts-ignore (TS2531) this method is only called internally when internalState is defined\n      this.internalState.subLayers = subLayers;\n    }\n    debug(TRACE_RENDER_LAYERS, this, shouldUpdate, subLayers);\n\n    // populate reference to parent layer (this layer)\n    // NOTE: needs to be done even when reusing layers as the parent may have changed\n    for (const layer of subLayers) {\n      layer.parent = this;\n    }\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Matrix4} from '@math.gl/core';\nimport Viewport from './viewport';\nimport {PROJECTION_MODE} from '../lib/constants';\nimport {altitudeToFovy, fovyToAltitude} from '@math.gl/web-mercator';\nimport {MAX_LATITUDE} from '@math.gl/web-mercator';\n\nimport {vec3, vec4} from '@math.gl/core';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\nconst RADIANS_TO_DEGREES = 180 / Math.PI;\nconst EARTH_RADIUS = 6370972;\nconst GLOBE_RADIUS = 256;\n\nfunction getDistanceScales() {\n  const unitsPerMeter = GLOBE_RADIUS / EARTH_RADIUS;\n  const unitsPerDegree = (Math.PI / 180) * GLOBE_RADIUS;\n\n  return {\n    unitsPerMeter: [unitsPerMeter, unitsPerMeter, unitsPerMeter],\n    unitsPerMeter2: [0, 0, 0],\n    metersPerUnit: [1 / unitsPerMeter, 1 / unitsPerMeter, 1 / unitsPerMeter],\n    unitsPerDegree: [unitsPerDegree, unitsPerDegree, unitsPerMeter],\n    unitsPerDegree2: [0, 0, 0],\n    degreesPerUnit: [1 / unitsPerDegree, 1 / unitsPerDegree, 1 / unitsPerMeter]\n  };\n}\n\nexport type GlobeViewportOptions = {\n  /** Name of the viewport */\n  id?: string;\n  /** Left offset from the canvas edge, in pixels */\n  x?: number;\n  /** Top offset from the canvas edge, in pixels */\n  y?: number;\n  /** Viewport width in pixels */\n  width?: number;\n  /** Viewport height in pixels */\n  height?: number;\n  /** Longitude in degrees */\n  longitude?: number;\n  /** Latitude in degrees */\n  latitude?: number;\n  /** Camera altitude relative to the viewport height, used to control the FOV. Default `1.5` */\n  altitude?: number;\n  /* Meter offsets of the viewport center from lng, lat, elevation */\n  position?: number[];\n  /** Zoom level */\n  zoom?: number;\n  /** Use orthographic projection */\n  orthographic?: boolean;\n  /** Camera fovy in degrees. If provided, overrides `altitude` */\n  fovy?: number;\n  /** Scaler for the near plane, 1 unit equals to the height of the viewport. Default `0.5` */\n  nearZMultiplier?: number;\n  /** Scaler for the far plane, 1 unit equals to the distance from the camera to the edge of the screen. Default `1` */\n  farZMultiplier?: number;\n  /** Optionally override the near plane position. `nearZMultiplier` is ignored if `nearZ` is supplied. */\n  nearZ?: number;\n  /** Optionally override the far plane position. `farZMultiplier` is ignored if `farZ` is supplied. */\n  farZ?: number;\n  /** The resolution at which to turn flat features into 3D meshes, in degrees. Smaller numbers will generate more detailed mesh. Default `10` */\n  resolution?: number;\n};\n\nexport default class GlobeViewport extends Viewport {\n  longitude!: number;\n  latitude!: number;\n  resolution!: number;\n\n  constructor(opts: GlobeViewportOptions = {}) {\n    const {\n      longitude = 0,\n      zoom = 0,\n      // Matches Maplibre defaults\n      // https://github.com/maplibre/maplibre-gl-js/blob/f8ab4b48d59ab8fe7b068b102538793bbdd4c848/src/geo/projection/globe_transform.ts#L632-L633\n      nearZMultiplier = 0.5,\n      farZMultiplier = 1,\n      resolution = 10\n    } = opts;\n\n    let {latitude = 0, height, altitude = 1.5, fovy} = opts;\n\n    // Clamp to web mercator limit to prevent bad inputs\n    latitude = Math.max(Math.min(latitude, MAX_LATITUDE), -MAX_LATITUDE);\n\n    height = height || 1;\n    if (fovy) {\n      altitude = fovyToAltitude(fovy);\n    } else {\n      fovy = altitudeToFovy(altitude);\n    }\n    // Exagerate distance by latitude to match the Web Mercator distortion\n    // The goal is that globe and web mercator projection results converge at high zoom\n    // https://github.com/maplibre/maplibre-gl-js/blob/f8ab4b48d59ab8fe7b068b102538793bbdd4c848/src/geo/projection/globe_transform.ts#L575-L577\n    const scaleAdjust = 1 / Math.PI / Math.cos((latitude * Math.PI) / 180);\n    const scale = Math.pow(2, zoom) * scaleAdjust;\n    const nearZ = opts.nearZ ?? nearZMultiplier;\n    const farZ = opts.farZ ?? (altitude + (GLOBE_RADIUS * 2 * scale) / height) * farZMultiplier;\n\n    // Calculate view matrix\n    const viewMatrix = new Matrix4().lookAt({eye: [0, -altitude, 0], up: [0, 0, 1]});\n    viewMatrix.rotateX(latitude * DEGREES_TO_RADIANS);\n    viewMatrix.rotateZ(-longitude * DEGREES_TO_RADIANS);\n    viewMatrix.scale(scale / height);\n\n    super({\n      ...opts,\n      // x, y, width,\n      height,\n\n      // view matrix\n      viewMatrix,\n      longitude,\n      latitude,\n      zoom,\n\n      // projection matrix parameters\n      distanceScales: getDistanceScales(),\n      fovy,\n      focalDistance: altitude,\n      near: nearZ,\n      far: farZ\n    });\n\n    this.scale = scale;\n    this.latitude = latitude;\n    this.longitude = longitude;\n    this.resolution = resolution;\n  }\n\n  get projectionMode() {\n    return PROJECTION_MODE.GLOBE;\n  }\n\n  getDistanceScales() {\n    return this.distanceScales;\n  }\n\n  getBounds(options: {z?: number} = {}): [number, number, number, number] {\n    const unprojectOption = {targetZ: options.z || 0};\n\n    const left = this.unproject([0, this.height / 2], unprojectOption);\n    const top = this.unproject([this.width / 2, 0], unprojectOption);\n    const right = this.unproject([this.width, this.height / 2], unprojectOption);\n    const bottom = this.unproject([this.width / 2, this.height], unprojectOption);\n\n    if (right[0] < this.longitude) right[0] += 360;\n    if (left[0] > this.longitude) left[0] -= 360;\n\n    return [\n      Math.min(left[0], right[0], top[0], bottom[0]),\n      Math.min(left[1], right[1], top[1], bottom[1]),\n      Math.max(left[0], right[0], top[0], bottom[0]),\n      Math.max(left[1], right[1], top[1], bottom[1])\n    ];\n  }\n\n  unproject(\n    xyz: number[],\n    {topLeft = true, targetZ}: {topLeft?: boolean; targetZ?: number} = {}\n  ): number[] {\n    const [x, y, z] = xyz;\n\n    const y2 = topLeft ? y : this.height - y;\n    const {pixelUnprojectionMatrix} = this;\n\n    let coord;\n    if (Number.isFinite(z)) {\n      // Has depth component\n      coord = transformVector(pixelUnprojectionMatrix, [x, y2, z, 1]);\n    } else {\n      // since we don't know the correct projected z value for the point,\n      // unproject two points to get a line and then find the point on that line that intersects with the sphere\n      const coord0 = transformVector(pixelUnprojectionMatrix, [x, y2, -1, 1]);\n      const coord1 = transformVector(pixelUnprojectionMatrix, [x, y2, 1, 1]);\n\n      const lt = ((targetZ || 0) / EARTH_RADIUS + 1) * GLOBE_RADIUS;\n      const lSqr = vec3.sqrLen(vec3.sub([], coord0, coord1));\n      const l0Sqr = vec3.sqrLen(coord0);\n      const l1Sqr = vec3.sqrLen(coord1);\n      const sSqr = (4 * l0Sqr * l1Sqr - (lSqr - l0Sqr - l1Sqr) ** 2) / 16;\n      const dSqr = (4 * sSqr) / lSqr;\n      const r0 = Math.sqrt(l0Sqr - dSqr);\n      const dr = Math.sqrt(Math.max(0, lt * lt - dSqr));\n      const t = (r0 - dr) / Math.sqrt(lSqr);\n\n      coord = vec3.lerp([], coord0, coord1, t);\n    }\n    const [X, Y, Z] = this.unprojectPosition(coord);\n\n    if (Number.isFinite(z)) {\n      return [X, Y, Z];\n    }\n    return Number.isFinite(targetZ) ? [X, Y, targetZ as number] : [X, Y];\n  }\n\n  projectPosition(xyz: number[]): [number, number, number] {\n    const [lng, lat, Z = 0] = xyz;\n    const lambda = lng * DEGREES_TO_RADIANS;\n    const phi = lat * DEGREES_TO_RADIANS;\n    const cosPhi = Math.cos(phi);\n    const D = (Z / EARTH_RADIUS + 1) * GLOBE_RADIUS;\n\n    return [Math.sin(lambda) * cosPhi * D, -Math.cos(lambda) * cosPhi * D, Math.sin(phi) * D];\n  }\n\n  unprojectPosition(xyz: number[]): [number, number, number] {\n    const [x, y, z] = xyz;\n    const D = vec3.len(xyz);\n    const phi = Math.asin(z / D);\n    const lambda = Math.atan2(x, -y);\n\n    const lng = lambda * RADIANS_TO_DEGREES;\n    const lat = phi * RADIANS_TO_DEGREES;\n    const Z = (D / GLOBE_RADIUS - 1) * EARTH_RADIUS;\n    return [lng, lat, Z];\n  }\n\n  projectFlat(xyz: number[]): [number, number] {\n    return xyz as [number, number];\n  }\n\n  unprojectFlat(xyz: number[]): [number, number] {\n    return xyz as [number, number];\n  }\n\n  panByPosition(coords: number[], pixel: number[]): GlobeViewportOptions {\n    const fromPosition = this.unproject(pixel);\n    return {\n      longitude: coords[0] - fromPosition[0] + this.longitude,\n      latitude: coords[1] - fromPosition[1] + this.latitude\n    };\n  }\n}\n\nfunction transformVector(matrix: number[], vector: number[]): number[] {\n  const result = vec4.transformMat4([], vector, matrix);\n  vec4.scale(result, result, 1 / result[3]);\n  return result;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport Viewport from '../viewports/viewport';\n\nimport {Matrix4} from '@math.gl/core';\nimport {pixelsToWorld, fovyToAltitude} from '@math.gl/web-mercator';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\nfunction getViewMatrix({\n  height,\n  focalDistance,\n  orbitAxis,\n  rotationX,\n  rotationOrbit,\n  zoom\n}: {\n  height: number;\n  focalDistance: number;\n  orbitAxis: 'Y' | 'Z';\n  rotationX: number;\n  rotationOrbit: number;\n  zoom: number;\n}): Matrix4 {\n  // We position the camera so that one common space unit (world space unit scaled by zoom)\n  // at the target maps to one screen pixel.\n  // This is a similar technique to that used in web mercator projection\n  // By doing so we are able to convert between common space and screen space sizes efficiently\n  // in the vertex shader.\n  const up = orbitAxis === 'Z' ? [0, 0, 1] : [0, 1, 0];\n  const eye = orbitAxis === 'Z' ? [0, -focalDistance, 0] : [0, 0, focalDistance];\n\n  const viewMatrix = new Matrix4().lookAt({eye, up});\n\n  viewMatrix.rotateX(rotationX * DEGREES_TO_RADIANS);\n  if (orbitAxis === 'Z') {\n    viewMatrix.rotateZ(rotationOrbit * DEGREES_TO_RADIANS);\n  } else {\n    viewMatrix.rotateY(rotationOrbit * DEGREES_TO_RADIANS);\n  }\n\n  // When height increases, we need to increase the distance from the camera to the target to\n  // keep the 1:1 mapping. However, this also changes the projected depth of each position by\n  // moving them further away between the near/far plane.\n  // Without modifying the default near/far planes, we instead scale down the common space to\n  // remove the distortion to the depth field.\n  const projectionScale = Math.pow(2, zoom) / height;\n  viewMatrix.scale(projectionScale);\n\n  return viewMatrix;\n}\n\nexport type OrbitViewportOptions = {\n  /** Name of the viewport */\n  id?: string;\n  /** Left offset from the canvas edge, in pixels */\n  x?: number;\n  /** Top offset from the canvas edge, in pixels */\n  y?: number;\n  /** Viewport width in pixels */\n  width?: number;\n  /** Viewport height in pixels */\n  height?: number;\n  /** Axis with 360 degrees rotating freedom, either `'Y'` or `'Z'`, default to `'Z'`. */\n  orbitAxis?: 'Y' | 'Z';\n  /** The world position at the center of the viewport. Default `[0, 0, 0]`. */\n  target?: [number, number, number];\n  /** The zoom level of the viewport. `zoom: 0` maps one unit distance to one pixel on screen, and increasing `zoom` by `1` scales the same object to twice as large. Default `0`. */\n  zoom?: number;\n  /** Rotating angle around orbit axis. Default `0`. */\n  rotationOrbit?: number;\n  /** Rotating angle around orbit axis. Default `0`. */\n  rotationX?: number;\n  /** Custom projection matrix */\n  projectionMatrix?: number[];\n  /** Field of view covered by camera, in the perspective case. In degrees. Default `50`. */\n  fovy?: number;\n  /** Distance of near clipping plane. Default `0.1`. */\n  near?: number;\n  /** Distance of far clipping plane. Default `1000`. */\n  far?: number;\n  /** Whether to create an orthographic or perspective projection matrix. Default is `false` (perspective projection). */\n  orthographic?: boolean;\n};\n\nexport default class OrbitViewport extends Viewport {\n  projectedCenter: number[];\n\n  constructor(props: OrbitViewportOptions) {\n    const {\n      height,\n\n      projectionMatrix,\n\n      fovy = 50, // For setting camera position\n      orbitAxis = 'Z', // Orbit axis with 360 degrees rotating freedom, can only be 'Y' or 'Z'\n      target = [0, 0, 0], // Which point is camera looking at, default origin\n\n      rotationX = 0, // Rotating angle around X axis\n      rotationOrbit = 0, // Rotating angle around orbit axis\n\n      zoom = 0\n    } = props;\n\n    const focalDistance = projectionMatrix ? projectionMatrix[5] / 2 : fovyToAltitude(fovy);\n\n    super({\n      ...props,\n      // in case viewState contains longitude/latitude values,\n      // make sure that the base Viewport class does not treat this as a geospatial viewport\n      longitude: undefined,\n      viewMatrix: getViewMatrix({\n        height: height || 1,\n        focalDistance,\n        orbitAxis,\n        rotationX,\n        rotationOrbit,\n        zoom\n      }),\n      fovy,\n      focalDistance,\n      position: target,\n      zoom\n    });\n\n    this.projectedCenter = this.project(this.center);\n  }\n\n  unproject(xyz: number[], {topLeft = true}: {topLeft?: boolean} = {}): [number, number, number] {\n    const [x, y, z = this.projectedCenter[2]] = xyz;\n\n    const y2 = topLeft ? y : this.height - y;\n    const [X, Y, Z] = pixelsToWorld([x, y2, z], this.pixelUnprojectionMatrix);\n    return [X, Y, Z];\n  }\n\n  panByPosition(coords: number[], pixel: number[]): OrbitViewportOptions {\n    const p0 = this.project(coords);\n    const nextCenter = [\n      this.width / 2 + p0[0] - pixel[0],\n      this.height / 2 + p0[1] - pixel[1],\n      this.projectedCenter[2]\n    ];\n    return {\n      target: this.unproject(nextCenter)\n    };\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport Viewport from '../viewports/viewport';\n\nimport {Matrix4, clamp, vec2} from '@math.gl/core';\nimport {pixelsToWorld} from '@math.gl/web-mercator';\n\nimport type {Padding} from './viewport';\n\nconst viewMatrix = new Matrix4().lookAt({eye: [0, 0, 1]});\n\nfunction getProjectionMatrix({\n  width,\n  height,\n  near,\n  far,\n  padding\n}: {\n  width: number;\n  height: number;\n  near: number;\n  far: number;\n  padding: Padding | null;\n}) {\n  let left = -width / 2;\n  let right = width / 2;\n  let bottom = -height / 2;\n  let top = height / 2;\n  if (padding) {\n    const {left: l = 0, right: r = 0, top: t = 0, bottom: b = 0} = padding;\n    const offsetX = clamp((l + width - r) / 2, 0, width) - width / 2;\n    const offsetY = clamp((t + height - b) / 2, 0, height) - height / 2;\n    left -= offsetX;\n    right -= offsetX;\n    bottom += offsetY;\n    top += offsetY;\n  }\n\n  return new Matrix4().ortho({\n    left,\n    right,\n    bottom,\n    top,\n    near,\n    far\n  });\n}\n\nexport type OrthographicViewportOptions = {\n  /** Name of the viewport */\n  id?: string;\n  /** Left offset from the canvas edge, in pixels */\n  x?: number;\n  /** Top offset from the canvas edge, in pixels */\n  y?: number;\n  /** Viewport width in pixels */\n  width?: number;\n  /** Viewport height in pixels */\n  height?: number;\n  /** The world position at the center of the viewport. Default `[0, 0, 0]`. */\n  target?: [number, number, number] | [number, number];\n  /**  The zoom level of the viewport. `zoom: 0` maps one unit distance to one pixel on screen, and increasing `zoom` by `1` scales the same object to twice as large.\n   *   To apply independent zoom levels to the X and Y axes, supply an array `[zoomX, zoomY]`. Default `0`. */\n  zoom?: number | [number, number];\n  /** Padding around the viewport, in pixels. */\n  padding?: Padding | null;\n  /** Distance of near clipping plane. Default `0.1`. */\n  near?: number;\n  /** Distance of far clipping plane. Default `1000`. */\n  far?: number;\n  /** Whether to use top-left coordinates (`true`) or bottom-left coordinates (`false`). Default `true`. */\n  flipY?: boolean;\n};\n\nexport default class OrthographicViewport extends Viewport {\n  constructor(props: OrthographicViewportOptions) {\n    const {\n      width,\n      height,\n      near = 0.1,\n      far = 1000,\n      zoom = 0,\n      target = [0, 0, 0],\n      padding = null,\n      flipY = true\n    } = props;\n    const zoomX = Array.isArray(zoom) ? zoom[0] : zoom;\n    const zoomY = Array.isArray(zoom) ? zoom[1] : zoom;\n    const zoom_ = Math.min(zoomX, zoomY);\n    const scale = Math.pow(2, zoom_);\n\n    let distanceScales;\n    if (zoomX !== zoomY) {\n      const scaleX = Math.pow(2, zoomX);\n      const scaleY = Math.pow(2, zoomY);\n\n      distanceScales = {\n        unitsPerMeter: [scaleX / scale, scaleY / scale, 1],\n        metersPerUnit: [scale / scaleX, scale / scaleY, 1]\n      };\n    }\n\n    super({\n      ...props,\n      // in case viewState contains longitude/latitude values,\n      // make sure that the base Viewport class does not treat this as a geospatial viewport\n      longitude: undefined,\n      position: target,\n      viewMatrix: viewMatrix.clone().scale([scale, scale * (flipY ? -1 : 1), scale]),\n      projectionMatrix: getProjectionMatrix({\n        width: width || 1,\n        height: height || 1,\n        padding,\n        near,\n        far\n      }),\n      zoom: zoom_,\n      distanceScales\n    });\n  }\n\n  projectFlat([X, Y]: number[]): [number, number] {\n    const {unitsPerMeter} = this.distanceScales;\n    return [X * unitsPerMeter[0], Y * unitsPerMeter[1]];\n  }\n\n  unprojectFlat([x, y]: number[]): [number, number] {\n    const {metersPerUnit} = this.distanceScales;\n    return [x * metersPerUnit[0], y * metersPerUnit[1]];\n  }\n\n  /* Needed by LinearInterpolator */\n  panByPosition(coords: number[], pixel: number[]): OrthographicViewportOptions {\n    const fromLocation = pixelsToWorld(pixel, this.pixelUnprojectionMatrix);\n    const toLocation = this.projectFlat(coords);\n\n    const translate = vec2.add([], toLocation, vec2.negate([], fromLocation));\n    const newCenter = vec2.add([], this.center, translate);\n\n    return {target: this.unprojectFlat(newCenter)};\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport Viewport from '../viewports/viewport';\nimport {getMeterZoom} from '@math.gl/web-mercator';\nimport {Matrix4, _SphericalCoordinates as SphericalCoordinates} from '@math.gl/core';\n\nexport type FirstPersonViewportOptions = {\n  /** Name of the viewport */\n  id?: string;\n  /** Left offset from the canvas edge, in pixels */\n  x?: number;\n  /** Top offset from the canvas edge, in pixels */\n  y?: number;\n  /** Viewport width in pixels */\n  width?: number;\n  /** Viewport height in pixels */\n  height?: number;\n  /** Longitude of the camera, in the geospatial case. */\n  longitude?: number;\n  /** Latitude of the camera, in the geospatial case. */\n  latitude?: number;\n  /** Meter offsets of the camera from the lng-lat-elevation anchor point. Default `[0, 0, 0]`. */\n  position?: [number, number, number];\n  /** Bearing (heading) of the camera in degrees. Default `0` (north). */\n  bearing?: number;\n  /** Pitch (tilt) of the camera in degrees. Default `0` (horizontal). */\n  pitch?: number;\n  /** Transform applied to the camera position and direction */\n  modelMatrix?: number[] | null;\n  /** Custom projection matrix */\n  projectionMatrix?: number[];\n  /** The up direction, default positive z axis. */\n  up?: [number, number, number];\n  /** Field of view covered by camera, in degrees. Default `75`. */\n  fovy?: number;\n  /** Distance of near clipping plane. Default `0.1`. */\n  near?: number;\n  /** Distance of far clipping plane. Default `1000`. */\n  far?: number;\n  /** Modifier of viewport scale. Corresponds to the number of pixels per meter. Default `1`. */\n  focalDistance?: number;\n};\n\nexport default class FirstPersonViewport extends Viewport {\n  longitude?: number;\n  latitude?: number;\n\n  constructor(props: FirstPersonViewportOptions) {\n    // TODO - push direction handling into Matrix4.lookAt\n    const {longitude, latitude, modelMatrix, bearing = 0, pitch = 0, up = [0, 0, 1]} = props;\n\n    // Always calculate direction from bearing and pitch\n    const spherical = new SphericalCoordinates({\n      bearing,\n      // Avoid \"pixel project matrix not invertible\" error\n      pitch: pitch === -90 ? 0.0001 : 90 + pitch\n    });\n    const dir = spherical.toVector3().normalize();\n\n    // Direction is relative to model coordinates, of course\n    const center = modelMatrix ? new Matrix4(modelMatrix).transformAsVector(dir) : dir;\n\n    // Just the direction. All the positioning is done in viewport.js\n    const zoom = Number.isFinite(latitude) ? getMeterZoom({latitude: latitude as number}) : 0;\n    const scale = Math.pow(2, zoom);\n    const viewMatrix = new Matrix4().lookAt({eye: [0, 0, 0], center, up}).scale(scale);\n\n    super({\n      ...props,\n      zoom,\n      viewMatrix\n    });\n\n    this.latitude = latitude;\n    this.longitude = longitude;\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport Controller from './controller';\nimport ViewState from './view-state';\nimport {mod} from '../utils/math-utils';\nimport type Viewport from '../viewports/viewport';\nimport LinearInterpolator from '../transitions/linear-interpolator';\n\nimport {Vector3, _SphericalCoordinates as SphericalCoordinates, clamp} from '@math.gl/core';\n\nconst MOVEMENT_SPEED = 20;\nconst PAN_SPEED = 500;\n\ntype FirstPersonStateProps = {\n  width: number;\n  height: number;\n\n  position?: number[];\n  bearing?: number;\n  pitch?: number;\n\n  // Geospatial anchor\n  longitude?: number | null;\n  latitude?: number | null;\n\n  maxPitch?: number;\n  minPitch?: number;\n};\n\ntype FirstPersonStateInternal = {\n  startRotatePos?: [number, number];\n  startBearing?: number;\n  startPitch?: number;\n  startZoomPosition?: number[];\n  startPanPos?: [number, number];\n  startPanPosition?: number[];\n};\n\nclass FirstPersonState extends ViewState<\n  FirstPersonState,\n  FirstPersonStateProps,\n  FirstPersonStateInternal\n> {\n  makeViewport: (props: Record<string, any>) => Viewport;\n\n  constructor(\n    options: FirstPersonStateProps &\n      FirstPersonStateInternal & {\n        makeViewport: (props: Record<string, any>) => Viewport;\n      }\n  ) {\n    const {\n      /* Viewport arguments */\n      width, // Width of viewport\n      height, // Height of viewport\n\n      // Position and orientation\n      position = [0, 0, 0], // typically in meters from anchor point\n\n      bearing = 0, // Rotation around y axis\n      pitch = 0, // Rotation around x axis\n\n      // Geospatial anchor\n      longitude = null,\n      latitude = null,\n\n      maxPitch = 90,\n      minPitch = -90,\n\n      // Model state when the rotate operation first started\n      startRotatePos,\n      startBearing,\n      startPitch,\n      startZoomPosition,\n      startPanPos,\n      startPanPosition\n    } = options;\n\n    super(\n      {\n        width,\n        height,\n        position,\n        bearing,\n        pitch,\n        longitude,\n        latitude,\n        maxPitch,\n        minPitch\n      },\n      {\n        startRotatePos,\n        startBearing,\n        startPitch,\n        startZoomPosition,\n        startPanPos,\n        startPanPosition\n      }\n    );\n\n    this.makeViewport = options.makeViewport;\n  }\n\n  /* Public API */\n\n  /**\n   * Start panning\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  panStart({pos}): FirstPersonState {\n    const {position} = this.getViewportProps();\n    return this._getUpdatedState({\n      startPanPos: pos,\n      startPanPosition: position\n    });\n  }\n\n  /**\n   * Pan\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   */\n  pan({pos}): FirstPersonState {\n    if (!pos) {\n      return this;\n    }\n    const {startPanPos = [0, 0], startPanPosition = [0, 0]} = this.getState();\n    const {width, height, bearing, pitch} = this.getViewportProps();\n    const deltaScaleX = (PAN_SPEED * (pos[0] - startPanPos[0])) / width;\n    const deltaScaleY = (PAN_SPEED * (pos[1] - startPanPos[1])) / height;\n\n    const up = new SphericalCoordinates({bearing, pitch});\n    const forward = new SphericalCoordinates({bearing, pitch: -90});\n    const yDirection = up.toVector3().normalize();\n    const xDirection = forward.toVector3().cross(yDirection).normalize();\n\n    return this._getUpdatedState({\n      position: new Vector3(startPanPosition)\n        .add(xDirection.scale(deltaScaleX))\n        .add(yDirection.scale(deltaScaleY))\n    });\n  }\n\n  /**\n   * End panning\n   * Must call if `panStart()` was called\n   */\n  panEnd(): FirstPersonState {\n    return this._getUpdatedState({\n      startPanPos: null,\n      startPanPosition: null\n    });\n  }\n\n  /**\n   * Start rotating\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  rotateStart({pos}: {pos: [number, number]}): FirstPersonState {\n    return this._getUpdatedState({\n      startRotatePos: pos,\n      startBearing: this.getViewportProps().bearing,\n      startPitch: this.getViewportProps().pitch\n    });\n  }\n\n  /**\n   * Rotate\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   */\n  rotate({\n    pos,\n    deltaAngleX = 0,\n    deltaAngleY = 0\n  }: {\n    pos?: [number, number];\n    deltaAngleX?: number;\n    deltaAngleY: number;\n  }): FirstPersonState {\n    const {startRotatePos, startBearing, startPitch} = this.getState();\n    const {width, height} = this.getViewportProps();\n\n    if (!startRotatePos || startBearing === undefined || startPitch === undefined) {\n      return this;\n    }\n\n    let newRotation;\n    if (pos) {\n      const deltaScaleX = (pos[0] - startRotatePos[0]) / width;\n      const deltaScaleY = (pos[1] - startRotatePos[1]) / height;\n      newRotation = {\n        bearing: startBearing - deltaScaleX * 180,\n        pitch: startPitch - deltaScaleY * 90\n      };\n    } else {\n      newRotation = {\n        bearing: startBearing - deltaAngleX,\n        pitch: startPitch - deltaAngleY\n      };\n    }\n\n    return this._getUpdatedState(newRotation);\n  }\n\n  /**\n   * End rotating\n   * Must call if `rotateStart()` was called\n   */\n  rotateEnd(): FirstPersonState {\n    return this._getUpdatedState({\n      startRotatePos: null,\n      startBearing: null,\n      startPitch: null\n    });\n  }\n\n  /**\n   * Start zooming\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  zoomStart(): FirstPersonState {\n    return this._getUpdatedState({\n      startZoomPosition: this.getViewportProps().position\n    });\n  }\n\n  /**\n   * Zoom\n   * @param {[Number, Number]} pos - position on screen where the current center is\n   * @param {[Number, Number]} startPos - the center position at\n   *   the start of the operation. Must be supplied of `zoomStart()` was not called\n   * @param {Number} scale - a number between [0, 1] specifying the accumulated\n   *   relative scale.\n   */\n  zoom({pos, scale}: {pos: [number, number]; scale: number}): FirstPersonState {\n    const viewportProps = this.getViewportProps();\n    const startZoomPosition = this.getState().startZoomPosition || viewportProps.position;\n    const viewport = this.makeViewport(viewportProps);\n    const {projectionMatrix, width} = viewport;\n    const fovxRadians = 2.0 * Math.atan(1.0 / projectionMatrix[0]);\n    const angle = fovxRadians * (pos[0] / width - 0.5);\n\n    const direction = this.getDirection(true);\n    return this._move(\n      direction.rotateZ({radians: -angle}),\n      Math.log2(scale) * MOVEMENT_SPEED,\n      startZoomPosition\n    );\n  }\n\n  /**\n   * End zooming\n   * Must call if `zoomStart()` was called\n   */\n  zoomEnd(): FirstPersonState {\n    return this._getUpdatedState({\n      startZoomPosition: null\n    });\n  }\n\n  moveLeft(speed: number = MOVEMENT_SPEED): FirstPersonState {\n    const direction = this.getDirection(true);\n    return this._move(direction.rotateZ({radians: Math.PI / 2}), speed);\n  }\n\n  moveRight(speed: number = MOVEMENT_SPEED): FirstPersonState {\n    const direction = this.getDirection(true);\n    return this._move(direction.rotateZ({radians: -Math.PI / 2}), speed);\n  }\n\n  // forward\n  moveUp(speed: number = MOVEMENT_SPEED): FirstPersonState {\n    const direction = this.getDirection(true);\n    return this._move(direction, speed);\n  }\n\n  // backward\n  moveDown(speed: number = MOVEMENT_SPEED): FirstPersonState {\n    const direction = this.getDirection(true);\n    return this._move(direction.negate(), speed);\n  }\n\n  rotateLeft(speed: number = 15): FirstPersonState {\n    return this._getUpdatedState({\n      bearing: this.getViewportProps().bearing - speed\n    });\n  }\n\n  rotateRight(speed: number = 15): FirstPersonState {\n    return this._getUpdatedState({\n      bearing: this.getViewportProps().bearing + speed\n    });\n  }\n\n  rotateUp(speed: number = 10): FirstPersonState {\n    return this._getUpdatedState({\n      pitch: this.getViewportProps().pitch + speed\n    });\n  }\n\n  rotateDown(speed: number = 10): FirstPersonState {\n    return this._getUpdatedState({\n      pitch: this.getViewportProps().pitch - speed\n    });\n  }\n\n  zoomIn(speed: number = MOVEMENT_SPEED): FirstPersonState {\n    return this._move(new Vector3(0, 0, 1), speed);\n  }\n\n  zoomOut(speed: number = MOVEMENT_SPEED): FirstPersonState {\n    return this._move(new Vector3(0, 0, -1), speed);\n  }\n\n  // shortest path between two view states\n  shortestPathFrom(viewState: FirstPersonState) {\n    const fromProps = viewState.getViewportProps();\n    const props = {...this.getViewportProps()};\n    const {bearing, longitude} = props;\n\n    if (Math.abs(bearing - fromProps.bearing) > 180) {\n      props.bearing = bearing < 0 ? bearing + 360 : bearing - 360;\n    }\n    if (\n      longitude !== null &&\n      fromProps.longitude !== null &&\n      Math.abs(longitude - fromProps.longitude) > 180\n    ) {\n      props.longitude = longitude < 0 ? longitude + 360 : longitude - 360;\n    }\n    return props;\n  }\n\n  /* Private methods */\n  _move(\n    direction: Vector3,\n    speed: number,\n    fromPosition: number[] = this.getViewportProps().position\n  ) {\n    const delta = direction.scale(speed);\n    return this._getUpdatedState({\n      position: new Vector3(fromPosition).add(delta)\n    });\n  }\n\n  getDirection(use2D: boolean = false): Vector3 {\n    const spherical = new SphericalCoordinates({\n      bearing: this.getViewportProps().bearing,\n      pitch: use2D ? 90 : 90 + this.getViewportProps().pitch\n    });\n    const direction = spherical.toVector3().normalize();\n    return direction;\n  }\n\n  _getUpdatedState(newProps: Record<string, any>): FirstPersonState {\n    // Update _viewportProps\n    return new FirstPersonState({\n      makeViewport: this.makeViewport,\n      ...this.getViewportProps(),\n      ...this.getState(),\n      ...newProps\n    });\n  }\n\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  applyConstraints(props: Required<FirstPersonStateProps>): Required<FirstPersonStateProps> {\n    // Ensure pitch and zoom are within specified range\n    const {pitch, maxPitch, minPitch, longitude, bearing} = props;\n    props.pitch = clamp(pitch, minPitch, maxPitch);\n\n    // Normalize degrees\n    if (longitude !== null && (longitude < -180 || longitude > 180)) {\n      props.longitude = mod(longitude + 180, 360) - 180;\n    }\n    if (bearing < -180 || bearing > 180) {\n      props.bearing = mod(bearing + 180, 360) - 180;\n    }\n\n    return props;\n  }\n}\n\nexport default class FirstPersonController extends Controller<FirstPersonState> {\n  ControllerState = FirstPersonState;\n\n  transition = {\n    transitionDuration: 300,\n    transitionInterpolator: new LinearInterpolator(['position', 'pitch', 'bearing'])\n  };\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport View, {CommonViewState, CommonViewProps} from './view';\nimport FirstPersonViewport from '../viewports/first-person-viewport';\nimport FirstPersonController from '../controllers/first-person-controller';\n\nexport type FirstPersonViewState = {\n  /** Longitude of the camera, in the geospatial case. */\n  longitude?: number;\n  /** Latitude of the camera, in the geospatial case. */\n  latitude?: number;\n  /** Meter offsets of the camera from the lng-lat anchor point. Default `[0, 0, 0]`. */\n  position?: [number, number, number];\n  /** Bearing (heading) of the camera in degrees. Default `0` (north). */\n  bearing?: number;\n  /** Pitch (tilt) of the camera in degrees. Default `0` (horizontal). */\n  pitch?: number;\n  /** Min pitch angle. Default `-90` (up). */\n  minPitch?: number;\n  /** Max pitch angle. Default `90` (down). */\n  maxPitch?: number;\n  /** Transform applied to the camera position and direction */\n  modelMatrix?: number[] | null;\n} & CommonViewState;\n\nexport type FirstPersonViewProps = {\n  /** Custom projection matrix */\n  projectionMatrix?: number[];\n  /** Field of view covered by camera, in degrees. Default `75`. */\n  fovy?: number;\n  /** Distance of near clipping plane. Default `0.1`. */\n  near?: number;\n  /** Distance of far clipping plane. Default `1000`. */\n  far?: number;\n  /** Modifier of viewport scale. Corresponds to the number of pixels per meter. Default `1`. */\n  focalDistance?: number;\n} & CommonViewProps<FirstPersonViewState>;\n\nexport default class FirstPersonView extends View<FirstPersonViewState, FirstPersonViewProps> {\n  static displayName = 'FirstPersonView';\n\n  constructor(props: FirstPersonViewProps = {}) {\n    super(props);\n  }\n\n  getViewportType() {\n    return FirstPersonViewport;\n  }\n\n  get ControllerType() {\n    return FirstPersonController;\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {clamp} from '@math.gl/core';\nimport Controller from './controller';\nimport ViewState from './view-state';\nimport {mod} from '../utils/math-utils';\n\nimport type Viewport from '../viewports/viewport';\nimport LinearInterpolator from '../transitions/linear-interpolator';\n\nexport type OrbitStateProps = {\n  width: number;\n  height: number;\n  target?: number[];\n  zoom?: number | number[];\n  rotationX?: number;\n  rotationOrbit?: number;\n\n  /** Viewport constraints */\n  maxZoom?: number;\n  minZoom?: number;\n  minRotationX?: number;\n  maxRotationX?: number;\n};\n\ntype OrbitStateInternal = {\n  startPanPosition?: number[];\n  startRotatePos?: number[];\n  startRotationX?: number;\n  startRotationOrbit?: number;\n  startZoomPosition?: number[];\n  startZoom?: number | number[];\n};\n\nexport class OrbitState extends ViewState<OrbitState, OrbitStateProps, OrbitStateInternal> {\n  makeViewport: (props: Record<string, any>) => Viewport;\n\n  constructor(\n    options: OrbitStateProps &\n      OrbitStateInternal & {\n        makeViewport: (props: Record<string, any>) => Viewport;\n      }\n  ) {\n    const {\n      /* Viewport arguments */\n      width, // Width of viewport\n      height, // Height of viewport\n      rotationX = 0, // Rotation around x axis\n      rotationOrbit = 0, // Rotation around orbit axis\n      target = [0, 0, 0],\n      zoom = 0,\n\n      /* Viewport constraints */\n      minRotationX = -90,\n      maxRotationX = 90,\n      minZoom = -Infinity,\n      maxZoom = Infinity,\n\n      /** Interaction states, required to calculate change during transform */\n      // Model state when the pan operation first started\n      startPanPosition,\n      // Model state when the rotate operation first started\n      startRotatePos,\n      startRotationX,\n      startRotationOrbit,\n      // Model state when the zoom operation first started\n      startZoomPosition,\n      startZoom\n    } = options;\n\n    super(\n      {\n        width,\n        height,\n        rotationX,\n        rotationOrbit,\n        target,\n        zoom,\n        minRotationX,\n        maxRotationX,\n        minZoom,\n        maxZoom\n      },\n      {\n        startPanPosition,\n        startRotatePos,\n        startRotationX,\n        startRotationOrbit,\n        startZoomPosition,\n        startZoom\n      }\n    );\n\n    this.makeViewport = options.makeViewport;\n  }\n\n  /**\n   * Start panning\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  panStart({pos}: {pos: [number, number]}): OrbitState {\n    return this._getUpdatedState({\n      startPanPosition: this._unproject(pos)\n    });\n  }\n\n  /**\n   * Pan\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   */\n  pan({pos, startPosition}: {pos: [number, number]; startPosition?: number[]}): OrbitState {\n    const startPanPosition = this.getState().startPanPosition || startPosition;\n\n    if (!startPanPosition) {\n      return this;\n    }\n\n    const viewport = this.makeViewport(this.getViewportProps());\n    const newProps = viewport.panByPosition(startPanPosition, pos);\n\n    return this._getUpdatedState(newProps);\n  }\n\n  /**\n   * End panning\n   * Must call if `panStart()` was called\n   */\n  panEnd(): OrbitState {\n    return this._getUpdatedState({\n      startPanPosition: null\n    });\n  }\n\n  /**\n   * Start rotating\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  rotateStart({pos}: {pos: [number, number]}): OrbitState {\n    return this._getUpdatedState({\n      startRotatePos: pos,\n      startRotationX: this.getViewportProps().rotationX,\n      startRotationOrbit: this.getViewportProps().rotationOrbit\n    });\n  }\n\n  /**\n   * Rotate\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   */\n  rotate({\n    pos,\n    deltaAngleX = 0,\n    deltaAngleY = 0\n  }: {\n    pos?: [number, number];\n    deltaAngleX?: number;\n    deltaAngleY?: number;\n  }): OrbitState {\n    const {startRotatePos, startRotationX, startRotationOrbit} = this.getState();\n    const {width, height} = this.getViewportProps();\n\n    if (!startRotatePos || startRotationX === undefined || startRotationOrbit === undefined) {\n      return this;\n    }\n\n    let newRotation;\n    if (pos) {\n      let deltaScaleX = (pos[0] - startRotatePos[0]) / width;\n      const deltaScaleY = (pos[1] - startRotatePos[1]) / height;\n\n      if (startRotationX < -90 || startRotationX > 90) {\n        // When looking at the \"back\" side of the scene, invert horizontal drag\n        // so that the camera movement follows user input\n        deltaScaleX *= -1;\n      }\n      newRotation = {\n        rotationX: startRotationX + deltaScaleY * 180,\n        rotationOrbit: startRotationOrbit + deltaScaleX * 180\n      };\n    } else {\n      newRotation = {\n        rotationX: startRotationX + deltaAngleY,\n        rotationOrbit: startRotationOrbit + deltaAngleX\n      };\n    }\n\n    return this._getUpdatedState(newRotation);\n  }\n\n  /**\n   * End rotating\n   * Must call if `rotateStart()` was called\n   */\n  rotateEnd(): OrbitState {\n    return this._getUpdatedState({\n      startRotationX: null,\n      startRotationOrbit: null\n    });\n  }\n\n  // shortest path between two view states\n  shortestPathFrom(viewState: OrbitState): OrbitStateProps {\n    const fromProps = viewState.getViewportProps();\n    const props = {...this.getViewportProps()};\n    const {rotationOrbit} = props;\n\n    if (Math.abs(rotationOrbit - fromProps.rotationOrbit) > 180) {\n      props.rotationOrbit = rotationOrbit < 0 ? rotationOrbit + 360 : rotationOrbit - 360;\n    }\n\n    return props;\n  }\n\n  /**\n   * Start zooming\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  zoomStart({pos}: {pos: [number, number]}): OrbitState {\n    return this._getUpdatedState({\n      startZoomPosition: this._unproject(pos),\n      startZoom: this.getViewportProps().zoom\n    });\n  }\n\n  /**\n   * Zoom\n   * @param {[Number, Number]} pos - position on screen where the current target is\n   * @param {[Number, Number]} startPos - the target position at\n   *   the start of the operation. Must be supplied of `zoomStart()` was not called\n   * @param {Number} scale - a number between [0, 1] specifying the accumulated\n   *   relative scale.\n   */\n  zoom({\n    pos,\n    startPos,\n    scale\n  }: {\n    pos: [number, number];\n    startPos?: [number, number];\n    scale: number;\n  }): OrbitState {\n    let {startZoom, startZoomPosition} = this.getState();\n    if (!startZoomPosition) {\n      // We have two modes of zoom:\n      // scroll zoom that are discrete events (transform from the current zoom level),\n      // and pinch zoom that are continuous events (transform from the zoom level when\n      // pinch started).\n      // If startZoom state is defined, then use the startZoom state;\n      // otherwise assume discrete zooming\n      startZoom = this.getViewportProps().zoom;\n      startZoomPosition = this._unproject(startPos) || this._unproject(pos);\n    }\n    if (!startZoomPosition) {\n      return this;\n    }\n    const newZoom = this._calculateNewZoom({scale, startZoom});\n    const zoomedViewport = this.makeViewport({...this.getViewportProps(), zoom: newZoom});\n\n    return this._getUpdatedState({\n      zoom: newZoom,\n      ...zoomedViewport.panByPosition(startZoomPosition, pos)\n    });\n  }\n\n  /**\n   * End zooming\n   * Must call if `zoomStart()` was called\n   */\n  zoomEnd(): OrbitState {\n    return this._getUpdatedState({\n      startZoomPosition: null,\n      startZoom: null\n    });\n  }\n\n  zoomIn(speed: number = 2): OrbitState {\n    return this._getUpdatedState({\n      zoom: this._calculateNewZoom({scale: speed})\n    });\n  }\n\n  zoomOut(speed: number = 2): OrbitState {\n    return this._getUpdatedState({\n      zoom: this._calculateNewZoom({scale: 1 / speed})\n    });\n  }\n\n  moveLeft(speed: number = 50): OrbitState {\n    return this._panFromCenter([-speed, 0]);\n  }\n\n  moveRight(speed: number = 50): OrbitState {\n    return this._panFromCenter([speed, 0]);\n  }\n\n  moveUp(speed: number = 50): OrbitState {\n    return this._panFromCenter([0, -speed]);\n  }\n\n  moveDown(speed: number = 50): OrbitState {\n    return this._panFromCenter([0, speed]);\n  }\n\n  rotateLeft(speed: number = 15): OrbitState {\n    return this._getUpdatedState({\n      rotationOrbit: this.getViewportProps().rotationOrbit - speed\n    });\n  }\n\n  rotateRight(speed: number = 15): OrbitState {\n    return this._getUpdatedState({\n      rotationOrbit: this.getViewportProps().rotationOrbit + speed\n    });\n  }\n\n  rotateUp(speed: number = 10): OrbitState {\n    return this._getUpdatedState({\n      rotationX: this.getViewportProps().rotationX - speed\n    });\n  }\n\n  rotateDown(speed: number = 10): OrbitState {\n    return this._getUpdatedState({\n      rotationX: this.getViewportProps().rotationX + speed\n    });\n  }\n\n  /* Private methods */\n\n  _unproject(pos?: number[]): number[] | undefined {\n    const viewport = this.makeViewport(this.getViewportProps());\n    // @ts-ignore\n    return pos && viewport.unproject(pos);\n  }\n\n  // Calculates new zoom\n  _calculateNewZoom({\n    scale,\n    startZoom\n  }: {\n    scale: number;\n    startZoom?: number | number[];\n  }): number | number[] {\n    const {maxZoom, minZoom} = this.getViewportProps();\n    if (startZoom === undefined) {\n      startZoom = this.getViewportProps().zoom;\n    }\n    const zoom = (startZoom as number) + Math.log2(scale);\n    return clamp(zoom, minZoom, maxZoom);\n  }\n\n  _panFromCenter(offset) {\n    const {width, height, target} = this.getViewportProps();\n    return this.pan({\n      startPosition: target,\n      pos: [width / 2 + offset[0], height / 2 + offset[1]]\n    });\n  }\n\n  _getUpdatedState(newProps): OrbitState {\n    // @ts-ignore\n    return new this.constructor({\n      makeViewport: this.makeViewport,\n      ...this.getViewportProps(),\n      ...this.getState(),\n      ...newProps\n    });\n  }\n\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  applyConstraints(props: Required<OrbitStateProps>): Required<OrbitStateProps> {\n    // Ensure zoom is within specified range\n    const {maxZoom, minZoom, zoom, maxRotationX, minRotationX, rotationOrbit} = props;\n\n    props.zoom = Array.isArray(zoom)\n      ? [clamp(zoom[0], minZoom, maxZoom), clamp(zoom[1], minZoom, maxZoom)]\n      : clamp(zoom, minZoom, maxZoom);\n\n    props.rotationX = clamp(props.rotationX, minRotationX, maxRotationX);\n    if (rotationOrbit < -180 || rotationOrbit > 180) {\n      props.rotationOrbit = mod(rotationOrbit + 180, 360) - 180;\n    }\n\n    return props;\n  }\n}\n\nexport default class OrbitController extends Controller<OrbitState> {\n  ControllerState = OrbitState;\n\n  transition = {\n    transitionDuration: 300,\n    transitionInterpolator: new LinearInterpolator({\n      transitionProps: {\n        compare: ['target', 'zoom', 'rotationX', 'rotationOrbit'],\n        required: ['target', 'zoom']\n      }\n    })\n  };\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport View, {CommonViewState, CommonViewProps} from './view';\nimport OrbitViewport from '../viewports/orbit-viewport';\nimport OrbitController from '../controllers/orbit-controller';\n\nexport type OrbitViewState = {\n  /** The world position at the center of the viewport. Default `[0, 0, 0]`. */\n  target: [number, number, number];\n  /** The zoom level of the viewport. `zoom: 0` maps one unit distance to one pixel on screen, and increasing `zoom` by `1` scales the same object to twice as large. Default `0`. */\n  zoom: number;\n  /** Rotating angle around orbit axis. Default `0`. */\n  rotationOrbit?: number;\n  /** Rotating angle around orbit axis. Default `0`. */\n  rotationX?: number;\n  /** The min zoom level of the viewport. Default `-Infinity`. */\n  minZoom?: number;\n  /** The max zoom level of the viewport. Default `Infinity`. */\n  maxZoom?: number;\n  /** The min rotating angle around X axis. Default `-90`. */\n  minRotationX?: number;\n  /** The max rotating angle around X axis. Default `90`. */\n  maxRotationX?: number;\n} & CommonViewState;\n\nexport type OrbitViewProps = {\n  /** Axis with 360 degrees rotating freedom, either `'Y'` or `'Z'`, default to `'Z'`. */\n  orbitAxis?: 'Y' | 'Z';\n  /** Custom projection matrix */\n  projectionMatrix?: number[];\n  /** Field of view covered by camera, in the perspective case. In degrees. Default `50`. */\n  fovy?: number;\n  /** Distance of near clipping plane. Default `0.1`. */\n  near?: number;\n  /** Distance of far clipping plane. Default `1000`. */\n  far?: number;\n  /** Whether to create an orthographic or perspective projection matrix. Default is `false` (perspective projection). */\n  orthographic?: boolean;\n} & CommonViewProps<OrbitViewState>;\n\nexport default class OrbitView extends View<OrbitViewState, OrbitViewProps> {\n  static displayName = 'OrbitView';\n\n  constructor(props: OrbitViewProps = {}) {\n    super(props);\n    this.props.orbitAxis = props.orbitAxis || 'Z';\n  }\n\n  getViewportType() {\n    return OrbitViewport;\n  }\n\n  get ControllerType() {\n    return OrbitController;\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {clamp} from '@math.gl/core';\nimport Controller from './controller';\nimport {OrbitState} from './orbit-controller';\nimport LinearInterpolator from '../transitions/linear-interpolator';\n\nclass OrthographicState extends OrbitState {\n  zoomAxis: 'X' | 'Y' | 'all';\n\n  constructor(props) {\n    super(props);\n\n    this.zoomAxis = props.zoomAxis || 'all';\n  }\n\n  _calculateNewZoom({scale, startZoom}) {\n    const {maxZoom, minZoom} = this.getViewportProps();\n    if (startZoom === undefined) {\n      startZoom = this.getViewportProps().zoom;\n    }\n    let deltaZoom = Math.log2(scale);\n    if (Array.isArray(startZoom)) {\n      let [newZoomX, newZoomY] = startZoom;\n      switch (this.zoomAxis) {\n        case 'X':\n          // Scale x only\n          newZoomX = clamp(newZoomX + deltaZoom, minZoom, maxZoom);\n          break;\n        case 'Y':\n          // Scale y only\n          newZoomY = clamp(newZoomY + deltaZoom, minZoom, maxZoom);\n          break;\n        default:\n          // Lock aspect ratio\n          let z = Math.min(newZoomX + deltaZoom, newZoomY + deltaZoom);\n          if (z < minZoom) {\n            deltaZoom += minZoom - z;\n          }\n          z = Math.max(newZoomX + deltaZoom, newZoomY + deltaZoom);\n          if (z > maxZoom) {\n            deltaZoom += maxZoom - z;\n          }\n          newZoomX += deltaZoom;\n          newZoomY += deltaZoom;\n      }\n      return [newZoomX, newZoomY];\n    }\n    // Ignore `zoomAxis`\n    // `LinearTransitionInterpolator` does not support interpolation between a number and an array\n    // So if zoom is a number (legacy use case), new zoom still has to be a number\n    return clamp(startZoom + deltaZoom, minZoom, maxZoom);\n  }\n}\n\nexport default class OrthographicController extends Controller<OrbitState> {\n  ControllerState = OrthographicState;\n  transition = {\n    transitionDuration: 300,\n    transitionInterpolator: new LinearInterpolator(['target', 'zoom'])\n  };\n  dragMode: 'pan' | 'rotate' = 'pan';\n\n  _onPanRotate() {\n    // No rotation in orthographic view\n    return false;\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport View, {CommonViewState, CommonViewProps} from './view';\nimport OrthographicViewport from '../viewports/orthographic-viewport';\nimport OrthographicController from '../controllers/orthographic-controller';\n\nexport type OrthographicViewState = {\n  /** The world position at the center of the viewport. Default `[0, 0, 0]`. */\n  target?: [number, number, number] | [number, number];\n  /**  The zoom level of the viewport. `zoom: 0` maps one unit distance to one pixel on screen, and increasing `zoom` by `1` scales the same object to twice as large.\n   *   To apply independent zoom levels to the X and Y axes, supply an array `[zoomX, zoomY]`. Default `0`. */\n  zoom?: number | [number, number];\n  /** The min zoom level of the viewport. Default `-Infinity`. */\n  minZoom?: number;\n  /** The max zoom level of the viewport. Default `Infinity`. */\n  maxZoom?: number;\n} & CommonViewState;\n\nexport type OrthographicViewProps = {\n  /** Distance of near clipping plane. Default `0.1`. */\n  near?: number;\n  /** Distance of far clipping plane. Default `1000`. */\n  far?: number;\n  /** Whether to use top-left coordinates (`true`) or bottom-left coordinates (`false`). Default `true`. */\n  flipY?: boolean;\n} & CommonViewProps<OrthographicViewState>;\n\nexport default class OrthographicView extends View<OrthographicViewState, OrthographicViewProps> {\n  static displayName = 'OrthographicView';\n\n  constructor(props: OrthographicViewProps = {}) {\n    super(props);\n  }\n\n  getViewportType() {\n    return OrthographicViewport;\n  }\n\n  get ControllerType() {\n    return OrthographicController;\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {clamp} from '@math.gl/core';\nimport Controller, {ControllerProps} from './controller';\n\nimport {MapState, MapStateProps} from './map-controller';\nimport {mod} from '../utils/math-utils';\nimport LinearInterpolator from '../transitions/linear-interpolator';\n\nimport {MAX_LATITUDE} from '@math.gl/web-mercator';\n\nclass GlobeState extends MapState {\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  applyConstraints(props: Required<MapStateProps>): Required<MapStateProps> {\n    // Ensure zoom is within specified range\n    const {maxZoom, minZoom, zoom} = props;\n    props.zoom = clamp(zoom, minZoom, maxZoom);\n\n    const {longitude, latitude} = props;\n    if (longitude < -180 || longitude > 180) {\n      props.longitude = mod(longitude + 180, 360) - 180;\n    }\n    props.latitude = clamp(latitude, -MAX_LATITUDE, MAX_LATITUDE);\n\n    return props;\n  }\n}\n\nexport default class GlobeController extends Controller<MapState> {\n  ControllerState = GlobeState;\n\n  transition = {\n    transitionDuration: 300,\n    transitionInterpolator: new LinearInterpolator(['longitude', 'latitude', 'zoom'])\n  };\n\n  dragMode: 'pan' | 'rotate' = 'pan';\n\n  setProps(props: ControllerProps) {\n    super.setProps(props);\n\n    // TODO - support pitching?\n    this.dragRotate = false;\n    this.touchRotate = false;\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport View, {CommonViewState, CommonViewProps} from './view';\nimport GlobeViewport from '../viewports/globe-viewport';\nimport WebMercatorViewport from '../viewports/web-mercator-viewport';\nimport GlobeController from '../controllers/globe-controller';\n\nexport type GlobeViewState = {\n  /** Longitude of the map center */\n  longitude: number;\n  /** Latitude of the map center */\n  latitude: number;\n  /** Zoom level */\n  zoom: number;\n  /** Min zoom, default `0` */\n  minZoom?: number;\n  /** Max zoom, default `20` */\n  maxZoom?: number;\n  /** The near plane position */\n  nearZ?: number;\n  /** The far plane position */\n  farZ?: number;\n} & CommonViewState;\n\nexport type GlobeViewProps = {\n  /** The resolution at which to turn flat features into 3D meshes, in degrees. Smaller numbers will generate more detailed mesh. Default `10`. */\n  resolution?: number;\n  /** Scaler for the near plane, 1 unit equals to the height of the viewport. Default to `0.1`. Overwrites the `near` parameter. */\n  nearZMultiplier?: number;\n  /** Scaler for the far plane, 1 unit equals to the distance from the camera to the top edge of the screen. Default to `1.01`. Overwrites the `far` parameter. */\n  farZMultiplier?: number;\n  /** Distance of the camera relative to viewport height. Default `1.5`. */\n  altitude?: number;\n} & CommonViewProps<GlobeViewState>;\n\nexport default class GlobeView extends View<GlobeViewState, GlobeViewProps> {\n  static displayName = 'GlobeView';\n\n  constructor(props: GlobeViewProps = {}) {\n    super(props);\n  }\n\n  getViewportType(viewState: GlobeViewState) {\n    return viewState.zoom > 12 ? WebMercatorViewport : GlobeViewport;\n  }\n\n  get ControllerType() {\n    return GlobeController;\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {deepEqual} from '../utils/deep-equal';\nimport type Layer from './layer';\nimport type CompositeLayer from './composite-layer';\nimport type {UpdateParameters} from './layer';\nimport type {LayerContext} from './layer-manager';\n\nexport default abstract class LayerExtension<OptionsT = unknown> {\n  static defaultProps = {};\n  static extensionName = 'LayerExtension';\n\n  static get componentName() {\n    return Object.prototype.hasOwnProperty.call(this, 'extensionName') ? this.extensionName : '';\n  }\n\n  opts!: OptionsT;\n\n  constructor(opts?: OptionsT) {\n    if (opts) {\n      this.opts = opts;\n    }\n  }\n\n  /** Returns true if two extensions are equivalent */\n  equals(extension: LayerExtension<OptionsT>): boolean {\n    if (this === extension) {\n      return true;\n    }\n\n    // Compare extensions shallowly\n    return this.constructor === extension.constructor && deepEqual(this.opts, extension.opts, 1);\n  }\n\n  /** Only called if attached to a primitive layer */\n  getShaders(this: Layer, extension: this): any {\n    return null;\n  }\n\n  /** Only called if attached to a CompositeLayer */\n  getSubLayerProps(this: CompositeLayer, extension: this): any {\n    const {defaultProps} = extension.constructor as typeof LayerExtension;\n    const newProps = {\n      updateTriggers: {}\n    };\n\n    /* eslint-disable max-depth */\n    for (const key in defaultProps) {\n      if (key in this.props) {\n        const propDef = defaultProps[key];\n        const propValue = this.props[key];\n        newProps[key] = propValue;\n        if (propDef && propDef.type === 'accessor') {\n          newProps.updateTriggers[key] = this.props.updateTriggers[key];\n          if (typeof propValue === 'function') {\n            newProps[key] = this.getSubLayerAccessor(propValue);\n          }\n        }\n      }\n    }\n    /* eslint-enable max-depth */\n    return newProps;\n  }\n\n  /* eslint-disable @typescript-eslint/no-empty-function */\n  initializeState(this: Layer, context: LayerContext, extension: this): void {}\n\n  updateState(this: Layer, params: UpdateParameters<Layer>, extension: this): void {}\n\n  onNeedsRedraw(this: Layer, extension: this): void {}\n\n  getNeedsPickingBuffer(this: Layer, extension: this): boolean {\n    return false;\n  }\n\n  draw(this: Layer, params: any, extension: this): void {}\n\n  finalizeState(this: Layer, context: LayerContext, extension: this): void {}\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport TransitionInterpolator from './transition-interpolator';\nimport {lerp} from '@math.gl/core';\n\nimport {flyToViewport, getFlyToDuration} from '@math.gl/web-mercator';\n\nconst LINEARLY_INTERPOLATED_PROPS = {\n  bearing: 0,\n  pitch: 0,\n  position: [0, 0, 0]\n};\nconst DEFAULT_OPTS = {\n  speed: 1.2,\n  curve: 1.414\n};\n\n/**\n * This class adapts mapbox-gl-js Map#flyTo animation so it can be used in\n * react/redux architecture.\n * mapbox-gl-js flyTo : https://www.mapbox.com/mapbox-gl-js/api/#map#flyto.\n * It implements “Smooth and efficient zooming and panning.” algorithm by\n * \"Jarke J. van Wijk and Wim A.A. Nuij\"\n */\nexport default class FlyToInterpolator extends TransitionInterpolator {\n  opts: {\n    curve: number;\n    speed: number;\n    screenSpeed?: number;\n    maxDuration?: number;\n  };\n\n  constructor(\n    opts: {\n      /** The zooming \"curve\" that will occur along the flight path. Default 1.414 */\n      curve?: number;\n      /** The average speed of the animation defined in relation to `options.curve`, it linearly affects the duration, higher speed returns smaller durations and vice versa. Default 1.2 */\n      speed?: number;\n      /** The average speed of the animation measured in screenfuls per second. Similar to `opts.speed` it linearly affects the duration,  when specified `opts.speed` is ignored. */\n      screenSpeed?: number;\n      /** Maximum duration in milliseconds, if calculated duration exceeds this value, `0` is returned. */\n      maxDuration?: number;\n    } = {}\n  ) {\n    super({\n      compare: ['longitude', 'latitude', 'zoom', 'bearing', 'pitch', 'position'],\n      extract: ['width', 'height', 'longitude', 'latitude', 'zoom', 'bearing', 'pitch', 'position'],\n      required: ['width', 'height', 'latitude', 'longitude', 'zoom']\n    });\n    this.opts = {...DEFAULT_OPTS, ...opts};\n  }\n\n  interpolateProps(startProps, endProps, t) {\n    const viewport = flyToViewport(startProps, endProps, t, this.opts);\n\n    // Linearly interpolate 'bearing', 'pitch' and 'position'.\n    // If they are not supplied, they are interpreted as zeros in viewport calculation\n    // (fallback defined in WebMercatorViewport)\n    // Because there is no guarantee that the current controller's ViewState normalizes\n    // these props, safe guard is needed to avoid generating NaNs\n    for (const key in LINEARLY_INTERPOLATED_PROPS) {\n      viewport[key] = lerp(\n        startProps[key] || LINEARLY_INTERPOLATED_PROPS[key],\n        endProps[key] || LINEARLY_INTERPOLATED_PROPS[key],\n        t\n      );\n    }\n\n    return viewport;\n  }\n\n  // computes the transition duration\n  getDuration(startProps, endProps) {\n    let {transitionDuration} = endProps;\n    if (transitionDuration === 'auto') {\n      // auto calculate duration based on start and end props\n      transitionDuration = getFlyToDuration(startProps, endProps, this.opts);\n    }\n    return transitionDuration;\n  }\n}\n", "export function applyStyles(element: HTMLElement, style?: Partial<CSSStyleDeclaration>): void {\n  if (style) {\n    Object.entries(style).map(([key, value]) => {\n      if (key.startsWith('--')) {\n        // Assume CSS variable\n        element.style.setProperty(key, value as string);\n      } else {\n        // Assume camelCase\n        element.style[key] = value;\n      }\n    });\n  }\n}\n\nexport function removeStyles(element: HTMLElement, style?: Partial<CSSStyleDeclaration>): void {\n  if (style) {\n    Object.keys(style).map(key => {\n      if (key.startsWith('--')) {\n        // Assume CSS variable\n        element.style.removeProperty(key);\n      } else {\n        // Assume camelCase\n        element.style[key] = '';\n      }\n    });\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// From https://github.com/streamich/react-use/blob/master/src/useIsomorphicLayoutEffect.ts\n// useLayoutEffect but does not trigger warning in server-side rendering\nimport {useEffect, useLayoutEffect} from 'react';\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nexport default useIsomorphicLayoutEffect;\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport * as React from 'react';\nimport {createElement} from 'react';\nimport {inheritsFrom} from './inherits-from';\nimport {Layer, View} from '@deck.gl/core';\nimport {isComponent} from './evaluate-children';\nimport type {LayersList, Viewport} from '@deck.gl/core';\n\nexport type DeckGLRenderCallbackArgs = {\n  /**\n   * the left offset of the current view, in pixels\n   */\n  x: number;\n  /**\n   * the top offset of the current view, in pixels\n   */\n  y: number;\n  /**\n   * the width of the current view, in pixels\n   */\n  width: number;\n  /**\n   * the height of the current view, in pixels\n   */\n  height: number;\n  /**\n   * the view state of the current view\n   */\n  viewState: any;\n  /**\n   * the `Viewport` instance of the current view\n   */\n  viewport: Viewport;\n};\n\nexport type DeckGLRenderCallback = (args: DeckGLRenderCallbackArgs) => React.ReactNode;\n\n// recursively wrap render callbacks in `View`\nfunction wrapInView(node: React.ReactNode | DeckGLRenderCallback): React.ReactNode {\n  if (typeof node === 'function') {\n    // React.Children does not traverse functions.\n    // All render callbacks must be protected under a <View>\n    // @ts-expect-error View is not a ReactJSXElement constructor. Only used as a temporary wrapper and will be removed in extractJSXLayers\n    return createElement(View, {}, node);\n  }\n  if (Array.isArray(node)) {\n    return node.map(wrapInView);\n  }\n  if (isComponent(node)) {\n    if (node.type === React.Fragment) {\n      return wrapInView(node.props.children);\n    }\n    if (inheritsFrom(node.type, View)) {\n      return node;\n    }\n  }\n  return node;\n}\n\n// extracts any deck.gl layers masquerading as react elements from props.children\nexport default function extractJSXLayers({\n  children,\n  layers = [],\n  views = null\n}: {\n  children?: React.ReactNode | DeckGLRenderCallback;\n  layers?: LayersList;\n  views?: View | View[] | null;\n}): {\n  children: React.ReactNode[];\n  layers: LayersList;\n  views: View | View[] | null;\n} {\n  const reactChildren: React.ReactNode[] = []; // extract real react elements (i.e. not deck.gl layers)\n  const jsxLayers: LayersList = []; // extracted layer from react children, will add to deck.gl layer array\n  const jsxViews: Record<string, View> = {};\n\n  // React.children\n  React.Children.forEach(wrapInView(children), reactElement => {\n    if (isComponent(reactElement)) {\n      // For some reason Children.forEach doesn't filter out `null`s\n      const ElementType = reactElement.type;\n      if (inheritsFrom(ElementType, Layer)) {\n        const layer = createLayer(ElementType, reactElement.props);\n        jsxLayers.push(layer);\n      } else {\n        reactChildren.push(reactElement);\n      }\n\n      // empty id => default view\n      if (inheritsFrom(ElementType, View) && ElementType !== View && reactElement.props.id) {\n        // @ts-ignore Cannot instantiate an abstract class (View)\n        const view = new ElementType(reactElement.props);\n        jsxViews[view.id] = view;\n      }\n    } else if (reactElement) {\n      reactChildren.push(reactElement);\n    }\n  });\n\n  // Avoid modifying views if no JSX views were found\n  if (Object.keys(jsxViews).length > 0) {\n    // If a view is specified in both views prop and JSX, use the one in views\n    if (Array.isArray(views)) {\n      views.forEach(view => {\n        jsxViews[view.id] = view;\n      });\n    } else if (views) {\n      jsxViews[views.id] = views;\n    }\n    views = Object.values(jsxViews);\n  }\n\n  // Avoid modifying layers array if no JSX layers were found\n  layers = jsxLayers.length > 0 ? [...jsxLayers, ...layers] : layers;\n\n  return {layers, children: reactChildren, views};\n}\n\nfunction createLayer(LayerType: typeof Layer, reactProps: any): Layer {\n  const props = {};\n  // Layer.defaultProps is treated as ReactElement.defaultProps and merged into react props\n  // Remove them\n  const defaultProps = LayerType.defaultProps || {};\n  for (const key in reactProps) {\n    if (defaultProps[key] !== reactProps[key]) {\n      props[key] = reactProps[key];\n    }\n  }\n  // @ts-ignore Cannot instantiate an abstract class (Layer)\n  return new LayerType(props);\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Check if one JavaScript class inherits from another\nexport function inheritsFrom<T>(Type: any, ParentType: T): Type is T {\n  while (Type) {\n    if (Type === ParentType) {\n      return true;\n    }\n    Type = Object.getPrototypeOf(Type);\n  }\n  return false;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport * as React from 'react';\nimport {cloneElement} from 'react';\n\nconst MAP_STYLE = {position: 'absolute', zIndex: -1};\n\nexport default function evaluateChildren(\n  children: React.ReactNode | Function,\n  childProps: any\n): React.ReactNode {\n  if (typeof children === 'function') {\n    return children(childProps);\n  }\n  if (Array.isArray(children)) {\n    return children.map(child => evaluateChildren(child, childProps));\n  }\n  if (isComponent(children)) {\n    // Special treatment for react-map-gl's Map component\n    // to support shorthand use case <DeckGL><StaticMap /></DeckGL>\n    if (isReactMap(children)) {\n      // Place map under the canvas\n      childProps.style = MAP_STYLE;\n      return cloneElement(children, childProps);\n    }\n    if (needsDeckGLViewProps(children)) {\n      return cloneElement(children, childProps);\n    }\n  }\n\n  return children;\n}\n\nexport function isComponent(child: React.ReactNode): child is React.ReactElement {\n  return (child && typeof child === 'object' && 'type' in child) || false;\n}\n\nfunction isReactMap(child: React.ReactElement): boolean {\n  return child.props?.mapStyle;\n}\n\nfunction needsDeckGLViewProps(child: React.ReactElement): boolean {\n  const componentClass = child.type;\n  // @ts-expect-error deckGLViewProps is a custom hack defined on the constructor (nebula.gl)\n  return componentClass && componentClass.deckGLViewProps;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport * as React from 'react';\nimport {createElement} from 'react';\nimport {View} from '@deck.gl/core';\nimport {inheritsFrom} from './inherits-from';\nimport evaluateChildren, {isComponent} from './evaluate-children';\n\nimport type {ViewOrViews} from '../deckgl';\nimport type {Deck, Viewport} from '@deck.gl/core';\nimport {DeckGlContext, type DeckGLContextValue} from './deckgl-context';\n\n// Iterate over views and reposition children associated with views\n// TODO - Can we supply a similar function for the non-React case?\nexport default function positionChildrenUnderViews<ViewsT extends ViewOrViews>({\n  children,\n  deck,\n  ContextProvider = DeckGlContext.Provider\n}: {\n  children: React.ReactNode[];\n  deck?: Deck<ViewsT>;\n  ContextProvider?: React.Context<DeckGLContextValue>['Provider'];\n}): React.ReactNode[] {\n  // @ts-expect-error accessing protected property\n  const {viewManager} = deck || {};\n\n  if (!viewManager || !viewManager.views.length) {\n    return [];\n  }\n\n  const views: Record<\n    string,\n    {\n      viewport: Viewport;\n      children: React.ReactNode[];\n    }\n  > = {};\n  const defaultViewId = (viewManager.views[0] as View).id;\n\n  // Sort children by view id\n  for (const child of children) {\n    // Unless child is a View, position / render as part of the default view\n    let viewId = defaultViewId;\n    let viewChildren = child;\n\n    if (isComponent(child) && inheritsFrom(child.type, View)) {\n      viewId = child.props.id || defaultViewId;\n      viewChildren = child.props.children;\n    }\n\n    const viewport = viewManager.getViewport(viewId) as Viewport;\n    const viewState = viewManager.getViewState(viewId);\n\n    // Drop (auto-hide) elements with viewId that are not matched by any current view\n    if (viewport) {\n      viewState.padding = viewport.padding;\n      const {x, y, width, height} = viewport;\n      // Resolve potentially relative dimensions using the deck.gl container size\n      viewChildren = evaluateChildren(viewChildren, {\n        x,\n        y,\n        width,\n        height,\n        viewport,\n        viewState\n      });\n\n      if (!views[viewId]) {\n        views[viewId] = {\n          viewport,\n          children: []\n        };\n      }\n      views[viewId].children.push(viewChildren);\n    }\n  }\n\n  // Render views\n  return Object.keys(views).map(viewId => {\n    const {viewport, children: viewChildren} = views[viewId];\n    const {x, y, width, height} = viewport;\n    const style = {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width,\n      height\n    };\n\n    const key = `view-${viewId}`;\n    // If children is passed as an array, React will throw the \"each element in a list needs\n    // a key\" warning. Sending each child as separate arguments removes this requirement.\n    const viewElement = createElement('div', {key, id: key, style}, ...viewChildren);\n\n    const contextValue: DeckGLContextValue = {\n      deck,\n      viewport,\n      // @ts-expect-error accessing protected property\n      container: deck.canvas.offsetParent,\n      // @ts-expect-error accessing protected property\n      eventManager: deck.eventManager,\n      onViewStateChange: params => {\n        params.viewId = viewId;\n        // @ts-expect-error accessing protected method\n        deck._onViewStateChange(params);\n      },\n      widgets: []\n    };\n    const providerKey = `view-${viewId}-context`;\n    return createElement(ContextProvider, {key: providerKey, value: contextValue}, viewElement);\n  });\n}\n", "import {createContext} from 'react';\nimport type {EventManager} from 'mjolnir.js';\nimport type {Deck, DeckProps, Viewport, Widget} from '@deck.gl/core';\n\nexport type DeckGLContextValue = {\n  viewport: Viewport;\n  container: HTMLElement;\n  eventManager: EventManager;\n  onViewStateChange: DeckProps['onViewStateChange'];\n  deck?: Deck<any>;\n  widgets?: Widget[];\n};\n\n// @ts-ignore\nexport const DeckGlContext = createContext<DeckGLContextValue>();\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport * as React from 'react';\n\nconst CANVAS_ONLY_STYLES = {\n  mixBlendMode: null\n};\n\nexport default function extractStyles({\n  width,\n  height,\n  style\n}: {\n  width?: string | number;\n  height?: string | number;\n  style?: Partial<CSSStyleDeclaration> | null;\n}): {\n  containerStyle: React.CSSProperties;\n  canvasStyle: React.CSSProperties;\n} {\n  // This styling is enforced for correct positioning with children\n  const containerStyle: React.CSSProperties = {\n    position: 'absolute',\n    zIndex: 0,\n    left: 0,\n    top: 0,\n    width,\n    height\n  };\n\n  // Fill the container\n  const canvasStyle: React.CSSProperties = {\n    left: 0,\n    top: 0\n  };\n\n  if (style) {\n    for (const key in style) {\n      if (key in CANVAS_ONLY_STYLES) {\n        // apply style to the canvas, but not deck's children, e.g. mix-blend-mode\n        canvasStyle[key] = style[key];\n      } else {\n        // apply style to the container, e.g. position/flow settings\n        containerStyle[key] = style[key];\n      }\n    }\n  }\n\n  return {containerStyle, canvasStyle};\n}\n", "/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const NULL = null;\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {import('./index').ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tif (node && node.parentNode) node.parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\nimport { NULL, UNDEFINED } from './constants';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != NULL) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === UNDEFINED) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, NULL);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {import('./internal').VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: NULL,\n\t\t_parent: NULL,\n\t\t_depth: 0,\n\t\t_dom: NULL,\n\t\t_component: NULL,\n\t\tconstructor: UNDEFINED,\n\t\t_original: original == NULL ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == NULL && options.vnode != NULL) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: NULL };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != NULL && vnode.constructor == UNDEFINED;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE, NULL } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != NULL && this._nextState != this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == NULL) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](https://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == NULL) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: NULL;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != NULL && sibling._dom != NULL) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : NULL;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (component._parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tcomponent._parentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tcomponent._parentDom.namespaceURI,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : NULL,\n\t\t\tcommitQueue,\n\t\t\toldDom == NULL ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != NULL && vnode._component != NULL) {\n\t\tvnode._dom = vnode._component.base = NULL;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != NULL && child._dom != NULL) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce != options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c,\n\t\tl = 1;\n\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile (rerenderQueue.length) {\n\t\t// Keep the rerender queue sorted by (depth, insertion order). The queue\n\t\t// will initially be sorted on the first iteration only if it has more than 1 item.\n\t\t//\n\t\t// New items can be added to the queue e.g. when rerendering a provider, so we want to\n\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t// single pass\n\t\tif (rerenderQueue.length > l) {\n\t\t\trerenderQueue.sort(depthSort);\n\t\t}\n\n\t\tc = rerenderQueue.shift();\n\t\tl = rerenderQueue.length;\n\n\t\tif (c._dirty) {\n\t\t\trenderComponent(c);\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n", "import { IS_NON_DIMENSIONAL, NULL, SVG_NAMESPACE } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] == '-') {\n\t\tstyle.setProperty(key, value == NULL ? '' : value);\n\t} else if (value == NULL) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\nconst CAPTURE_REGEX = /(PointerCapture)$|Capture$/i;\n\n// A logical clock to solve issues like https://github.com/preactjs/preact/issues/3927.\n// When the DOM performs an event it leaves micro-ticks in between bubbling up which means that\n// an event can trigger on a newly reated DOM-node while the event bubbles up.\n//\n// Originally inspired by Vue\n// (https://github.com/vuejs/core/blob/caeb8a68811a1b0f79/packages/runtime-dom/src/modules/events.ts#L90-L101),\n// but modified to use a logical clock instead of Date.now() in case event handlers get attached\n// and events get dispatched during the same millisecond.\n//\n// The clock is incremented after each new event dispatch. This allows 1 000 000 new events\n// per second for over 280 years before the value reaches Number.MAX_SAFE_INTEGER (2**53 - 1).\nlet eventClock = 0;\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {string} namespace Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, namespace) {\n\tlet useCapture;\n\n\to: if (name == 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] != oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] == 'o' && name[1] == 'n') {\n\t\tuseCapture = name != (name = name.replace(CAPTURE_REGEX, '$1'));\n\t\tconst lowerCaseName = name.toLowerCase();\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (lowerCaseName in dom || name == 'onFocusOut' || name == 'onFocusIn')\n\t\t\tname = lowerCaseName.slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = eventClock;\n\t\t\t\tdom.addEventListener(\n\t\t\t\t\tname,\n\t\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\t\tuseCapture\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeEventListener(\n\t\t\t\tname,\n\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\tuseCapture\n\t\t\t);\n\t\t}\n\t} else {\n\t\tif (namespace == SVG_NAMESPACE) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname != 'width' &&\n\t\t\tname != 'height' &&\n\t\t\tname != 'href' &&\n\t\t\tname != 'list' &&\n\t\t\tname != 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname != 'tabIndex' &&\n\t\t\tname != 'download' &&\n\t\t\tname != 'rowSpan' &&\n\t\t\tname != 'colSpan' &&\n\t\t\tname != 'role' &&\n\t\t\tname != 'popover' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == NULL ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != NULL && (value !== false || name[4] == '-')) {\n\t\t\tdom.setAttribute(name, name == 'popover' && value == true ? '' : value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Create an event proxy function.\n * @param {boolean} useCapture Is the event handler for the capture phase.\n * @private\n */\nfunction createEventProxy(useCapture) {\n\t/**\n\t * Proxy an event to hooked event handlers\n\t * @param {import('../internal').PreactEvent} e The event object from the browser\n\t * @private\n\t */\n\treturn function (e) {\n\t\tif (this._listeners) {\n\t\t\tconst eventHandler = this._listeners[e.type + useCapture];\n\t\t\tif (e._dispatched == NULL) {\n\t\t\t\te._dispatched = eventClock++;\n\n\t\t\t\t// When `e._dispatched` is smaller than the time when the targeted event\n\t\t\t\t// handler was attached we know we have bubbled up to an element that was added\n\t\t\t\t// during patching the DOM.\n\t\t\t} else if (e._dispatched < eventHandler._attached) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t\t}\n\t};\n}\n\nconst eventProxy = createEventProxy(false);\nconst eventProxyCapture = createEventProxy(true);\n", "import { enqueueRender } from './component';\nimport { NULL } from './constants';\n\nexport let i = 0;\n\nexport function createContext(defaultValue) {\n\tfunction Context(props) {\n\t\tif (!this.getChildContext) {\n\t\t\t/** @type {Set<import('./internal').Component> | null} */\n\t\t\tlet subs = new Set();\n\t\t\tlet ctx = {};\n\t\t\tctx[Context._id] = this;\n\n\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\tthis.componentWillUnmount = () => {\n\t\t\t\tsubs = NULL;\n\t\t\t};\n\n\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t// @ts-expect-error even\n\t\t\t\tif (this.props.value != _props.value) {\n\t\t\t\t\tsubs.forEach(c => {\n\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.sub = c => {\n\t\t\t\tsubs.add(c);\n\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\tif (subs) {\n\t\t\t\t\t\tsubs.delete(c);\n\t\t\t\t\t}\n\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\n\t\treturn props.children;\n\t}\n\n\tContext._id = '__cC' + i++;\n\tContext._defaultValue = defaultValue;\n\n\t/** @type {import('./internal').FunctionComponent} */\n\tContext.Consumer = (props, contextValue) => {\n\t\treturn props.children(contextValue);\n\t};\n\n\t// we could also get rid of _contextRef entirely\n\tContext.Provider =\n\t\tContext._contextRef =\n\t\tContext.Consumer.contextType =\n\t\t\tContext;\n\n\treturn Context;\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport {\n\tEMPTY_OBJ,\n\tEMPTY_ARR,\n\tINSERT_VNODE,\n\tMATCHED,\n\tUNDEFINED,\n\tNULL\n} from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\toldDom = constructNewChildrenArray(\n\t\tnewParentVNode,\n\t\trenderResult,\n\t\toldChildren,\n\t\toldDom,\n\t\tnewChildrenLength\n\t);\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (childVNode == NULL) continue;\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index == -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tlet result = diff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, NULL, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == NULL && newDom != NULL) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tlet shouldPlace = !!(childVNode._flags & INSERT_VNODE);\n\t\tif (shouldPlace || oldVNode._children === childVNode._children) {\n\t\t\toldDom = insert(childVNode, oldDom, parentDom, shouldPlace);\n\t\t} else if (typeof childVNode.type == 'function' && result !== UNDEFINED) {\n\t\t\toldDom = result;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(\n\tnewParentVNode,\n\trenderResult,\n\toldChildren,\n\toldDom,\n\tnewChildrenLength\n) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = new Array(newChildrenLength);\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == NULL ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tnewParentVNode._children[i] = NULL;\n\t\t\tcontinue;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tNULL,\n\t\t\t\tchildVNode,\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (childVNode.constructor == UNDEFINED && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : NULL,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tconst matchingIndex = (childVNode._index = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t));\n\n\t\toldVNode = NULL;\n\t\tif (matchingIndex != -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original == null\n\t\tconst isMounting = oldVNode == NULL || oldVNode._original == NULL;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\t// When the array of children is growing we need to decrease the skew\n\t\t\t\t// as we are adding a new element to the array.\n\t\t\t\t// Example:\n\t\t\t\t// [1, 2, 3] --> [0, 1, 2, 3]\n\t\t\t\t// oldChildren   newChildren\n\t\t\t\t//\n\t\t\t\t// The new element is at index 0, so our skew is 0,\n\t\t\t\t// we need to decrease the skew as we are adding a new element.\n\t\t\t\t// The decrease will cause us to compare the element at position 1\n\t\t\t\t// with value 1 with the element at position 0 with value 0.\n\t\t\t\t//\n\t\t\t\t// A linear concept is applied when the array is shrinking,\n\t\t\t\t// if the length is unchanged we can assume that no skew\n\t\t\t\t// changes are needed.\n\t\t\t\tif (newChildrenLength > oldChildrenLength) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else if (newChildrenLength < oldChildrenLength) {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex != skewedIndex) {\n\t\t\t// When we move elements around i.e. [0, 1, 2] --> [1, 0, 2]\n\t\t\t// --> we diff 1, we find it at position 1 while our skewed index is 0 and our skew is 0\n\t\t\t//     we set the skew to 1 as we found an offset.\n\t\t\t// --> we diff 0, we find it at position 0 while our skewed index is at 2 and our skew is 1\n\t\t\t//     this makes us increase the skew again.\n\t\t\t// --> we diff 2, we find it at position 2 while our skewed index is at 4 and our skew is 2\n\t\t\t//\n\t\t\t// this becomes an optimization question where currently we see a 1 element offset as an insertion\n\t\t\t// or deletion i.e. we optimize for [0, 1, 2] --> [9, 0, 1, 2]\n\t\t\t// while a more than 1 offset we see as a swap.\n\t\t\t// We could probably build heuristics for having an optimized course of action here as well, but\n\t\t\t// might go at the cost of some bytes.\n\t\t\t//\n\t\t\t// If we wanted to optimize for i.e. only swaps we'd just do the last two code-branches and have\n\t\t\t// only the first item be a re-scouting and all the others fall in their skewed counter-part.\n\t\t\t// We could also further optimize for swaps\n\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\tskew--;\n\t\t\t} else if (matchingIndex == skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else {\n\t\t\t\tif (matchingIndex > skewedIndex) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\n\t\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t\t// match the new skew index (i + new skew)\n\t\t\t\t// In the former two branches we know that it matches after skewing\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != NULL && (oldVNode._flags & MATCHED) == 0) {\n\t\t\t\tif (oldVNode._dom == oldDom) {\n\t\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @param {boolean} shouldPlace\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom, shouldPlace) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom, shouldPlace);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tif (shouldPlace) {\n\t\t\tif (oldDom && parentVNode.type && !oldDom.parentNode) {\n\t\t\t\toldDom = getDomSibling(parentVNode);\n\t\t\t}\n\t\t\tparentDom.insertBefore(parentVNode._dom, oldDom || NULL);\n\t\t}\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != NULL && oldDom.nodeType == 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == NULL || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet oldVNode = oldChildren[skewedIndex];\n\tconst matched = oldVNode != NULL && (oldVNode._flags & MATCHED) == 0;\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\t//\n\t// If there is an unkeyed functional VNode, that isn't a built-in like our Fragment,\n\t// we should not search as we risk re-using state of an unrelated VNode. (reverted for now)\n\tlet shouldSearch =\n\t\t// (typeof type != 'function' || type === Fragment || key) &&\n\t\tremainingOldChildren > (matched ? 1 : 0);\n\n\tif (\n\t\t(oldVNode === NULL && childVNode.key == null) ||\n\t\t(matched && key == oldVNode.key && type == oldVNode.type)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\tlet x = skewedIndex - 1;\n\t\tlet y = skewedIndex + 1;\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tconst childIndex = x >= 0 ? x-- : y++;\n\t\t\toldVNode = oldChildren[childIndex];\n\t\t\tif (\n\t\t\t\toldVNode != NULL &&\n\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\tkey == oldVNode.key &&\n\t\t\t\ttype == oldVNode.type\n\t\t\t) {\n\t\t\t\treturn childIndex;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n", "import {\n\tEMPTY_OBJ,\n\tMATH_NAMESPACE,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tNULL,\n\tRESET_MODE,\n\tSVG_NAMESPACE,\n\tUNDEFINED,\n\tXHTML_NAMESPACE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * @template {any} T\n * @typedef {import('../internal').Ref<T>} Ref<T>\n */\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor != UNDEFINED) return NULL;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\t\t\tconst isClassComponent =\n\t\t\t\t'prototype' in newType && newType.prototype.render;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (isClassComponent) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (isClassComponent && c._nextState == NULL) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (isClassComponent && newType.getDerivedStateFromProps != NULL) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tc.componentWillMount != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidMount != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != NULL &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original == oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original != oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.some(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != NULL) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidUpdate != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif (isClassComponent) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != NULL) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (isClassComponent && !isNew && c.getSnapshotBeforeUpdate != NULL) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != NULL && tmp.type === Fragment && tmp.key == NULL;\n\t\t\tlet renderResult = tmp;\n\n\t\t\tif (isTopLevelFragment) {\n\t\t\t\trenderResult = cloneNode(tmp.props.children);\n\t\t\t}\n\n\t\t\toldDom = diffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnamespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = NULL;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = NULL;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != NULL) {\n\t\t\t\tif (e.then) {\n\t\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t\t: MODE_SUSPENDED;\n\n\t\t\t\t\twhile (oldDom && oldDom.nodeType == 8 && oldDom.nextSibling) {\n\t\t\t\t\t\toldDom = oldDom.nextSibling;\n\t\t\t\t\t}\n\n\t\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = NULL;\n\t\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = excessDomChildren.length; i--; ) {\n\t\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t\t}\n\t\t\t\t\tmarkAsForce(newVNode);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\tif (!e.then) markAsForce(newVNode);\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == NULL &&\n\t\tnewVNode._original == oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\toldDom = newVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n\n\treturn newVNode._flags & MODE_SUSPENDED ? undefined : oldDom;\n}\n\nfunction markAsForce(vnode) {\n\tif (vnode && vnode._component) vnode._component._force = true;\n\tif (vnode && vnode._children) vnode._children.forEach(markAsForce);\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\nfunction cloneNode(node) {\n\tif (\n\t\ttypeof node != 'object' ||\n\t\tnode == NULL ||\n\t\t(node._depth && node._depth > 0)\n\t) {\n\t\treturn node;\n\t}\n\n\tif (isArray(node)) {\n\t\treturn node.map(cloneNode);\n\t}\n\n\treturn assign({}, node);\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting namespaces when descending through the tree.\n\tif (nodeType == 'svg') namespace = SVG_NAMESPACE;\n\telse if (nodeType == 'math') namespace = MATH_NAMESPACE;\n\telse if (!namespace) namespace = XHTML_NAMESPACE;\n\n\tif (excessDomChildren != NULL) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value == !!nodeType &&\n\t\t\t\t(nodeType ? value.localName == nodeType : value.nodeType == 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = NULL;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == NULL) {\n\t\tif (nodeType == NULL) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = document.createElementNS(\n\t\t\tnamespace,\n\t\t\tnodeType,\n\t\t\tnewProps.is && newProps\n\t\t);\n\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tif (isHydrating) {\n\t\t\tif (options._hydrationMismatch)\n\t\t\t\toptions._hydrationMismatch(newVNode, excessDomChildren);\n\t\t\tisHydrating = false;\n\t\t}\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = NULL;\n\t}\n\n\tif (nodeType == NULL) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data != newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != NULL) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (!(i in newProps)) {\n\t\t\t\tif (\n\t\t\t\t\t(i == 'value' && 'defaultValue' in newProps) ||\n\t\t\t\t\t(i == 'checked' && 'defaultChecked' in newProps)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetProperty(dom, i, NULL, value, namespace);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html != oldHtml.__html && newHtml.__html != dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\t// @ts-expect-error\n\t\t\t\tnewVNode.type == 'template' ? dom.content : dom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnodeType == 'foreignObject' ? XHTML_NAMESPACE : namespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != NULL) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (nodeType == 'progress' && inputValue == NULL) {\n\t\t\t\tdom.removeAttribute('value');\n\t\t\t} else if (\n\t\t\t\tinputValue != UNDEFINED &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType == 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType == 'option' && inputValue != oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], namespace);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked != UNDEFINED && checked != dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any> & { _unmount?: unknown }} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') {\n\t\t\tlet hasRefUnmount = typeof ref._unmount == 'function';\n\t\t\tif (hasRefUnmount) {\n\t\t\t\t// @ts-ignore TS doesn't like moving narrowing checks into variables\n\t\t\t\tref._unmount();\n\t\t\t}\n\n\t\t\tif (!hasRefUnmount || value != NULL) {\n\t\t\t\t// Store the cleanup function on the function\n\t\t\t\t// instance object itself to avoid shape\n\t\t\t\t// transitioning vnode\n\t\t\t\tref._unmount = ref(value);\n\t\t\t}\n\t\t} else ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current == vnode._dom) {\n\t\t\tapplyRef(r, NULL, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != NULL) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = NULL;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type != 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\tvnode._component = vnode._parent = vnode._dom = UNDEFINED;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ, NULL } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\t// https://github.com/preactjs/preact/issues/3794\n\tif (parentDom == document) {\n\t\tparentDom = document.documentElement;\n\t}\n\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? NULL\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, NULL, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.namespaceURI,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? NULL\n\t\t\t\t: parentDom.firstChild\n\t\t\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t\t\t: NULL,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t\t? oldVNode._dom\n\t\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\nimport { NULL, UNDEFINED } from './constants';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === UNDEFINED && defaultProps != UNDEFINED) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tNULL\n\t);\n}\n", "import { NULL } from '../constants';\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component,\n\t\t/** @type {import('../internal').ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != NULL) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != NULL) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "const ENCODED_ENTITIES = /[\"&<]/;\n\n/** @param {string} str */\nexport function encodeEntities(str) {\n\t// Skip all work for strings with no entities needing encoding:\n\tif (str.length === 0 || ENCODED_ENTITIES.test(str) === false) return str;\n\n\tlet last = 0,\n\t\ti = 0,\n\t\tout = '',\n\t\tch = '';\n\n\t// Seek forward in str until the next entity char:\n\tfor (; i < str.length; i++) {\n\t\tswitch (str.charCodeAt(i)) {\n\t\t\tcase 34:\n\t\t\t\tch = '&quot;';\n\t\t\t\tbreak;\n\t\t\tcase 38:\n\t\t\t\tch = '&amp;';\n\t\t\t\tbreak;\n\t\t\tcase 60:\n\t\t\t\tch = '&lt;';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t\t// Append skipped/buffered characters and the encoded entity:\n\t\tif (i !== last) out += str.slice(last, i);\n\t\tout += ch;\n\t\t// Start the next seek/buffer after the entity's offset:\n\t\tlast = i + 1;\n\t}\n\tif (i !== last) out += str.slice(last, i);\n\treturn out;\n}\n", "/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const NULL = null;\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { options, Fragment } from 'preact';\nimport { encodeEntities } from './utils';\nimport { IS_NON_DIMENSIONAL } from '../../src/constants';\n\nlet vnodeId = 0;\n\nconst isArray = Array.isArray;\n\n/**\n * @fileoverview\n * This file exports various methods that implement Babel's \"automatic\" JSX runtime API:\n * - jsx(type, props, key)\n * - jsxs(type, props, key)\n * - jsxDEV(type, props, key, __source, __self)\n *\n * The implementation of createVNode here is optimized for performance.\n * Benchmarks: https://esbench.com/bench/5f6b54a0b4632100a7dcd2b3\n */\n\n/**\n * JSX.Element factory used by Babel's {runtime:\"automatic\"} JSX transform\n * @param {VNode['type']} type\n * @param {VNode['props']} props\n * @param {VNode['key']} [key]\n * @param {unknown} [isStaticChildren]\n * @param {unknown} [__source]\n * @param {unknown} [__self]\n */\nfunction createVNode(type, props, key, isStaticChildren, __source, __self) {\n\tif (!props) props = {};\n\t// We'll want to preserve `ref` in props to get rid of the need for\n\t// forwardRef components in the future, but that should happen via\n\t// a separate PR.\n\tlet normalizedProps = props,\n\t\tref,\n\t\ti;\n\n\tif ('ref' in normalizedProps) {\n\t\tnormalizedProps = {};\n\t\tfor (i in props) {\n\t\t\tif (i == 'ref') {\n\t\t\t\tref = props[i];\n\t\t\t} else {\n\t\t\t\tnormalizedProps[i] = props[i];\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @type {VNode & { __source: any; __self: any }} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops: normalizedProps,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: --vnodeId,\n\t\t_index: -1,\n\t\t_flags: 0,\n\t\t__source,\n\t\t__self\n\t};\n\n\t// If a Component VNode, check for and apply defaultProps.\n\t// Note: `type` is often a String, and can be `undefined` in development.\n\tif (typeof type === 'function' && (ref = type.defaultProps)) {\n\t\tfor (i in ref)\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = ref[i];\n\t\t\t}\n\t}\n\n\tif (options.vnode) options.vnode(vnode);\n\treturn vnode;\n}\n\n/**\n * Create a template vnode. This function is not expected to be\n * used directly, but rather through a precompile JSX transform\n * @param {string[]} templates\n * @param  {Array<string | null | VNode>} exprs\n * @returns {VNode}\n */\nfunction jsxTemplate(templates, ...exprs) {\n\tconst vnode = createVNode(Fragment, { tpl: templates, exprs });\n\t// Bypass render to string top level Fragment optimization\n\tvnode.key = vnode._vnode;\n\treturn vnode;\n}\n\nconst JS_TO_CSS = {};\nconst CSS_REGEX = /[A-Z]/g;\n\n/**\n * Unwrap potential signals.\n * @param {*} value\n * @returns {*}\n */\nfunction normalizeAttrValue(value) {\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.valueOf === 'function'\n\t\t? value.valueOf()\n\t\t: value;\n}\n\n/**\n * Serialize an HTML attribute to a string. This function is not\n * expected to be used directly, but rather through a precompile\n * JSX transform\n * @param {string} name The attribute name\n * @param {*} value The attribute value\n * @returns {string}\n */\nfunction jsxAttr(name, value) {\n\tif (options.attr) {\n\t\tconst result = options.attr(name, value);\n\t\tif (typeof result === 'string') return result;\n\t}\n\n\tvalue = normalizeAttrValue(value);\n\n\tif (name === 'ref' || name === 'key') return '';\n\tif (name === 'style' && typeof value === 'object') {\n\t\tlet str = '';\n\t\tfor (let prop in value) {\n\t\t\tlet val = value[prop];\n\t\t\tif (val != null && val !== '') {\n\t\t\t\tconst name =\n\t\t\t\t\tprop[0] == '-'\n\t\t\t\t\t\t? prop\n\t\t\t\t\t\t: JS_TO_CSS[prop] ||\n\t\t\t\t\t\t\t(JS_TO_CSS[prop] = prop.replace(CSS_REGEX, '-$&').toLowerCase());\n\n\t\t\t\tlet suffix = ';';\n\t\t\t\tif (\n\t\t\t\t\ttypeof val === 'number' &&\n\t\t\t\t\t// Exclude custom-attributes\n\t\t\t\t\t!name.startsWith('--') &&\n\t\t\t\t\t!IS_NON_DIMENSIONAL.test(name)\n\t\t\t\t) {\n\t\t\t\t\tsuffix = 'px;';\n\t\t\t\t}\n\t\t\t\tstr = str + name + ':' + val + suffix;\n\t\t\t}\n\t\t}\n\t\treturn name + '=\"' + encodeEntities(str) + '\"';\n\t}\n\n\tif (\n\t\tvalue == null ||\n\t\tvalue === false ||\n\t\ttypeof value === 'function' ||\n\t\ttypeof value === 'object'\n\t) {\n\t\treturn '';\n\t} else if (value === true) return name;\n\n\treturn name + '=\"' + encodeEntities('' + value) + '\"';\n}\n\n/**\n * Escape a dynamic child passed to `jsxTemplate`. This function\n * is not expected to be used directly, but rather through a\n * precompile JSX transform\n * @param {*} value\n * @returns {string | null | VNode | Array<string | null | VNode>}\n */\nfunction jsxEscape(value) {\n\tif (\n\t\tvalue == null ||\n\t\ttypeof value === 'boolean' ||\n\t\ttypeof value === 'function'\n\t) {\n\t\treturn null;\n\t}\n\n\tif (typeof value === 'object') {\n\t\t// Check for VNode\n\t\tif (value.constructor === undefined) return value;\n\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\tvalue[i] = jsxEscape(value[i]);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t}\n\n\treturn encodeEntities('' + value);\n}\n\nexport {\n\tcreateVNode as jsx,\n\tcreateVNode as jsxs,\n\tcreateVNode as jsxDEV,\n\tFragment,\n\t// precompiled JSX transform\n\tjsxTemplate,\n\tjsxAttr,\n\tjsxEscape\n};\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nexport const IconButton = props => {\n  const {className, label, onClick} = props;\n  return (\n    <div className=\"deck-widget-button\">\n      <button\n        className={`deck-widget-icon-button ${className}`}\n        type=\"button\"\n        onClick={onClick}\n        title={label}\n      >\n        <div className=\"deck-widget-icon\" />\n      </button>\n    </div>\n  );\n};\n\nexport const ButtonGroup = props => {\n  const {children, orientation} = props;\n  return <div className={`deck-widget-button-group ${orientation}`}>{children}</div>;\n};\n\nexport const GroupedIconButton = props => {\n  const {className, label, onClick} = props;\n  return (\n    <button\n      className={`deck-widget-icon-button ${className}`}\n      type=\"button\"\n      onClick={onClick}\n      title={label}\n    >\n      <div className=\"deck-widget-icon\" />\n    </button>\n  );\n};\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* global document */\nimport {\n  _deepEqual as deepEqual,\n  _applyStyles as applyStyles,\n  _removeStyles as removeStyles\n} from '@deck.gl/core';\nimport type {Deck, Widget, WidgetPlacement} from '@deck.gl/core';\nimport {render} from 'preact';\nimport {IconButton} from './components';\n\nexport type FullscreenWidgetProps = {\n  id?: string;\n  /**\n   * Widget positioning within the view. Default 'top-left'.\n   */\n  placement?: WidgetPlacement;\n  /**\n   * A [compatible DOM element](https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen#Compatible_elements) which should be made full screen.\n   * By default, the map container element will be made full screen.\n   */\n  /* eslint-enable max-len */\n  container?: HTMLElement;\n  /**\n   * Tooltip message when out of fullscreen.\n   */\n  enterLabel?: string;\n  /**\n   * Tooltip message when fullscreen.\n   */\n  exitLabel?: string;\n  /**\n   * CSS inline style overrides.\n   */\n  style?: Partial<CSSStyleDeclaration>;\n  /**\n   * Additional CSS class.\n   */\n  className?: string;\n};\n\nexport class FullscreenWidget implements Widget<FullscreenWidgetProps> {\n  id = 'fullscreen';\n  props: FullscreenWidgetProps;\n  placement: WidgetPlacement = 'top-left';\n\n  deck?: Deck<any>;\n  element?: HTMLDivElement;\n\n  fullscreen: boolean = false;\n\n  constructor(props: FullscreenWidgetProps) {\n    this.id = props.id ?? this.id;\n    this.placement = props.placement ?? this.placement;\n\n    this.props = {\n      ...props,\n      enterLabel: props.enterLabel ?? 'Enter Fullscreen',\n      exitLabel: props.exitLabel ?? 'Exit Fullscreen',\n      style: props.style ?? {}\n    };\n  }\n\n  onAdd({deck}: {deck: Deck<any>}): HTMLDivElement {\n    const {style, className} = this.props;\n    const el = document.createElement('div');\n    el.classList.add('deck-widget', 'deck-widget-fullscreen');\n    if (className) el.classList.add(className);\n    applyStyles(el, style);\n    this.deck = deck;\n    this.element = el;\n    this.update();\n    document.addEventListener('fullscreenchange', this.onFullscreenChange.bind(this));\n    return el;\n  }\n\n  onRemove() {\n    this.deck = undefined;\n    this.element = undefined;\n    document.removeEventListener('fullscreenchange', this.onFullscreenChange.bind(this));\n  }\n\n  private update() {\n    const {enterLabel, exitLabel} = this.props;\n    const element = this.element;\n    if (!element) {\n      return;\n    }\n\n    const ui = (\n      <IconButton\n        onClick={this.handleClick.bind(this)}\n        label={this.fullscreen ? exitLabel : enterLabel}\n        className={this.fullscreen ? 'deck-widget-fullscreen-exit' : 'deck-widget-fullscreen-enter'}\n      />\n    );\n    render(ui, element);\n  }\n\n  setProps(props: Partial<FullscreenWidgetProps>) {\n    this.placement = props.placement ?? this.placement;\n    const oldProps = this.props;\n    const el = this.element;\n    if (el) {\n      if (oldProps.className !== props.className) {\n        if (oldProps.className) el.classList.remove(oldProps.className);\n        if (props.className) el.classList.add(props.className);\n      }\n\n      if (!deepEqual(oldProps.style, props.style, 1)) {\n        removeStyles(el, oldProps.style);\n        applyStyles(el, props.style);\n      }\n    }\n\n    Object.assign(this.props, props);\n    this.update();\n  }\n\n  getContainer() {\n    return this.props.container || this.deck?.getCanvas()?.parentElement;\n  }\n\n  onFullscreenChange() {\n    const prevFullscreen = this.fullscreen;\n    const fullscreen = document.fullscreenElement === this.getContainer();\n    if (prevFullscreen !== fullscreen) {\n      this.fullscreen = !this.fullscreen;\n    }\n    this.update();\n  }\n\n  async handleClick() {\n    if (this.fullscreen) {\n      await this.exitFullscreen();\n    } else {\n      await this.requestFullscreen();\n    }\n    this.update();\n  }\n\n  async requestFullscreen() {\n    const container = this.getContainer();\n    if (container?.requestFullscreen) {\n      await container.requestFullscreen({navigationUI: 'hide'});\n    } else {\n      this.togglePseudoFullscreen();\n    }\n  }\n\n  async exitFullscreen() {\n    if (document.exitFullscreen) {\n      await document.exitFullscreen();\n    } else {\n      this.togglePseudoFullscreen();\n    }\n  }\n\n  togglePseudoFullscreen() {\n    this.getContainer()?.classList.toggle('deck-pseudo-fullscreen');\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* global document */\nimport {\n  FlyToInterpolator,\n  WebMercatorViewport,\n  _GlobeViewport,\n  _deepEqual as deepEqual,\n  _applyStyles as applyStyles,\n  _removeStyles as removeStyles\n} from '@deck.gl/core';\nimport type {Deck, Viewport, Widget, WidgetPlacement} from '@deck.gl/core';\nimport {render} from 'preact';\n\nexport type CompassWidgetProps = {\n  id?: string;\n  /**\n   * Widget positioning within the view. Default 'top-left'.\n   */\n  placement?: WidgetPlacement;\n  /**\n   * View to attach to and interact with. Required when using multiple views.\n   */\n  viewId?: string | null;\n  /**\n   * Tooltip message.\n   */\n  label?: string;\n  /**\n   * Bearing and pitch reset transition duration in ms.\n   */\n  transitionDuration?: number;\n  /**\n   * CSS inline style overrides.\n   */\n  style?: Partial<CSSStyleDeclaration>;\n  /**\n   * Additional CSS class.\n   */\n  className?: string;\n};\n\nexport class CompassWidget implements Widget<CompassWidgetProps> {\n  id = 'compass';\n  props: CompassWidgetProps;\n  placement: WidgetPlacement = 'top-left';\n  viewId?: string | null = null;\n  viewports: {[id: string]: Viewport} = {};\n  deck?: Deck<any>;\n  element?: HTMLDivElement;\n\n  constructor(props: CompassWidgetProps) {\n    this.id = props.id ?? this.id;\n    this.viewId = props.viewId ?? this.viewId;\n    this.placement = props.placement ?? this.placement;\n\n    this.props = {\n      ...props,\n      transitionDuration: props.transitionDuration ?? 200,\n      label: props.label ?? 'Reset Compass',\n      style: props.style ?? {}\n    };\n  }\n\n  setProps(props: Partial<CompassWidgetProps>) {\n    this.placement = props.placement ?? this.placement;\n    this.viewId = props.viewId ?? this.viewId;\n    const oldProps = this.props;\n    const el = this.element;\n    if (el) {\n      if (oldProps.className !== props.className) {\n        if (oldProps.className) el.classList.remove(oldProps.className);\n        if (props.className) el.classList.add(props.className);\n      }\n\n      if (!deepEqual(oldProps.style, props.style, 1)) {\n        removeStyles(el, oldProps.style);\n        applyStyles(el, props.style);\n      }\n    }\n\n    Object.assign(this.props, props);\n    this.update();\n  }\n\n  onViewportChange(viewport: Viewport) {\n    // no need to update if viewport is the same\n    if (!viewport.equals(this.viewports[viewport.id])) {\n      this.viewports[viewport.id] = viewport;\n      this.update();\n    }\n  }\n\n  onAdd({deck}: {deck: Deck<any>}): HTMLDivElement {\n    const {style, className} = this.props;\n    const element = document.createElement('div');\n    element.classList.add('deck-widget', 'deck-widget-compass');\n    if (className) element.classList.add(className);\n    applyStyles(element, style);\n    this.deck = deck;\n    this.element = element;\n    this.update();\n    return element;\n  }\n\n  getRotation(viewport?: Viewport) {\n    if (viewport instanceof WebMercatorViewport) {\n      return [-viewport.bearing, viewport.pitch];\n    } else if (viewport instanceof _GlobeViewport) {\n      return [0, Math.max(-80, Math.min(80, viewport.latitude))];\n    }\n    return [0, 0];\n  }\n\n  private update() {\n    const viewId = this.viewId || Object.values(this.viewports)[0]?.id || 'default-view';\n    const viewport = this.viewports[viewId];\n    const [rz, rx] = this.getRotation(viewport);\n    const element = this.element;\n    if (!element) {\n      return;\n    }\n    const ui = (\n      <div className=\"deck-widget-button\" style={{perspective: 100}}>\n        <button\n          type=\"button\"\n          onClick={() => {\n            for (const viewport of Object.values(this.viewports)) {\n              this.handleCompassReset(viewport);\n            }\n          }}\n          title={this.props.label}\n          style={{transform: `rotateX(${rx}deg)`}}\n        >\n          <svg fill=\"none\" width=\"100%\" height=\"100%\" viewBox=\"0 0 26 26\">\n            <g transform={`rotate(${rz},13,13)`}>\n              <path\n                d=\"M10 13.0001L12.9999 5L15.9997 13.0001H10Z\"\n                fill=\"var(--icon-compass-north-color, #F05C44)\"\n              />\n              <path\n                d=\"M16.0002 12.9999L13.0004 21L10.0005 12.9999H16.0002Z\"\n                fill=\"var(--icon-compass-south-color, #C2C2CC)\"\n              />\n            </g>\n          </svg>\n        </button>\n      </div>\n    );\n    render(ui, element);\n  }\n\n  onRemove() {\n    this.deck = undefined;\n    this.element = undefined;\n  }\n\n  handleCompassReset(viewport: Viewport) {\n    const viewId = this.viewId || viewport.id || 'default-view';\n    if (viewport instanceof WebMercatorViewport) {\n      const nextViewState = {\n        ...viewport,\n        bearing: 0,\n        ...(this.getRotation(viewport)[0] === 0 ? {pitch: 0} : {}),\n        transitionDuration: this.props.transitionDuration,\n        transitionInterpolator: new FlyToInterpolator()\n      };\n      // @ts-ignore Using private method temporary until there's a public one\n      this.deck._onViewStateChange({viewId, viewState: nextViewState, interactionState: {}});\n    }\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* global document */\nimport {\n  FlyToInterpolator,\n  LinearInterpolator,\n  _deepEqual as deepEqual,\n  _applyStyles as applyStyles,\n  _removeStyles as removeStyles\n} from '@deck.gl/core';\nimport type {Deck, Viewport, Widget, WidgetPlacement} from '@deck.gl/core';\nimport {render} from 'preact';\nimport {ButtonGroup, GroupedIconButton} from './components';\n\nexport type ZoomWidgetProps = {\n  id?: string;\n  /**\n   * Widget positioning within the view. Default 'top-left'.\n   */\n  placement?: WidgetPlacement;\n  /**\n   * View to attach to and interact with. Required when using multiple views.\n   */\n  viewId?: string | null;\n  /**\n   * Button orientation.\n   */\n  orientation?: 'vertical' | 'horizontal';\n  /**\n   * Tooltip message on zoom in button.\n   */\n  zoomInLabel?: string;\n  /**\n   * Tooltip message on zoom out button.\n   */\n  zoomOutLabel?: string;\n  /**\n   * Zoom transition duration in ms. 0 disables the transition\n   */\n  transitionDuration?: number;\n  /**\n   * CSS inline style overrides.\n   */\n  style?: Partial<CSSStyleDeclaration>;\n  /**\n   * Additional CSS class.\n   */\n  className?: string;\n};\n\nexport class ZoomWidget implements Widget<ZoomWidgetProps> {\n  id = 'zoom';\n  props: Required<ZoomWidgetProps>;\n  placement: WidgetPlacement = 'top-left';\n  viewId?: string | null = null;\n  viewports: {[id: string]: Viewport} = {};\n  deck?: Deck<any>;\n  element?: HTMLDivElement;\n\n  static defaultProps: Required<ZoomWidgetProps> = {\n    id: 'zoom-widget',\n    style: {},\n    placement: 'top-left',\n    className: undefined!,\n    orientation: 'vertical',\n    transitionDuration: 200,\n    zoomInLabel: 'Zoom In',\n    zoomOutLabel: 'Zoom Out',\n    viewId: undefined!\n  };\n\n  constructor(props: ZoomWidgetProps = {}) {\n    this.id = props.id ?? this.id;\n    this.viewId = props.viewId ?? this.viewId;\n    this.placement = props.placement ?? this.placement;\n\n    this.props = {\n      ...ZoomWidget.defaultProps,\n      ...props\n    };\n  }\n\n  onAdd({deck}: {deck: Deck<any>}): HTMLDivElement {\n    const {style, className} = this.props;\n    const element = document.createElement('div');\n    element.classList.add('deck-widget', 'deck-widget-zoom');\n    if (className) element.classList.add(className);\n    applyStyles(element, style);\n    this.deck = deck;\n    this.element = element;\n    this.update();\n    return element;\n  }\n\n  onRemove() {\n    this.deck = undefined;\n    this.element = undefined;\n  }\n\n  setProps(props: Partial<ZoomWidgetProps>) {\n    this.placement = props.placement ?? this.placement;\n    this.viewId = props.viewId ?? this.viewId;\n    const oldProps = this.props;\n    const el = this.element;\n    if (el) {\n      if (oldProps.className !== props.className) {\n        if (oldProps.className) el.classList.remove(oldProps.className);\n        if (props.className) el.classList.add(props.className);\n      }\n\n      if (!deepEqual(oldProps.style, props.style, 1)) {\n        removeStyles(el, oldProps.style);\n        applyStyles(el, props.style);\n      }\n    }\n\n    Object.assign(this.props, props);\n    this.update();\n  }\n\n  onViewportChange(viewport: Viewport) {\n    this.viewports[viewport.id] = viewport;\n  }\n\n  handleZoom(viewport: Viewport, nextZoom: number) {\n    const viewId = this.viewId || viewport?.id || 'default-view';\n    const nextViewState: Record<string, unknown> = {\n      ...viewport,\n      zoom: nextZoom\n    };\n    if (this.props.transitionDuration > 0) {\n      nextViewState.transitionDuration = this.props.transitionDuration;\n      nextViewState.transitionInterpolator =\n        'latitude' in nextViewState ? new FlyToInterpolator() : new LinearInterpolator();\n    }\n    this.setViewState(viewId, nextViewState);\n  }\n\n  handleZoomIn() {\n    for (const viewport of Object.values(this.viewports)) {\n      this.handleZoom(viewport, viewport.zoom + 1);\n    }\n  }\n\n  handleZoomOut() {\n    for (const viewport of Object.values(this.viewports)) {\n      this.handleZoom(viewport, viewport.zoom - 1);\n    }\n  }\n\n  /**\n   * @todo - move to deck or widget manager\n   */\n  private setViewState(viewId: string, viewState: Record<string, unknown>): void {\n    // @ts-ignore Using private method temporary until there's a public one\n    this.deck._onViewStateChange({viewId, viewState, interactionState: {}});\n  }\n\n  private update() {\n    const element = this.element;\n    if (!element) {\n      return;\n    }\n    const ui = (\n      <ButtonGroup orientation={this.props.orientation}>\n        <GroupedIconButton\n          onClick={() => this.handleZoomIn()}\n          label={this.props.zoomInLabel}\n          className=\"deck-widget-zoom-in\"\n        />\n        <GroupedIconButton\n          onClick={() => this.handleZoomOut()}\n          label={this.props.zoomOutLabel}\n          className=\"deck-widget-zoom-out\"\n        />\n      </ButtonGroup>\n    );\n    render(ui, element);\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* global document */\nimport {_deepEqual, _applyStyles, _removeStyles} from '@deck.gl/core';\nimport type {Deck, Widget} from '@deck.gl/core';\n\nexport type WidgetImplProps = {\n  id?: string;\n  /** CSS inline style overrides. */\n  style?: Partial<CSSStyleDeclaration>;\n  /** Additional CSS class. */\n  className?: string;\n};\nexport abstract class WidgetImpl<PropsT extends WidgetImplProps> implements Widget<PropsT> {\n  id: string;\n  props: Required<PropsT>;\n\n  deck?: Deck<any>;\n  element?: HTMLDivElement;\n\n  static defaultProps: Required<WidgetImplProps> = {\n    id: 'widget',\n    style: {},\n    className: ''\n  };\n\n  abstract className: Required<string>;\n\n  constructor(props: Required<PropsT>) {\n    this.id = props.id || 'widget';\n    this.props = props;\n  }\n\n  abstract onRenderHTML(): void;\n\n  onAdd({deck}: {deck: Deck<any>}): HTMLDivElement {\n    this.deck = deck;\n    const {style, className} = this.props;\n    const el = this._createRootElement({\n      widgetClassName: this.className,\n      className,\n      style\n    });\n    this.element = el;\n    this.onRenderHTML();\n    return this.element;\n  }\n\n  onRemove() {\n    this.deck = undefined;\n    this.element = undefined;\n  }\n\n  setProps(props: Partial<PropsT>) {\n    const oldProps = this.props;\n    const el = this.element;\n    if (el) {\n      if (oldProps.className !== props.className) {\n        if (oldProps.className) el.classList.remove(oldProps.className);\n        if (props.className) el.classList.add(props.className);\n      }\n\n      if (!_deepEqual(oldProps.style, props.style, 1)) {\n        _removeStyles(el, oldProps.style);\n        _applyStyles(el, props.style);\n      }\n    }\n\n    Object.assign(this.props, props);\n    this.onRenderHTML();\n  }\n\n  _createRootElement(props: {\n    widgetClassName: string;\n    className?: string;\n    style?: Partial<CSSStyleDeclaration>;\n  }) {\n    const {widgetClassName, className, style} = props;\n    const element = document.createElement('div');\n    ['deck-widget', widgetClassName, className]\n      .filter((cls): cls is string => typeof cls === 'string' && cls.length > 0)\n      .forEach(className => element.classList.add(className));\n    _applyStyles(element, style);\n    return element;\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* global document */\nimport {WidgetImpl, WidgetImplProps} from './widget-impl';\nimport {h, render} from 'preact';\nimport {IconButton} from './components';\nimport type {WidgetPlacement} from '@deck.gl/core';\n\n/** Properties for the ScreenshotWidget */\nexport type ScreenshotWidgetProps = WidgetImplProps & {\n  /** Widget positioning within the view. Default 'top-left'. */\n  placement?: WidgetPlacement;\n  /** Tooltip message */\n  label?: string;\n  /** Filename to save to */\n  filename?: string;\n  /** Image format */\n  imageFormat?: 'image/png' | 'image/jpeg';\n  /** Callback, if defined user overrides the capture logic */\n  onCapture?: (widget: ScreenshotWidget) => void;\n};\n\n/**\n * A button widget that captures a screenshot of the current canvas and downloads it as a (png) file.\n * @note only captures canvas contents, not HTML DOM or CSS styles\n */\nexport class ScreenshotWidget extends WidgetImpl<ScreenshotWidgetProps> {\n  static defaultProps: Required<ScreenshotWidgetProps> = {\n    ...WidgetImpl.defaultProps,\n    id: 'screenshot',\n    placement: 'top-left',\n    label: 'Screenshot',\n    filename: 'screenshot.png',\n    imageFormat: 'image/png',\n    onCapture: undefined!\n  };\n\n  className = 'deck-widget-screenshot';\n  placement: WidgetPlacement = 'top-left';\n\n  constructor(props: ScreenshotWidgetProps = {}) {\n    super({...ScreenshotWidget.defaultProps, ...props});\n    this.placement = props.placement ?? this.placement;\n  }\n\n  setProps(props: Partial<ScreenshotWidgetProps>) {\n    this.placement = props.placement ?? this.placement;\n    super.setProps(props);\n  }\n\n  onRenderHTML() {\n    const element = this.element;\n    if (!element) return;\n    render(\n      <IconButton\n        className=\"deck-widget-camera\"\n        label={this.props.label}\n        onClick={this.handleClick.bind(this)}\n      />,\n      element\n    );\n  }\n\n  handleClick() {\n    // Allow user to override the capture logic\n    if (this.props.onCapture) {\n      this.props.onCapture(this);\n      return;\n    }\n    const dataURL = this.captureScreenToDataURL(this.props.imageFormat);\n    if (dataURL) {\n      this.downloadDataURL(dataURL, this.props.filename);\n    }\n  }\n\n  /** @note only captures canvas contents, not HTML DOM or CSS styles */\n  captureScreenToDataURL(imageFormat: string): string | undefined {\n    const canvas = this.deck?.getCanvas();\n    return canvas?.toDataURL(imageFormat);\n  }\n\n  /** Download a data URL */\n  downloadDataURL(dataURL: string, filename: string): void {\n    const link = document.createElement('a');\n    link.href = dataURL;\n    link.download = filename;\n    link.click();\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* global document */\nimport type {WidgetPlacement} from '@deck.gl/core';\nimport {render} from 'preact';\nimport {WidgetImpl, WidgetImplProps} from './widget-impl';\nimport {IconButton} from './components';\n\n/** @todo - is the the best we can do? */\ntype ViewState = Record<string, unknown>;\n\n/** Properties for the ResetViewWidget */\nexport type ResetViewWidgetProps = WidgetImplProps & {\n  /** Widget positioning within the view. Default 'top-left'. */\n  placement?: WidgetPlacement;\n  /** Tooltip message */\n  label?: string;\n  /** The initial view state to reset the view to. Defaults to deck.props.initialViewState */\n  initialViewState?: ViewState;\n  /** View to interact with. Required when using multiple views. */\n  viewId?: string | null;\n};\n\n/**\n * A button widget that resets the view state of deck to an initial state.\n */\nexport class ResetViewWidget extends WidgetImpl<ResetViewWidgetProps> {\n  static defaultProps: Required<ResetViewWidgetProps> = {\n    ...WidgetImpl.defaultProps,\n    id: 'reset-view',\n    placement: 'top-left',\n    label: 'Reset View',\n    initialViewState: undefined!,\n    viewId: undefined!\n  };\n\n  className = 'deck-widget-reset-view';\n  placement: WidgetPlacement = 'top-left';\n\n  constructor(props: ResetViewWidgetProps = {}) {\n    super({...ResetViewWidget.defaultProps, ...props});\n    this.placement = props.placement ?? this.placement;\n  }\n\n  setProps(props: Partial<ResetViewWidgetProps>) {\n    this.placement = props.placement ?? this.placement;\n    super.setProps(props);\n  }\n\n  onRenderHTML() {\n    const element = this.element;\n    if (!element) return;\n    render(\n      <IconButton\n        className=\"deck-widget-reset-focus\"\n        label={this.props.label}\n        onClick={this.handleClick.bind(this)}\n      />,\n      element\n    );\n  }\n\n  handleClick() {\n    const initialViewState = this.props.initialViewState || this.deck?.props.initialViewState;\n    this.setViewState(initialViewState);\n  }\n\n  setViewState(viewState: ViewState) {\n    const viewId = this.props.viewId || viewState?.id || 'default-view';\n    const nextViewState = {\n      ...viewState\n      // only works for geospatial?\n      // transitionDuration: this.props.transitionDuration,\n      // transitionInterpolator: new FlyToInterpolator()\n    };\n    // @ts-ignore Using private method temporary until there's a public one\n    this.deck._onViewStateChange({viewId, viewState: nextViewState, interactionState: {}});\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {useContext, useMemo, useEffect} from 'react';\nimport {DeckGlContext} from './deckgl-context';\nimport {log, type Widget, _deepEqual as deepEqual} from '@deck.gl/core';\n\nexport function useWidget<T extends Widget<PropsT>, PropsT extends {}>(\n  WidgetClass: {new (props_: PropsT): T},\n  props: PropsT\n): T {\n  const context = useContext(DeckGlContext);\n  const {widgets, deck} = context;\n  useEffect(() => {\n    // warn if the user supplied a pure-js widget, since it will be ignored\n    // NOTE: This effect runs once per widget. Context widgets and deck widget props are synced after first effect runs.\n    const internalWidgets = deck?.props.widgets;\n    if (widgets?.length && internalWidgets?.length && !deepEqual(internalWidgets, widgets, 1)) {\n      log.warn('\"widgets\" prop will be ignored because React widgets are in use.')();\n    }\n\n    return () => {\n      // Remove widget from context when it is unmounted\n      const index = widgets?.indexOf(widget);\n      if (index && index !== -1) {\n        widgets?.splice(index, 1);\n        deck?.setProps({widgets});\n      }\n    };\n  }, []);\n  const widget = useMemo(() => new WidgetClass(props), [WidgetClass]);\n\n  // Hook rebuilds widgets on every render: [] then [FirstWidget] then [FirstWidget, SecondWidget]\n  widgets?.push(widget);\n  widget.setProps(props);\n\n  useEffect(() => {\n    deck?.setProps({widgets});\n  }, [widgets]);\n\n  return widget;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {CompassWidget as _CompassWidget} from '@deck.gl/widgets';\nimport type {CompassWidgetProps} from '@deck.gl/widgets';\nimport {useWidget} from '../utils/use-widget';\n\nexport const CompassWidget = (props: CompassWidgetProps = {}) => {\n  useWidget(_CompassWidget, props);\n  return null;\n};\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {FullscreenWidget as _FullscreenWidget} from '@deck.gl/widgets';\nimport type {FullscreenWidgetProps} from '@deck.gl/widgets';\nimport {useWidget} from '../utils/use-widget';\n\nexport const FullscreenWidget = (props: FullscreenWidgetProps = {}) => {\n  useWidget(_FullscreenWidget, props);\n  return null;\n};\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {ZoomWidget as _ZoomWidget} from '@deck.gl/widgets';\nimport type {ZoomWidgetProps} from '@deck.gl/widgets';\nimport {useWidget} from '../utils/use-widget';\n\nexport const ZoomWidget = (props: ZoomWidgetProps = {}) => {\n  useWidget(_ZoomWidget, props);\n  return null;\n};\n"],
  "mappings": ";;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAIA,IAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,wGAAwG,GAAG,mIAAmI;AAAA,QAC7P;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACPF,IAAAC,SAAuB;AACvB,IAAAC,gBAAuF;;;ACDhF,SAAS,OAAO,WAAWC,UAAS;AACvC,MAAI,CAAC,WAAW;AACZ,UAAM,IAAI,MAAMA,YAAW,0BAA0B;AAAA,EACzD;AACJ;;;ACLA,IAAM,UAAU;AAAA,EACZ,MAAM,OAAO,SAAS,eAAe;AAAA,EACrC,QAAQ,OAAO,WAAW,eAAe;AAAA,EACzC,QAAQ,OAAO,WAAW,eAAe;AAAA,EACzC,UAAU,OAAO,aAAa,eAAe;AACjD;AACA,IAAM,QAAQ,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,UAAU,CAAC;AACnE,IAAM,UAAU,QAAQ,UAAU,QAAQ,QAAQ,QAAQ,UAAU,CAAC;AACrE,IAAM,UAAU,QAAQ,UAAU,QAAQ,QAAQ,QAAQ,UAAU,CAAC;AACrE,IAAM,YAAY,QAAQ,YAAY,CAAC;AAGhC,IAAM;AAAA;AAAA,EAEb,QAAQ,OAAO,YAAY,YAAY,OAAO,OAAO,MAAM,sBAAsB,QAAQ,OAAO;AAAA;AAIhG,IAAM,UAAU,OAAO,YAAY,eAAe,QAAQ,WAAW,YAAY,KAAK,QAAQ,OAAO;AAE9F,IAAM,cAAe,WAAW,WAAW,QAAQ,CAAC,CAAC,KAAM;;;ACrBlE,IAAMC,WAAU;AAChB,IAAMC,aAAY,WAAW,YAAa,CAAA;AAC1C,IAAM,WAAW,WAAW,WAAW,CAAA;AACvC,IAAM,WAAW,WAAW;AAC5B,IAAM,aAAa,WAAW,aAAc,CAAA;;;ACHtC,SAAU,WAAW,eAAsB;AAHjD,MAAAC,KAAA;AAME,MAAI,OAAO,WAAW,iBAAeA,MAAA,OAAO,YAAP,gBAAAA,IAAgB,UAAS,YAAY;AACxE,WAAO;EACT;AAGA,MAAI,OAAO,YAAY,eAAe,SAAQ,aAAQ,aAAR,mBAAmB,WAAW,GAAG;AAC7E,WAAO;EACT;AAEA,QAAM,gBAAgB,OAAO,cAAc,eAAe,UAAU;AACpE,QAAMC,aAAY,iBAAiB;AACnC,SAAO,QAAQA,cAAaA,WAAU,QAAQ,UAAU,KAAK,CAAC;AAChE;;;ACZM,SAAUC,aAAS;AACvB,QAAM;;IAEJ,OAAO,YAAY,YAAY,OAAO,OAAO,MAAM,sBAAsB,EAAC,mCAAS;;AACrF,SAAO,CAAC,UAAU,WAAU;AAC9B;;;AC6BM,SAAU,WACd,eAAsB;AAEtB,MAAI,CAAC,iBAAiB,CAACC,WAAS,GAAI;AAClC,WAAO;EACT;AACA,MAAI,WAAW,aAAa,GAAG;AAC7B,WAAO;EACT;AAEA,QAAMC,aAAY,iBAAiB,WAAU,aAAa;AAG1D,MAAIA,WAAU,QAAQ,MAAM,IAAI,IAAI;AAClC,WAAO;EACT;AACA,MAAI,WAAW,QAAQ;AACrB,WAAO;EACT;AACA,MAAI,WAAW,QAAQ;AACrB,WAAO;EACT;AACA,MAAI,WAAW,iBAAiB;AAC9B,WAAO;EACT;AACA,SAAO;AACT;;;AChEO,IAAM,UAAU,OAAoC,UAAe;;;ACE1E,SAAS,WAAW,MAAiB;AACnC,MAAI;AACF,UAAM,UAAmB,OAAO,IAAI;AACpC,UAAMC,KAAI;AACV,YAAQ,QAAQA,IAAGA,EAAC;AACpB,YAAQ,WAAWA,EAAC;AACpB,WAAO;EACT,SAASC,IAAG;AACV,WAAO;EACT;AACF;AAGM,IAAO,eAAP,MAAmB;EAKvB,YACE,IACA,eACA,OAAoB,kBAAgB;AAEpC,SAAK,UAAU,WAAW,IAAI;AAC9B,SAAK,KAAK;AACV,SAAK,SAAS;AACd,SAAK,mBAAkB;EACzB;EAEA,mBAAgB;AACd,WAAO,KAAK;EACd;EAEA,iBAAiB,eAA4B;AAC3C,WAAO,OAAO,KAAK,QAAQ,aAAa;AACxC,QAAI,KAAK,SAAS;AAChB,YAAM,aAAa,KAAK,UAAU,KAAK,MAAM;AAC7C,WAAK,QAAQ,QAAQ,KAAK,IAAI,UAAU;IAC1C;EACF;;EAGA,qBAAkB;AAChB,QAAI,gBAAgB,CAAA;AACpB,QAAI,KAAK,SAAS;AAChB,YAAM,0BAA0B,KAAK,QAAQ,QAAQ,KAAK,EAAE;AAC5D,sBAAgB,0BAA0B,KAAK,MAAM,uBAAuB,IAAI,CAAA;IAClF;AACA,WAAO,OAAO,KAAK,QAAQ,aAAa;AACxC,WAAO;EACT;;;;AC3CI,SAAU,WAAW,IAAU;AACnC,MAAI;AACJ,MAAI,KAAK,IAAI;AACX,gBAAY,GAAG,GAAG,QAAQ,CAAC,CAAC;EAC9B,WAAW,KAAK,KAAK;AACnB,gBAAY,GAAG,GAAG,QAAQ,CAAC,CAAC;EAC9B,WAAW,KAAK,KAAM;AACpB,gBAAY,GAAG,GAAG,QAAQ,CAAC,CAAC;EAC9B,OAAO;AACL,gBAAY,IAAI,KAAK,KAAM,QAAQ,CAAC,CAAC;EACvC;AACA,SAAO;AACT;AAEM,SAAU,QAAQ,QAAgBC,UAAiB,GAAC;AACxD,QAAM,YAAY,KAAK,IAAIA,UAAS,OAAO,QAAQ,CAAC;AACpD,SAAO,GAAG,IAAI,OAAO,SAAS,CAAC,GAAG,MAAM;AAC1C;;;AC1BA,IAAY;CAAZ,SAAYC,QAAK;AACf,EAAAA,OAAAA,OAAA,OAAA,IAAA,EAAA,IAAA;AACA,EAAAA,OAAAA,OAAA,KAAA,IAAA,EAAA,IAAA;AACA,EAAAA,OAAAA,OAAA,OAAA,IAAA,EAAA,IAAA;AACA,EAAAA,OAAAA,OAAA,QAAA,IAAA,EAAA,IAAA;AACA,EAAAA,OAAAA,OAAA,MAAA,IAAA,EAAA,IAAA;AACA,EAAAA,OAAAA,OAAA,SAAA,IAAA,EAAA,IAAA;AACA,EAAAA,OAAAA,OAAA,MAAA,IAAA,EAAA,IAAA;AACA,EAAAA,OAAAA,OAAA,OAAA,IAAA,EAAA,IAAA;AAEA,EAAAA,OAAAA,OAAA,cAAA,IAAA,EAAA,IAAA;AACA,EAAAA,OAAAA,OAAA,YAAA,IAAA,EAAA,IAAA;AACA,EAAAA,OAAAA,OAAA,cAAA,IAAA,EAAA,IAAA;AACA,EAAAA,OAAAA,OAAA,eAAA,IAAA,EAAA,IAAA;AACA,EAAAA,OAAAA,OAAA,aAAA,IAAA,EAAA,IAAA;AACA,EAAAA,OAAAA,OAAA,gBAAA,IAAA,EAAA,IAAA;AACA,EAAAA,OAAAA,OAAA,aAAA,IAAA,EAAA,IAAA;AACA,EAAAA,OAAAA,OAAA,cAAA,IAAA,EAAA,IAAA;AACF,GAlBY,UAAA,QAAK,CAAA,EAAA;AAoBjB,IAAM,uBAAuB;AAE7B,SAAS,SAAS,OAAqB;AACrC,MAAI,OAAO,UAAU,UAAU;AAC7B,WAAO;EACT;AACA,UAAQ,MAAM,YAAW;AACzB,SAAO,MAAM,KAAK,KAAK,MAAM;AAC/B;AAEM,SAAU,SACd,QACA,OACA,YAA2B;AAE3B,MAAI,CAACC,cAAa,OAAO,WAAW,UAAU;AAC5C,QAAI,OAAO;AACT,YAAM,YAAY,SAAS,KAAK;AAChC,eAAS,QAAU,SAAS,IAAI,MAAM;IACxC;AACA,QAAI,YAAY;AAEd,YAAM,YAAY,SAAS,UAAU;AACrC,eAAS,QAAU,YAAY,oBAAoB,IAAI,MAAM;IAC/D;EACF;AACA,SAAO;AACT;;;ACzBM,SAAU,SAAS,KAAa,aAAa,CAAC,aAAa,GAAC;AAChE,QAAM,QAAQ,OAAO,eAAe,GAAG;AACvC,QAAM,YAAY,OAAO,oBAAoB,KAAK;AAElD,QAAM,SAAS;AACf,aAAW,OAAO,WAAW;AAC3B,UAAM,QAAQ,OAAO,GAAG;AACxB,QAAI,OAAO,UAAU,YAAY;AAC/B,UAAI,CAAC,WAAW,KAAK,CAACC,UAAS,QAAQA,KAAI,GAAG;AAC5C,eAAO,GAAG,IAAI,MAAM,KAAK,GAAG;MAC9B;IACF;EACF;AACF;;;ACrCc,SAAPC,QAAwB,WAAoBC,UAAgB;AACjE,MAAI,CAAC,WAAW;AACd,UAAM,IAAI,MAAMA,YAAW,kBAAkB;EAC/C;AACF;;;ACCM,SAAU,oBAAiB;AALjC,MAAAC,KAAA,YAAAC;AAME,MAAI;AACJ,MAAIC,WAAS,KAAMC,SAAO,aAAa;AACrC,iBAAY,YAAAH,MAAAG,aAAA,gBAAAH,IAAQ,gBAAR,mBAAqB,QAArB;EACd,WAAW,YAAY,UAAS;AAE9B,UAAM,aAAYC,OAAA,qCAAS,WAAT,gBAAAA,IAAA;AAClB,gBAAY,UAAU,CAAC,IAAI,MAAO,UAAU,CAAC,IAAI;EACnD,OAAO;AACL,gBAAY,KAAK,IAAG;EACtB;AAEA,SAAO;AACT;;;ACkBA,IAAM,kBAAkB;EACtB,OAAOG,WAAS,IAAK,QAAQ,SAAS,QAAQ,MAAM,QAAQ;EAC5D,KAAK,QAAQ;EACb,MAAM,QAAQ;EACd,MAAM,QAAQ;EACd,OAAO,QAAQ;;AAGjB,IAAM,4BAAwD;EAC5D,SAAS;EACT,OAAO;;AAGT,SAAS,OAAI;AAAI;AAEjB,IAAM,QAAQ,CAAA;AACd,IAAM,OAAO,EAAC,MAAM,KAAI;AAIlB,IAAO,MAAP,MAAU;EAad,YAAY,EAAC,GAAE,IAAI,EAAC,IAAI,GAAE,GAAC;AAT3B,SAAA,UAAkB;AAClB,SAAA,WAAmB,kBAAiB;AACpC,SAAA,WAAmB,kBAAiB;AAEpC,SAAA,WAAW,CAAA;AAGX,SAAA,uBAA+B;AAG7B,SAAK,KAAK;AACV,SAAK,WAAW,CAAA;AAChB,SAAK,WAAW,IAAI,aAClB,WAAW,KAAK,EAAE,MAClB,yBAAyB;AAG3B,SAAK,UAAU,GAAG,KAAK,EAAE,UAAU;AAEnC,aAAS,IAAI;AACb,WAAO,KAAK,IAAI;EAClB;EAEA,IAAI,MAAM,UAAgB;AACxB,SAAK,SAAS,QAAQ;EACxB;EAEA,IAAI,QAAK;AACP,WAAO,KAAK,SAAQ;EACtB;EAEA,YAAS;AACP,WAAO,KAAK,SAAS,OAAO;EAC9B;EAEA,WAAQ;AACN,WAAO,KAAK,SAAS,OAAO;EAC9B;;EAGA,WAAQ;AACN,WAAO,QAAQ,kBAAiB,IAAK,KAAK,UAAU,YAAY,EAAE,CAAC;EACrE;;EAGA,WAAQ;AACN,WAAO,QAAQ,kBAAiB,IAAK,KAAK,UAAU,YAAY,EAAE,CAAC;EACrE;;EAGA,IAAI,SAAS,aAAmB;AAC9B,SAAK,QAAQ;EACf;;EAGA,IAAI,WAAQ;AACV,WAAO,KAAK;EACd;;EAGA,cAAW;AACT,WAAO,KAAK;EACd;;EAIA,OAAO,UAAmB,MAAI;AAC5B,SAAK,SAAS,iBAAiB,EAAC,QAAO,CAAC;AACxC,WAAO;EACT;EAEA,SAAS,OAAa;AACpB,SAAK,SAAS,iBAAiB,EAAC,MAAK,CAAC;AACtC,WAAO;EACT;;EAGA,IAAI,SAAe;AACjB,WAAO,KAAK,SAAS,OAAO,OAAO;EACrC;;EAGA,IAAI,SAAiB,OAAU;AAC7B,SAAK,SAAS,iBAAiB,EAAC,CAAC,OAAO,GAAG,MAAK,CAAC;EACnD;;EAGA,WAAQ;AACN,QAAI,QAAQ,OAAO;AACjB,cAAQ,MAAM,KAAK,SAAS,MAAM;IACpC,OAAO;AACL,cAAQ,IAAI,KAAK,SAAS,MAAM;IAClC;EACF;;EAIA,OAAO,WAAoBC,UAAgB;AACzC,QAAI,CAAC,WAAW;AACd,YAAM,IAAI,MAAMA,YAAW,kBAAkB;IAC/C;EACF;EAIA,KAAKA,UAAe;AAClB,WAAO,KAAK,gBAAgB,GAAGA,UAAS,gBAAgB,MAAM,WAAW,IAAI;EAC/E;EAIA,MAAMA,UAAe;AACnB,WAAO,KAAK,gBAAgB,GAAGA,UAAS,gBAAgB,OAAO,SAAS;EAC1E;;EAGA,WAAW,UAAkB,UAAgB;AAC3C,WAAO,KAAK,KAAK,KAAK,QAAQ,kEACN,QAAQ,YAAY;EAC9C;;EAGA,QAAQ,UAAkB,UAAgB;AACxC,WAAO,KAAK,MAAM,KAAK,QAAQ,8BAA8B,QAAQ,YAAY;EACnF;EAMA,MAAM,UAAUA,UAAQ;AACtB,WAAO,KAAK,gBAAgB,UAAUA,UAAS,gBAAgB,KAAK,WAAW;MAC7E,MAAM;MACN,MAAM;KACP;EACH;EAIA,IAAI,UAAUA,UAAQ;AACpB,WAAO,KAAK,gBAAgB,UAAUA,UAAS,gBAAgB,OAAO,SAAS;EACjF;EAIA,KAAK,UAAUA,UAAQ;AACrB,WAAO,KAAK,gBAAgB,UAAUA,UAAS,QAAQ,MAAM,SAAS;EACxE;EAIA,KAAK,UAAUA,UAAQ;AACrB,WAAO,KAAK,gBACV,UACAA,UACA,gBAAgB,SAAS,gBAAgB,MACzC,WACA,IAAI;EAER;;EAGA,MAAM,UAAU,OAAQ,SAAQ;AAC9B,QAAI,OAAO;AACT,aAAO,KAAK,gBACV,UACA,OACA,QAAQ,SAAS,MAChB,WAAW,CAAC,OAAO,GACpB;QACE,KAAK,eAAe,KAAK;OAC1B;IAEL;AACA,WAAO;EACT;EAEA,KAAK,UAAUA,UAAO;AACpB,WAAO,KAAK,gBAAgB,UAAUA,UAAS,QAAQ,OAAO,QAAQ,OAAO,QAAQ,IAAI;EAC3F;EAEA,QAAQ,UAAUA,UAAO;AACvB,WAAO,KAAK,gBACV,UACAA,UACA,QAAQ,UAAU,QAAQ,UAAU,QAAQ,IAAI;EAEpD;EAEA,UAAU,UAAUA,UAAQ;AAC1B,WAAO,KAAK,gBAAgB,UAAUA,UAAS,QAAQ,aAAa,IAAI;EAC1E;EAEA,MAAM,UAAUA,UAAS,OAAO,EAAC,WAAW,MAAK,GAAC;AAChD,UAAM,UAAU,mBAAmB,EAAC,UAAU,SAAAA,UAAS,KAAI,CAAC;AAC5D,UAAM,EAAC,UAAS,IAAI;AAEpB,YAAQ,UAAU,YAAY,QAAQ,iBAAiB,QAAQ,UAAU,QAAQ;AAEjF,WAAO,KAAK,gBAAgB,OAAO;EACrC;EAEA,eAAe,UAAUA,UAAS,OAAO,CAAA,GAAE;AACzC,WAAO,KAAK,MAAM,UAAUA,UAAS,OAAO,OAAO,CAAA,GAAI,MAAM,EAAC,WAAW,KAAI,CAAC,CAAC;EACjF;EAEA,SAAS,UAAQ;AACf,WAAO,KAAK,gBAAgB,UAAU,IAAI,QAAQ,YAAY,IAAI;EACpE;;EAIA,UAAU,UAAkBA,UAAiB,MAAc;AACzD,SAAK,MAAM,UAAUA,QAAO,EAAC;AAE7B,QAAI;AACF,WAAI;IACN;AACE,WAAK,SAAS,QAAQ,EAAC;IACzB;EACF;EAEA,QAAK;AACH,QAAI,QAAQ,OAAO;AACjB,cAAQ,MAAK;IACf;EACF;;;EAKA,WAAW,UAAiB;AAC1B,WAAO,KAAK,UAAS,KAAM,KAAK,SAAQ,KAAM,kBAAkB,QAAQ;EAC1E;EAEA,gBACE,UACAA,UACA,QACA,MACA,MAAiB;AAEjB,QAAI,KAAK,WAAW,QAAQ,GAAG;AAE7B,aAAO,mBAAmB,EAAC,UAAU,SAAAA,UAAS,MAAM,KAAI,CAAC;AACzD,eAAS,UAAU,KAAK;AACxB,MAAAC,QAAO,MAAM;AAEb,WAAK,QAAQ,KAAK,SAAQ;AAC1B,WAAK,QAAQ,KAAK,SAAQ;AAE1B,WAAK,WAAW,kBAAiB;AAEjC,YAAM,MAAM,KAAK,OAAO,KAAK;AAE7B,UAAI,KAAK,QAAQ,KAAK;AACpB,YAAI,CAAC,MAAM,GAAG,GAAG;AACf,gBAAM,GAAG,IAAI,kBAAiB;QAChC,OAAO;AACL,iBAAO;QACT;MACF;AAOA,MAAAD,WAAU,gBAAgB,KAAK,IAAI,KAAK,SAAS,IAAI;AAGrD,aAAO,OAAO,KAAK,SAASA,UAAS,GAAG,KAAK,IAAI;IACnD;AACA,WAAO;EACT;;AArRO,IAAA,UAAU;AA+RnB,SAAS,kBAAkB,UAAiB;AAC1C,MAAI,CAAC,UAAU;AACb,WAAO;EACT;AACA,MAAI;AAEJ,UAAQ,OAAO,UAAU;IACvB,KAAK;AACH,sBAAgB;AAChB;IAEF,KAAK;AAIH,sBAAgB,SAAS,YAAY,SAAS,YAAY;AAC1D;IAEF;AACE,aAAO;EACX;AAEA,EAAAC,QAAO,OAAO,SAAS,aAAa,KAAK,iBAAiB,CAAC;AAE3D,SAAO;AACT;AASM,SAAU,mBAAmB,MAMlC;AAKC,QAAM,EAAC,UAAU,SAAAD,SAAO,IAAI;AAC5B,OAAK,WAAW,kBAAkB,QAAQ;AAO1C,QAAM,OAAc,KAAK,OAAO,MAAM,KAAK,KAAK,IAAI,IAAI,CAAA;AAGxD,SAAO,KAAK,UAAU,KAAK,MAAK,MAAOA,UAAS;EAAC;AAEjD,UAAQ,OAAO,UAAU;IACvB,KAAK;IACL,KAAK;AACH,UAAIA,aAAY,QAAW;AACzB,aAAK,QAAQA,QAAO;MACtB;AACA,WAAK,UAAU;AACf;IAEF,KAAK;AACH,aAAO,OAAO,MAAM,QAAQ;AAC5B;IAEF;EACF;AAGA,MAAI,OAAO,KAAK,YAAY,YAAY;AACtC,SAAK,UAAU,KAAK,QAAO;EAC7B;AACA,QAAM,cAAc,OAAO,KAAK;AAEhC,EAAAC,QAAO,gBAAgB,YAAY,gBAAgB,QAAQ;AAG3D,SAAO,OAAO,OAAO,MAAM,EAAC,KAAI,GAAG,KAAK,IAAI;AAC9C;AAEA,SAAS,gBAAgB,IAAID,UAAS,MAAI;AACxC,MAAI,OAAOA,aAAY,UAAU;AAC/B,UAAM,OAAO,KAAK,OAAO,QAAQ,WAAW,KAAK,KAAK,CAAC,IAAI;AAC3D,IAAAA,WAAU,KAAK,OAAO,GAAG,EAAE,KAAK,IAAI,KAAKA,QAAO,KAAK,GAAG,EAAE,KAAKA,QAAO;AACtE,IAAAA,WAAU,SAASA,UAAS,KAAK,OAAO,KAAK,UAAU;EACzD;AACA,SAAOA;AACT;AAEA,SAAS,eAAe,OAAY;AAClC,aAAW,OAAO,OAAO;AACvB,eAAW,SAAS,MAAM,GAAG,GAAG;AAC9B,aAAO,SAAS;IAClB;EACF;AACA,SAAO;AACT;;;AC5bA,WAAW,QAAQ,CAAA;;;ACCnB,IAAA,eAAe,IAAI,IAAI,EAAC,IAAI,gBAAe,CAAC;;;ACIrC,IAAME,WAAU,OAAiC,UAAU;AAClE,IAAM,UAAUA,SAAQ,CAAC,KAAK,OAAOA,SAAQ,CAAC,KAAK,MAAM,IAAIA,QAAO,KAAK;AAEzE,SAAS,YAAY;AACjB,QAAMC,OAAM,IAAI,IAAI,EAAE,IAAI,aAAa,CAAC;AACxC,aAAW,UAAU,WAAW,WAAW,CAAC;AAC5C,aAAW,QAAQ,MAAMA;AACzB,aAAW,QAAQ,UAAU;AAC7B,aAAW,QAAQ,WAAW,SAAS,CAAC;AACxC,aAAW,MAAM,UAAUA;AAC3B,SAAOA;AACX;AACO,IAAM,MAAM,UAAU;;;ACVtB,SAAS,mBAAmB,aAAa,YAAY;AACxD,SAAO,wBAAwB,eAAe,CAAC,GAAG,UAAU;AAChE;AACA,SAAS,wBAAwB,aAAa,YAAY,QAAQ,GAAG;AAEjE,MAAI,QAAQ,GAAG;AACX,WAAO;AAAA,EACX;AACA,QAAM,UAAU,EAAE,GAAG,YAAY;AACjC,aAAW,CAAC,KAAK,QAAQ,KAAK,OAAO,QAAQ,UAAU,GAAG;AACtD,QAAI,YAAY,OAAO,aAAa,YAAY,CAAC,MAAM,QAAQ,QAAQ,GAAG;AACtE,cAAQ,GAAG,IAAI,wBAAwB,QAAQ,GAAG,KAAK,CAAC,GAAG,WAAW,GAAG,GAAG,QAAQ,CAAC;AAAA,IAEzF,OACK;AACD,cAAQ,GAAG,IAAI,WAAW,GAAG;AAAA,IACjC;AAAA,EACJ;AACA,SAAO;AACX;;;ACpBO,IAAM,UAAU;AACvB,SAAS,aAAa;AATtB,MAAAC;AAUI,MAAI,GAACA,MAAA,WAAW,gBAAX,gBAAAA,IAAwB,UAAS;AAClC,eAAW,cAAc,WAAW,eAAe,CAAC;AAEpD,QAAI,OAAgC;AAEhC,cAAQ,KAAK,iIAAiI;AAC9I,iBAAW,YAAY,UAAU;AAAA,IACrC,OACK;AACD,iBAAW,YAAY,UAAU;AAAA,IACrC;AAAA,EACJ;AACA,SAAO,WAAW,YAAY;AAClC;AACO,IAAMC,WAAU,WAAW;;;ACjB3B,SAASC,QAAO,WAAWC,UAAS;AACvC,MAAI,CAAC,WAAW;AACZ,UAAM,IAAI,MAAMA,YAAW,8BAA8B;AAAA,EAC7D;AACJ;;;ACLA,IAAMC,WAAU;AAAA,EACZ,MAAM,OAAO,SAAS,eAAe;AAAA,EACrC,QAAQ,OAAO,WAAW,eAAe;AAAA,EACzC,QAAQ,OAAO,WAAW,eAAe;AAAA,EACzC,UAAU,OAAO,aAAa,eAAe;AACjD;AACA,IAAMC,SAAQD,SAAQ,QAAQA,SAAQ,UAAUA,SAAQ,UAAU,CAAC;AACnE,IAAME,WAAUF,SAAQ,UAAUA,SAAQ,QAAQA,SAAQ,UAAU,CAAC;AACrE,IAAMG,WAAUH,SAAQ,UAAUA,SAAQ,QAAQA,SAAQ,UAAU,CAAC;AACrE,IAAMI,aAAYJ,SAAQ,YAAY,CAAC;AAGhC,IAAMK;AAAA;AAAA,EAEb,OAAO,YAAY,YAAY,OAAO,OAAO,MAAM,sBAAsB,QAAQ;AAAA;AAI1E,IAAMC,YAAW,OAAO,WAAW,eAAe,OAAO,OAAO,gBAAgB;AAEvF,IAAMC,WAAU,OAAO,YAAY,eAAe,QAAQ,WAAW,YAAY,KAAK,QAAQ,OAAO;AAE9F,IAAMC,eAAeD,YAAW,WAAWA,SAAQ,CAAC,CAAC,KAAM;;;ACrBlE,IAAqB,YAArB,MAA+B;AAAA,EAQ3B,YAAY,SAAS,cAAc;AAPnC;AACA;AACA,qCAAY;AAEZ;AAAA;AACA,oCAAW,MAAM;AAAA,IAAE;AACnB,mCAAU,MAAM;AAAA,IAAE;AAEd,SAAK,OAAO;AACZ,SAAK,eAAe;AACpB,SAAK,SAAS,IAAI,QAAQ,CAACE,UAAS,WAAW;AAC3C,WAAK,WAAWA;AAChB,WAAK,UAAU;AAAA,IACnB,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY,MAAM,SAAS;AACvB,SAAK,aAAa,YAAY;AAAA,MAC1B,QAAQ;AAAA;AAAA,MACR;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA,EAIA,KAAK,OAAO;AACR,IAAAC,QAAO,KAAK,SAAS;AACrB,SAAK,YAAY;AACjB,SAAK,SAAS,KAAK;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA,EAIA,MAAM,OAAO;AACT,IAAAA,QAAO,KAAK,SAAS;AACrB,SAAK,YAAY;AACjB,SAAK,QAAQ,KAAK;AAAA,EACtB;AACJ;;;AC1CO,IAAM,aAAN,MAAiB;AAAA,EACpB,YAAY;AAAA,EAAE;AAClB;;;ACNA,IAAM,iBAAiB,oBAAI,IAAI;AAUxB,SAAS,qBAAqB,OAAO;AACxC,EAAAC,QAAQ,MAAM,UAAU,CAAC,MAAM,OAAS,CAAC,MAAM,UAAU,MAAM,GAAI;AACnE,MAAI,YAAY,eAAe,IAAI,MAAM,UAAU,MAAM,GAAG;AAC5D,MAAI,CAAC,WAAW;AAEZ,QAAI,MAAM,KAAK;AACX,kBAAY,4BAA4B,MAAM,GAAG;AACjD,qBAAe,IAAI,MAAM,KAAK,SAAS;AAAA,IAC3C;AACA,QAAI,MAAM,QAAQ;AACd,kBAAY,+BAA+B,MAAM,MAAM;AACvD,qBAAe,IAAI,MAAM,QAAQ,SAAS;AAAA,IAC9C;AAAA,EACJ;AACA,EAAAA,QAAO,SAAS;AAChB,SAAO;AACX;AAMA,SAAS,4BAA4B,KAAK;AAEtC,MAAI,CAAC,IAAI,WAAW,MAAM,GAAG;AACzB,WAAO;AAAA,EACX;AAEA,QAAM,eAAe,kBAAkB,GAAG;AAC1C,SAAO,+BAA+B,YAAY;AACtD;AAMA,SAAS,+BAA+B,cAAc;AAClD,QAAM,OAAO,IAAI,KAAK,CAAC,YAAY,GAAG,EAAE,MAAM,yBAAyB,CAAC;AACxE,SAAO,IAAI,gBAAgB,IAAI;AACnC;AASA,SAAS,kBAAkB,WAAW;AAClC,SAAO;AAAA,mBAEQ,SAAS;AAAA;AAAA;AAAA;AAAA;AAK5B;;;ACzDO,SAAS,gBAAgB,QAAQ,YAAY,MAAM,WAAW;AAEjE,QAAM,eAAe,aAAa,oBAAI,IAAI;AAC1C,MAAI,CAAC,QAAQ;AAAA,EAEb,WACS,eAAe,MAAM,GAAG;AAC7B,iBAAa,IAAI,MAAM;AAAA,EAC3B,WACS,eAAe,OAAO,MAAM,GAAG;AAEpC,iBAAa,IAAI,OAAO,MAAM;AAAA,EAClC,WACS,YAAY,OAAO,MAAM,GAAG;AAAA,EAGrC,WACS,aAAa,OAAO,WAAW,UAAU;AAC9C,eAAW,OAAO,QAAQ;AAEtB,sBAAgB,OAAO,GAAG,GAAG,WAAW,YAAY;AAAA,IACxD;AAAA,EACJ;AAGA,SAAO,cAAc,SAAY,MAAM,KAAK,YAAY,IAAI,CAAC;AACjE;AAEA,SAAS,eAAe,QAAQ;AAC5B,MAAI,CAAC,QAAQ;AACT,WAAO;AAAA,EACX;AACA,MAAI,kBAAkB,aAAa;AAC/B,WAAO;AAAA,EACX;AACA,MAAI,OAAO,gBAAgB,eAAe,kBAAkB,aAAa;AACrE,WAAO;AAAA,EACX;AACA,MAAI,OAAO,gBAAgB,eAAe,kBAAkB,aAAa;AACrE,WAAO;AAAA,EACX;AAEA,MAAI,OAAO,oBAAoB,eAAe,kBAAkB,iBAAiB;AAC7E,WAAO;AAAA,EACX;AACA,SAAO;AACX;;;ACnDA,IAAM,OAAO,MAAM;AAAE;AAIrB,IAAqB,eAArB,MAAkC;AAAA,EAc9B,YAAY,OAAO;AAbnB;AACA;AACA;AACA,sCAAa;AACb;AACA;AACA;AACA,wCAAe;AAOX,UAAM,EAAE,MAAAC,OAAM,QAAAC,SAAQ,IAAI,IAAI;AAC9B,IAAAC,QAAOD,WAAU,GAAG;AACpB,SAAK,OAAOD;AACZ,SAAK,SAASC;AACd,SAAK,MAAM;AACX,SAAK,YAAY;AACjB,SAAK,UAAU,CAAC,UAAU,QAAQ,IAAI,KAAK;AAC3C,SAAK,SAASE,aAAY,KAAK,qBAAqB,IAAI,KAAK,kBAAkB;AAAA,EACnF;AAAA;AAAA,EAbA,OAAO,cAAc;AACjB,WAAS,OAAO,WAAW,eAAeA,cACrC,OAAO,eAAe,eAAe,CAACA;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA,EAeA,UAAU;AACN,SAAK,YAAY;AACjB,SAAK,UAAU;AACf,SAAK,OAAO,UAAU;AACtB,SAAK,aAAa;AAAA,EACtB;AAAA,EACA,IAAI,YAAY;AACZ,WAAO,QAAQ,KAAK,SAAS;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,YAAY,MAAM,cAAc;AAC5B,mBAAe,gBAAgB,gBAAgB,IAAI;AAEnD,SAAK,OAAO,YAAY,MAAM,YAAY;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,wBAAwB,OAAO;AAI3B,QAAIC,WAAU;AACd,IAAAA,YAAW,UAAU,KAAK,IAAI,SAAS,KAAK,GAAG;AAC/C,QAAI,MAAM,SAAS;AACf,MAAAA,YAAW,GAAG,MAAM,OAAO;AAAA,IAC/B;AAGA,QAAI,MAAM,QAAQ;AACd,MAAAA,YAAW,IAAI,MAAM,MAAM,IAAI,MAAM,KAAK;AAAA,IAC9C;AACA,WAAO,IAAI,MAAMA,QAAO;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA,EAIA,uBAAuB;AACnB,SAAK,eAAe,qBAAqB,EAAE,QAAQ,KAAK,QAAQ,KAAK,KAAK,IAAI,CAAC;AAC/E,UAAM,SAAS,IAAI,OAAO,KAAK,cAAc,EAAE,MAAM,KAAK,KAAK,CAAC;AAChE,WAAO,YAAY,CAAC,UAAU;AAC1B,UAAI,CAAC,MAAM,MAAM;AACb,aAAK,QAAQ,IAAI,MAAM,kBAAkB,CAAC;AAAA,MAC9C,OACK;AACD,aAAK,UAAU,MAAM,IAAI;AAAA,MAC7B;AAAA,IACJ;AAEA,WAAO,UAAU,CAAC,UAAU;AACxB,WAAK,QAAQ,KAAK,wBAAwB,KAAK,CAAC;AAChD,WAAK,aAAa;AAAA,IACtB;AAEA,WAAO,iBAAiB,CAAC,UAAU,QAAQ,MAAM,KAAK;AACtD,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,oBAAoB;AAChB,QAAI;AACJ,QAAI,KAAK,KAAK;AAEV,YAAM,WAAW,KAAK,IAAI,SAAS,IAAI,KAAK,KAAK,IAAI,WAAW,GAAG;AACnE,YAAM,MAAM,WAAW,KAAK,MAAM,KAAK,KAAK,GAAG;AAE/C,eAAS,IAAI,WAAW,KAAK,EAAE,MAAM,MAAM,CAAC;AAAA,IAChD,WACS,KAAK,QAAQ;AAClB,eAAS,IAAI,WAAW,KAAK,QAAQ,EAAE,MAAM,KAAK,CAAC;AAAA,IACvD,OACK;AACD,YAAM,IAAI,MAAM,WAAW;AAAA,IAC/B;AACA,WAAO,GAAG,WAAW,CAAC,SAAS;AAE3B,WAAK,UAAU,IAAI;AAAA,IACvB,CAAC;AACD,WAAO,GAAG,SAAS,CAAC,UAAU;AAE1B,WAAK,QAAQ,KAAK;AAAA,IACtB,CAAC;AACD,WAAO,GAAG,QAAQ,CAAC,SAAS;AAAA,IAE5B,CAAC;AACD,WAAO;AAAA,EACX;AACJ;;;AC9HA,IAAqB,aAArB,MAAgC;AAAA;AAAA;AAAA;AAAA;AAAA,EAqB5B,YAAY,OAAO;AApBnB,gCAAO;AACP;AACA;AAAA;AACA,0CAAiB;AACjB,gDAAuB;AACvB,mCAAU,MAAM;AAAA,IAAE;AAClB,wCAAe;AACf,iCAAQ,CAAC;AACT,oCAAW,CAAC;AACZ,qCAAY,CAAC;AACb,iCAAQ;AACR,uCAAc;AAUV,SAAK,SAAS,MAAM;AACpB,SAAK,MAAM,MAAM;AACjB,SAAK,SAAS,KAAK;AAAA,EACvB;AAAA;AAAA,EAXA,OAAO,cAAc;AACjB,WAAO,aAAa,YAAY;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,UAAU;AAEN,SAAK,UAAU,QAAQ,CAAC,WAAW,OAAO,QAAQ,CAAC;AACnD,SAAK,cAAc;AAAA,EACvB;AAAA,EACA,SAAS,OAAO;AACZ,SAAK,QAAQ,EAAE,GAAG,KAAK,OAAO,GAAG,MAAM;AACvC,QAAI,MAAM,SAAS,QAAW;AAC1B,WAAK,OAAO,MAAM;AAAA,IACtB;AACA,QAAI,MAAM,mBAAmB,QAAW;AACpC,WAAK,iBAAiB,MAAM;AAAA,IAChC;AACA,QAAI,MAAM,yBAAyB,QAAW;AAC1C,WAAK,uBAAuB,MAAM;AAAA,IACtC;AACA,QAAI,MAAM,iBAAiB,QAAW;AAClC,WAAK,eAAe,MAAM;AAAA,IAC9B;AACA,QAAI,MAAM,YAAY,QAAW;AAC7B,WAAK,UAAU,MAAM;AAAA,IACzB;AAAA,EACJ;AAAA,EACA,MAAM,SAASC,OAAMC,aAAY,CAAC,KAAK,MAAM,SAAS,IAAI,KAAK,IAAI,GAAG,UAAU,CAAC,KAAK,UAAU,IAAI,MAAM,KAAK,GAAG;AAE9G,UAAM,eAAe,IAAI,QAAQ,CAAC,YAAY;AAE1C,WAAK,SAAS,KAAK,EAAE,MAAAD,OAAM,WAAAC,YAAW,SAAS,QAAQ,CAAC;AACxD,aAAO;AAAA,IACX,CAAC;AACD,SAAK,gBAAgB;AACrB,WAAO,MAAM;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,kBAAkB;AACpB,QAAI,CAAC,KAAK,SAAS,QAAQ;AACvB;AAAA,IACJ;AACA,UAAM,eAAe,KAAK,oBAAoB;AAC9C,QAAI,CAAC,cAAc;AACf;AAAA,IACJ;AAEA,UAAM,YAAY,KAAK,SAAS,MAAM;AACtC,QAAI,WAAW;AAGX,WAAK,QAAQ;AAAA,QACT,SAAS;AAAA,QACT,MAAM,UAAU;AAAA,QAChB;AAAA,QACA,SAAS,KAAK,SAAS;AAAA,MAC3B,CAAC;AAED,YAAM,MAAM,IAAI,UAAU,UAAU,MAAM,YAAY;AAEtD,mBAAa,YAAY,CAAC,SAAS,UAAU,UAAU,KAAK,KAAK,MAAM,KAAK,OAAO;AACnF,mBAAa,UAAU,CAAC,UAAU,UAAU,QAAQ,KAAK,KAAK;AAE9D,gBAAU,QAAQ,GAAG;AAErB,UAAI;AACA,cAAM,IAAI;AAAA,MACd,SACO,OAAO;AAEV,gBAAQ,MAAM,qBAAqB,KAAK,EAAE;AAAA,MAC9C,UACA;AACI,aAAK,oBAAoB,YAAY;AAAA,MACzC;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,oBAAoB,QAAQ;AACxB,UAAM;AAAA;AAAA;AAAA,MAGN,CAACC;AAAA,MAEG,KAAK;AAAA,MAEL,CAAC,KAAK;AAAA,MAEN,KAAK,QAAQ,KAAK,mBAAmB;AAAA;AACzC,QAAI,qBAAqB;AACrB,aAAO,QAAQ;AACf,WAAK;AAAA,IACT,OACK;AACD,WAAK,UAAU,KAAK,MAAM;AAAA,IAC9B;AACA,QAAI,CAAC,KAAK,aAAa;AACnB,WAAK,gBAAgB;AAAA,IACzB;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAIA,sBAAsB;AAElB,QAAI,KAAK,UAAU,SAAS,GAAG;AAC3B,aAAO,KAAK,UAAU,MAAM,KAAK;AAAA,IACrC;AAEA,QAAI,KAAK,QAAQ,KAAK,mBAAmB,GAAG;AACxC,WAAK;AACL,YAAMF,QAAO,GAAG,KAAK,KAAK,YAAY,CAAC,MAAM,KAAK,KAAK,OAAO,KAAK,cAAc;AACjF,aAAO,IAAI,aAAa,EAAE,MAAAA,OAAM,QAAQ,KAAK,QAAQ,KAAK,KAAK,IAAI,CAAC;AAAA,IACxE;AAEA,WAAO;AAAA,EACX;AAAA,EACA,qBAAqB;AACjB,WAAOG,YAAW,KAAK,uBAAuB,KAAK;AAAA,EACvD;AACJ;;;ACjKA,IAAM,gBAAgB;AAAA,EAClB,gBAAgB;AAAA,EAChB,sBAAsB;AAAA,EACtB,cAAc;AAAA,EACd,SAAS,MAAM;AAAA,EAAE;AACrB;AAIA,IAAqB,cAArB,MAAqB,YAAW;AAAA;AAAA,EAgB5B,YAAY,OAAO;AAfnB;AACA,uCAAc,oBAAI,IAAI;AAelB,SAAK,QAAQ,EAAE,GAAG,cAAc;AAChC,SAAK,SAAS,KAAK;AAEnB,SAAK,cAAc,oBAAI,IAAI;AAAA,EAC/B;AAAA;AAAA,EAfA,OAAO,cAAc;AACjB,WAAO,aAAa,YAAY;AAAA,EACpC;AAAA;AAAA,EAEA,OAAO,cAAc,QAAQ,CAAC,GAAG;AAC7B,gBAAW,cAAc,YAAW,eAAe,IAAI,YAAW,CAAC,CAAC;AACpE,gBAAW,YAAY,SAAS,KAAK;AACrC,WAAO,YAAW;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,UAAU;AACN,eAAW,cAAc,KAAK,YAAY,OAAO,GAAG;AAChD,iBAAW,QAAQ;AAAA,IACvB;AACA,SAAK,cAAc,oBAAI,IAAI;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS,OAAO;AACZ,SAAK,QAAQ,EAAE,GAAG,KAAK,OAAO,GAAG,MAAM;AAEvC,eAAW,cAAc,KAAK,YAAY,OAAO,GAAG;AAChD,iBAAW,SAAS,KAAK,oBAAoB,CAAC;AAAA,IAClD;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,cAAc,SAAS;AACnB,UAAM,EAAE,MAAAC,OAAM,QAAAC,SAAQ,IAAI,IAAI;AAC9B,QAAI,aAAa,KAAK,YAAY,IAAID,KAAI;AAC1C,QAAI,CAAC,YAAY;AACb,mBAAa,IAAI,WAAW;AAAA,QACxB,MAAAA;AAAA,QACA,QAAAC;AAAA,QACA;AAAA,MACJ,CAAC;AACD,iBAAW,SAAS,KAAK,oBAAoB,CAAC;AAC9C,WAAK,YAAY,IAAID,OAAM,UAAU;AAAA,IACzC;AACA,WAAO;AAAA,EACX;AAAA,EACA,sBAAsB;AAClB,WAAO;AAAA,MACH,gBAAgB,KAAK,MAAM;AAAA,MAC3B,sBAAsB,KAAK,MAAM;AAAA,MACjC,cAAc,KAAK,MAAM;AAAA,MACzB,SAAS,KAAK,MAAM;AAAA,IACxB;AAAA,EACJ;AACJ;AAAA;AAtEI,cAJiB,aAIV;AAJX,IAAqB,aAArB;;;ACMO,SAAS,aAAa,QAAQ,UAAU,CAAC,GAAG;AAC/C,QAAM,gBAAgB,QAAQ,OAAO,EAAE,KAAK,CAAC;AAC7C,QAAM,aAAaE,aAAY,GAAG,OAAO,EAAE,eAAe,GAAG,OAAO,EAAE;AACtE,MAAI,MAAM,cAAc;AAOxB,MAAI,CAAC,OAAO,OAAO,OAAO,eAAe;AACrC,UAAM,QAAQ;AAAA,EAClB;AAGA,MAAI,QAAQ,gBAAgB,QAAQ;AAChC,QAAIA,YAAW;AACX,YAAM,WAAW,OAAO,MAAM,SAAS,UAAU;AAAA,IACrD,OACK;AAED,YAAM,WAAW,OAAO,MAAM,gBAAgB,OAAO,EAAE;AAAA,IAC3D;AAAA,EACJ;AAEA,MAAI,CAAC,KAAK;AAEN,QAAIC,WAAU,OAAO;AAErB,QAAIA,aAAY,UAAU;AAEtB,MAAAA,WAAU;AAAA,IACd;AACA,UAAM,aAAaA,WAAU,IAAIA,QAAO,KAAK;AAC7C,UAAM,iCAAiC,OAAO,MAAM,GAAG,UAAU,SAAS,UAAU;AAAA,EACxF;AACA,EAAAC,QAAO,GAAG;AAEV,SAAO;AACX;;;AChDO,SAAS,sBAAsB,QAAQ,cAAcC,UAAS;AACjE,EAAAC,QAAO,QAAQ,oBAAoB;AACnC,QAAM,gBAAgB,OAAO;AAC7B,MAAI,CAAC,eAAe,CAAC,eAAe;AAChC,WAAO;AAAA,EACX;AAUA,SAAO;AACX;;;ACpBA,IAAAC,gBAA8B;;;ACJ9B,2BAAyB;;;ACGlB,SAAS,mBAAmB,QAAQ,SAAS;AAChD,MAAI,CAAC,WAAW,YAAY,GAAG;AAC3B,WAAO;AAAA,EACX;AAEA,MAAI,CAACC,cAAa,EAAC,mCAAS,eAAc;AACtC,WAAO;AAAA,EACX;AACA,SAAO,OAAO,WAAU,mCAAS;AACrC;AAKA,eAAsB,gBAAgB,QAAQ,MAAM,SAAS,SAAS,mBAAmB;AACrF,QAAMC,QAAO,OAAO;AACpB,QAAM,MAAM,aAAa,QAAQ,OAAO;AACxC,QAAM,aAAa,WAAW,cAAc,OAAO;AACnD,QAAM,aAAa,WAAW,cAAc,EAAE,MAAAA,OAAM,IAAI,CAAC;AAIzD,YAAU,KAAK,MAAM,KAAK,UAAU,OAAO,CAAC;AAC5C,YAAU,KAAK,MAAM,KAAK,UAAU,WAAW,CAAC,CAAC,CAAC;AAClD,QAAM,MAAM,MAAM,WAAW;AAAA,IAAS;AAAA;AAAA,IAEtC,UAAU,KAAK,MAAM,iBAAiB;AAAA;AAAA,EACtC;AACA,MAAI,YAAY,WAAW;AAAA;AAAA,IAEvB,OAAO;AAAA,IACP;AAAA,IACA;AAAA,EACJ,CAAC;AACD,QAAM,SAAS,MAAM,IAAI;AAEzB,SAAO,MAAM,OAAO;AACxB;AAOA,eAAe,UAAU,mBAAmB,KAAK,MAAM,SAAS;AAC5D,UAAQ,MAAM;AAAA,IACV,KAAK;AACD,UAAI,KAAK,OAAO;AAChB;AAAA,IACJ,KAAK;AACD,UAAI,MAAM,IAAI,MAAM,QAAQ,KAAK,CAAC;AAClC;AAAA,IACJ,KAAK;AAED,YAAM,EAAE,IAAI,OAAO,QAAQ,IAAI;AAC/B,UAAI;AACA,cAAM,SAAS,MAAM,kBAAkB,OAAO,OAAO;AACrD,YAAI,YAAY,QAAQ,EAAE,IAAI,OAAO,CAAC;AAAA,MAC1C,SACO,OAAO;AACV,cAAMC,WAAU,iBAAiB,QAAQ,MAAM,UAAU;AACzD,YAAI,YAAY,SAAS,EAAE,IAAI,OAAOA,SAAQ,CAAC;AAAA,MACnD;AACA;AAAA,IACJ;AAEI,cAAQ,KAAK,qCAAqC,IAAI,EAAE;AAAA,EAChE;AACJ;;;ACpEO,SAAS,oBAAoB,cAAc,cAAc,YAAY;AACxE,eAAa,cAAc,aAAa;AACxC,MAAI,aAAa,aAAa,cAAc,aAAa,aAAa,YAAY;AAC9E,WAAO;AAAA,EACX;AACA,QAAM,SAAS,IAAI,WAAW,YAAY;AAC1C,QAAM,SAAS,IAAI,WAAW,YAAY;AAC1C,WAASC,KAAI,GAAGA,KAAI,OAAO,QAAQ,EAAEA,IAAG;AACpC,QAAI,OAAOA,EAAC,MAAM,OAAOA,EAAC,GAAG;AACzB,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;AAKO,SAAS,2BAA2B,SAAS;AAChD,SAAO,iCAAiC,OAAO;AACnD;AAKO,SAAS,iCAAiC,SAAS;AAEtD,QAAM,eAAe,QAAQ,IAAI,CAACC,aAAYA,oBAAmB,cAAc,IAAI,WAAWA,QAAO,IAAIA,QAAO;AAEhH,QAAM,aAAa,aAAa,OAAO,CAACC,SAAQ,eAAeA,UAAS,WAAW,YAAY,CAAC;AAEhG,QAAM,SAAS,IAAI,WAAW,UAAU;AAExC,MAAI,SAAS;AACb,aAAW,eAAe,cAAc;AACpC,WAAO,IAAI,aAAa,MAAM;AAC9B,cAAU,YAAY;AAAA,EAC1B;AAEA,SAAO,OAAO;AAClB;;;ACbA,eAAsB,6BAA6B,eAAe;AAC9D,QAAM,eAAe,CAAC;AACtB,mBAAiB,SAAS,eAAe;AACrC,iBAAa,KAAK,KAAK;AAAA,EAC3B;AACA,SAAO,wBAAwB,GAAG,YAAY;AAClD;;;ACnBc,SAAPC,qBAAkC;AACvC,MAAI;AAEJ,MAAI,OAAO,WAAW,eAAe,OAAO,aAAa;AACvD,gBAAY,OAAO,YAAY,IAAG;EACpC,WAAW,OAAO,YAAY,eAAe,QAAQ,QAAQ;AAC3D,UAAM,YAAY,QAAQ,OAAM;AAChC,gBAAY,UAAU,CAAC,IAAI,MAAO,UAAU,CAAC,IAAI;EACnD,OAAO;AACL,gBAAY,KAAK,IAAG;EACtB;AAEA,SAAO;AACT;;;AC/BA,IAAqB,OAArB,MAAyB;EAiBvB,YAAYC,OAAc,MAAa;AAdvC,SAAA,aAAqB;AACrB,SAAA,OAAe;AACf,SAAA,QAAgB;AAChB,SAAA,UAAkB;AAClB,SAAA,aAAqB;AACrB,SAAA,iBAAyB;AACzB,SAAA,kBAA0B;AAE1B,SAAA,SAAiB;AACjB,SAAA,QAAgB;AAChB,SAAA,WAAmB;AACnB,SAAA,aAAqB;AACrB,SAAA,gBAAyB;AAGvB,SAAK,OAAOA;AACZ,SAAK,OAAO;AACZ,SAAK,MAAK;EACZ;EAEA,QAAK;AACH,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,UAAU;AACf,SAAK,aAAa;AAClB,SAAK,iBAAiB;AACtB,SAAK,kBAAkB;AACvB,SAAK,SAAS;AACd,SAAK,QAAQ;AACb,SAAK,WAAW;AAChB,SAAK,aAAa;AAClB,SAAK,gBAAgB;AAErB,WAAO;EACT;EAEA,cAAc,SAAe;AAC3B,SAAK,aAAa;AAClB,WAAO;EACT;;EAGA,iBAAc;AACZ,SAAK,SAAS,CAAC;AAEf,WAAO;EACT;;EAGA,iBAAc;AACZ,SAAK,cAAc,CAAC;AAEpB,WAAO;EACT;;EAGA,SAAS,OAAa;AACpB,SAAK,UAAU;AACf,SAAK;AACL,SAAK,eAAc;AAEnB,WAAO;EACT;;EAGA,cAAc,OAAa;AACzB,SAAK,UAAU;AACf,SAAK;AACL,SAAK,eAAc;AAEnB,WAAO;EACT;;EAGA,QAAQ,MAAY;AAClB,SAAK,SAAS;AACd,SAAK,aAAa;AAClB,SAAK;AACL,SAAK,eAAc;AAEnB,WAAO;EACT;;EAGA,YAAS;AACP,SAAK,aAAaC,mBAAiB;AACnC,SAAK,gBAAgB;AAErB,WAAO;EACT;;EAGA,UAAO;AACL,QAAI,CAAC,KAAK,eAAe;AACvB,aAAO;IACT;AACA,SAAK,QAAQA,mBAAiB,IAAK,KAAK,UAAU;AAClD,SAAK,gBAAgB;AACrB,SAAK,eAAc;AAEnB,WAAO;EACT;EAEA,wBAAqB;AACnB,WAAO,KAAK,aAAa,IAAI,KAAK,kBAAkB,KAAK,aAAa;EACxE;;EAGA,uBAAoB;AAClB,WAAO,KAAK,aAAa,IAAI,KAAK,iBAAiB,KAAK,aAAa;EACvE;;EAGA,cAAW;AACT,WAAO,KAAK,iBAAiB,IAAI,KAAK,cAAc,KAAK,iBAAiB,OAAQ;EACpF;EAEA,kBAAe;AACb,WAAO,KAAK,UAAU,IAAI,KAAK,QAAQ,KAAK,UAAU;EACxD;;EAGA,iBAAc;AACZ,WAAO,KAAK,UAAU,IAAI,KAAK,OAAO,KAAK,UAAU;EACvD;;EAGA,QAAK;AACH,WAAO,KAAK,OAAO,IAAI,KAAK,WAAW,KAAK,OAAO,OAAQ;EAC7D;EAEA,iBAAc;AACZ,QAAI,KAAK,aAAa,KAAK,YAAY;AACrC,WAAK,iBAAiB,KAAK;AAC3B,WAAK,kBAAkB,KAAK;AAC5B,WAAK,SAAS,KAAK;AACnB,WAAK,QAAQ,KAAK;AAClB,WAAK,WAAW,KAAK;AACrB,WAAK,QAAQ;AACb,WAAK,SAAS;AACd,WAAK,WAAW;IAClB;EACF;;;;ACvIF,IAAqB,QAArB,MAA0B;EAIxB,YAAY,SAA+E;AAFlF,SAAA,QAA8B,CAAA;AAGrC,SAAK,KAAK,QAAQ;AAClB,SAAK,QAAQ,CAAA;AAEb,SAAK,iBAAiB,QAAQ,KAAK;AAEnC,WAAO,KAAK,IAAI;EAClB;;EAGA,IAAIC,OAAc,OAAe,SAAO;AACtC,WAAO,KAAK,aAAa,EAAC,MAAAA,OAAM,KAAI,CAAC;EACvC;EAEA,IAAI,OAAI;AACN,WAAO,OAAO,KAAK,KAAK,KAAK,EAAE;EACjC;;EAGA,QAAK;AACH,eAAW,QAAQ,OAAO,OAAO,KAAK,KAAK,GAAG;AAC5C,WAAK,MAAK;IACZ;AAEA,WAAO;EACT;EAEA,QAAQ,IAAwB;AAC9B,eAAW,QAAQ,OAAO,OAAO,KAAK,KAAK,GAAG;AAC5C,SAAG,IAAI;IACT;EACF;EAEA,WAAQ;AACN,UAAM,QAAoC,CAAA;AAC1C,SAAK,QAAQ,UAAO;AAClB,YAAM,KAAK,IAAI,IAAI;QACjB,MAAM,KAAK,QAAQ;QACnB,OAAO,KAAK,SAAS;QACrB,SAAS,KAAK,eAAc,KAAM;QAClC,IAAI,KAAK,MAAK,KAAM;;IAExB,CAAC;AAED,WAAO;EACT;EAEA,iBAAiB,QAA0D,CAAA,GAAE;AAC3E,UAAM,QAAQ,UAAQ,KAAK,aAAa,IAAI,CAAC;EAC/C;EAEA,aAAa,MAA0C;AACrD,UAAM,EAAC,MAAAA,OAAM,KAAI,IAAI;AACrB,QAAI,SAAS,KAAK,MAAMA,KAAI;AAC5B,QAAI,CAAC,QAAQ;AACX,UAAI,gBAAgB,MAAM;AACxB,iBAAS;MACX,OAAO;AACL,iBAAS,IAAI,KAAKA,OAAM,IAAI;MAC9B;AACA,WAAK,MAAMA,KAAI,IAAI;IACrB;AACA,WAAO;EACT;;;;AC9EF,IAAI,aAAa;AACjB,IAAM,cAAc,CAAC;AA0Bd,SAAS,YAAYC,WAAU;AAClC,aAAW,SAAS,aAAa;AAC7B,QAAIA,UAAS,WAAW,KAAK,GAAG;AAC5B,YAAM,cAAc,YAAY,KAAK;AACrC,MAAAA,YAAWA,UAAS,QAAQ,OAAO,WAAW;AAAA,IAClD;AAAA,EACJ;AACA,MAAI,CAACA,UAAS,WAAW,SAAS,KAAK,CAACA,UAAS,WAAW,UAAU,GAAG;AACrE,IAAAA,YAAW,GAAG,UAAU,GAAGA,SAAQ;AAAA,EACvC;AACA,SAAOA;AACX;;;AC7BO,SAAS,cAAcC,SAAQ;AAClC,SAAOA;AACX;;;ACLO,SAAS,SAAS,OAAO;AAC5B,SAAO,SAAS,OAAO,UAAU,YAAY,MAAM;AACvD;AAWO,SAASC,eAAc,MAAM;AAEhC,MAAI,SAAS,IAAI,GAAG;AAChB,WAAY,cAAc,IAAI;AAAA,EAClC;AACA,MAAI,gBAAgB,aAAa;AAC7B,WAAO;AAAA,EACX;AAEA,MAAI,YAAY,OAAO,IAAI,GAAG;AAC1B,QAAI,KAAK,eAAe,KAAK,KAAK,eAAe,KAAK,OAAO,YAAY;AACrE,aAAO,KAAK;AAAA,IAChB;AACA,WAAO,KAAK,OAAO,MAAM,KAAK,YAAY,KAAK,aAAa,KAAK,UAAU;AAAA,EAC/E;AACA,MAAI,OAAO,SAAS,UAAU;AAC1B,UAAM,OAAO;AACb,UAAM,aAAa,IAAI,YAAY,EAAE,OAAO,IAAI;AAChD,WAAO,WAAW;AAAA,EACtB;AAEA,MAAI,QAAQ,OAAO,SAAS,YAAY,KAAK,gBAAgB;AACzD,WAAO,KAAK,eAAe;AAAA,EAC/B;AACA,QAAM,IAAI,MAAM,eAAe;AACnC;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCO,SAAS,SAAS;AADzB,MAAAC;AAEI,MAAI,OAAO,YAAY,eAAe,OAAO,QAAQ,QAAQ,aAAa;AACtE,WAAO,QAAQ,IAAI;AAAA,EACvB;AACA,QAAM,YAAWA,MAAA,OAAO,aAAP,gBAAAA,IAAiB;AAClC,UAAO,qCAAU,MAAM,GAAG,SAAS,YAAY,GAAG,IAAI,OAAM;AAChE;;;ADDO,SAAS,SAAS,KAAK;AAC1B,QAAM,aAAa,MAAM,IAAI,YAAY,GAAG,IAAI;AAChD,SAAO,cAAc,IAAI,IAAI,OAAO,aAAa,CAAC,IAAI;AAC1D;AAKO,SAAS,QAAQ,KAAK;AACzB,QAAM,aAAa,MAAM,IAAI,YAAY,GAAG,IAAI;AAChD,SAAO,cAAc,IAAI,IAAI,OAAO,GAAG,UAAU,IAAI;AACzD;AAKO,SAAS,QAAQ,OAAO;AAC3B,QAAM,YAAY;AAClB,UAAQ,MAAM,IAAI,CAAC,MAAM,UAAU;AAC/B,QAAI,OAAO;AACP,aAAO,KAAK,QAAQ,IAAI,OAAO,IAAI,SAAS,EAAE,GAAG,EAAE;AAAA,IACvD;AACA,QAAI,UAAU,MAAM,SAAS,GAAG;AAC5B,aAAO,KAAK,QAAQ,IAAI,OAAO,GAAG,SAAS,GAAG,GAAG,EAAE;AAAA,IACvD;AACA,WAAO;AAAA,EACX,CAAC;AACD,SAAO,MAAM,KAAK,SAAS;AAC/B;AASO,SAAS,WAAW,YAAY;AACnC,QAAM,QAAQ,CAAC;AACf,WAAS,KAAK,GAAG,KAAK,WAAW,QAAQ,MAAM;AAC3C,UAAM,EAAE,IAAI,WAAW,EAAE;AAAA,EAC7B;AACA,MAAI,eAAe;AACnB,MAAI,mBAAmB;AACvB,MAAI;AACJ,WAASC,KAAI,MAAM,SAAS,GAAGA,MAAK,MAAM,CAAC,kBAAkBA,MAAK;AAC9D,QAAI;AACJ,QAAIA,MAAK,GAAG;AACR,aAAO,MAAMA,EAAC;AAAA,IAClB,OACK;AACD,UAAI,QAAQ,QAAW;AACnB,cAAM,OAAO;AAAA,MACjB;AACA,aAAO;AAAA,IACX;AAEA,QAAI,KAAK,WAAW,GAAG;AACnB;AAAA,IACJ;AACA,mBAAe,GAAG,IAAI,IAAI,YAAY;AACtC,uBAAmB,KAAK,WAAW,CAAC,MAAM;AAAA,EAC9C;AAIA,iBAAe,qBAAqB,cAAc,CAAC,gBAAgB;AACnE,MAAI,kBAAkB;AAClB,WAAO,IAAI,YAAY;AAAA,EAC3B,WACS,aAAa,SAAS,GAAG;AAC9B,WAAO;AAAA,EACX;AACA,SAAO;AACX;AACA,IAAM,QAAQ;AACd,IAAM,MAAM;AAQZ,SAAS,qBAAqB,MAAM,gBAAgB;AAChD,MAAI,MAAM;AACV,MAAI,YAAY;AAChB,MAAI,OAAO;AACX,MAAI;AACJ,MAAI,cAAc;AAClB,WAASA,KAAI,GAAGA,MAAK,KAAK,QAAQ,EAAEA,IAAG;AACnC,QAAIA,KAAI,KAAK,QAAQ;AACjB,aAAO,KAAK,WAAWA,EAAC;AAAA,IAC5B,WACS,SAAS,OAAO;AACrB;AAAA,IACJ,OACK;AACD,aAAO;AAAA,IACX;AACA,QAAI,SAAS,OAAO;AAChB,UAAI,cAAcA,KAAI,KAAK,SAAS,GAAG;AAAA,MAEvC,WACS,cAAcA,KAAI,KAAK,SAAS,GAAG;AACxC,YAAI,IAAI,SAAS,KACb,CAAC,eACD,IAAI,WAAW,IAAI,SAAS,CAAC,MAAM,OACnC,IAAI,WAAW,IAAI,SAAS,CAAC,MAAM,KAAK;AACxC,cAAI,IAAI,SAAS,GAAG;AAChB,kBAAM,QAAQ,IAAI,SAAS;AAC3B,gBAAIC,KAAI;AACR,mBAAOA,MAAK,GAAG,EAAEA,IAAG;AAChB,kBAAI,IAAI,WAAWA,EAAC,MAAM,OAAO;AAC7B;AAAA,cACJ;AAAA,YACJ;AACA,gBAAIA,OAAM,OAAO;AACb,oBAAMA,OAAM,KAAK,KAAK,IAAI,MAAM,GAAGA,EAAC;AACpC,0BAAYD;AACZ,qBAAO;AACP,4BAAc;AACd;AAAA,YACJ;AAAA,UACJ,WACS,IAAI,WAAW,KAAK,IAAI,WAAW,GAAG;AAC3C,kBAAM;AACN,wBAAYA;AACZ,mBAAO;AACP,0BAAc;AACd;AAAA,UACJ;AAAA,QACJ;AACA,YAAI,gBAAgB;AAChB,cAAI,IAAI,SAAS,GAAG;AAChB,mBAAO;AAAA,UACX,OACK;AACD,kBAAM;AAAA,UACV;AACA,wBAAc;AAAA,QAClB;AAAA,MACJ,OACK;AACD,cAAM,QAAQ,KAAK,MAAM,YAAY,GAAGA,EAAC;AACzC,YAAI,IAAI,SAAS,GAAG;AAChB,iBAAO,IAAI,KAAK;AAAA,QACpB,OACK;AACD,gBAAM;AAAA,QACV;AACA,sBAAc;AAAA,MAClB;AACA,kBAAYA;AACZ,aAAO;AAAA,IACX,WACS,SAAS,OAAO,SAAS,IAAI;AAClC,QAAE;AAAA,IACN,OACK;AACD,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;;;AEtKA,IAAM,kBAAkB,IAAI,MAAM,iBAAiB;;;ACAnD,IAAME,mBAAkB,IAAI,MAAM,iBAAiB;;;ACDnD,IAAM,YAAY,CAACC,OAAM,OAAOA,OAAM;AACtC,IAAM,aAAa,CAACA,OAAM,OAAOA,OAAM;AAChC,IAAM,WAAW,CAACA,OAAMA,OAAM,QAAQ,OAAOA,OAAM;AACnD,IAAM,eAAe,CAACA,OAAM,SAASA,EAAC,KAAKA,GAAE,gBAAgB,CAAC,EAAE;AAEhE,IAAM,aAAa,CAACC,OAAM,QAAQA,EAAC,KAAK,OAAOA,GAAE,OAAO,QAAQ,MAAM;AACtE,IAAM,kBAAkB,CAACA,OAAMA,MAAK,OAAOA,GAAE,OAAO,aAAa,MAAM;AAEvE,IAAM,aAAa,CAACC,OAAO,OAAO,aAAa,eAAeA,cAAa,YAC7EA,MAAKA,GAAE,eAAeA,GAAE,QAAQA,GAAE;AAEhC,IAAM,SAAS,CAACC,OAAM,OAAO,SAAS,eAAeA,cAAa;AAElE,IAAMC,YAAW,CAACD,OAAMA,MAAK,OAAOA,OAAM,YAAYA,GAAE;AAExD,IAAM,sBAAsB,CAACE,OAAO,OAAO,mBAAmB,eAAeA,cAAa,kBAC5F,SAASA,EAAC,KAAK,WAAWA,GAAE,GAAG,KAAK,WAAWA,GAAE,MAAM,KAAK,WAAWA,GAAE,SAAS;AAGhF,IAAM,uBAAuB,CAACC,OAAM,SAASA,EAAC,KAAK,WAAWA,GAAE,IAAI,KAAK,WAAWA,GAAE,IAAI,KAAK,UAAUA,GAAE,QAAQ;AACnH,IAAM,mBAAmB,CAACA,OAAM,oBAAoBA,EAAC,KAAK,qBAAqBA,EAAC;;;ACpBhF,IAAM,aAAN,cAAyB,MAAM;AAAA,EAClC,YAAYC,UAAS,MAAM;AACvB,UAAMA,QAAO;AAMjB;AAAA;AAEA;AAAA;AAEA;AAAA;AATI,SAAK,SAAS,KAAK;AACnB,SAAK,MAAM,KAAK;AAChB,SAAK,WAAW,KAAK;AAAA,EACzB;AAOJ;;;ACXA,IAAM,mBAAmB;AACzB,IAAM,oBAAoB;AAQnB,SAAS,iBAAiB,WAAW,WAAW;AACnD,MAAI,UAAU,YAAY,MAAM,UAAU,YAAY,GAAG;AACrD,WAAO;AAAA,EACX;AACA,SAAO;AACX;AASO,SAAS,cAAc,YAAY;AAEtC,QAAMC,WAAU,kBAAkB,KAAK,UAAU;AACjD,MAAIA,UAAS;AACT,WAAOA,SAAQ,CAAC;AAAA,EACpB;AACA,SAAO;AACX;AAUO,SAAS,qBAAqB,KAAK;AAEtC,QAAMA,WAAU,iBAAiB,KAAK,GAAG;AACzC,MAAIA,UAAS;AACT,WAAOA,SAAQ,CAAC;AAAA,EACpB;AACA,SAAO;AACX;;;ACjDA,IAAM,uBAAuB;AACtB,SAAS,mBAAmB,KAAK;AACpC,QAAMC,WAAU,IAAI,MAAM,oBAAoB;AAC9C,SAAOA,YAAWA,SAAQ,CAAC;AAC/B;AACO,SAAS,iBAAiB,KAAK;AAClC,SAAO,IAAI,QAAQ,sBAAsB,EAAE;AAC/C;AACO,SAAS,qBAAqB,KAAK;AACtC,MAAI,IAAI,SAAS,IAAI;AACjB,WAAO;AAAA,EACX;AACA,QAAM,SAAS,IAAI,MAAM,IAAI,SAAS,EAAE;AACxC,QAAM,WAAW,IAAI,OAAO,GAAG,EAAE;AACjC,SAAO,GAAG,QAAQ,MAAM,MAAM;AAClC;;;ACLO,SAAS,eAAe,UAAU;AAErC,MAAI,WAAW,QAAQ,GAAG;AACtB,UAAM,WAAW;AACjB,WAAO,SAAS;AAAA,EACpB;AAEA,MAAI,OAAO,QAAQ,GAAG;AAClB,UAAM,OAAO;AAGb,WAAO,KAAK,QAAQ;AAAA,EACxB;AACA,MAAI,OAAO,aAAa,UAAU;AAC9B,WAAO;AAAA,EACX;AAEA,SAAO;AACX;AAQO,SAAS,oBAAoB,UAAU;AAE1C,MAAI,WAAW,QAAQ,GAAG;AACtB,UAAM,WAAW;AACjB,UAAM,oBAAoB,SAAS,QAAQ,IAAI,cAAc,KAAK;AAClE,UAAM,aAAa,iBAAiB,SAAS,GAAG;AAChD,WAAO,cAAc,iBAAiB,KAAK,qBAAqB,UAAU;AAAA,EAC9E;AAEA,MAAI,OAAO,QAAQ,GAAG;AAClB,UAAM,OAAO;AACb,WAAO,KAAK,QAAQ;AAAA,EACxB;AACA,MAAI,OAAO,aAAa,UAAU;AAC9B,WAAO,qBAAqB,QAAQ;AAAA,EACxC;AAEA,SAAO;AACX;AAQO,SAAS,yBAAyB,UAAU;AAC/C,MAAI,WAAW,QAAQ,GAAG;AACtB,UAAM,WAAW;AACjB,WAAO,SAAS,QAAQ,gBAAgB,KAAK;AAAA,EACjD;AACA,MAAI,OAAO,QAAQ,GAAG;AAClB,UAAM,OAAO;AACb,WAAO,KAAK;AAAA,EAChB;AACA,MAAI,OAAO,aAAa,UAAU;AAE9B,WAAO,SAAS;AAAA,EACpB;AACA,MAAI,oBAAoB,aAAa;AACjC,WAAO,SAAS;AAAA,EACpB;AACA,MAAI,YAAY,OAAO,QAAQ,GAAG;AAC9B,WAAO,SAAS;AAAA,EACpB;AACA,SAAO;AACX;;;ACxEA,eAAsB,aAAa,UAAU;AACzC,MAAI,WAAW,QAAQ,GAAG;AACtB,WAAO;AAAA,EACX;AAEA,QAAM,UAAU,CAAC;AACjB,QAAM,gBAAgB,yBAAyB,QAAQ;AACvD,MAAI,iBAAiB,GAAG;AACpB,YAAQ,gBAAgB,IAAI,OAAO,aAAa;AAAA,EACpD;AAGA,QAAM,MAAM,eAAe,QAAQ;AACnC,QAAM,OAAO,oBAAoB,QAAQ;AACzC,MAAI,MAAM;AACN,YAAQ,cAAc,IAAI;AAAA,EAC9B;AAEA,QAAM,iBAAiB,MAAM,kBAAkB,QAAQ;AACvD,MAAI,gBAAgB;AAChB,YAAQ,eAAe,IAAI;AAAA,EAC/B;AAGA,MAAI,OAAO,aAAa,UAAU;AAE9B,eAAW,IAAI,YAAY,EAAE,OAAO,QAAQ;AAAA,EAChD;AAEA,QAAM,WAAW,IAAI,SAAS,UAAU,EAAE,QAAQ,CAAC;AAEnD,SAAO,eAAe,UAAU,OAAO,EAAE,OAAO,IAAI,CAAC;AACrD,SAAO;AACX;AAKA,eAAsB,cAAc,UAAU;AAC1C,MAAI,CAAC,SAAS,IAAI;AACd,UAAM,QAAQ,MAAM,iBAAiB,QAAQ;AAC7C,UAAM;AAAA,EACV;AACJ;AAaA,eAAe,iBAAiB,UAAU;AACtC,QAAM,WAAW,qBAAqB,SAAS,GAAG;AAClD,MAAIC,WAAU,6BAA6B,SAAS,MAAM,KAAK,SAAS,UAAU,KAAK,QAAQ;AAC/F,EAAAA,WAAUA,SAAQ,SAAS,MAAM,GAAGA,SAAQ,MAAM,GAAG,GAAG,CAAC,QAAQA;AACjE,QAAM,OAAO;AAAA,IACT,QAAQ,SAAS;AAAA,IACjB,KAAK,SAAS;AAAA,IACd;AAAA,EACJ;AAEA,MAAI;AACA,UAAM,cAAc,SAAS,QAAQ,IAAI,cAAc;AACvD,SAAK,SACD,CAAC,SAAS,aAAY,2CAAa,SAAS,uBACtC,MAAM,SAAS,KAAK,IACpB,MAAM,SAAS,KAAK;AAAA,EAClC,SACO,OAAO;AAAA,EAEd;AACA,SAAO,IAAI,WAAWA,UAAS,IAAI;AACvC;AACA,eAAe,kBAAkB,UAAU;AACvC,QAAM,sBAAsB;AAC5B,MAAI,OAAO,aAAa,UAAU;AAC9B,WAAO,SAAS,SAAS,MAAM,GAAG,mBAAmB,CAAC;AAAA,EAC1D;AACA,MAAI,oBAAoB,MAAM;AAC1B,UAAM,YAAY,SAAS,MAAM,GAAG,CAAC;AACrC,WAAO,MAAM,IAAI,QAAQ,CAACC,aAAY;AAClC,YAAM,SAAS,IAAI,WAAW;AAC9B,aAAO,SAAS,CAAC,UAAO;AApGpC,YAAAC;AAoGuC,eAAAD,UAAQC,MAAA,+BAAO,WAAP,gBAAAA,IAAe,MAAM;AAAA;AACxD,aAAO,cAAc,SAAS;AAAA,IAClC,CAAC;AAAA,EACL;AACA,MAAI,oBAAoB,aAAa;AACjC,UAAM,QAAQ,SAAS,MAAM,GAAG,mBAAmB;AACnD,UAAM,SAAS,oBAAoB,KAAK;AACxC,WAAO,eAAe,MAAM;AAAA,EAChC;AACA,SAAO;AACX;AAEA,SAAS,oBAAoBC,SAAQ;AACjC,MAAI,SAAS;AACb,QAAM,QAAQ,IAAI,WAAWA,OAAM;AACnC,WAASC,KAAI,GAAGA,KAAI,MAAM,YAAYA,MAAK;AACvC,cAAU,OAAO,aAAa,MAAMA,EAAC,CAAC;AAAA,EAC1C;AACA,SAAO,KAAK,MAAM;AACtB;;;ACjHO,SAAS,WAAW,KAAK;AAC5B,SAAO,CAAC,aAAa,GAAG,KAAK,CAAC,UAAU,GAAG;AAC/C;AACO,SAAS,aAAa,KAAK;AAC9B,SAAO,IAAI,WAAW,OAAO,KAAK,IAAI,WAAW,QAAQ;AAC7D;AACO,SAAS,UAAU,KAAK;AAC3B,SAAO,IAAI,WAAW,OAAO;AACjC;AAMA,eAAsB,UAAU,WAAW,cAAc;AApBzD,MAAAC,KAAA;AAqBI,MAAI,OAAO,cAAc,UAAU;AAC/B,UAAM,MAAM,YAAY,SAAS;AAEjC,QAAI,WAAW,GAAG,GAAG;AACjB,WAAIA,MAAA,WAAW,YAAX,gBAAAA,IAAoB,WAAW;AAC/B,gBAAO,gBAAW,YAAX,mBAAoB,UAAU,KAAK;AAAA,MAC9C;AAAA,IAIJ;AAEA,WAAO,MAAM,MAAM,KAAK,YAAY;AAAA,EACxC;AAEA,SAAO,MAAM,aAAa,SAAS;AACvC;;;AChCO,IAAM,WAAW,IAAI,IAAI,EAAE,IAAI,aAAa,CAAC;AAE7C,IAAM,UAAN,MAAc;AAAA,EACjB,MAAM;AACF,WAAO,MAAM;AAAA,IAAE;AAAA,EACnB;AAAA,EACA,OAAO;AACH,WAAO,MAAM;AAAA,IAAE;AAAA,EACnB;AAAA,EACA,OAAO;AACH,WAAO,MAAM;AAAA,IAAE;AAAA,EACnB;AAAA,EACA,QAAQ;AACJ,WAAO,MAAM;AAAA,IAAE;AAAA,EACnB;AACJ;AAEO,IAAM,aAAN,MAAiB;AAAA,EAEpB,cAAc;AADd;AAEI,SAAK,UAAU;AAAA,EACnB;AAAA,EACA,OAAO,MAAM;AACT,WAAO,KAAK,QAAQ,IAAI,KAAK,KAAK,SAAS,GAAG,IAAI;AAAA,EACtD;AAAA,EACA,QAAQ,MAAM;AACV,WAAO,KAAK,QAAQ,KAAK,KAAK,KAAK,SAAS,GAAG,IAAI;AAAA,EACvD;AAAA,EACA,QAAQ,MAAM;AACV,WAAO,KAAK,QAAQ,KAAK,KAAK,KAAK,SAAS,GAAG,IAAI;AAAA,EACvD;AAAA,EACA,SAAS,MAAM;AACX,WAAO,KAAK,QAAQ,MAAM,KAAK,KAAK,SAAS,GAAG,IAAI;AAAA,EACxD;AACJ;;;AClCO,IAAM,yBAAyB;AAAA;AAAA,EAElC,OAAO;AAAA,EACP,UAAU;AAAA,EACV,SAAS;AAAA,EACT,KAAK,IAAI,WAAW;AAAA;AAAA,EACpB,mBAAmB;AAAA,EACnB,KAAK;AAAA,EACL,QAAQ;AAAA;AAAA,EACR,gBAAgB;AAAA;AAAA,EAChB,sBAAsB;AAAA;AAAA,EACtB,cAAc;AAAA;AAAA,EACd,cAAc;AAAA;AAAA,EACd,aAAa;AAAA;AAAA,EACb,OAAO;AAAA,EACP,UAAU;AAAA,EACV,WAAW;AAAA,EACX,iBAAiB;AAAA,EACjB,UAAU;AAAA;AAAA,EACV,YAAY,CAAC;AACjB;AACO,IAAM,yBAAyB;AAAA,EAClC,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,KAAK;AAAA;AAAA,EAEL,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,MAAM;AAAA,EACN,MAAM;AAAA,EACN,aAAa;AAAA,EACb,OAAO;AAAA,EACP,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,WAAW;AAAA,EACX,WAAW;AAAA,EACX,QAAQ;AACZ;;;AChCO,SAAS,uBAAuB;AAEnC,aAAW,UAAU,WAAW,WAAW,CAAC;AAE5C,QAAM,EAAE,QAAQ,IAAI;AAEpB,MAAI,CAAC,QAAQ,QAAQ;AACjB,YAAQ,SAAS,CAAC;AAAA,EACtB;AACA,SAAO,QAAQ;AACnB;AAMO,SAAS,yBAAyB;AACrC,QAAM,QAAQ,qBAAqB;AAEnC,QAAM,gBAAgB,MAAM,iBAAiB,EAAE,GAAG,uBAAuB;AACzE,SAAO,MAAM;AACjB;AAoBO,SAAS,iBAAiB,SAAS,QAAQ,SAAS,KAAK;AAC5D,YAAU,WAAW,CAAC;AACtB,YAAU,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO;AACrD,kBAAgB,SAAS,OAAO;AAChC,SAAO,yBAAyB,QAAQ,SAAS,GAAG;AACxD;AAOA,SAAS,gBAAgB,SAAS,SAAS;AAEvC,wBAAsB,SAAS,MAAM,wBAAwB,wBAAwB,OAAO;AAC5F,aAAW,UAAU,SAAS;AAE1B,UAAM,YAAc,WAAW,QAAQ,OAAO,EAAE,KAAM,CAAC;AAEvD,UAAM,gBAAiB,OAAO,WAAW,OAAO,QAAQ,OAAO,EAAE,KAAM,CAAC;AACxE,UAAM,oBAAqB,OAAO,qBAAqB,OAAO,kBAAkB,OAAO,EAAE,KAAM,CAAC;AAGhG,0BAAsB,WAAW,OAAO,IAAI,eAAe,mBAAmB,OAAO;AAAA,EACzF;AACJ;AAEA,SAAS,sBAAsB,SAAS,IAAIC,iBAAgB,mBAAmB,SAAS;AACpF,QAAM,aAAa,MAAM;AACzB,QAAM,SAAS,KAAK,GAAG,EAAE,MAAM;AAC/B,aAAW,OAAO,SAAS;AAEvB,UAAM,eAAe,CAAC,MAAM,SAAS,QAAQ,GAAG,CAAC;AACjD,UAAM,kBAAkB,QAAQ,aAAa,CAAC;AAC9C,UAAM,oBAAoB,QAAQ,eAAe;AAEjD,QAAI,EAAE,OAAOA,oBAAmB,CAAC,mBAAmB,CAAC,mBAAmB;AAEpE,UAAI,OAAO,mBAAmB;AAC1B,iBAAS,KAAK,GAAG,UAAU,mBAAoB,MAAM,GAAG,GAAG,+BAAiC,kBAAkB,GAAG,CAAC,GAAI,EAAE;AAAA,MAC5H,WACS,CAAC,cAAc;AACpB,cAAM,aAAa,kBAAkB,KAAK,OAAO;AACjD,iBAAS,KAAK,GAAG,UAAU,mBAAoB,MAAM,GAAG,GAAG,qBAAsB,UAAU,EAAE,EAAE;AAAA,MACnG;AAAA,IACJ;AAAA,EACJ;AACJ;AACA,SAAS,kBAAkB,WAAW,SAAS;AAC3C,QAAM,qBAAqB,UAAU,YAAY;AACjD,MAAI,iBAAiB;AACrB,aAAW,UAAU,SAAS;AAC1B,eAAW,OAAO,OAAO,SAAS;AAC9B,UAAI,cAAc,KAAK;AACnB,eAAO,iBAAkB,OAAO,EAAE,IAAI,GAAG;AAAA,MAC7C;AACA,YAAM,eAAe,IAAI,YAAY;AACrC,YAAM,iBAAiB,mBAAmB,WAAW,YAAY,KAAK,aAAa,WAAW,kBAAkB;AAChH,UAAI,gBAAgB;AAChB,yBAAiB,kBAAkB,iBAAkB,OAAO,EAAE,IAAI,GAAG;AAAA,MACzE;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;AACA,SAAS,yBAAyB,QAAQ,SAAS,KAAK;AACpD,QAAM,uBAAuB,OAAO,WAAW,CAAC;AAChD,QAAM,gBAAgB,EAAE,GAAG,qBAAqB;AAChD,gBAAc,eAAe,GAAG;AAEhC,MAAI,cAAc,QAAQ,MAAM;AAC5B,kBAAc,MAAM,IAAI,QAAQ;AAAA,EACpC;AACA,oBAAkB,eAAe,uBAAuB,CAAC;AACzD,oBAAkB,eAAe,OAAO;AACxC,SAAO;AACX;AAEA,SAAS,kBAAkB,eAAe,SAAS;AAC/C,aAAW,OAAO,SAAS;AAGvB,QAAI,OAAO,SAAS;AAChB,YAAM,QAAQ,QAAQ,GAAG;AACzB,UAAI,aAAa,KAAK,KAAK,aAAa,cAAc,GAAG,CAAC,GAAG;AACzD,sBAAc,GAAG,IAAI;AAAA,UACjB,GAAG,cAAc,GAAG;AAAA,UACpB,GAAG,QAAQ,GAAG;AAAA,QAClB;AAAA,MACJ,OACK;AACD,sBAAc,GAAG,IAAI,QAAQ,GAAG;AAAA,MACpC;AAAA,IACJ;AAAA,EAEJ;AACJ;AASA,SAAS,cAAc,SAAS,KAAK;AACjC,MAAI,OAAO,EAAE,aAAa,UAAU;AAChC,YAAQ,UAAU;AAAA,EACtB;AACJ;;;AC7JO,SAAS,eAAe,QAAQ;AACnC,MAAI,CAAC,QAAQ;AACT,WAAO;AAAA,EACX;AACA,MAAI,MAAM,QAAQ,MAAM,GAAG;AACvB,aAAS,OAAO,CAAC;AAAA,EACrB;AACA,QAAM,gBAAgB,MAAM,QAAQ,iCAAQ,UAAU;AAStD,SAAO;AACX;AACO,SAAS,gBAAgB,QAAQ;AAIpC,SAAO,QAAQ,aAAa;AAC5B,SAAO,eAAe,MAAM,GAAG,gBAAgB;AAG/C,MAAI;AACJ,MAAI,MAAM,QAAQ,MAAM,GAAG;AACvB,cAAU,OAAO,CAAC;AAClB,aAAS,OAAO,CAAC;AACjB,aAAS;AAAA,MACL,GAAG;AAAA,MACH,SAAS,EAAE,GAAG,OAAO,SAAS,GAAG,QAAQ;AAAA,IAC7C;AAAA,EACJ;AAIA,OAAI,iCAAQ,mBAAiB,iCAAQ,YAAW;AAC5C,WAAO,OAAO;AAAA,EAClB;AACA,MAAI,CAAC,OAAO,MAAM;AACd,WAAO,SAAS;AAAA,EACpB;AACA,SAAO;AACX;;;ACxCA,IAAM,0BAA0B,MAAM;AAClC,QAAM,QAAQ,qBAAqB;AACnC,QAAM,iBAAiB,MAAM,kBAAkB,CAAC;AAChD,SAAO,MAAM;AACjB;AAMO,SAAS,gBAAgB,SAAS;AACrC,QAAM,iBAAiB,wBAAwB;AAC/C,YAAU,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO;AACrD,aAAW,UAAU,SAAS;AAC1B,UAAM,mBAAmB,gBAAgB,MAAM;AAC/C,QAAI,CAAC,eAAe,KAAK,CAAC,qBAAqB,qBAAqB,gBAAgB,GAAG;AAEnF,qBAAe,QAAQ,gBAAgB;AAAA,IAC3C;AAAA,EACJ;AACJ;AAIO,SAAS,uBAAuB;AACnC,SAAO,wBAAwB;AACnC;;;ACzBA,IAAM,cAAc;AAapB,eAAsB,aAAa,MAAM,UAAU,CAAC,GAAG,SAAS,SAAS;AACrE,MAAI,CAAC,kBAAkB,IAAI,GAAG;AAC1B,WAAO;AAAA,EACX;AAEA,MAAI,SAAS,iBAAiB,MAAM,SAAS,EAAE,GAAG,SAAS,SAAS,KAAK,GAAG,OAAO;AACnF,MAAI,QAAQ;AACR,WAAO;AAAA,EACX;AAGA,MAAI,OAAO,IAAI,GAAG;AACd,WAAO,MAAM,KAAK,MAAM,GAAG,EAAE,EAAE,YAAY;AAC3C,aAAS,iBAAiB,MAAM,SAAS,SAAS,OAAO;AAAA,EAC7D;AAEA,MAAI,CAAC,UAAU,EAAC,mCAAS,UAAS;AAC9B,UAAM,IAAI,MAAM,wBAAwB,IAAI,CAAC;AAAA,EACjD;AACA,SAAO;AACX;AAUO,SAAS,iBAAiB,MAAM,UAAU,CAAC,GAAG,SAAS,SAAS;AACnE,MAAI,CAAC,kBAAkB,IAAI,GAAG;AAC1B,WAAO;AAAA,EACX;AAIA,MAAI,WAAW,CAAC,MAAM,QAAQ,OAAO,GAAG;AAEpC,WAAO,gBAAgB,OAAO;AAAA,EAClC;AAEA,MAAI,mBAAmB,CAAC;AAExB,MAAI,SAAS;AACT,uBAAmB,iBAAiB,OAAO,OAAO;AAAA,EACtD;AAEA,MAAI,EAAC,mCAAS,0BAAyB;AACnC,qBAAiB,KAAK,GAAG,qBAAqB,CAAC;AAAA,EACnD;AAEA,mBAAiB,gBAAgB;AACjC,QAAM,SAAS,qBAAqB,MAAM,kBAAkB,SAAS,OAAO;AAE5E,MAAI,CAAC,UAAU,EAAC,mCAAS,UAAS;AAC9B,UAAM,IAAI,MAAM,wBAAwB,IAAI,CAAC;AAAA,EACjD;AACA,SAAO;AACX;AAGA,SAAS,qBAAqB,MAAM,SAAS,SAAS,SAAS;AAC3D,QAAM,MAAM,eAAe,IAAI;AAC/B,QAAM,OAAO,oBAAoB,IAAI;AACrC,QAAM,UAAU,iBAAiB,GAAG,MAAK,mCAAS;AAClD,MAAI,SAAS;AACb,MAAI,SAAS;AAEb,MAAI,mCAAS,UAAU;AACnB,aAAS,qBAAqB,SAAS,mCAAS,QAAQ;AACxD,aAAS,sCAAsC,mCAAS,QAAQ;AAAA,EACpE;AAEA,WAAS,UAAU,gBAAgB,SAAS,OAAO;AACnD,WAAS,WAAW,SAAS,eAAe,OAAO,KAAK;AAExD,WAAS,UAAU,qBAAqB,SAAS,IAAI;AACrD,WAAS,WAAW,SAAS,qBAAqB,IAAI,KAAK;AAG3D,WAAS,UAAU,yBAAyB,SAAS,IAAI;AAEzD,WAAS,WAAW,SAAS,wBAAwBC,oBAAmB,IAAI,CAAC,KAAK;AAElF,MAAI,mCAAS,kBAAkB;AAC3B,aAAS,UAAU,qBAAqB,SAAS,mCAAS,gBAAgB;AAC1E,aAAS,WAAW,SAAS,8BAA8B,IAAI,KAAK;AAAA,EACxE;AACA,MAAI,QAAQ;AACR,QAAI,IAAI,GAAG,yBAAyB,iCAAQ,IAAI,KAAK,MAAM,GAAG;AAAA,EAClE;AACA,SAAO;AACX;AAEA,SAAS,kBAAkB,MAAM;AAE7B,MAAI,gBAAgB,UAAU;AAE1B,QAAI,KAAK,WAAW,KAAK;AACrB,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;AAEA,SAAS,wBAAwB,MAAM;AACnC,QAAM,MAAM,eAAe,IAAI;AAC/B,QAAM,OAAO,oBAAoB,IAAI;AACrC,MAAIC,WAAU;AACd,EAAAA,YAAW,MAAM,GAAG,aAAK,SAAS,GAAG,CAAC,OAAO;AAC7C,EAAAA,YAAW,cAAc,OAAO,IAAI,IAAI,MAAM,cAAc;AAG5D,QAAM,kBAAkB,OAAOD,oBAAmB,IAAI,IAAI;AAC1D,EAAAC,YAAW,kBAAkB,kBAAkB,eAAe,MAAM;AACpE,EAAAA,YAAW;AACX,SAAOA;AACX;AACA,SAAS,iBAAiB,SAAS;AAC/B,aAAW,UAAU,SAAS;AAC1B,oBAAgB,MAAM;AAAA,EAC1B;AACJ;AAGA,SAAS,gBAAgB,SAAS,KAAK;AAEnC,QAAM,QAAQ,OAAO,YAAY,KAAK,GAAG;AACzC,QAAM,YAAY,SAAS,MAAM,CAAC;AAClC,SAAO,YAAY,sBAAsB,SAAS,SAAS,IAAI;AACnE;AACA,SAAS,sBAAsB,SAAS,WAAW;AAC/C,cAAY,UAAU,YAAY;AAClC,aAAW,UAAU,SAAS;AAC1B,eAAW,mBAAmB,OAAO,YAAY;AAC7C,UAAI,gBAAgB,YAAY,MAAM,WAAW;AAC7C,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;AACA,SAAS,qBAAqB,SAAS,UAAU;AAtKjD,MAAAC;AAuKI,aAAW,UAAU,SAAS;AAC1B,SAAIA,MAAA,OAAO,cAAP,gBAAAA,IAAkB,KAAK,CAAC,cAAc,iBAAiB,UAAU,SAAS,IAAI;AAC9E,aAAO;AAAA,IACX;AAGA,QAAI,iBAAiB,UAAU,iBAAiB,OAAO,EAAE,EAAE,GAAG;AAC1D,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;AACA,SAAS,yBAAyB,SAAS,MAAM;AAC7C,MAAI,CAAC,MAAM;AACP,WAAO;AAAA,EACX;AACA,aAAW,UAAU,SAAS;AAC1B,QAAI,OAAO,SAAS,UAAU;AAC1B,UAAI,oBAAoB,MAAM,MAAM,GAAG;AACnC,eAAO;AAAA,MACX;AAAA,IACJ,WACS,YAAY,OAAO,IAAI,GAAG;AAE/B,UAAI,sBAAsB,KAAK,QAAQ,KAAK,YAAY,MAAM,GAAG;AAC7D,eAAO;AAAA,MACX;AAAA,IACJ,WACS,gBAAgB,aAAa;AAClC,YAAM,aAAa;AACnB,UAAI,sBAAsB,MAAM,YAAY,MAAM,GAAG;AACjD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EAEJ;AACA,SAAO;AACX;AACA,SAAS,oBAAoB,MAAM,QAAQ;AACvC,MAAI,OAAO,UAAU;AACjB,WAAO,OAAO,SAAS,IAAI;AAAA,EAC/B;AACA,QAAM,QAAQ,MAAM,QAAQ,OAAO,KAAK,IAAI,OAAO,QAAQ,CAAC,OAAO,KAAK;AACxE,SAAO,MAAM,KAAK,CAAC,SAAS,KAAK,WAAW,IAAI,CAAC;AACrD;AACA,SAAS,sBAAsB,MAAM,YAAY,QAAQ;AACrD,QAAM,QAAQ,MAAM,QAAQ,OAAO,KAAK,IAAI,OAAO,QAAQ,CAAC,OAAO,KAAK;AACxE,SAAO,MAAM,KAAK,CAAC,SAAS,WAAW,MAAM,YAAY,QAAQ,IAAI,CAAC;AAC1E;AACA,SAAS,WAAW,MAAM,YAAY,QAAQ,MAAM;AAChD,MAAI,gBAAgB,aAAa;AAC7B,WAAO,oBAAoB,MAAM,MAAM,KAAK,UAAU;AAAA,EAC1D;AACA,UAAQ,OAAO,MAAM;AAAA,IACjB,KAAK;AACD,aAAO,KAAK,IAAI;AAAA,IACpB,KAAK;AAED,YAAM,QAAQC,gBAAe,MAAM,YAAY,KAAK,MAAM;AAC1D,aAAO,SAAS;AAAA,IACpB;AACI,aAAO;AAAA,EACf;AACJ;AACA,SAASH,oBAAmB,MAAMI,UAAS,GAAG;AAC1C,MAAI,OAAO,SAAS,UAAU;AAC1B,WAAO,KAAK,MAAM,GAAGA,OAAM;AAAA,EAC/B,WACS,YAAY,OAAO,IAAI,GAAG;AAE/B,WAAOD,gBAAe,KAAK,QAAQ,KAAK,YAAYC,OAAM;AAAA,EAC9D,WACS,gBAAgB,aAAa;AAClC,UAAM,aAAa;AACnB,WAAOD,gBAAe,MAAM,YAAYC,OAAM;AAAA,EAClD;AACA,SAAO;AACX;AACA,SAASD,gBAAeE,cAAa,YAAYD,SAAQ;AACrD,MAAIC,aAAY,aAAa,aAAaD,SAAQ;AAC9C,WAAO;AAAA,EACX;AACA,QAAM,WAAW,IAAI,SAASC,YAAW;AACzC,MAAI,QAAQ;AACZ,WAASC,KAAI,GAAGA,KAAIF,SAAQE,MAAK;AAC7B,aAAS,OAAO,aAAa,SAAS,SAAS,aAAaA,EAAC,CAAC;AAAA,EAClE;AACA,SAAO;AACX;;;AC5PA,IAAM,qBAAqB,MAAM;AAO1B,UAAU,mBAAmB,QAAQ,SAAS;AACjD,QAAM,aAAY,mCAAS,cAAa;AACxC,MAAI,SAAS;AACb,QAAM,cAAc,IAAI,YAAY;AACpC,SAAO,SAAS,OAAO,QAAQ;AAE3B,UAAM,cAAc,KAAK,IAAI,OAAO,SAAS,QAAQ,SAAS;AAC9D,UAAM,QAAQ,OAAO,MAAM,QAAQ,SAAS,WAAW;AACvD,cAAU;AAEV,UAAM,YAAY,OAAO,KAAK;AAAA,EAClC;AACJ;;;ACnBA,IAAMC,sBAAqB,MAAM;AAO1B,UAAU,wBAAwBC,cAAa,UAAU,CAAC,GAAG;AAChE,QAAM,EAAE,YAAYD,oBAAmB,IAAI;AAC3C,MAAI,aAAa;AACjB,SAAO,aAAaC,aAAY,YAAY;AAExC,UAAM,kBAAkB,KAAK,IAAIA,aAAY,aAAa,YAAY,SAAS;AAC/E,UAAM,QAAQ,IAAI,YAAY,eAAe;AAE7C,UAAM,cAAc,IAAI,WAAWA,cAAa,YAAY,eAAe;AAC3E,UAAM,aAAa,IAAI,WAAW,KAAK;AACvC,eAAW,IAAI,WAAW;AAE1B,kBAAc;AACd,UAAM;AAAA,EACV;AACJ;;;ACtBA,IAAMC,sBAAqB,OAAO;AAOlC,gBAAuB,iBAAiB,MAAM,SAAS;AACnD,QAAM,aAAY,mCAAS,cAAaA;AACxC,MAAI,SAAS;AACb,SAAO,SAAS,KAAK,MAAM;AACvB,UAAM,MAAM,SAAS;AACrB,UAAM,QAAQ,MAAM,KAAK,MAAM,QAAQ,GAAG,EAAE,YAAY;AACxD,aAAS;AACT,UAAM;AAAA,EACV;AACJ;;;ACXO,SAAS,mBAAmB,QAAQ,SAAS;AAChD,SAAO,YACD,0BAA0B,QAAQ,OAAO,IACzC,uBAAuB,QAAQ,OAAO;AAChD;AAMA,gBAAgB,0BAA0B,QAAQ,SAAS;AASvD,QAAM,SAAS,OAAO,UAAU;AAChC,MAAI;AACJ,MAAI;AAEA,WAAO,MAAM;AACT,YAAM,sBAAsB,oBAAoB,OAAO,KAAK;AAG5D,UAAI,mCAAS,kBAAkB;AAC3B,2BAAmB,OAAO,KAAK;AAAA,MACnC;AAGA,YAAM,EAAE,MAAM,MAAM,IAAI,MAAM;AAE9B,UAAI,MAAM;AACN;AAAA,MACJ;AAEA,YAAMC,eAAc,KAAK;AAAA,IAC7B;AAAA,EACJ,SACO,OAAO;AAGV,WAAO,YAAY;AAAA,EACvB;AACJ;AAMA,gBAAgB,uBAAuB,QAAQ,SAAS;AAGpD,mBAAiB,SAAS,QAAQ;AAC9B,UAAMA,eAAc,KAAK;AAAA,EAC7B;AACJ;;;AClDO,SAAS,aAAa,MAAM,SAAS;AACxC,MAAI,OAAO,SAAS,UAAU;AAE1B,WAAO,mBAAmB,MAAM,OAAO;AAAA,EAC3C;AACA,MAAI,gBAAgB,aAAa;AAC7B,WAAO,wBAAwB,MAAM,OAAO;AAAA,EAChD;AACA,MAAI,OAAO,IAAI,GAAG;AACd,WAAO,iBAAiB,MAAM,OAAO;AAAA,EACzC;AACA,MAAI,iBAAiB,IAAI,GAAG;AACxB,WAAO,mBAAmB,MAAM,OAAO;AAAA,EAC3C;AACA,MAAI,WAAW,IAAI,GAAG;AAClB,UAAM,WAAW;AACjB,WAAO,mBAAmB,SAAS,MAAM,OAAO;AAAA,EACpD;AACA,QAAM,IAAI,MAAM,cAAc;AAClC;;;AC5BA,IAAM,WAAW;AAEV,SAAS,mCAAmC,MAAM,QAAQ,SAAS;AACtE,MAAI,OAAO,QAAQ,OAAO,SAAS,UAAU;AACzC,WAAO;AAAA,EACX;AACA,MAAIC,UAAS,IAAI,GAAG;AAEhB,WAAO,KAAK;AAAA,EAChB;AACA,MAAI,gBAAgB,aAAa;AAC7B,UAAMC,eAAc;AACpB,QAAI,OAAO,QAAQ,CAAC,OAAO,QAAQ;AAC/B,YAAM,cAAc,IAAI,YAAY,MAAM;AAC1C,aAAO,YAAY,OAAOA,YAAW;AAAA,IACzC;AACA,WAAOA;AAAA,EACX;AAEA,MAAI,YAAY,OAAO,IAAI,GAAG;AAE1B,QAAI,OAAO,QAAQ,CAAC,OAAO,QAAQ;AAC/B,YAAM,cAAc,IAAI,YAAY,MAAM;AAC1C,aAAO,YAAY,OAAO,IAAI;AAAA,IAClC;AACA,QAAIA,eAAc,KAAK;AAIvB,UAAM,aAAa,KAAK,cAAc,KAAK;AAC3C,QAAI,KAAK,eAAe,KAAK,eAAeA,aAAY,YAAY;AAEhE,MAAAA,eAAcA,aAAY,MAAM,KAAK,YAAY,KAAK,aAAa,UAAU;AAAA,IACjF;AACA,WAAOA;AAAA,EACX;AACA,QAAM,IAAI,MAAM,QAAQ;AAC5B;AAEA,eAAsB,+BAA+B,MAAM,QAAQ,SAAS;AACxE,QAAM,gBAAgB,gBAAgB,eAAe,YAAY,OAAO,IAAI;AAC5E,MAAI,OAAO,SAAS,YAAY,eAAe;AAC3C,WAAO,mCAAmC,MAAM,QAAQ,OAAO;AAAA,EACnE;AAEA,MAAI,OAAO,IAAI,GAAG;AACd,WAAO,MAAM,aAAa,IAAI;AAAA,EAClC;AACA,MAAI,WAAW,IAAI,GAAG;AAClB,UAAM,WAAW;AACjB,UAAM,cAAc,QAAQ;AAC5B,WAAO,OAAO,SAAS,MAAM,SAAS,YAAY,IAAI,MAAM,SAAS,KAAK;AAAA,EAC9E;AACA,MAAI,iBAAiB,IAAI,GAAG;AAExB,WAAO,aAAa,MAAM,OAAO;AAAA,EACrC;AACA,MAAI,WAAW,IAAI,KAAK,gBAAgB,IAAI,GAAG;AAE3C,WAAO,6BAA6B,IAAI;AAAA,EAC5C;AACA,QAAM,IAAI,MAAM,QAAQ;AAC5B;;;AC1DO,SAAS,iBAAiB,SAAS,SAAS;AAC/C,QAAM,gBAAgB,uBAAuB;AAC7C,QAAM,gBAAgB,WAAW;AAEjC,MAAI,OAAO,cAAc,UAAU,YAAY;AAC3C,WAAO,cAAc;AAAA,EACzB;AAEA,MAAI,SAAS,cAAc,KAAK,GAAG;AAC/B,WAAO,CAAC,QAAQ,UAAU,KAAK,cAAc,KAAK;AAAA,EACtD;AAEA,MAAI,mCAAS,OAAO;AAChB,WAAO,mCAAS;AAAA,EACpB;AAEA,SAAO;AACX;;;ACbO,SAAS,iBAAiB,SAAS,SAAS,eAAe;AAG9D,MAAI,eAAe;AACf,WAAO;AAAA,EACX;AACA,QAAM,aAAa;AAAA,IACf,OAAO,iBAAiB,SAAS,OAAO;AAAA,IACxC,GAAG;AAAA,EACP;AAEA,MAAI,WAAW,KAAK;AAChB,UAAM,UAAU,iBAAiB,WAAW,GAAG;AAC/C,eAAW,UAAU;AACrB,eAAW,cAAc,mBAAmB,WAAW,GAAG;AAC1D,eAAW,WAAW,aAAK,SAAS,OAAO;AAC3C,eAAW,UAAU,aAAK,QAAQ,OAAO;AAAA,EAC7C;AAEA,MAAI,CAAC,MAAM,QAAQ,WAAW,OAAO,GAAG;AACpC,eAAW,UAAU;AAAA,EACzB;AACA,SAAO;AACX;AAEO,SAAS,sBAAsB,SAAS,SAAS;AAEpD,MAAI,WAAW,CAAC,MAAM,QAAQ,OAAO,GAAG;AACpC,WAAO;AAAA,EACX;AAEA,MAAI;AACJ,MAAI,SAAS;AACT,uBAAmB,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO;AAAA,EAClE;AACA,MAAI,WAAW,QAAQ,SAAS;AAC5B,UAAM,iBAAiB,MAAM,QAAQ,QAAQ,OAAO,IAAI,QAAQ,UAAU,CAAC,QAAQ,OAAO;AAC1F,uBAAmB,mBAAmB,CAAC,GAAG,kBAAkB,GAAG,cAAc,IAAI;AAAA,EACrF;AAEA,SAAO,oBAAoB,iBAAiB,SAAS,mBAAmB;AAC5E;;;ACpCA,eAAsB,MAAM,MAAM,SAAS,SAAS,SAAS;AAGzD,MAAI,WAAW,CAAC,MAAM,QAAQ,OAAO,KAAK,CAAC,eAAe,OAAO,GAAG;AAChE,cAAU;AACV,cAAU;AACV,cAAU;AAAA,EACd;AACA,SAAO,MAAM;AACb,YAAU,WAAW,CAAC;AAEtB,QAAM,MAAM,eAAe,IAAI;AAG/B,QAAM,eAAe;AACrB,QAAM,mBAAmB,sBAAsB,cAAc,OAAO;AAEpE,QAAM,SAAS,MAAM,aAAa,MAAM,kBAAkB,OAAO;AAEjE,MAAI,CAAC,QAAQ;AACT,WAAO;AAAA,EACX;AAGA,YAAU,iBAAiB,SAAS,QAAQ,kBAAkB,GAAG;AAEjE,YAAU;AAAA;AAAA,IAEV,EAAE,KAAK,QAAQ,OAAO,SAAS,iBAAiB;AAAA,IAAG;AAAA,IAAS,WAAW;AAAA,EAAI;AAC3E,SAAO,MAAM,gBAAgB,QAAQ,MAAM,SAAS,OAAO;AAC/D;AAGA,eAAe,gBAAgB,QAAQ,MAAM,SAAS,SAAS;AAC3D,wBAAsB,MAAM;AAC5B,YAAU,mBAAmB,OAAO,SAAS,OAAO;AACpD,MAAI,WAAW,IAAI,GAAG;AAElB,UAAM,WAAW;AACjB,UAAM,EAAE,IAAI,YAAY,QAAQ,YAAY,MAAM,IAAI,IAAI;AAC1D,UAAM,UAAU,OAAO,YAAY,SAAS,QAAQ,QAAQ,CAAC;AAE7D,YAAQ,WAAW,EAAE,SAAS,IAAI,YAAY,QAAQ,YAAY,MAAM,IAAI;AAAA,EAChF;AACA,SAAO,MAAM,+BAA+B,MAAM,QAAQ,OAAO;AACjE,QAAM,mBAAmB;AAEzB,MAAI,iBAAiB,iBAAiB,OAAO,SAAS,UAAU;AAC5D,WAAO,iBAAiB,cAAc,MAAM,SAAS,OAAO;AAAA,EAChE;AAEA,MAAI,mBAAmB,QAAQ,OAAO,GAAG;AACrC,WAAO,MAAM,gBAAgB,QAAQ,MAAM,SAAS,SAAS,KAAK;AAAA,EACtE;AAEA,MAAI,iBAAiB,aAAa,OAAO,SAAS,UAAU;AACxD,WAAO,MAAM,iBAAiB,UAAU,MAAM,SAAS,OAAO;AAAA,EAClE;AACA,MAAI,iBAAiB,OAAO;AACxB,WAAO,MAAM,iBAAiB,MAAM,MAAM,SAAS,OAAO;AAAA,EAC9D;AAEA,EAAAC,QAAO,CAAC,iBAAiB,SAAS;AAElC,QAAM,IAAI,MAAM,GAAG,OAAO,EAAE,kDAAkD;AAClF;;;ACtDO,IAAI;AAAA,CACV,SAAUC,OAAM;AAEb,EAAAA,MAAKA,MAAK,MAAM,IAAI,CAAC,IAAI;AAEzB,EAAAA,MAAKA,MAAK,MAAM,IAAI,CAAC,IAAI;AAEzB,EAAAA,MAAKA,MAAK,KAAK,IAAI,CAAC,IAAI;AAExB,EAAAA,MAAKA,MAAK,OAAO,IAAI,CAAC,IAAI;AAE1B,EAAAA,MAAKA,MAAK,QAAQ,IAAI,CAAC,IAAI;AAE3B,EAAAA,MAAKA,MAAK,MAAM,IAAI,CAAC,IAAI;AAEzB,EAAAA,MAAKA,MAAK,MAAM,IAAI,CAAC,IAAI;AAEzB,EAAAA,MAAKA,MAAK,SAAS,IAAI,CAAC,IAAI;AAE5B,EAAAA,MAAKA,MAAK,MAAM,IAAI,CAAC,IAAI;AAEzB,EAAAA,MAAKA,MAAK,MAAM,IAAI,CAAC,IAAI;AAEzB,EAAAA,MAAKA,MAAK,WAAW,IAAI,EAAE,IAAI;AAE/B,EAAAA,MAAKA,MAAK,UAAU,IAAI,EAAE,IAAI;AAE9B,EAAAA,MAAKA,MAAK,MAAM,IAAI,EAAE,IAAI;AAE1B,EAAAA,MAAKA,MAAK,QAAQ,IAAI,EAAE,IAAI;AAE5B,EAAAA,MAAKA,MAAK,OAAO,IAAI,EAAE,IAAI;AAE3B,EAAAA,MAAKA,MAAK,iBAAiB,IAAI,EAAE,IAAI;AAErC,EAAAA,MAAKA,MAAK,eAAe,IAAI,EAAE,IAAI;AAEnC,EAAAA,MAAKA,MAAK,KAAK,IAAI,EAAE,IAAI;AAEzB,EAAAA,MAAKA,MAAK,YAAY,IAAI,EAAE,IAAI;AAChC,EAAAA,MAAKA,MAAK,MAAM,IAAI,EAAE,IAAI;AAC1B,EAAAA,MAAKA,MAAK,OAAO,IAAI,EAAE,IAAI;AAC3B,EAAAA,MAAKA,MAAK,OAAO,IAAI,EAAE,IAAI;AAC3B,EAAAA,MAAKA,MAAK,OAAO,IAAI,EAAE,IAAI;AAC3B,EAAAA,MAAKA,MAAK,OAAO,IAAI,EAAE,IAAI;AAC3B,EAAAA,MAAKA,MAAK,QAAQ,IAAI,EAAE,IAAI;AAC5B,EAAAA,MAAKA,MAAK,QAAQ,IAAI,EAAE,IAAI;AAC5B,EAAAA,MAAKA,MAAK,QAAQ,IAAI,EAAE,IAAI;AAC5B,EAAAA,MAAKA,MAAK,SAAS,IAAI,GAAG,IAAI;AAC9B,EAAAA,MAAKA,MAAK,SAAS,IAAI,GAAG,IAAI;AAC9B,EAAAA,MAAKA,MAAK,SAAS,IAAI,GAAG,IAAI;AAC9B,EAAAA,MAAKA,MAAK,SAAS,IAAI,GAAG,IAAI;AAC9B,EAAAA,MAAKA,MAAK,iBAAiB,IAAI,GAAG,IAAI;AACtC,EAAAA,MAAKA,MAAK,iBAAiB,IAAI,GAAG,IAAI;AACtC,EAAAA,MAAKA,MAAK,sBAAsB,IAAI,GAAG,IAAI;AAC3C,EAAAA,MAAKA,MAAK,sBAAsB,IAAI,GAAG,IAAI;AAC3C,EAAAA,MAAKA,MAAK,qBAAqB,IAAI,GAAG,IAAI;AAC1C,EAAAA,MAAKA,MAAK,YAAY,IAAI,GAAG,IAAI;AACjC,EAAAA,MAAKA,MAAK,iBAAiB,IAAI,GAAG,IAAI;AACtC,EAAAA,MAAKA,MAAK,iBAAiB,IAAI,GAAG,IAAI;AACtC,EAAAA,MAAKA,MAAK,gBAAgB,IAAI,GAAG,IAAI;AACrC,EAAAA,MAAKA,MAAK,YAAY,IAAI,GAAG,IAAI;AACjC,EAAAA,MAAKA,MAAK,aAAa,IAAI,GAAG,IAAI;AAClC,EAAAA,MAAKA,MAAK,iBAAiB,IAAI,GAAG,IAAI;AACtC,EAAAA,MAAKA,MAAK,mBAAmB,IAAI,GAAG,IAAI;AAC5C,GAAG,SAAS,OAAO,CAAC,EAAE;;;ACvFtB,eAAsB,KAAK,KAAK,SAAS,SAAS,SAAS;AACvD,MAAI;AACJ,MAAI;AAEJ,MAAI,CAAC,MAAM,QAAQ,OAAO,KAAK,CAAC,eAAe,OAAO,GAAG;AACrD,sBAAkB,CAAC;AACnB,sBAAkB;AAClB,cAAU;AAAA,EACd,OACK;AACD,sBAAkB;AAClB,sBAAkB;AAAA,EACtB;AAEA,QAAMC,SAAQ,iBAAiB,eAAe;AAE9C,MAAI,OAAO;AAEX,MAAI,OAAO,QAAQ,UAAU;AACzB,WAAO,MAAMA,OAAM,GAAG;AAAA,EAE1B;AACA,MAAI,OAAO,GAAG,GAAG;AAGb,WAAO,MAAMA,OAAM,GAAG;AAAA,EAC1B;AAGA,SAAO,MAAM,QAAQ,eAAe,IAC9B,MAAM,MAAM,MAAM,iBAAiB,eAAe,IAClD,MAAM,MAAM,MAAM,iBAAiB,eAAe;AAC5D;;;ACtCO,IAAMC,WAAU,OAAiC,UAAU;;;ACHlE;AAEA,IAAM,kBAAiB,gBAAW,YAAX,mBAAoB;AAC3C,IAAM,kBAAkB,OAAO,UAAU;AACzC,IAAM,yBAAyB,OAAO,gBAAgB;AACtD,IAAM,uBAAuB,QAAQ,cAAc;AACnD,IAAM,iBAAiB,YAAY,OAAO;AAKnC,SAAS,qBAAqB,MAAM;AACvC,UAAQ,MAAM;AAAA,IACV,KAAK;AAED,aAAO,0BAA0B,mBAAmB;AAAA,IACxD,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX;AACI,YAAM,IAAI,MAAM,6BAA6B,IAAI,oCAAoC;AAAA,EAC7F;AACJ;AAKO,SAAS,sBAAsB;AAClC,MAAI,wBAAwB;AACxB,WAAO;AAAA,EACX;AACA,MAAI,iBAAiB;AACjB,WAAO;AAAA,EACX;AACA,MAAI,gBAAgB;AAChB,WAAO;AAAA,EACX;AAEA,QAAM,IAAI,MAAM,+DAAiE;AACrF;;;AC9BO,SAAS,aAAa,OAAO;AAChC,QAAM,SAAS,mBAAmB,KAAK;AACvC,MAAI,CAAC,QAAQ;AACT,UAAM,IAAI,MAAM,cAAc;AAAA,EAClC;AACA,SAAO;AACX;AAIO,SAAS,aAAa,OAAO;AAChC,UAAQ,aAAa,KAAK,GAAG;AAAA,IACzB,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AAAA,IACL,KAAK;AAED,YAAMC,UAAS,SAAS,cAAc,QAAQ;AAE9C,YAAM,UAAUA,QAAO,WAAW,IAAI;AACtC,UAAI,CAAC,SAAS;AACV,cAAM,IAAI,MAAM,cAAc;AAAA,MAClC;AAEA,MAAAA,QAAO,QAAQ,MAAM;AAErB,MAAAA,QAAO,SAAS,MAAM;AAEtB,cAAQ,UAAU,OAAO,GAAG,CAAC;AAE7B,aAAO,QAAQ,aAAa,GAAG,GAAG,MAAM,OAAO,MAAM,MAAM;AAAA,IAC/D;AACI,YAAM,IAAI,MAAM,cAAc;AAAA,EACtC;AACJ;AAGA,SAAS,mBAAmB,OAAO;AAC/B,MAAI,OAAO,gBAAgB,eAAe,iBAAiB,aAAa;AACpE,WAAO;AAAA,EACX;AACA,MAAI,OAAO,UAAU,eAAe,iBAAiB,OAAO;AACxD,WAAO;AAAA,EACX;AACA,MAAI,SAAS,OAAO,UAAU,YAAY,MAAM,QAAQ,MAAM,SAAS,MAAM,QAAQ;AACjF,WAAO;AAAA,EACX;AACA,SAAO;AACX;;;AC1DA,IAAM,uBAAuB;AAC7B,IAAM,kBAAkB;AACjB,SAAS,MAAM,KAAK;AACvB,SAAO,QAAQ,qBAAqB,KAAK,GAAG,KAAK,gBAAgB,KAAK,GAAG;AAC7E;AACO,SAAS,oBAAoBC,cAAa,KAAK;AAClD,MAAI,MAAM,GAAG,GAAG;AAEZ,UAAM,cAAc,IAAI,YAAY;AACpC,QAAI,UAAU,YAAY,OAAOA,YAAW;AAE5C,QAAI;AACA,UAAI,OAAO,aAAa,cAAc,OAAO,uBAAuB,YAAY;AAC5E,kBAAU,SAAS,mBAAmB,OAAO,CAAC;AAAA,MAClD;AAAA,IACJ,SACO,OAAO;AACV,YAAM,IAAI,MAAM,MAAM,OAAO;AAAA,IACjC;AAEA,UAAM,MAAM,6BAA6B,KAAK,OAAO,CAAC;AACtD,WAAO;AAAA,EACX;AACA,SAAO,QAAQA,cAAa,GAAG;AACnC;AACO,SAAS,QAAQA,cAAa,KAAK;AACtC,MAAI,MAAM,GAAG,GAAG;AAGZ,UAAM,IAAI,MAAM,8CAA8C;AAAA,EAClE;AAEA,SAAO,IAAI,KAAK,CAAC,IAAI,WAAWA,YAAW,CAAC,CAAC;AACjD;;;ACjCA,eAAsB,aAAaC,cAAa,SAAS,KAAK;AAI1D,QAAM,gBAAgB,oBAAoBA,cAAa,GAAG;AAC1D,QAAMC,OAAM,KAAK,OAAO,KAAK;AAC7B,QAAM,YAAY,OAAO,kBAAkB,YAAYA,KAAI,gBAAgB,aAAa;AACxF,MAAI;AACA,WAAO,MAAM,YAAY,aAAa,eAAe,OAAO;AAAA,EAChE,UACA;AACI,QAAI,WAAW;AACX,MAAAA,KAAI,gBAAgB,SAAS;AAAA,IACjC;AAAA,EACJ;AACJ;AACA,eAAsB,YAAY,KAAK,SAAS;AAC5C,QAAM,QAAQ,IAAI,MAAM;AACxB,QAAM,MAAM;AAOZ,MAAI,QAAQ,SAAS,QAAQ,MAAM,UAAU,MAAM,QAAQ;AACvD,UAAM,MAAM,OAAO;AACnB,WAAO;AAAA,EACX;AAEA,SAAO,MAAM,IAAI,QAAQ,CAACC,UAAS,WAAW;AAC1C,QAAI;AACA,YAAM,SAAS,MAAMA,SAAQ,KAAK;AAClC,YAAM,UAAU,CAAC,UAAU;AACvB,cAAMC,WAAU,iBAAiB,QAAQ,MAAM,UAAU;AACzD,eAAO,IAAI,MAAMA,QAAO,CAAC;AAAA,MAC7B;AAAA,IACJ,SACO,OAAO;AACV,aAAO,KAAK;AAAA,IAChB;AAAA,EACJ,CAAC;AACL;;;AC1CA,IAAM,eAAe,CAAC;AACtB,IAAI,8BAA8B;AAQlC,eAAsB,mBAAmBC,cAAa,SAAS,KAAK;AAChE,MAAI;AAEJ,MAAI,MAAM,GAAG,GAAG;AAEZ,UAAM,QAAQ,MAAM,aAAaA,cAAa,SAAS,GAAG;AAC1D,WAAO;AAAA,EACX,OACK;AAED,WAAO,QAAQA,cAAa,GAAG;AAAA,EACnC;AACA,QAAM,qBAAqB,WAAW,QAAQ;AAC9C,SAAO,MAAM,sBAAsB,MAAM,kBAAkB;AAC/D;AAOA,eAAe,sBAAsB,MAAM,qBAAqB,MAAM;AAClE,MAAI,cAAc,kBAAkB,KAAK,CAAC,6BAA6B;AACnE,yBAAqB;AAAA,EACzB;AACA,MAAI,oBAAoB;AACpB,QAAI;AAEA,aAAO,MAAM,kBAAkB,MAAM,kBAAkB;AAAA,IAC3D,SACO,OAAO;AACV,cAAQ,KAAK,KAAK;AAClB,oCAA8B;AAAA,IAClC;AAAA,EACJ;AACA,SAAO,MAAM,kBAAkB,IAAI;AACvC;AACA,SAAS,cAAc,QAAQ;AAE3B,aAAW,OAAO,UAAU,cAAc;AACtC,WAAO;AAAA,EACX;AACA,SAAO;AACX;;;AC9CO,SAAS,oBAAoBC,SAAQ;AAExC,MAAI,CAAC,YAAYA,SAAQ,QAAQ,CAAC,GAAG;AACjC,WAAO;AAAA,EACX;AAEA,OAAKA,QAAO,CAAC,IAAI,QAAU,GAAM;AAC7B,WAAO;AAAA,EACX;AAEA,SAAO,iBAAiBA,OAAM;AAClC;AAKO,SAAS,iBAAiBA,SAAQ;AACrC,QAAM,aAAa,cAAcA,SAAQ,GAAG,EAAE,EAAE,QAAQ,MAAM,GAAG,EAAE,KAAK;AACxE,UAAQ,YAAY;AAAA,IAChB,KAAK;AAAA,IACL,KAAK;AACD,aAAO,EAAE,WAAW,QAAQ,UAAU,aAAa;AAAA,IACvD;AACI,aAAO;AAAA,EACf;AA0CJ;AAEA,SAAS,cAAc,OAAO,OAAO,KAAK;AACtC,SAAO,OAAO,aAAa,GAAG,MAAM,MAAM,OAAO,GAAG,CAAC;AACzD;AACA,SAAS,cAAc,QAAQ;AAC3B,SAAO,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC,cAAc,UAAU,WAAW,CAAC,CAAC;AACjE;AACA,SAAS,YAAYA,SAAQ,QAAQ,SAAS,GAAG;AAC7C,QAAM,cAAc,cAAc,MAAM;AACxC,WAASC,KAAI,GAAGA,KAAI,YAAY,QAAQ,EAAEA,IAAG;AACzC,QAAI,YAAYA,EAAC,MAAMD,QAAOC,KAAI,MAAM,GAAG;AACvC,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;;;ACvFA,IAAM,aAAa;AACnB,IAAM,gBAAgB;AAOf,SAAS,uBAAuB,YAAY;AAC/C,QAAM,WAAW,WAAW,UAAU;AACtC,SAAQ,eAAe,QAAQ,KAC3B,gBAAgB,QAAQ,KACxB,eAAe,QAAQ,KACvB,eAAe,QAAQ,KACvB,mBAAmB,QAAQ;AACnC;AAEA,SAAS,mBAAmB,YAAY;AACpC,QAAMC,UAAS,IAAI,WAAW,sBAAsB,WAAW,WAAW,SAAS,UAAU;AAC7F,QAAM,YAAY,oBAAoBA,OAAM;AAC5C,MAAI,CAAC,WAAW;AACZ,WAAO;AAAA,EACX;AACA,SAAO;AAAA,IACH,UAAU,UAAU;AAAA;AAAA,IAEpB,OAAO;AAAA,IACP,QAAQ;AAAA,EACZ;AACJ;AAEA,SAAS,eAAe,YAAY;AAChC,QAAM,WAAW,WAAW,UAAU;AAEtC,QAAM,QAAQ,SAAS,cAAc,MAAM,SAAS,UAAU,GAAG,UAAU,MAAM;AACjF,MAAI,CAAC,OAAO;AACR,WAAO;AAAA,EACX;AAEA,SAAO;AAAA,IACH,UAAU;AAAA,IACV,OAAO,SAAS,UAAU,IAAI,UAAU;AAAA,IACxC,QAAQ,SAAS,UAAU,IAAI,UAAU;AAAA,EAC7C;AACJ;AAIA,SAAS,eAAe,YAAY;AAChC,QAAM,WAAW,WAAW,UAAU;AAEtC,QAAM,QAAQ,SAAS,cAAc,MAAM,SAAS,UAAU,GAAG,UAAU,MAAM;AACjF,MAAI,CAAC,OAAO;AACR,WAAO;AAAA,EACX;AAEA,SAAO;AAAA,IACH,UAAU;AAAA,IACV,OAAO,SAAS,UAAU,GAAG,aAAa;AAAA,IAC1C,QAAQ,SAAS,UAAU,GAAG,aAAa;AAAA,EAC/C;AACJ;AAGO,SAAS,eAAe,YAAY;AACvC,QAAM,WAAW,WAAW,UAAU;AAGtC,QAAM,QAAQ,SAAS,cAAc,MACjC,SAAS,UAAU,GAAG,UAAU,MAAM,SACtC,SAAS,UAAU,GAAG,aAAa,MAAM,SAAS;AACtD,MAAI,CAAC,OAAO;AACR,WAAO;AAAA,EACX;AAEA,SAAO;AAAA,IACH,UAAU;AAAA,IACV,OAAO,SAAS,UAAU,IAAI,aAAa;AAAA,IAC3C,QAAQ,SAAS,UAAU,IAAI,aAAa;AAAA,EAChD;AACJ;AAGA,SAAS,gBAAgB,YAAY;AACjC,QAAM,WAAW,WAAW,UAAU;AAGtC,QAAM,SAAS,SAAS,cAAc,KAClC,SAAS,UAAU,GAAG,UAAU,MAAM,SACtC,SAAS,SAAS,CAAC,MAAM;AAC7B,MAAI,CAAC,QAAQ;AACT,WAAO;AAAA,EACX;AACA,QAAM,EAAE,cAAc,WAAW,IAAI,eAAe;AAEpD,MAAIC,KAAI;AACR,SAAOA,KAAI,IAAI,SAAS,YAAY;AAChC,UAAM,SAAS,SAAS,UAAUA,IAAG,UAAU;AAE/C,QAAI,WAAW,IAAI,MAAM,GAAG;AACxB,aAAO;AAAA,QACH,UAAU;AAAA,QACV,QAAQ,SAAS,UAAUA,KAAI,GAAG,UAAU;AAAA;AAAA,QAC5C,OAAO,SAAS,UAAUA,KAAI,GAAG,UAAU;AAAA;AAAA,MAC/C;AAAA,IACJ;AAEA,QAAI,CAAC,aAAa,IAAI,MAAM,GAAG;AAC3B,aAAO;AAAA,IACX;AAEA,IAAAA,MAAK;AACL,IAAAA,MAAK,SAAS,UAAUA,IAAG,UAAU;AAAA,EACzC;AACA,SAAO;AACX;AACA,SAAS,iBAAiB;AAGtB,QAAM,eAAe,oBAAI,IAAI,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,KAAM,CAAC;AACrE,WAASA,KAAI,OAAQA,KAAI,OAAQ,EAAEA,IAAG;AAClC,iBAAa,IAAIA,EAAC;AAAA,EACtB;AAGA,QAAM,aAAa,oBAAI,IAAI;AAAA,IACvB;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IACxF;AAAA,IAAQ;AAAA,EACZ,CAAC;AACD,SAAO,EAAE,cAAc,WAAW;AACtC;AAEA,SAAS,WAAW,MAAM;AACtB,MAAI,gBAAgB,UAAU;AAC1B,WAAO;AAAA,EACX;AACA,MAAI,YAAY,OAAO,IAAI,GAAG;AAC1B,WAAO,IAAI,SAAS,KAAK,MAAM;AAAA,EACnC;AAMA,MAAI,gBAAgB,aAAa;AAC7B,WAAO,IAAI,SAAS,IAAI;AAAA,EAC5B;AACA,QAAM,IAAI,MAAM,YAAY;AAChC;;;ACpJA,eAAsB,iBAAiBC,cAAa,SAAS;AAH7D,MAAAC;AAII,QAAM,EAAE,SAAS,IAAI,uBAAuBD,YAAW,KAAK,CAAC;AAE7D,QAAME,mBAAiBD,MAAA,WAAW,YAAX,gBAAAA,IAAoB;AAC3C,SAAOC,eAAc;AAErB,SAAO,MAAMA,gBAAeF,cAAa,QAAQ;AACrD;;;ACFA,eAAsB,WAAWG,cAAa,SAAS,SAAS;AAC5D,YAAU,WAAW,CAAC;AACtB,QAAM,eAAe,QAAQ,SAAS,CAAC;AAEvC,QAAM,YAAY,aAAa,QAAQ;AACvC,QAAM,EAAE,IAAI,IAAI,WAAW,CAAC;AAE5B,QAAM,WAAW,qBAAqB,SAAS;AAC/C,MAAI;AACJ,UAAQ,UAAU;AAAA,IACd,KAAK;AACD,cAAQ,MAAM,mBAAmBA,cAAa,SAAS,GAAG;AAC1D;AAAA,IACJ,KAAK;AACD,cAAQ,MAAM,aAAaA,cAAa,SAAS,GAAG;AACpD;AAAA,IACJ,KAAK;AAED,cAAQ,MAAM,iBAAiBA,cAAa,OAAO;AACnD;AAAA,IACJ;AACI,aAAO,KAAK;AAAA,EACpB;AAEA,MAAI,cAAc,QAAQ;AACtB,YAAQ,aAAa,KAAK;AAAA,EAC9B;AACA,SAAO;AACX;AAEA,SAAS,qBAAqB,MAAM;AAChC,UAAQ,MAAM;AAAA,IACV,KAAK;AAAA,IACL,KAAK;AAGD,aAAO,oBAAoB;AAAA,IAC/B;AAEI,2BAAqB,IAAI;AACzB,aAAO;AAAA,EACf;AACJ;;;AC9CA,IAAM,aAAa,CAAC,OAAO,OAAO,QAAQ,OAAO,QAAQ,OAAO,OAAO,OAAO,MAAM;AACpF,IAAM,aAAa;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AACA,IAAM,+BAA+B;AAAA,EACjC,OAAO;AAAA,IACH,MAAM;AAAA,IACN,QAAQ;AAAA;AAAA,EACZ;AAAA;AAEJ;AAKO,IAAM,cAAc;AAAA,EACvB,UAAU;AAAA,EACV,WAAW;AAAA,EACX,IAAI;AAAA,EACJ,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,SAASC;AAAA,EACT,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,OAAO;AAAA;AAAA,EAEP,OAAO,CAAC,CAACC,iBAAgB,QAAQ,uBAAuB,IAAI,SAASA,YAAW,CAAC,CAAC,CAAC;AAAA,EACnF,SAAS;AACb;;;ACvCA,IAAAC;AAEA,IAAM,mBAAkBA,MAAA,WAAW,YAAX,gBAAAA,IAAoB;;;ACI5C,IAAM,gBAAqB,IAAI,IAAI,EAAC,IAAI,OAAM,CAAC;AAE/C,IAAA,cAAe;;;ACFf,IAAM,WAIF;EACF,sBAAsB;EACtB,6BAA6B;EAC7B,yBAAyB,CAAA;;AAG3B,IAAM,yBAAyB;AAC/B,IAAM,yBAAyB;AAC/B,IAAM,0BAA0B;AAChC,IAAM,iBAAiB;AACvB,IAAM,iBAAiB;AAEhB,IAAM,aAAa,CAACC,UAAwC;;EAGjE,oBAAoB,CAAC,OAAO,KAAK,UAAS;AACxC,IAAAA,KAAI,IAAI,yBAAyB,GAAG,MAAM,EAAE,IAAI,GAAG,MAAM,MAAM,GAAG,CAAC,EAAC;EACtE;EAEA,oBAAoB,WAAQ;AAC1B,IAAAA,KAAI,IAAI,wBAAwB,gBAAgB,KAAK,EAAE,EAAC;EAC1D;EACA,gBAAgB,CAAC,OAAO,gBAAe;AACrC,QAAI,aAAa;AACf,YAAM,QAAQ,MAAM,eAAc;AAClC,MAAAA,KAAI,IACF,wBACA,YAAY,KAAK,aAAa,OAAO,KAAK,KAAK,EAC5C,OAAO,SAAO,MAAM,GAAG,CAAC,EACxB,KAAK,IAAI,CAAC,EAAE,EAChB;IACH,OAAO;AACL,MAAAA,KAAI,IAAI,gBAAgB,GAAG,KAAK,uBAAuB,EAAC;IAC1D;EACF;EACA,iBAAiB,CAAC,OAAO,YAAW;AAClC,QAAI,SAAS;AACX,MAAAA,KAAI,IAAI,gBAAgB,WAAW,KAAK,oBAAoB,EAAC;IAC/D;EACF;EACA,kBAAkB,WAAQ;AACxB,IAAAA,KAAI,IAAI,wBAAwB,cAAc,KAAK,EAAE,EAAC;EACxD;;EAIA,+BAA+B,CAAC,OAAO,SAAS,cAAa;AAC3D,QAAI,SAAS;AACX,MAAAA,KAAI,IACF,wBACA,0CAA0C,KAAK,IAC/C,SAAS,EACV;IACH,OAAO;AACL,MAAAA,KAAI,IAAI,gBAAgB,oCAAoC,KAAK,IAAI,SAAS,EAAC;IACjF;EACF;;EAIA,0BAA0B,CAAC,cAAc,SAAS,WAAU;AAC1D,QAAI,SAAS;AACX,MAAAA,KAAI,IAAI,wBAAwB,YAAY,OAAO,MAAM,cAAc,EAAC;IAC1E;EACF;EAEA,iCAAiC,CAAC,cAAc,aAAY;AAC1D,IAAAA,KAAI,IAAI,yBAAyB,oBAAoB,QAAQ,EAAC;EAChE;;EAIA,+BAA+B,CAAC,kBAAkB,SAAS,mBAAkB;AAC3E,IAAAA,KAAI,IACF,wBACA,iBACI,0BAA0B,cAAc,KAAK,OAAO,SAAS,iBAAiB,EAAE,KAChF,kCAAkC,iBAAiB,EAAE,EAAE,EAC5D;EACH;EAEA,gCAAgC,sBAAmB;AACjD,aAAS,wBAAwB,SAAS;AAC1C,aAAS,8BAA8B,KAAK,IAAG;EACjD;EACA,8BAA8B,CAAC,kBAAkB,iBAAgB;AAC/D,UAAM,SAAS,KAAK,MAAM,KAAK,IAAG,IAAK,SAAS,2BAA2B;AAC3E,IAAAA,KAAI,eACF,wBACA,0BAA0B,YAAY,iBAAiB,iBAAiB,EAAE,OAAO,MAAM,IAAI,EAC5F;AACD,eAAW,iBAAiB,SAAS,yBAAyB;AAC5D,MAAAA,KAAI,IAAI,yBAAyB,aAAa,EAAC;IACjD;AACA,IAAAA,KAAI,SAAS,sBAAsB,EAAC;EACtC;;EAIA,yBAAyB,eAAY;AACnC,aAAS,uBAAuB,KAAK,IAAG;EAC1C;EACA,sBAAsB,CAAC,WAAW,iBAAgB;AAChD,UAAMC,WAAU,GAAG,UAAU,EAAE,cAAc,YAAY;AACzD,aAAS,wBAAwB,KAAKA,QAAO;EAC/C;EACA,uBAAuB,CAAC,WAAW,iBAAgB;AACjD,UAAM,SAAS,KAAK,MAAM,KAAK,IAAG,IAAK,SAAS,oBAAoB;AACpE,UAAMA,WAAU,GAAG,UAAU,EAAE,YAAY,YAAY,OAAO,MAAM;AACpE,aAAS,wBAAwB,KAAKA,QAAO;EAC/C;;EAIA,6BAA6B,CAAC,cAAc,aAAa,SAAQ;AAC/D,UAAM,EAAC,MAAM,cAAc,MAAK,IAAI;AACpC,eAAW,UAAU,aAAa;AAChC,YAAM,EAAC,YAAY,cAAc,gBAAgB,cAAa,IAAI;AAClE,YAAM,iBAAiB,aAAa;AACpC,YAAM,cAAc,iBAAiB;AAErC,MAAAD,KAAI,IACF,gBACA,WAAW,aAAa,WAAW,MACvC,YAAY,QAAQ,UAAU,eAAe,IAAI,YAAY,YAAY,OACxE,WAAW,YAAY,cAAc,cAAc,aAAa,YAAY,EAC1E;AAED,UAAI,OAAO;AACT,cAAM,IAAI,eAAe,EAAE,IAAI,YAAY;MAC7C;IACF;EACF;;;;ACrIF,IAAI,UAAoC,CAAA;AAIxC,IAAI,MAAuC;AACzC,YAAU,WAAW,WAAO;AAC9B;AAEM,SAAU,SAAS,UAAkC;AACzD,YAAU;AACZ;AAEc,SAAP,MAAuB,WAAmB,MAAY,MAAY,MAAU;AACjF,MAAI,YAAQ,QAAQ,KAAK,QAAQ,SAAS,GAAG;AAE3C,YAAQ,SAAS,EAAE,KAAK,MAAM,MAAM,MAAM,IAAI;EAChD;AACF;;;ACpBA,SAAS,OAAO,MAAY;AAC1B,QAAM,YAAY,KAAK,CAAC;AACxB,QAAM,WAAW,KAAK,KAAK,SAAS,CAAC;AACrC,SAAQ,cAAc,OAAO,aAAa,OAAS,cAAc,OAAO,aAAa;AACvF;AAGA,IAAA,sBAAe;EACb,UAAU;EACV,WAAW;EACX,IAAI;EACJ,MAAM;EACN,QAAQ;EACR,SAAS;EACT,SAAS,CAAA;EACT,YAAY,CAAC,QAAQ,SAAS;EAC9B,WAAW,CAAC,oBAAoB,sBAAsB;EACtD,UAAU;EACV,eAAe,KAAK;;;;ACTtB,SAAS,eAAY;AAGnB,QAAME,WACJ,OACG,WACC,WAAW,gBAAgB;AAGjC,QAAM,kBAAkB,WAAW,QAAQ,WAAW,KAAK;AAE3D,MAAI,mBAAmB,oBAAoBA,UAAS;AAClD,UAAM,IAAI,MAAM,yCAAyC,eAAe,OAAOA,QAAO,EAAE;EAC1F;AAEA,MAAI,CAAC,iBAAiB;AACpB,gBAAI,IAAI,GAAG,WAAWA,QAAO,EAAE,EAAC;AAEhC,eAAW,OAAO;MAChB,GAAG,WAAW;MACd,SAASA;MACT,SAAAA;MACA;;MAEA,kBAAkB;;AAGpB,oBAAgB;MACd;;MAEA,CAAC,aAAa,EAAC,aAAa,EAAC,kBAAkB,OAAM,EAAC,CAAC;KACxD;EACH;AAEA,SAAOA;AACT;AAEO,IAAMC,WAAU,aAAY;;;AC9C7B,SAAUC,QAAO,WAAoBC,UAAgB;AACzD,MAAI,CAAC,WAAW;AACd,UAAM,IAAI,MAAMA,YAAW,gCAAgC;EAC7D;AACF;;;AC6BA,IAAM,0BAAyD;EAC7D,QAAQ;IACN,MAAM;IACN,SAAS,OAAgB,UAAkB;AACzC,aACE,OAAO,SAAS,KAAK,KACrB,OAAO,aAAa,aACnB,SAAS,QAAQ,UAAc,SAAoB,SAAS,SAC5D,SAAS,QAAQ,UAAc,SAAoB,SAAS;IAEjE;;EAEF,OAAO;IACL,MAAM;IACN,SAAS,OAAgB,UAAkB;AACzC,aAAO,MAAM,QAAQ,KAAK,KAAK,YAAY,OAAO,KAAK;IACzD;;;AAUE,SAAU,mBACd,WAAmC;AAEnC,QAAM,iBAAgD,CAAA;AACtD,aAAW,CAACC,OAAM,QAAQ,KAAK,OAAO,QAAQ,SAAS,GAAG;AACxD,mBAAeA,KAAI,IAAI,kBAAkB,QAAQ;EACnD;AACA,SAAO;AACT;AAyCA,SAAS,kBAAkB,UAAkB;AAC3C,MAAI,OAAO,UAAU,QAAQ;AAE7B,MAAI,SAAS,UAAU;AACrB,WAAO,EAAC,OAAO,UAAU,GAAG,wBAAwB,IAAI,GAAG,KAAI;EACjE;AAGA,MAAI,OAAO,aAAa,UAAU;AAChC,QAAI,CAAC,UAAU;AACb,aAAO,EAAC,MAAM,UAAU,OAAO,KAAI;IACrC;AACA,QAAI,SAAS,SAAS,QAAW;AAC/B,aAAO,EAAC,GAAG,UAAU,GAAG,wBAAwB,SAAS,IAAI,GAAG,MAAM,SAAS,KAAI;IACrF;AAEA,QAAI,SAAS,UAAU,QAAW;AAChC,aAAO,EAAC,MAAM,UAAU,OAAO,SAAQ;IACzC;AAEA,WAAO,UAAU,SAAS,KAAK;AAC/B,WAAO,EAAC,GAAG,UAAU,GAAG,wBAAwB,IAAI,GAAG,KAAI;EAC7D;AAEA,QAAM,IAAI,MAAM,OAAO;AACzB;AAKA,SAAS,UAAU,OAAc;AAC/B,MAAI,MAAM,QAAQ,KAAK,KAAK,YAAY,OAAO,KAAK,GAAG;AACrD,WAAO;EACT;AACA,SAAO,OAAO;AAChB;;;ACjJO,IAAM;;EAAiC;;;;;AAMvC,IAAM;;EAAiC;;;;;;;;;;;;;;;;;;;;;;;;ACF9C,IAAM,mBAAmB;EACvB,QAAQ;EACR,UAAU;;AAGZ,IAAM,sBAAsB;AAC5B,IAAM,oBAAoB;AAC1B,IAAM,YAAsB,CAAA;AAErB,IAAM,4BAA4B;AAqBnC,SAAU,oBACd,YAAoD;AAEpD,QAAM,SAA2B,EAAC,QAAQ,CAAA,GAAI,UAAU,CAAA,EAAE;AAE1D,aAAW,QAAQ,YAAY;AAC7B,QAAI,YAAY,WAAW,IAAI;AAC/B,UAAM,QAAQ,aAAa,IAAI;AAC/B,QAAI,OAAO,cAAc,UAAU;AACjC,kBAAY;QACV,OAAO;QACP;;IAEJ;AAEA,WAAO,KAAK,EAAE,IAAI,IAAI;EACxB;AAEA,SAAO;AACT;AAEA,SAAS,aAAa,MAAY;AAChC,QAAM,OAAO,KAAK,MAAM,GAAG,CAAC;AAC5B,UAAQ,MAAM;IACZ,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT;AACE,YAAM,IAAI,MAAM,IAAI;EACxB;AACF;AAYM,SAAU,aACdC,SACA,OACA,QACA,sBAAsB,OAAK;AAE3B,QAAM,WAAW,UAAU;AAE3B,aAAW,OAAO,QAAQ;AACxB,UAAM,eAAe,OAAO,GAAG;AAC/B,iBAAa,KAAK,CAACC,IAAoBC,OAA+BD,GAAE,QAAQC,GAAE,KAAK;AACvF,cAAU,SAAS,aAAa;AAChC,aAASC,KAAI,GAAGC,OAAM,aAAa,QAAQD,KAAIC,MAAK,EAAED,IAAG;AACvD,gBAAUA,EAAC,IAAI,aAAaA,EAAC,EAAE;IACjC;AACA,UAAM,iBAAiB,GAAG,UAAU,KAAK,IAAI,CAAC;;AAC9C,YAAQ,KAAK;;MAEX,KAAK;AACH,YAAI,UAAU;AACZ,UAAAH,UAASA,QAAO,QAAQ,2BAA2B,cAAc;QACnE;AACA;;MAEF,KAAK;AACH,YAAI,UAAU;AACZ,UAAAA,UAASA,QAAO,QAAQ,qBAAqB,CAAC,UAAkB,QAAQ,cAAc;QACxF;AACA;;MAEF,KAAK;AACH,YAAI,UAAU;AACZ,UAAAA,UAASA,QAAO,QAAQ,mBAAmB,CAAC,UAAkB,iBAAiB,KAAK;QACtF;AACA;;MAEF,KAAK;AACH,YAAI,CAAC,UAAU;AACb,UAAAA,UAASA,QAAO,QAAQ,2BAA2B,cAAc;QACnE;AACA;;MAEF,KAAK;AACH,YAAI,CAAC,UAAU;AACb,UAAAA,UAASA,QAAO,QAAQ,qBAAqB,CAAC,UAAkB,QAAQ,cAAc;QACxF;AACA;;MAEF,KAAK;AACH,YAAI,CAAC,UAAU;AACb,UAAAA,UAASA,QAAO,QAAQ,mBAAmB,CAAC,UAAkB,iBAAiB,KAAK;QACtF;AACA;MAEF;AAIE,QAAAA,UAASA,QAAO,QAAQ,KAAK,CAAC,UAAkB,QAAQ,cAAc;IAC1E;EACF;AAGA,EAAAA,UAASA,QAAO,QAAQ,2BAA2B,EAAE;AAGrD,MAAI,qBAAqB;AACvB,IAAAA,UAASA,QAAO,QAAQ,UAAU,CAAC,UAAkB,QAAQ,iBAAiB,KAAK,CAAC;EACtF;AAEA,SAAOA;AACT;;;ACnDM,SAAU,wBAAwB,SAAuB;AAC7D,UAAQ,IAAI,CAAC,WAAyB,uBAAuB,MAAM,CAAC;AACtE;AAEM,SAAU,uBAAuB,QAAoB;AACzD,MAAI,OAAO,UAAU;AACnB;EACF;AAEA,0BAAwB,OAAO,gBAAgB,CAAA,CAAE;AAEjD,QAAM;IACJ,YAAY,CAAA;IACZ,eAAe,CAAA;;IAEf,SAAS,CAAA;EAAE,IACT;AAEJ,QAAM,WAA+C;IACnD,sBAAsB,oBAAoB,MAAM;IAChD,oBAAoB,4BAA4B,YAAY;;AAG9D,MAAI,WAAW;AACb,aAAS,iBAAiB,mBAAmB,SAAS;EACxD;AAEA,SAAO,WAAW;AAGlB,MAAIK,gBAAsC,CAAA;AAC1C,MAAI,WAAW;AACb,IAAAA,gBAAe,OAAO,QAAQ,SAAS,EAAE,OACvC,CAAC,KAA4B,CAAC,KAAK,QAAQ,MAAK;AAE9C,YAAM,QAAQ,qCAAU;AACxB,UAAI,OAAO;AAET,YAAI,GAAG,IAAI;MACb;AACA,aAAO;IACT,GACA,CAAA,CAA2B;EAE/B;AAEA,SAAO,kBAAkB,EAAC,GAAG,OAAO,iBAAiB,GAAGA,cAAY;AACtE;AA6CM,SAAU,8BACd,cACA,cACAC,MAAQ;AApMV,MAAAC;AAsME,GAAAA,MAAA,aAAa,iBAAb,gBAAAA,IAA2B,QAAQ,SAAM;AAtM3C,QAAAA;AAuMI,SAAIA,MAAA,IAAI,UAAJ,gBAAAA,IAAW,KAAK,eAAe;AACjC,UAAI,IAAI,YAAY;AAClB,QAAAD,KAAI,WAAW,IAAI,KAAK,IAAI,GAAG,EAAC;MAClC,OAAO;AACL,QAAAA,KAAI,QAAQ,IAAI,KAAK,IAAI,GAAG,EAAC;MAC/B;IACF;EACF;AACF;AAIA,SAAS,4BAA4B,cAAuC;AAC1E,eAAa,QAAQ,SAAM;AACzB,YAAQ,IAAI,MAAM;MAChB,KAAK;AACH,YAAI,QAAQ,IAAI,OAAO,MAAM,IAAI,GAAG,KAAK;AACzC;MACF;AACE,YAAI,QAAQ,IAAI,OAAO,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG;IACpD;EACF,CAAC;AAED,SAAO;AACT;;;ACtMM,SAAU,4BAAsD,SAAY;AAChF,0BAAwB,OAAO;AAC/B,QAAM,YAA+B,CAAA;AACrC,QAAM,cAAsC,CAAA;AAC5C,qBAAmB,EAAC,SAAS,OAAO,GAAG,WAAW,YAAW,CAAC;AAG9D,QAAM,eAAe,OAAO,KAAK,WAAW,EACzC,KAAK,CAACE,IAAGC,OAAM,YAAYA,EAAC,IAAI,YAAYD,EAAC,CAAC,EAC9C,IAAI,CAAAE,UAAQ,UAAUA,KAAI,CAAC;AAC9B,0BAAwB,YAAY;AACpC,SAAO;AACT;AAYM,SAAU,mBAA6C,SAK5D;AACC,QAAM,EAAC,SAAS,OAAO,WAAW,YAAW,IAAI;AACjD,MAAI,SAAS,GAAG;AACd,UAAM,IAAI,MAAM,0CAA0C;EAC5D;AAGA,aAAW,UAAU,SAAS;AAC5B,cAAU,OAAO,IAAI,IAAI;AACzB,QAAI,YAAY,OAAO,IAAI,MAAM,UAAa,YAAY,OAAO,IAAI,IAAI,OAAO;AAC9E,kBAAY,OAAO,IAAI,IAAI;IAC7B;EACF;AAGA,aAAW,UAAU,SAAS;AAC5B,QAAI,OAAO,cAAc;AACvB,yBAAmB,EAAC,SAAS,OAAO,cAAc,OAAO,QAAQ,GAAG,WAAW,YAAW,CAAC;IAC7F;EACF;AACF;;;ACnEM,SAAU,yBAAyB,cAA0B;AACjE,UAAQ,6CAAc,IAAI,eAAe;IACvC,KAAK;AACH;;QAAkB;;;;;;;;IASpB,KAAK;AACH;;QAAkB;;;;;IAMpB,KAAK;AACH;;QAAkB;;;;;;;;;IAUpB,KAAK;AAEH;;QAAkB;;;IAIpB;AAIE;;QAAkB;;;;;;;;;EAStB;AACF;;;AC5CM,SAAU,oBAAoBC,SAAgB,OAA4B;AAbhF,MAAAC;AAcE,QAAM,oBAAoB,SAAOA,MAAAD,QAAO,MAAM,uBAAuB,MAApC,gBAAAC,IAAwC,OAAM,GAAG;AAClF,MAAI,sBAAsB,KAAK;AAE7B,UAAM,IAAI,MAAM,mDAAmD;EACrE;AAEA,UAAQ,OAAO;IACb,KAAK;AACH,MAAAD,UAAS,cAAcA,SAAQ,yBAAyB;AACxD,aAAOA;IACT,KAAK;AACH,MAAAA,UAAS,cAAcA,SAAQ,2BAA2B;AAC1D,aAAOA;IACT;AAEE,YAAM,IAAI,MAAM,KAAK;EACzB;AACF;AAKA,IAAM,qBAAwC;;EAE5C,CAAC,+CAA+C,mBAAmB;;EAEnE,CAAC,yCAAyC,aAAa;EACvD,CAAC,sCAAsC,UAAU;;AAGnD,IAAM,4BAA+C;EACnD,GAAG;;EAEH,CAAC,uBAAuB,WAAW,GAAG,OAAO;;EAE7C,CAAC,uBAAuB,SAAS,GAAG,QAAQ;;AAI9C,IAAM,8BAAiD;EACrD,GAAG;;EAEH,CAAC,uBAAuB,SAAS,GAAG,OAAO;;AAG7C,SAAS,cAAcA,SAAgB,cAA+B;AACpE,aAAW,CAAC,SAAS,WAAW,KAAK,cAAc;AACjD,IAAAA,UAASA,QAAO,QAAQ,SAAS,WAAW;EAC9C;AACA,SAAOA;AACT;AAWA,SAAS,uBAAuB,WAAiD;AAC/E,SAAO,IAAI,OAAO,MAAM,SAAS,0CAA0C,GAAG;AAChF;;;ACtCM,SAAU,eACd,eACA,gBAAiD;AAEjD,MAAI,SAAS;AACb,aAAW,YAAY,eAAe;AACpC,UAAM,eAAe,cAAc,QAAQ;AAC3C,cAAU,QAAQ,aAAa,SAAS;;AACxC,QAAI,aAAa,QAAQ;AACvB,gBAAU,KAAK,aAAa,MAAM;IACpC;AACA,QAAI,eAAe,QAAQ,GAAG;AAC5B,YAAM,aAAa,eAAe,QAAQ;AAC1C,iBAAW,KAAK,CAACE,IAAoBC,OAA+BD,GAAE,QAAQC,GAAE,KAAK;AACrF,iBAAW,aAAa,YAAY;AAClC,kBAAU,KAAK,UAAU,SAAS;;MACpC;IACF;AACA,QAAI,aAAa,QAAQ;AACvB,gBAAU,KAAK,aAAa,MAAM;IACpC;AACA,cAAU;EACZ;AAEA,SAAO;AACT;AAMM,SAAU,qBAAqB,eAAsC;AACzE,QAAM,SAAsB,EAAC,QAAQ,CAAA,GAAI,UAAU,CAAA,EAAE;AAErD,aAAW,gBAAgB,eAAe;AACxC,QAAI;AACJ,QAAI;AACJ,QAAI,OAAO,iBAAiB,UAAU;AACpC,aAAO;AACP,aAAO,KAAK;IACd,OAAO;AACL,aAAO,CAAA;AACP,aAAO;IACT;AACA,WAAO,KAAK,KAAI;AAChB,UAAM,CAAC,aAAa,SAAS,IAAI,KAAK,MAAM,GAAG;AAC/C,UAAMC,QAAO,KAAK,QAAQ,QAAQ,EAAE;AACpC,UAAM,iBAA6B,OAAO,OAAO,MAAM,EAAC,UAAS,CAAC;AAClE,YAAQ,aAAa;MACnB,KAAK;AACH,eAAO,OAAOA,KAAI,IAAI;AACtB;MACF,KAAK;AACH,eAAO,SAASA,KAAI,IAAI;AACxB;MACF;AACE,cAAM,IAAI,MAAM,WAAW;IAC/B;EACF;AAEA,SAAO;AACT;;;ACxFM,SAAU,cAAcC,SAAgB,aAAoB;AAChE,SAAO;IACL,MAAM,cAAcA,SAAQ,WAAW;IACvC,UAAU;IACV,SAAS,iBAAiBA,OAAM;;AAEpC;AAGA,SAAS,cAAc,QAAgB,cAAsB,WAAS;AACpE,QAAM,qBAAqB;AAC3B,QAAM,QAAQ,mBAAmB,KAAK,MAAM;AAC5C,SAAO,QAAQ,MAAM,CAAC,IAAI;AAC5B;AAGA,SAAS,iBAAiBA,SAAc;AACtC,MAAIC,WAAU;AACd,QAAM,QAAQD,QAAO,MAAM,SAAS;AACpC,MAAI,SAAS,MAAM,UAAU,KAAK,MAAM,CAAC,MAAM,YAAY;AACzD,UAAM,gBAAgB,SAAS,MAAM,CAAC,GAAG,EAAE;AAC3C,QAAI,OAAO,SAAS,aAAa,GAAG;AAClC,MAAAC,WAAU;IACZ;EACF;AACA,MAAIA,aAAY,OAAOA,aAAY,KAAK;AACtC,UAAM,IAAI,MAAM,wBAAwBA,QAAO,EAAE;EACnD;AACA,SAAOA;AACT;;;ACtBA,IAAM,6BAA6B;;EAAO,yBAAyB;;AAMnE,IAAM;;EAAsC;;;AAkEtC,SAAU,mBACd,SAGC;AAKD,QAAM,UAAU,4BAA4B,QAAQ,WAAW,CAAA,CAAE;AAEjE,SAAO;IACL,QAAQ,mBAAmB,QAAQ,cAAc;MAC/C,GAAG;MACH,QAAQ,QAAQ;MAChB,OAAO;MACP;KACD;IACD,aAAa,oBAAoB,OAAO;;AAE5C;AAKM,SAAU,uBACd,SAKC;AAMD,QAAM,EAAC,IAAAC,MAAI,IAAAC,KAAE,IAAI;AACjB,QAAM,UAAU,4BAA4B,QAAQ,WAAW,CAAA,CAAE;AAEjE,SAAO;IACL,IAAI,mBAAmB,QAAQ,cAAc;MAC3C,GAAG;MACH,QAAQD;MACR,OAAO;MACP;KACD;IACD,IAAI,mBAAmB,QAAQ,cAAc;MAC3C,GAAG;;MAEH,QAAQC;MACR,OAAO;MACP;KACD;IACD,aAAa,oBAAoB,OAAO;;AAE5C;AASM,SAAU,mBAAmB,cAA4B,SAA6B;AA5J5F,MAAAC;AA6JE,QAAM;;IAEJ,QAAAC;IACA;IACA;;IAEA,gBAAgB,CAAA;IAChB,SAAS,CAAA;IACT,KAAAC;EAAG,IACD;AAEJ,EAAAC,QAAO,OAAOF,YAAW,UAAU,gCAAgC;AAKnE,QAAM,aAAaA;AAYnB,MAAI,kBAAkB;AAWtB,QAAM,kBAAkB,qBAAqB,aAAa;AAG1D,QAAM,iBAAoD,CAAA;AAC1D,QAAM,iBAAoD,CAAA;AAC1D,QAAM,iBAAoD,CAAA;AAE1D,aAAW,OAAO,QAAQ;AACxB,UAAM,YACJ,OAAO,OAAO,GAAG,MAAM,WAAW,EAAC,WAAW,OAAO,GAAG,GAAG,OAAO,EAAC,IAAI,OAAO,GAAG;AACnF,UAAM,QAAQ,wBAAwB,KAAK,GAAG;AAC9C,QAAI,OAAO;AACT,YAAM,OAAO,MAAM,CAAC;AACpB,YAAMG,QAAO,MAAM,CAAC;AACpB,UAAI,MAAM;AACR,YAAIA,UAAS,QAAQ;AACnB,yBAAe,GAAG,IAAI,CAAC,SAAgB;QACzC,OAAO;AACL,yBAAe,GAAG,IAAI,CAAC,SAAgB;QACzC;MACF,OAAO;AACL,uBAAe,GAAG,IAAI,CAAC,SAAgB;MACzC;IACF,OAAO;AAEL,qBAAe,GAAG,IAAI,CAAC,SAAgB;IACzC;EACF;AAGA,QAAM,kBAAkB;AAExB,aAAW,UAAU,iBAAiB;AACpC,QAAIF,MAAK;AACP,oCAA8B,QAAQ,YAAYA,IAAG;IACvD;AACA,UAAM,eAAe,sBAAsB,QAAQ,MAAM;AAEzD,uBAAmB;AAEnB,UAAM,eAAaF,MAAA,OAAO,eAAP,gBAAAA,IAAoB,WAAU,CAAA;AACjD,eAAW,OAAO,YAAY;AAC5B,YAAM,QAAQ,qBAAqB,KAAK,GAAG;AAC3C,UAAI,OAAO;AACT,cAAMI,QAAO,MAAM,CAAC;AACpB,cAAM,gBAAgBA,UAAS,SAAS,iBAAiB;AACzD,sBAAc,GAAG,IAAI,cAAc,GAAG,KAAK,CAAA;AAC3C,sBAAc,GAAG,EAAE,KAAK,WAAW,GAAG,CAAC;MACzC,OAAO;AACL,uBAAe,GAAG,IAAI,eAAe,GAAG,KAAK,CAAA;AAC7C,uBAAe,GAAG,EAAE,KAAK,WAAW,GAAG,CAAC;MAC1C;IACF;EACF;AAGA,qBAAmB;AAEnB,oBAAkB,aAAa,iBAAiB,OAAO,cAAc;AAErE,qBAAmB,eAAe,gBAAgB,KAAK,GAAG,cAAc;AAGxE,qBAAmB;AAGnB,oBAAkB,aAAa,iBAAiB,OAAO,cAAc;AAErE,SAAO;AACT;AASA,SAAS,mBACP,cACA,SAWC;AA/RH,MAAAJ;AAiSE,QAAM,EACJ,IACA,QAAAC,SACA,OACA,WAAW,QACX,SACA,SAAAI,WAAU,CAAA,GACV,gBAAgB,CAAA,GAChB,SAAS,CAAA,GACT,WAAW,MACX,KAAAH,KAAG,IACD;AAEJ,EAAAC,QAAO,OAAOF,YAAW,UAAU,gCAAgC;AAEnE,QAAM,gBAAgB,aAAa,SAAS,cAAcA,OAAM,EAAE,UAAU;AAC5E,QAAM,gBAAgB,aAAa;AAEnC,QAAM,yBAAyB,kBAAkB,MAAM,iBAAiB;AAExE,QAAM,cAAcA,QAAO,MAAM,IAAI;AAErC,QAAM,aAAa,YAAY,MAAM,CAAC,EAAE,KAAK,IAAI;AAGjD,QAAM,aAAa,CAAA;AACnB,UAAQ,QAAQ,YAAS;AACvB,WAAO,OAAO,YAAY,OAAO,OAAO;EAC1C,CAAC;AACD,SAAO,OAAO,YAAYI,QAAO;AAKjC,MAAI,kBAAkB;AACtB,UAAQ,UAAU;IAChB,KAAK;AACH;IACF,KAAK;AACH,wBAAkB,WACd,GACR,sBAAsB;;;EAGtB,oBAAoB,EAAC,IAAI,QAAAJ,SAAQ,MAAK,CAAC,CAAC;EACxC,uBAAuB,MAAM,YAAW,CAAE,EAAE;;EAE5C,yBAAyB,YAAY,CAAC;EACtC,UAAU,aAAa,2BAA2B,EAAE;;;;EAIpD,sBAAsB,UAAU,CAAC;;IAGzB,GAAG,sBAAsB;;AAE7B;EACJ;AAEA,QAAM,kBAAkB,qBAAqB,aAAa;AAG1D,QAAM,iBAAoD,CAAA;AAC1D,QAAM,iBAAoD,CAAA;AAC1D,QAAM,iBAAoD,CAAA;AAE1D,aAAW,OAAO,QAAQ;AACxB,UAAM,YACJ,OAAO,OAAO,GAAG,MAAM,WAAW,EAAC,WAAW,OAAO,GAAG,GAAG,OAAO,EAAC,IAAI,OAAO,GAAG;AACnF,UAAM,QAAQ,wBAAwB,KAAK,GAAG;AAC9C,QAAI,OAAO;AACT,YAAM,OAAO,MAAM,CAAC;AACpB,YAAMG,QAAO,MAAM,CAAC;AACpB,UAAI,MAAM;AACR,YAAIA,UAAS,QAAQ;AACnB,yBAAe,GAAG,IAAI,CAAC,SAAS;QAClC,OAAO;AACL,yBAAe,GAAG,IAAI,CAAC,SAAS;QAClC;MACF,OAAO;AACL,uBAAe,GAAG,IAAI,CAAC,SAAS;MAClC;IACF,OAAO;AAEL,qBAAe,GAAG,IAAI,CAAC,SAAS;IAClC;EACF;AAEA,aAAW,UAAU,SAAS;AAC5B,QAAIF,MAAK;AACP,oCAA8B,QAAQ,YAAYA,IAAG;IACvD;AACA,UAAM,eAAe,sBAAsB,QAAQ,KAAK;AAExD,uBAAmB;AAEnB,UAAM,eAAaF,MAAA,OAAO,aAAP,gBAAAA,IAAiB,qBAAqB,WAAU,CAAA;AACnE,eAAW,OAAO,YAAY;AAC5B,YAAM,QAAQ,qBAAqB,KAAK,GAAG;AAC3C,UAAI,OAAO;AACT,cAAMI,QAAO,MAAM,CAAC;AACpB,cAAM,gBAAgBA,UAAS,SAAS,iBAAiB;AACzD,sBAAc,GAAG,IAAI,cAAc,GAAG,KAAK,CAAA;AAC3C,sBAAc,GAAG,EAAE,KAAK,WAAW,GAAG,CAAC;MACzC,OAAO;AACL,uBAAe,GAAG,IAAI,eAAe,GAAG,KAAK,CAAA;AAC7C,uBAAe,GAAG,EAAE,KAAK,WAAW,GAAG,CAAC;MAC1C;IACF;EACF;AAEA,qBAAmB;AAGnB,qBAAmB;AAEnB,oBAAkB,aAAa,iBAAiB,OAAO,cAAc;AAErE,qBAAmB,eAAe,gBAAgB,KAAK,GAAG,cAAc;AAGxE,qBAAmB;AAGnB,oBAAkB,aAAa,iBAAiB,OAAO,cAAc;AAErE,MAAI,aAAa,UAAU,kBAAkB,eAAe;AAC1D,sBAAkB,oBAAoB,iBAAiB,KAAK;EAC9D;AAEA,SAAO,gBAAgB,KAAI;AAC7B;AAUM,SAAU,oBAAoB,SAAuB;AACzD,SAAO,SAASE,aAAY,MAAyB;AAhbvD,QAAAN;AAibI,UAAM,WAAW,CAAA;AACjB,eAAW,UAAU,SAAS;AAG5B,YAAM,kBAAiBA,MAAA,OAAO,gBAAP,gBAAAA,IAAA,aAAqB,MAAM;AAClD,aAAO,OAAO,UAAU,cAAc;IACxC;AACA,WAAO;EACT;AACF;AAOA,SAAS,oBAAoB,SAI5B;AACC,QAAM,EAAC,IAAI,QAAAC,SAAQ,MAAK,IAAI;AAC5B,QAAM,mBAAmB,MAAMA,QAAO,QAAQ,aAAa,MAAM;AACjE,SAAO,mBACH;sBACgB,EAAE,IAAI,KAAK,KAC3B;AACN;AAGA,SAAS,sBAAsBI,WAAwC,CAAA,GAAE;AACvE,MAAI,aAAa;AACjB,aAAW,UAAUA,UAAS;AAC5B,UAAM,QAAQA,SAAQ,MAAM;AAC5B,QAAI,SAAS,OAAO,SAAS,KAAK,GAAG;AACnC,oBAAc,WAAW,OAAO,YAAW,CAAE,IAAIA,SAAQ,MAAM,CAAC;;IAClE;EACF;AACA,SAAO;AACT;AAGM,SAAU,sBACd,QACA,OAAqC;AAErC,MAAI;AACJ,UAAQ,OAAO;IACb,KAAK;AACH,qBAAe,OAAO,MAAM;AAC5B;IACF,KAAK;AACH,qBAAe,OAAO,MAAM;AAC5B;IACF,KAAK;AACH,qBAAe,OAAO,UAAU;AAChC;IACF;AACE,MAAAF,QAAO,KAAK;EAChB;AAEA,MAAI,CAAC,OAAO,MAAM;AAChB,UAAM,IAAI,MAAM,gCAAgC;EAClD;AACA,QAAM,aAAa,OAAO,KAAK,YAAW,EAAG,QAAQ,eAAe,GAAG;AACvE,MAAIF,UAAS,mBACG,OAAO,IAAI;;;AAG3B,MAAI,UAAU,QAAQ;AACpB,IAAAA,WAAU,kBAAkB,UAAU;;EACxC;AACA,EAAAA,WAAU,GAAG,YAAY;;AACzB,SAAOA;AACT;;;ACvfA,IAAM,eAAe;AACrB,IAAM,eAAe;AAMf,SAAU,WAAWM,SAAgB,SAA6B;AAXxE,MAAAC;AAYE,QAAM,QAAQD,QAAO,MAAM,IAAI;AAC/B,QAAM,SAAmB,CAAA;AAEzB,MAAI,cAAc;AAClB,MAAI,gBAA+B;AACnC,aAAW,QAAQ,OAAO;AACxB,UAAM,UAAU,KAAK,MAAM,YAAY;AACvC,UAAM,WAAW,KAAK,MAAM,YAAY;AACxC,QAAI,SAAS;AACX,sBAAgB,QAAQ,CAAC;AACzB,oBAAc,SAAQC,MAAA,mCAAS,YAAT,gBAAAA,IAAmB,cAAc;IACzD,WAAW,UAAU;AACnB,oBAAc;IAChB,WAAW,aAAa;AACtB,aAAO,KAAK,IAAI;IAClB;EACF;AACA,SAAO,OAAO,KAAK,IAAI;AACzB;;;ACZM,IAAO,mBAAP,MAAO,iBAAe;EAAtB;AAIa;0CAAwB,CAAA;AAEjC;2CAAkC,CAAA;;;;;;EAM1C,OAAO,4BAAyB;AAC9B,qBAAgB,yBACd,iBAAgB,0BAA0B,IAAI,iBAAe;AAC/D,WAAO,iBAAgB;EACzB;;;;EAKA,iBAAiB,QAAoB;AACnC,QACE,CAAC,KAAK,gBAAgB,KACpB,CAAAC,OAAKA,GAAE,UAAU,OAAO,WAAW,WAAW,SAAS,OAAO,KAAK,GAErE;AACA,WAAK,gBAAgB,KAAK,MAAM;IAClC;EACF;;;;EAKA,oBAAoB,QAAoB;AACtC,UAAM,aAAa,OAAO,WAAW,WAAW,SAAS,OAAO;AAChE,SAAK,kBAAkB,KAAK,gBAAgB,OAAO,CAAAA,OAAKA,GAAE,SAAS,UAAU;EAC/E;;;;;;EAOA,cAAc,MAAc,MAAU;AACpC,QAAI,MAAM;AACR,aAAO,OAAO,OAAO,MAAM,EAAC,KAAI,CAAC;IACnC;AACA,SAAK,eAAe,KAAK,IAAI;EAC/B;;;;;;;EAQA,mBAAmB,OAA0B;AAK3C,UAAM,UAAU,KAAK,eAAe,MAAM,OAAO;AACjD,UAAM,gBAAgB,KAAK;AAC3B,UAAM,EAAC,QAAAC,SAAQ,aAAAC,aAAW,IAAI,mBAAmB;MAC/C,GAAG;;MAEH,QAAQ,MAAM;MACd;MACA;KACD;AAED,UAAM,qBACJ,MAAM,aAAa,mBAAmB,SAAS,WAAWD,OAAM,IAAIA;AACtE,WAAO,EAAC,QAAQ,oBAAoB,aAAAC,cAAa,QAAO;EAC1D;;;;;;;EAQA,uBAAuB,OAA0B;AAM/C,UAAM,UAAU,KAAK,eAAe,MAAM,OAAO;AACjD,UAAM,gBAAgB,KAAK;AAC3B,UAAM,YAAY,uBAAuB;MACvC,GAAG;;MAEH,IAAI,MAAM;;MAEV,IAAI,MAAM;MACV;MACA;KACD;AAED,WAAO,EAAC,GAAG,WAAW,QAAO;EAC/B;;;;EAKA,eAAe,aAA6B,CAAA,GAAE;AAC5C,UAAM,UAAU,IAAI,MAAoB,KAAK,gBAAgB,SAAS,WAAW,MAAM;AACvF,UAAM,OAAgC,CAAA;AACtC,QAAIC,SAAQ;AAEZ,aAASC,KAAI,GAAGC,OAAM,KAAK,gBAAgB,QAAQD,KAAIC,MAAK,EAAED,IAAG;AAC/D,YAAM,SAAS,KAAK,gBAAgBA,EAAC;AACrC,YAAME,QAAO,OAAO;AACpB,cAAQH,QAAO,IAAI;AACnB,WAAKG,KAAI,IAAI;IACf;AAEA,aAASF,KAAI,GAAGC,OAAM,WAAW,QAAQD,KAAIC,MAAK,EAAED,IAAG;AACrD,YAAM,SAAS,WAAWA,EAAC;AAC3B,YAAME,QAAO,OAAO;AACpB,UAAI,CAAC,KAAKA,KAAI,GAAG;AACf,gBAAQH,QAAO,IAAI;AACnB,aAAKG,KAAI,IAAI;MACf;IACF;AAEA,YAAQ,SAASH;AAEjB,4BAAwB,OAAO;AAC/B,WAAO;EACT;;;AAlIA,cAFW,kBAEJ;AAFH,IAAO,kBAAP;;;ACdN,IAAM;;EAAqB;;;;;AAK3B,IAAM,QAAQ;EAAoB,OAAO;AA4BnC,SAAU,iBAAiB,SAIhC;AACC,QAAM,EAAC,OAAO,eAAe,OAAM,IAAI,WAAW,CAAA;AAClD,MAAI,CAAC,OAAO;AAEV,WAAO;EACT;AACA,MAAI,CAAC,eAAe;AAClB,UAAM,IAAI,MAAM,eAAe;EACjC;AACA,QAAM,YAAY,mBAAmB,aAAa;AAClD,QAAM,cAAc,cAAc,OAAO,aAAa;AACtD,SAAO;KAEJ,SAAS,IAAI,KAAK;WACZ,MAAM;;IAEb,MAAM,MAAM,WAAW;;AAE3B;AA2BA,SAAS,mBAAmB,UAAuB;AAEjD,UAAQ,UAAU;IAChB,KAAK;AAAG,aAAO;IACf,KAAK;AAAG,aAAO;IACf,KAAK;AAAG,aAAO;IACf,KAAK;AAAG,aAAO;IACf;AACE,YAAM,IAAI,MAAM,qBAAqB,QAAQ,EAAE;EACnD;AACF;AAGM,SAAU,cAAc,UAAkB,UAAuB;AAErE,UAAQ,UAAU;IAChB,KAAK;AAAG,aAAO,QAAQ,QAAQ;IAC/B,KAAK;AAAG,aAAO,QAAQ,QAAQ;IAC/B,KAAK;AAAG,aAAO,QAAQ,QAAQ;IAC/B,KAAK;AAAG,aAAO;IACf;AACE,YAAM,IAAI,MAAM,qBAAqB,QAAQ,EAAE;EACnD;AACF;;;ACpGM,IAAO,eAAP,MAAmB;EAAnB;AACJ,iCAAQ,oBAAI,IAAG;;EAEf,SAASI,OAAY;AACnB,WAAO,KAAK,IAAIA,KAAI;EACtB;EAEA,IAAIA,OAAY;AACd,QAAI,CAAC,KAAK,MAAM,IAAIA,KAAI,GAAG;AACzB,WAAK,MAAM,IAAIA,OAAM,IAAI,MAAM,EAAC,IAAIA,MAAI,CAAC,CAAC;IAC5C;AAEA,WAAO,KAAK,MAAM,IAAIA,KAAI;EAC5B;;AAIK,IAAM,YAA0B,IAAI,aAAY;;;ACnBhD,IAAMC,OAAW,IAAI,IAAI,EAAC,IAAI,UAAS,CAAC;;;ACH/C,IAAM,cAAsC,CAAA;AAOtC,SAAU,IAAI,KAAa,MAAI;AACnC,cAAY,EAAE,IAAI,YAAY,EAAE,KAAK;AACrC,QAAMC,SAAQ,YAAY,EAAE;AAC5B,SAAO,GAAG,EAAE,IAAIA,MAAK;AACvB;;;ACIM,IAAgB,WAAhB,MAAwB;;;;EA+B5B,YAAY,QAAgB,OAAcC,eAA6B;AAhBvE;;AACS;AACA,oCAAoC,CAAA;AAErC;AAGR;qCAAqB;AAEb;0CAAyB;AAEzB;8CAAqB,oBAAI,IAAG;AAMlC,QAAI,CAAC,QAAQ;AACX,YAAM,IAAI,MAAM,WAAW;IAC7B;AACA,SAAK,UAAU;AACf,SAAK,QAAQ,iBAAwB,OAAOA,aAAY;AAExD,UAAM,KACJ,KAAK,MAAM,OAAO,cAAe,KAAK,MAAM,KAAgB,IAAI,KAAK,OAAO,WAAW,CAAC;AAC1F,SAAK,MAAM,KAAK;AAChB,SAAK,KAAK;AACV,SAAK,WAAW,KAAK,MAAM,YAAY,CAAA;AAEvC,SAAK,SAAQ;EACf;EAnCA,WAAQ;AACN,WAAO,GAAG,KAAK,OAAO,WAAW,KAAK,KAAK,YAAY,IAAI,KAAK,KAAK,EAAE;EACzE;;;;EAsCA,UAAO;AACL,SAAK,gBAAe;EACtB;;EAGA,SAAM;AACJ,SAAK,QAAO;AACZ,WAAO;EACT;;;;;EAMA,WAAQ;AACN,WAAO,KAAK;EACd;;;;;;EAQA,eAAe,UAAiC;AAC9C,SAAK,mBAAmB,IAAI,QAAQ;EACtC;;;;EAKA,eAAe,UAAiC;AAC9C,SAAK,mBAAmB,OAAO,QAAQ;EACzC;;;;EAKA,wBAAwB,UAAiC;AACvD,QAAI,KAAK,mBAAmB,OAAO,QAAQ,GAAG;AAC5C,eAAS,QAAO;IAClB;EACF;;EAGA,2BAAwB;AACtB,eAAW,YAAY,OAAO,OAAO,KAAK,kBAAkB,GAAG;AAC7D,eAAS,QAAO;IAClB;AAEA,SAAK,qBAAqB,oBAAI,IAAG;EACnC;;;EAKU,kBAAe;AACvB,SAAK,yBAAwB;AAC7B,SAAK,YAAW;AAChB,SAAK,YAAY;EACnB;;EAGU,cAAW;AACnB,UAAM,QAAQ,KAAK,QAAQ,aAAa,SAAS,iBAAiB;AAClE,UAAMC,QAAO,KAAK,OAAO,WAAW;AACpC,UAAM,IAAI,GAAGA,KAAI,UAAU,EAAE,eAAc;EAC7C;;EAGU,qBAAqB,OAAeA,QAAO,KAAK,OAAO,WAAW,GAAC;AAC3E,UAAM,QAAQ,KAAK,QAAQ,aAAa,SAAS,iBAAiB;AAClE,UAAM,IAAI,YAAY,EAAE,SAAS,KAAK;AACtC,UAAM,IAAI,GAAGA,KAAI,SAAS,EAAE,SAAS,KAAK;AAC1C,SAAK,iBAAiB;EACxB;;EAGU,uBAAuBA,QAAO,KAAK,OAAO,WAAW,GAAC;AAC9D,UAAM,QAAQ,KAAK,QAAQ,aAAa,SAAS,iBAAiB;AAClE,UAAM,IAAI,YAAY,EAAE,cAAc,KAAK,cAAc;AACzD,UAAM,IAAI,GAAGA,KAAI,SAAS,EAAE,cAAc,KAAK,cAAc;AAC7D,SAAK,iBAAiB;EACxB;;EAGQ,WAAQ;AACd,UAAM,QAAQ,KAAK,QAAQ,aAAa,SAAS,iBAAiB;AAClE,UAAMA,QAAO,KAAK,OAAO,WAAW;AACpC,UAAM,IAAI,mBAAmB,EAAE,eAAc;AAC7C,UAAM,IAAI,GAAGA,KAAI,WAAW,EAAE,eAAc;AAC5C,UAAM,IAAI,GAAGA,KAAI,UAAU,EAAE,eAAc;EAC7C;;;AA5IA,cAFoB,UAEb,gBAAwC;EAC7C,IAAI;EACJ,QAAQ;EACR,UAAU;;AAkJd,SAAS,iBAAwB,OAAcD,eAA6B;AAC1E,QAAM,cAAc,EAAC,GAAGA,cAAY;AACpC,aAAW,OAAO,OAAO;AACvB,QAAI,MAAM,GAAG,MAAM,QAAW;AAC5B,kBAAY,GAAG,IAAI,MAAM,GAAG;IAC9B;EACF;AACA,SAAO;AACT;;;ACxJM,IAAgB,UAAhB,MAAgB,gBAAe,SAAqB;EAwCxD,YAAY,QAAgB,OAAkB;AAC5C,UAAM,eAAe,EAAC,GAAG,MAAK;AAG9B,SAAK,MAAM,SAAS,KAAK,QAAO,SAAS,CAAC,MAAM,WAAW;AACzD,UAAI,MAAM,gBAAgB,aAAa;AACrC,qBAAa,YAAY;MAC3B,WAAW,MAAM,gBAAgB,aAAa;AAC5C,qBAAa,YAAY;MAC3B;IACF;AAGA,WAAO,aAAa;AAEpB,UAAM,QAAQ,cAAc,QAAO,YAAY;AAvBxC;;AAEA;;AAIT;;AAmDA;qCAAyB,IAAI,YAAY,CAAC;AAhCxC,SAAK,QAAQ,aAAa,SAAS;AACnC,SAAK,YAAY,aAAa;AAG9B,SAAK,kBAAkB,OAAO,mBAAkB;EAClD;EAnCA,KAAc,OAAO,WAAW,IAAC;AAC/B,WAAO;EACT;;;;;EAuCA,MAAM,OAA2B;AAC/B,WAAO,KAAK,OAAO,aAAa,EAAC,GAAG,KAAK,OAAO,GAAG,MAAK,CAAC;EAC3D;;EASA,cAAc,YAAqB,YAAmB;AACpD,UAAM,IAAI,MAAM,iBAAiB;EACnC;;EAWU,cACR,MACA,YACA,YAAkB;AAElB,UAAME,eAAkC,YAAY,OAAO,IAAI,IAAI,KAAK,SAAS;AACjF,UAAM,kBAAkB,KAAK,IAC3B,OAAO,KAAK,aAAa,YACzB,QAAO,qBAAqB;AAE9B,QAAIA,iBAAgB,MAAM;AACxB,WAAK,YAAY,IAAI,YAAY,eAAe;IAClD,WAAW,eAAe,KAAK,eAAeA,aAAY,YAAY;AACpE,WAAK,YAAYA,aAAY,MAAM,GAAG,eAAe;IACvD,OAAO;AACL,WAAK,YAAYA,aAAY,MAAM,YAAY,aAAa,eAAe;IAC7E;EACF;;AA5GA,cADoB,SACJ,gBAAsC;EACpD,GAAG,SAAS;EACZ,OAAO;;EACP,YAAY;EACZ,YAAY;EACZ,MAAM;EACN,WAAW;EACX,kBAAkB;;;AAIpB,cAZoB,SAYb,YAAW;AAClB,cAboB,SAab,aAAY;AACnB,cAdoB,SAcb,YAAW;AAClB,cAfoB,SAeb,YAAW;;AAElB,cAjBoB,SAiBb,SAAQ;;AAEf,cAnBoB,SAmBb,UAAS;;AAEhB,cArBoB,SAqBb,WAAU;;AAEjB,cAvBoB,SAuBb,WAAU;AACjB,cAxBoB,SAwBb,YAAW;AAClB,cAzBoB,SAyBb,iBAAgB;;;AA6DvB,cAtFoB,SAsFb,yBAAwB;AAtF3B,IAAgB,SAAhB;;;ACNA,SAAU,iBAAiB,MAAwB;AACvD,QAAM,WAAW,SAAS,IAAI;AAC9B,QAAM,QAAQ,iBAAiB,QAAQ;AACvC,QAAM,aAAsB,KAAK,SAAS,MAAM;AAChD,QAAM,UAAmB,CAAC,cAAc,CAAC,KAAK,WAAW,OAAO;AAChE,QAAM,SAAkB,KAAK,WAAW,GAAG;AAC3C,SAAO;IACL,UAAU,SAAS,IAAI;IACvB,YAAY;IACZ;IACA;IACA;;AAEJ;AAEA,SAAS,iBAAiB,MAAc;AACtC,QAAM,QAAQ,WAAW,IAAI;AAE7B,SAAO;AACT;AAEA,IAAM,WAAiD;EACrD,OAAO;EACP,OAAO;EACP,QAAQ;EACR,QAAQ;EACR,QAAQ;EACR,QAAQ;EACR,SAAS;EACT,SAAS;EACT,SAAS;EACT,SAAS;EACT,QAAQ;EACR,QAAQ;;AAGV,IAAM,aAAuC;EAC3C,OAAO;EACP,OAAO;EACP,QAAQ;EACR,QAAQ;EACR,SAAS;EACT,SAAS;EACT,QAAQ;EACR,QAAQ;;;;ACrDV,IAAM,yBAAyC;AAC/C,IAAM,2BAA2C;AACjD,IAAM,2BAA2C;AACjD,IAAM,iCAAiD;AACvD,IAAM,kCAAkD;AACxD,IAAM,gCAAgD;AAEtD,IAAM,qBAAqC;AAC3C,IAAM,qBAAqC;AAC3C,IAAM,0BAA0C;AAChD,IAAM,oBAAoC;AAC1C,IAAM,oBAAoC;AAC1C,IAAM,qBAAqC;AAE3C,IAAM,qBAAqC;AAC3C,IAAM,qBAAqC;AA2BrC,SAAU,2BAA2B,QAAqB;AAC9D,QAAM,OAAO,qBAAqB,MAAM;AACxC,MAAI,CAAC,MAAM;AACT,UAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;EACxD;AACA,SAAO;AACT;AAOA,IAAM,uBAAiF;;EAErF,WAAW,CAAA;EACX,WAAW,EAAC,QAAQ,kBAAiB;EACrC,UAAU,CAAA;EACV,UAAU,CAAA;;EAGV,YAAY,CAAA;EACZ,YAAY,EAAC,QAAQ,kBAAiB;EACtC,WAAW,CAAA;EACX,WAAW,CAAA;EAEX,WAAW,CAAA;EACX,WAAW,CAAA;EACX,YAAY,EAAC,QAAQ,oBAAoB,QAAQ,2BAA0B;EAC3E,kBAAkB,EAAC,GAAG,kBAAiB;EACvC,kBAAkB,EAAC,GAAG,mBAAkB;;EAGxC,oBAAoB,EAAC,UAAU,QAAQ,gBAAgB,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,QAAQ,KAAI;EACjF,qBAAqB,EAAC,UAAU,OAAO,gBAAgB,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,QAAQ,KAAI;EACjF,qBAAqB,EAAC,UAAU,QAAQ,gBAAgB,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,QAAQ,KAAI;;EAGlF,mBAAmB,CAAA;EACnB,mBAAmB,CAAA;;EAGnB,cAAc,CAAA;EACd,mBAAmB,CAAA;EACnB,cAAc,EAAC,QAAQ,kBAAiB;EACxC,aAAa,CAAA;EACb,aAAa,CAAA;;EAGb,cAAc,CAAA;EACd,mBAAmB,CAAA;EAEnB,YAAY,CAAA;EACZ,YAAY,CAAA;EACZ,aAAa,EAAC,QAAQ,oBAAoB,QAAQ,mBAAkB;EACpE,mBAAmB,EAAC,QAAQ,kBAAiB;EAC7C,mBAAmB,EAAC,QAAQ,mBAAkB;EAE9C,WAAW,CAAA;EACX,WAAW,CAAA;EACX,YAAY,EAAC,QAAQ,oBAAoB,QAAQ,mBAAkB;;EAGnE,gBAAgB,EAAC,UAAU,OAAO,QAAQ,MAAM,QAAQ,wBAAuB;;EAC/E,iBAAiB,EAAC,UAAU,OAAO,gBAAgB,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,QAAQ,MAAM,GAAG,GAAE,QAAQ,mBAAkB;EACjH,gBAAgB,EAAC,UAAU,QAAS,gBAAgB,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,QAAQ,MAAM,GAAG,EAAC;EACvF,qBAAqB,EAAC,UAAU,QAAQ,gBAAgB,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,QAAQ,MAAM,GAAG,GAAG,MAAM,MAAK;;EAGxG,oBAAoB,EAAC,GAAG,kBAAiB;;EACzC,oBAAoB,EAAC,GAAG,kBAAiB;;;EAGzC,YAAY,CAAA;EACZ,YAAY,CAAA;EACZ,aAAa,EAAC,QAAQ,OAAO,QAAQ,mBAAkB;EACvD,cAAc,CAAA;EACd,cAAc,CAAA;EACd,eAAe,EAAC,QAAQ,oBAAoB,QAAQ,mBAAkB;EACtE,qBAAqB,EAAC,QAAQ,kBAAiB;EAC/C,qBAAqB,EAAC,QAAQ,mBAAkB;;EAGhD,oBAAoB,EAAC,QAAQ,oBAAoB,QAAQ,mBAAkB;;EAG3E,cAAc,CAAA;EACd,cAAc,CAAA;EACd,eAAe,EAAC,QAAQ,oBAAoB,QAAQ,mBAAkB;;;EAKtE,UAAU,EAAC,YAAY,WAAW,gBAAgB,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,QAAO;EACjF,gBAAgB,EAAC,YAAY,SAAU,gBAAgB,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,UAAU,SAAQ;EACxF,eAAe,EAAC,YAAY,SAAS,gBAAgB,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,UAAU,SAAQ;EACtF,gBAAgB,EAAC,YAAY,SAAS,gBAAgB,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,UAAU,UAAS;;EAExF,wBAAwB,EAAC,YAAY,iBAAiB,gBAAgB,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,QAAQ,KAAI;;EAEjG,yBAAyB,EAAC,YAAY,iBAAiB,gBAAgB,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,QAAQ,KAAI;;EAIlG,uBAAuB,EAAC,GAAG,uBAAsB;EACjD,4BAA4B,EAAC,GAAG,uBAAsB;EAEtD,kBAAkB,EAAC,GAAG,uBAAsB;EAC5C,uBAAuB,EAAC,GAAG,uBAAsB;EACjD,kBAAkB,EAAC,GAAG,uBAAsB;EAC5C,uBAAuB,EAAC,GAAG,uBAAsB;EACjD,kBAAkB,EAAC,GAAG,uBAAsB;EAC5C,uBAAuB,EAAC,GAAG,uBAAsB;EACjD,eAAe,EAAC,GAAG,uBAAsB;EACzC,eAAe,EAAC,GAAG,uBAAsB;EACzC,gBAAgB,EAAC,GAAG,uBAAsB;EAC1C,gBAAgB,EAAC,GAAG,uBAAsB;EAC1C,mBAAmB,EAAC,GAAG,uBAAsB;EAC7C,kBAAkB,EAAC,GAAG,uBAAsB;EAC5C,kBAAkB,EAAC,GAAG,uBAAsB;EAC5C,uBAAuB,EAAC,GAAG,uBAAsB;;;EAKjD,kBAAkB,EAAC,GAAG,yBAAwB;EAC9C,uBAAuB,EAAC,GAAG,yBAAwB;EACnD,oBAAoB,EAAC,GAAG,yBAAwB;EAChD,yBAAyB,EAAC,GAAG,yBAAwB;EACrD,mBAAmB,EAAC,GAAG,yBAAwB;EAC/C,wBAAwB,EAAC,GAAG,yBAAwB;EAEpD,gBAAgB,EAAC,GAAG,yBAAwB;EAC5C,gBAAgB,EAAC,GAAG,yBAAwB;EAC5C,iBAAiB,EAAC,GAAG,yBAAwB;EAC7C,iBAAiB,EAAC,GAAG,yBAAwB;;EAI7C,kBAAkB,EAAC,GAAG,yBAAwB;EAC9C,uBAAuB,EAAC,GAAG,yBAAwB;EACnD,kBAAkB,EAAC,GAAG,yBAAwB;EAC9C,uBAAuB,EAAC,GAAG,yBAAwB;EACnD,kBAAkB,EAAC,GAAG,yBAAwB;EAC9C,uBAAuB,EAAC,GAAG,yBAAwB;EACnD,kBAAkB,EAAC,GAAG,yBAAwB;EAC9C,uBAAuB,EAAC,GAAG,yBAAwB;EACnD,kBAAkB,EAAC,GAAG,yBAAwB;EAC9C,uBAAuB,EAAC,GAAG,yBAAwB;EACnD,kBAAkB,EAAC,GAAG,yBAAwB;EAC9C,uBAAuB,EAAC,GAAG,yBAAwB;EACnD,kBAAkB,EAAC,GAAG,yBAAwB;EAC9C,uBAAuB,EAAC,GAAG,yBAAwB;EACnD,kBAAkB,EAAC,GAAG,yBAAwB;EAC9C,uBAAuB,EAAC,GAAG,yBAAwB;EACnD,mBAAmB,EAAC,GAAG,yBAAwB;EAC/C,wBAAwB,EAAC,GAAG,yBAAwB;EACpD,mBAAmB,EAAC,GAAG,yBAAwB;EAC/C,wBAAwB,EAAC,GAAG,yBAAwB;EACpD,mBAAmB,EAAC,GAAG,yBAAwB;EAC/C,wBAAwB,EAAC,GAAG,yBAAwB;EACpD,oBAAoB,EAAC,GAAG,yBAAwB;EAChD,yBAAyB,EAAC,GAAG,yBAAwB;EACrD,oBAAoB,EAAC,GAAG,yBAAwB;EAChD,yBAAyB,EAAC,GAAG,yBAAwB;EACrD,oBAAoB,EAAC,GAAG,yBAAwB;EAChD,yBAAyB,EAAC,GAAG,yBAAwB;;EAIrD,yBAAyB,EAAC,GAAG,gCAA+B;EAC5D,0BAA0B,EAAC,GAAG,gCAA+B;EAC7D,yBAAyB,EAAC,GAAG,gCAA+B;EAC5D,0BAA0B,EAAC,GAAG,gCAA+B;;EAI7D,wBAAwB,EAAC,GAAG,+BAA8B;;EAI1D,uBAAuB,EAAC,GAAG,8BAA6B;EACxD,wBAAwB,EAAC,GAAG,8BAA6B;EACzD,yBAAyB,EAAC,GAAG,8BAA6B;;;;AChO5D,IAAM,qCAAqC;EACzC;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAQ;EAAO;EAAO;EAAQ;;AAGzF,IAAM,mBAAmB;AAKnB,SAAU,0BACd,QAAqB;AAErB,SAAO,mCAAmC,KAAK,YAAW,OAAkB,WAAW,MAAM,CAAC;AAChG;AAKM,SAAU,oBAAoB,QAAqB;AACvD,MAAI,aAAgC,8BAA8B,MAAM;AAExE,MAAI,0BAA0B,MAAM,GAAG;AACrC,eAAW,WAAW;AACtB,eAAW,aAAa;AACxB,eAAW,gBAAgB;AAC3B,eAAW,OAAO;AAClB,eAAW,aAAa;AAExB,UAAM,YAAY,8BAA8B,MAAM;AACtD,QAAI,WAAW;AACb,iBAAW,aAAa,UAAU;AAClC,iBAAW,cAAc,UAAU;IACrC;EACF;AAGA,QAAMC,WAAU,iBAAiB,KAAK,MAAgB;AACtD,MAAIA,UAAS;AACX,UAAM,CAAC,EAAE,UAAUC,SAAQ,MAAM,MAAM,MAAM,IAAID;AACjD,UAAM,WAAW,GAAG,IAAI,GAAGC,OAAM;AACjC,UAAM,cAAc,iBAAiB,QAAQ;AAC7C,UAAM,OAAO,YAAY,aAAa;AACtC,UAAM,aAAa,SAAS;AAC5B,UAAM,iBAAmD;MACvD;MACA,cAAc,IAAI,OAAO;MACzB,cAAc,IAAI,OAAO;MACzB,cAAc,IAAI,OAAO;;AAG3B,iBAAa;MACX;MACA,YAAY,WAAW;MACvB,UAAU,YAAY;MACtB;MACA;MACA,SAAS,YAAY;MACrB,QAAQ,YAAY;MACpB,YAAY,YAAY;MACxB;MACA,eAAe,YAAY,aAAa,SAAS;MACjD,QAAQ,WAAW;MACnB,MAAM,WAAW;;AAGnB,QAAI,WAAW,UAAU;AACvB,iBAAW,QAAQ;IACrB;AAEA,QAAI,SAAS,SAAS;AACpB,iBAAW,OAAO;IACpB;EACF;AAEA,MAAI,OAAO,SAAS,QAAQ,GAAG;AAC7B,eAAW,QAAQ;EACrB;AACA,MAAI,OAAO,SAAS,OAAO,GAAG;AAC5B,eAAW,OAAO;EACpB;AAEA,SAAO;AACT;AAGA,SAAS,8BAA8B,QAAqB;AAjG5D,MAAAC;AAkGE,QAAM,OAAO,2BAA2B,MAAM;AAE9C,QAAM,gBAAgB,KAAK,iBAAiB;AAC5C,QAAM,iBAAiB,KAAK,kBAAkB,CAAC,GAAG,GAAG,GAAG,CAAC;AACzD,SAAO,KAAK;AACZ,SAAO,KAAK;AACZ,SAAO,KAAK;AACZ,SAAO,KAAK;AACZ,SAAO,KAAK;AACZ,SAAO,KAAK;AACZ,SAAO,KAAK;AAEZ,QAAM,aAAgC;IACpC,GAAG;IACH;IACA,YAAY,KAAK,cAAc;IAC/B,UAAU,KAAK,YAAY;IAC3B,YAAa,KAAK,gBAAcA,MAAA,KAAK,aAAL,gBAAAA,IAAe,WAAU;IACzD;IACA;IACA,UAAU,KAAK,YAAY;IAC3B,MAAM,KAAK,QAAQ;IACnB,QAAQ,KAAK,UAAU;IACvB,OAAO,KAAK,SAAS;IACrB,SAAS,KAAK,WAAW;IACzB,QAAQ,KAAK,UAAU;IACvB,YAAY,KAAK,cAAc;IAC/B,YAAY,KAAK,cAAc;;AAGjC,SAAO;AACT;AAGA,SAAS,8BACP,QAA+B;AAE/B,QAAM,QAAQ;AACd,QAAMF,WAAU,MAAM,KAAK,MAAgB;AAC3C,MAAIA,UAAS;AACX,UAAM,CAAC,EAAE,YAAY,WAAW,IAAIA;AACpC,WAAO,EAAC,YAAY,OAAO,UAAU,GAAG,aAAa,OAAO,WAAW,EAAC;EAC1E;AACA,SAAO;AACT;;;AClHM,SAAU,6BAA6B,QAAqB;AAChE,QAAM,OAAO,2BAA2B,MAAM;AAE9C,QAAM,qBAA0D;IAC9D;IACA,QAAQ,KAAK,KAAK;IAClB,QAAQ,KAAK,UAAU;IACvB,QAAQ,KAAK,UAAU;IACvB,OAAO,KAAK,SAAS;IACrB,OAAO,KAAK,SAAS;;AAGvB,QAAM,aAAa,oBAAoB,MAAM;AAC7C,QAAM,iBAAiB,OAAO,WAAW,OAAO,KAAK,OAAO,WAAW,SAAS;AAChF,QAAM,WAAW,yCAAY;AAC7B,QAAM,YAAY,yCAAY;AAC9B,QAAM,kBAAkB,yCAAY;AAGpC,qBAAmB,WAAnB,mBAAmB,SAAW,CAAC;AAE/B,qBAAmB,WAAnB,mBAAmB,SAAW,CAAC,kBAAkB,CAAC,YAAY,CAAC,aAAa,CAAC;AAE7E,SAAO;AACT;;;ACSM,IAAgB,eAAhB,MAA4B;;AAwD5B,IAAO,iBAAP,MAAqB;EAIzB,YACE,WAA4B,CAAA,GAC5B,kBAAyD;AALjD;AACA;AAMR,SAAK,WAAW,IAAI,IAAmB,QAAQ;AAC/C,SAAK,mBAAmB,oBAAoB,CAAA;EAC9C;EAEA,EAAE,OAAO,QAAQ,IAAC;AAChB,WAAO,KAAK;EACd;EAEA,IAAI,SAAsB;AArI5B,QAAAG;AAsII,WAAO,GAACA,MAAA,KAAK,qBAAL,gBAAAA,IAAwB,aAAY,KAAK,SAAS,IAAI,OAAO;EACvE;;AA4JI,IAAgB,UAAhB,MAAgB,QAAM;EAuC1B,YAAY,OAAkB;AAMrB;;AAIA;;AAET;oCAAqC,CAAA;AAE5B;wCAA6B;AAEtC;qCAAoB;AAGpB;mCAAmB;AAEnB;qCAAsC,CAAA;AApBpC,SAAK,QAAQ,EAAC,GAAG,QAAO,cAAc,GAAG,MAAK;AAC9C,SAAK,KAAK,KAAK,MAAM,MAAM,IAAI,KAAK,OAAO,WAAW,EAAE,YAAW,CAAE;EACvE;EAPA,KAAK,OAAO,WAAW,IAAC;AACtB,WAAO;EACT;;EAqCA,6BAA6B,QAAqB;AAChD,UAAM,sBAAsB,6BAA6B,MAAM;AAG/D,UAAM,eAAe,CAAC,sBACnB,OAAO,qBAAqB,WACzB,KAAK,SAAS,IAAI,gBAAgB,IAClC,qBAAqB;AAE3B,UAAM,YAAY,aAAa,oBAAoB,MAAM;AAEzD,UAAM,qBAAsD;MAC1D;MACA,QAAQ;MACR,QAAQ,aAAa,aAAa,oBAAoB,MAAM;MAC5D,QAAQ,aAAa,aAAa,oBAAoB,MAAM;MAC5D,OAAO,aAAa,aAAa,oBAAoB,KAAK;MAC1D,OAAO,aAAa,aAAa,oBAAoB,KAAK;;AAG5D,WAAO,KAAK,4CAA4C,kBAAkB;EAC5E;;EAGA,yBACE,QACA,cAAgD;AAEhD,WAAO,KAAK,6BAA6B,MAAM,EAAE;EACnD;;EAGA,0BAA0B,QAAqB;AAC7C,WAAO,KAAK,6BAA6B,MAAM,EAAE;EACnD;;EAGA,0BAA0B,QAAqB;AAC7C,WAAO,KAAK,6BAA6B,MAAM,EAAE;EACnD;;EAGA,0BAA0B,QAAqB;AAC7C,WAAO,0BAA0B,MAAM;EACzC;;;;;;EAeA,aAAU;AACR,WAAO;EACT;;EAGA,YAAY,OAAY;AACtB,SAAK,MAAM,QAAQ,KAAK;EAC1B;;EAQA,0BAAuB;AACrB,QAAI,CAAC,KAAK,eAAe;AACvB,YAAM,IAAI,MAAM,oEAAoE;IACtF;AACA,WAAO,KAAK;EACd;EAgDA,qBAAqB,QAA6B,CAAA,GAAE;AAClD,UAAM,IAAI,MAAM,iBAAiB;EACnC;;EAGA,qBAAkB;AAChB,WAAO,KAAK;EACd;;;EAKA,QAAQ,OAAY;AAClB,SAAK,MAAM,QAAQ,KAAK;EAC1B;;;EAKA,mBAAgB;AACd,WAAO,KAAK,wBAAuB;EACrC;;;;EAMA,uBACEC,SACA,SAUC;AAED,UAAM,IAAI,MAAM,iBAAiB;EACnC;;EAGA,wBACEA,SACA,SAUC;AAED,UAAM,IAAI,MAAM,iBAAiB;EACnC;;EAGA,mBAAmB,YAAe;AAChC,UAAM,IAAI,MAAM,iBAAiB;EACnC;;EAGA,mBAAmB,YAAe;AAChC,UAAM,IAAI,MAAM,iBAAiB;EACnC;;EAGA,oBAAoB,YAAiB,MAAS;AAC5C,UAAM,IAAI,MAAM,iBAAiB;EACnC;;EAGA,WAAW,SAA8E;AACvF,UAAM,IAAI,MAAM,iBAAiB;EACnC;;EAGA,aAAU;AACR,UAAM,IAAI,MAAM,iBAAiB;EACnC;;;EAKA,OAAO,uBAAuB,OAAkB;AAC9C,WAAO,MAAM,wBAAwB,OAAO,CAAA,IAAK,MAAM;EACzD;;EAWU,sBAAsB,OAAkD;AAChF,QAAI,iBAAiB,eAAe,YAAY,OAAO,KAAK,GAAG;AAC7D,cAAQ,EAAC,MAAM,MAAK;IACtB;AAKA,UAAM,WAAW,EAAC,GAAG,MAAK;AAE1B,SAAK,MAAM,SAAS,KAAK,OAAO,SAAS,CAAC,MAAM,WAAW;AACzD,UAAI,MAAM,gBAAgB,aAAa;AACrC,iBAAS,YAAY;MACvB,WAAW,MAAM,gBAAgB,aAAa;AAC5C,iBAAS,YAAY;MACvB,OAAO;AACL,QAAAC,KAAI,KAAK,gDAAgD,EAAC;MAC5D;IACF;AACA,WAAO;EACT;;AAnUA,cADoB,SACb,gBAAsC;EAC3C,IAAI;EACJ,iBAAiB;EACjB,8BAA8B;EAC9B,qBAAqB;;EAGrB,SAAS,CAAC,UAAiBA,KAAI,MAAM,MAAM,OAAO,EAAC;;EAGnD,eAAe;EACf,mBAAmB;EACnB,uBAAuB;;EAEvB,qBAAqB;EACrB,mBAAmB;IACjB,kCAAkC;;EAEpC,mBAAmB,CAAA;;EAGnB,OAAO,CAAA;EAEP,OAAOA,KAAI,IAAI,OAAO,KAAK;EAC3B,cAAcA,KAAI,IAAI,eAAe,KAAK;EAC1C,mBAAmB,QAAQA,KAAI,IAAI,oBAAoB,CAAC;EACxD,YAAY,QAAQA,KAAI,IAAI,aAAa,CAAC;EAC1C,gBAAgB;;EAChB,mBAAmB;;EAGnB,SAAS;;AAhCP,IAAgB,SAAhB;;;ACvRN,IAAM,SAAkBC,WAAS,KAAM,OAAO,aAAa;AAC3D,IAAM,eAA8B,MAAM,UAAU,SAAS,eAAe;AAO5E,IAAM,kBAAkB;AAExB,IAAM,gBACJ;AA0BI,IAAO,QAAP,MAAO,MAAI;EAyCf,cAAA;AArBS;iCAAsB;AAStB;;;;;;;+BAAWC;AAGX;;;;;;MAGP,OAAoC,UAAe;;AAErD;AAEU,iDAAwB,oBAAI,IAAG;AAGvC,QAAI,WAAW,MAAM;AACnB,UAAI,WAAW,KAAK,YAAY,KAAK,SAAS;AAC5C,QAAAA,KAAI,MAAM,iBAAiB,WAAW,KAAK,OAAO,sBAAsB,KAAK,OAAO,EAAE,EAAC;AACvF,QAAAA,KAAI,MAAM,uEAAuE,EAAC;AAClF,cAAM,IAAI,MAAM,uDAAuD;MACzE;AAEA,MAAAA,KAAI,MAAM,sDAAsD,EAAC;IACnE;AAEA,IAAAA,KAAI,IAAI,GAAG,GAAG,KAAK,OAAO,MAAM,eAAe,EAAE,EAAC;AAElD,eAAW,OAAO;EACpB;EAEA,iBAAiB,UAAmB;AAClC,eAAW,eAAe,UAAU;AAClC,WAAK,sBAAsB,IAAI,YAAY,MAAM,WAAW;IAC9D;EACF;;EAGA,qBAAqB,WAAsB,CAAA,GAAE;AAC3C,UAAM,aAAa,KAAK,cAAc,QAAQ;AAC9C,WAAO,MAAM,KAAK,UAAU,EACzB,IAAI,CAAC,CAAC,EAAE,OAAO,MAAM,OAAO,EAC5B,OAAO,aAAQ;AArHtB,UAAAC;AAqHyB,cAAAA,MAAA,QAAQ,gBAAR,gBAAAA,IAAA;KAAuB,EACzC,IAAI,aAAW,QAAQ,IAAI;EAChC;;EAGA,wBAAwB,WAAsB,CAAA,GAAE;AA1HlD,QAAAA,KAAA;AA2HI,UAAM,aAAa,KAAK,cAAc,QAAQ;AAC9C,SAAI,MAAAA,MAAA,WAAW,IAAI,QAAQ,MAAvB,gBAAAA,IAA0B,gBAA1B,wBAAAA,MAA2C;AAC7C,aAAO;IACT;AACA,SAAI,sBAAW,IAAI,OAAO,MAAtB,mBAAyB,gBAAzB,6BAA0C;AAC5C,aAAO;IACT;AACA,WAAO;EACT;EAEA,sBAAsB,OAAwB;AAC5C,WAAO,OAAO,MAAK,cAAc,KAAK;EACxC;;EAGA,MAAM,aAAa,QAA2B,CAAA,GAAE;AA1IlD,QAAAA;AA2II,YAAQ,EAAC,GAAG,MAAK,cAAc,GAAG,MAAK;AAEvC,QAAI,MAAM,iBAAiB;AAEzB,YAAM,MAAK;IACb;AAEA,UAAM,aAAa,KAAK,cAAc,MAAM,QAAQ;AAEpD,QAAI,OAAe,MAAM,QAAQ;AACjC,QAAI,SAAS,kBAAkB;AAC7B,aAAO,KAAK,wBAAwB,MAAM,QAAQ,KAAK;IACzD;AAEA,UAAM,WAAW,KAAK,cAAc,MAAM,QAAQ,KAAK;AAEvD,UAAM,UAAU,SAAS,IAAI,IAAI;AACjC,UAAM,SAAS,QAAMA,MAAA,mCAAS,WAAT,gBAAAA,IAAA,cAAkB;AACvC,QAAI,QAAQ;AACV,aAAO;IACT;AAEA,UAAM,IAAI,MAAM,aAAa;EAC/B;;EAGA,MAAM,aAAa,OAAwB;AArK7C,QAAAA;AAsKI,UAAM,WAAW,KAAK,cAAc,MAAM,QAAQ;AAGlD,QAAI,OAAO;AACX,QAAI,MAAM,kBAAkB,wBAAwB;AAClD,aAAO;IACT;AAEA,QAAI,MAAM,qBAAqB;AAC7B,YAAM,MAAK;IACb;AAWA,QAAI,MAAM,WAAW,MAAM;AACzB,aAAO;IACT;AAEA,UAAM,UAAU,SAAS,IAAI,IAAI;AACjC,UAAM,SAAS,QAAMA,MAAA,mCAAS,WAAT,gBAAAA,IAAA,cAAkB;AACvC,QAAI,QAAQ;AACV,aAAO;IACT;AAEA,UAAM,IAAI,MAAM,aAAa;EAC/B;;;;;EAMA,cAAc,UAAmB,MAAM,WAAsB,CAAA,GAAE;AA5MjE,QAAAA;AA6MI,UAAM,aAAa,KAAK,cAAc,QAAQ;AAC9C,UAAMC,iBAAgB,WAAW,IAAI,OAAO;AAC5C,QAAI,CAACA,gBAAe;AAClB,MAAAF,KAAI,KAAK,wCAAwC,EAAC;IACpD;AACC,KAAAC,MAAAC,kBAAA,gBAAAA,eAAuB,kBAAvB,gBAAAD,IAAA,KAAAC,gBAAuC;EAC1C;;EAGU,cAAc,WAAsB,CAAA,GAAE;AAC9C,UAAMC,OAAM,IAAI,IAAI,KAAK,qBAAqB;AAC9C,eAAW,WAAW,UAAU;AAC9B,MAAAA,KAAI,IAAI,QAAQ,MAAM,OAAO;IAC/B;AACA,WAAOA;EACT;;;EAKA,gBAAgB,eAAoB;AAClC,IAAAH,KAAI,KAAK,2EAA2E;AACpF,eAAW,eAAe,eAAe;AACvC,YAAM,UAAU,YAAY;AAC5B,UAAI,SAAS;AACX,aAAK,sBAAsB,IAAI,QAAQ,MAAM,OAAO;MACtD;IACF;EACF;;AAvLA,cADW,OACJ,gBAA4C;EACjD,GAAG,OAAO;EACV,MAAM;EACN,UAAU;EACV,iBAAiB;;;;;;;;;AAUnB,cAfW,OAeJ,cAA4B,mBAAkB,EAAG,KAAK,MAAK;AAChE,EAAAA,KAAI,MAAM,GAAG,eAAe,EAAC;AAC/B,CAAC;AAjBG,IAAO,OAAP;AAgMC,IAAM,OAAO,IAAI,KAAI;AAK5B,SAAS,qBAAkB;AACzB,MAAI,aAAY,KAAM,OAAO,WAAW,aAAa;AACnD,WAAO,QAAQ,QAAO;EACxB;AACA,SAAO,IAAI,QAAQ,CAAAI,aAAU;AAC3B,WAAO,iBAAiB,QAAQ,MAAMA,SAAO,CAAE;EACjD,CAAC;AACH;;;ACpPM,IAAgB,UAAhB,MAAuB;;;;AC+BvB,IAAgB,iBAAhB,MAAgB,eAAa;EAwCjC,YAAY,OAA0B;AA1B7B;AACA;AACA;AACA;AACA;AACA;AAOT,iCAAgB;AAChB,kCAAiB;AAER;AAGA;2CAAkB,EAAC,aAAa,GAAG,cAAc,GAAG,kBAAkB,EAAC;AAS9E,SAAK,QAAQ,EAAC,GAAG,eAAc,cAAc,GAAG,MAAK;AACrD,YAAQ,KAAK;AAEb,QAAI,CAACC,WAAS,GAAI;AAChB,WAAK,KAAK;AACV,WAAK,OAAO;AACZ,WAAK,QAAQ,KAAK,MAAM;AACxB,WAAK,SAAS,KAAK,MAAM;AAEzB,WAAK,SAAS;AACd;IACF;AAEA,QAAI,CAAC,MAAM,QAAQ;AACjB,YAAMC,UAAS,aAAa,KAAK;AACjC,YAAM,YAAY,cAAa,+BAAO,cAAa,IAAI;AACvD,gBAAU,aAAaA,SAAQ,UAAU,UAAU;AAEnD,WAAK,SAASA;AAEd,UAAI,EAAC,+BAAO,UAAS;AACnB,aAAK,OAAO,MAAM,aAAa;MACjC;IACF,WAAW,OAAO,MAAM,WAAW,UAAU;AAC3C,WAAK,SAAS,iBAAiB,MAAM,MAAM;IAC7C,OAAO;AACL,WAAK,SAAS,MAAM;IACtB;AAEA,QAAI,KAAK,kBAAkB,mBAAmB;AAC5C,WAAK,KAAK,KAAK,OAAO;AACtB,WAAK,OAAO;AACZ,WAAK,aAAa,KAAK;IACzB,OAAO;AACL,WAAK,KAAK;AACV,WAAK,OAAO;AACZ,WAAK,kBAAkB,KAAK;IAC9B;AAGA,QAAI,KAAK,kBAAkB,qBAAqB,MAAM,YAAY;AAChE,WAAK,iBAAiB,IAAI,eAAe,aAAU;AACjD,mBAAW,SAAS,SAAS;AAC3B,cAAI,MAAM,WAAW,KAAK,QAAQ;AAChC,iBAAK,OAAM;UACb;QACF;MACF,CAAC;AACD,WAAK,eAAe,QAAQ,KAAK,MAAM;IACzC;EACF;EAvDA,WAAQ;AACN,WAAO,GAAG,KAAK,OAAO,WAAW,CAAC,IAAI,KAAK,EAAE;EAC/C;;;;;EA8DA,oBAAoB,iBAAkC;AACpD,QAAI,OAAO,oBAAoB,eAAe,KAAK,kBAAkB,iBAAiB;AACpF,aAAO;IACT;AAEA,sBAAkB,oBAAoB,SAAY,KAAK,MAAM,kBAAkB;AAE/E,QAAI,CAAC,mBAAoB,mBAA8B,GAAG;AACxD,aAAO;IACT;AAGA,QAAI,oBAAoB,MAAM;AAC5B,YAAM,MAAM,OAAO,WAAW,eAAe,OAAO;AACpD,aAAO,OAAO;IAChB;AAEA,WAAO;EACT;;;;;;;EAQA,eAAY;AACV,YAAQ,KAAK,MAAM;MACjB,KAAK;AACH,eAAO,CAAC,KAAK,OAAO,KAAK,MAAM;MACjC,KAAK;AACH,eAAO,CAAC,KAAK,OAAO,OAAO,KAAK,OAAO,MAAM;MAC/C,KAAK;AACH,cAAM,MAAM,KAAK,oBAAmB;AACpC,cAAMA,UAAS,KAAK;AAEpB,eAAOA,QAAO,gBACV,CAACA,QAAO,cAAc,KAAKA,QAAO,eAAe,GAAG,IACpD,CAAC,KAAK,OAAO,OAAO,KAAK,OAAO,MAAM;MAC5C;AACE,cAAM,IAAI,MAAM,KAAK,IAAI;IAC7B;EACF;EAEA,YAAS;AACP,UAAM,CAAC,OAAO,MAAM,IAAI,KAAK,aAAY;AACzC,WAAO,QAAQ;EACjB;;;;EAKA,mBAAgB;AAhMlB,QAAAC;AAiMI,QAAI;AAGF,YAAM,CAAC,kBAAkB,IAAI,KAAK,qBAAoB;AAEtD,YAAM,cAAc,KAAK,gBAAgB,iBAAeA,MAAA,KAAK,eAAL,gBAAAA,IAAiB;AACzE,aAAO,cAAc,qBAAqB,cAAc;IAC1D,QAAQ;AACN,aAAO;IACT;EACF;;;;EAKA,kBACE,UACA,UAAmB,MAAI;AAOvB,UAAM,QAAQ,KAAK,iBAAgB;AACnC,UAAM,CAAC,OAAO,MAAM,IAAI,KAAK,qBAAoB;AACjD,WAAO,YAAY,UAAU,OAAO,OAAO,QAAQ,OAAO;EAC5D;;;;;EAMA,oBACE,kBACA,UAA6C,CAAA,GAAE;AAE/C,QAAI,CAAC,KAAK,YAAY;AACpB;IACF;AAGA,QAAI,cAAc,WAAW,UAAU,QAAQ,QAAQ,KAAK,WAAW;AACvE,QAAI,eAAe,YAAY,UAAU,QAAQ,SAAS,KAAK,WAAW;AAE1E,QAAI,CAAC,eAAe,CAAC,cAAc;AACjC,MAAAC,KAAI,IAAI,GAAG,sCAAsC,EAAC;AAElD,yBAAmB;AACnB,oBAAc,KAAK,WAAW,SAAS;AACvC,qBAAe,KAAK,WAAW,UAAU;IAC3C;AAEA,UAAM,aAAa,KAAK;AAExB,QACE,WAAW,gBAAgB,eAC3B,WAAW,iBAAiB,gBAC5B,WAAW,qBAAqB,kBAChC;AACA,UAAI,oBAAoB;AAExB,YAAM,cAAc,KAAK,MAAM,cAAc,iBAAiB;AAC9D,YAAM,eAAe,KAAK,MAAM,eAAe,iBAAiB;AAChE,WAAK,WAAW,QAAQ;AACxB,WAAK,WAAW,SAAS;AAGzB,YAAM,KAAK,KAAK,OAAO;AACvB,UAAI,IAAI;AAIN,cAAM,CAAC,oBAAoB,mBAAmB,IAAI,KAAK,qBAAoB;AAE3E,YAAI,uBAAuB,eAAe,wBAAwB,cAAc;AAC9E,8BAAoB,KAAK,IACvB,qBAAqB,aACrB,sBAAsB,YAAY;AAGpC,eAAK,WAAW,QAAQ,KAAK,MAAM,cAAc,iBAAiB;AAClE,eAAK,WAAW,SAAS,KAAK,MAAM,eAAe,iBAAiB;AAEpE,UAAAA,KAAI,KAAK,4BAA4B,EAAC;QACxC;AAEA,aAAK,gBAAgB,cAAc;AACnC,aAAK,gBAAgB,eAAe;AACpC,aAAK,gBAAgB,mBAAmB;MAC1C;IACF;EACF;;;EAKA,uBAAoB;AAElB,UAAM,KAAK,KAAK,OAAO;AACvB,QAAI,CAAC,IAAI;AAEP,aAAO,KAAK,aAAY;IAC1B;AACA,WAAO,CAAC,GAAG,oBAAoB,GAAG,mBAAmB;EACvD;;;;;EAeU,wBAAwB,IAAU;AAzT9C,QAAAD;AA0TI,UAAIA,MAAA,KAAK,eAAL,gBAAAA,IAAiB,QAAO,8BAA8B;AACxD,WAAK,WAAW,KAAK;IACvB;EACF;;AApRA,cADoB,gBACb,gBAA6C;EAClD,QAAQ;EACR,OAAO;;EACP,QAAQ;EACR,iBAAiB;EACjB,YAAY;EACZ,WAAW;EACX,SAAS;EACT,WAAW;EACX,YAAY;;AAVV,IAAgB,gBAAhB;AA0RN,SAAS,aAAa,WAAsC;AAC1D,MAAI,OAAO,cAAc,UAAU;AACjC,UAAM,UAAU,SAAS,eAAe,SAAS;AACjD,QAAI,CAAC,SAAS;AACZ,YAAM,IAAI,MAAM,GAAG,SAAS,yBAAyB;IACvD;AACA,WAAO;EACT,WAAW,WAAW;AACpB,WAAO;EACT;AACA,SAAO,SAAS;AAClB;AAGA,SAAS,iBAAiB,UAAgB;AACxC,QAAMD,UAAS,SAAS,eAAe,QAAQ;AAC/C,MAAI,EAAEA,mBAAkB,oBAAoB;AAC1C,UAAM,IAAI,MAAM,gCAAgC;EAClD;AACA,SAAOA;AACT;AAGA,SAAS,aAAa,OAAyB;AAC7C,QAAM,EAAC,OAAO,OAAM,IAAI;AACxB,QAAM,eAAe,SAAS,cAAc,QAAQ;AACpD,eAAa,KAAK,IAAI,4BAA4B;AAClD,eAAa,QAAQ,SAAS;AAC9B,eAAa,SAAS,UAAU;AAChC,eAAa,MAAM,QAAQ,OAAO,SAAS,KAAK,IAAI,GAAG,KAAK,OAAO;AACnE,eAAa,MAAM,SAAS,OAAO,SAAS,MAAM,IAAI,GAAG,MAAM,OAAO;AACtE,SAAO;AACT;AAWA,SAAS,YACP,OACA,OACA,OACA,QACA,SAAgB;AAOhB,QAAM,QAAQ;AAEd,QAAMG,KAAI,OAAO,MAAM,CAAC,GAAG,OAAO,KAAK;AACvC,MAAIC,KAAI,OAAO,MAAM,CAAC,GAAG,OAAO,QAAQ,OAAO;AAI/C,MAAIC,KAAI,OAAO,MAAM,CAAC,IAAI,GAAG,OAAO,KAAK;AAEzC,QAAM,QAAQA,OAAM,QAAQ,IAAIA,KAAIA,KAAI;AAExC,EAAAA,KAAI,OAAO,MAAM,CAAC,IAAI,GAAG,OAAO,QAAQ,OAAO;AAC/C,MAAI;AACJ,MAAI,SAAS;AAEX,IAAAA,KAAIA,OAAM,IAAIA,KAAIA,KAAI;AAEtB,YAAQD;AACR,IAAAA,KAAIC;EACN,OAAO;AAEL,YAAQA,OAAM,SAAS,IAAIA,KAAIA,KAAI;EAErC;AACA,SAAO;IACL,GAAAF;IACA,GAAAC;;IAEA,OAAO,KAAK,IAAI,QAAQD,KAAI,GAAG,CAAC;IAChC,QAAQ,KAAK,IAAI,QAAQC,KAAI,GAAG,CAAC;;AAErC;AAEA,SAAS,OAAOD,IAAW,OAAe,OAAa;AAErD,QAAMG,KAAI,KAAK,IAAI,KAAK,MAAMH,KAAI,KAAK,GAAG,QAAQ,CAAC;AACnD,SAAOG;AACT;AAEA,SAAS,OAAOF,IAAW,OAAe,QAAgB,SAAgB;AAExE,SAAO,UACH,KAAK,IAAI,GAAG,SAAS,IAAI,KAAK,MAAMA,KAAI,KAAK,CAAC,IAC9C,KAAK,IAAI,KAAK,MAAMA,KAAI,KAAK,GAAG,SAAS,CAAC;AAChD;;;AC/PM,IAAgB,WAAhB,MAAgB,iBAAgB,SAAsB;;EAyD1D,YAAY,QAAgB,OAAmB;AAC7C,YAAQ,SAAQ,eAAe,QAAQ,KAAK;AAC5C,UAAM,QAAQ,OAAO,SAAQ,YAAY;AAvBlC;;AAEA;;AAET;;AAEA;;AAEA;;AAEA;;AAQA;;AAME,SAAK,YAAY,KAAK,MAAM;AAC5B,SAAK,SAAS,KAAK,MAAM;AAGzB,SAAK,QAAQ,KAAK,MAAM;AACxB,SAAK,SAAS,KAAK,MAAM;AACzB,SAAK,QAAQ,KAAK,MAAM;AAGxB,QAAI,KAAK,MAAM,UAAU,UAAa,KAAK,MAAM,WAAW,QAAW;AAErE,YAAM,OAAO,SAAQ,mBAAmB,KAAK,MAAM,IAAI;AACvD,WAAK,SAAQ,6BAAM,UAAS;AAC5B,WAAK,UAAS,6BAAM,WAAU;IAChC;AAKA,QAAI,KAAK,MAAM,WAAW,KAAK,MAAM,cAAc,QAAW;AAC5D,WAAK,MAAM,YAAY;IACzB;AAIA,SAAK,YACH,KAAK,MAAM,cAAc,YACrB,SAAQ,iBAAiB,KAAK,OAAO,KAAK,MAAM,IAChD,KAAK,MAAM,aAAa;AAG9B,SAAK,kBAAkB,OAAO,mBAAkB;EAClD;EAjEA,KAAc,OAAO,WAAW,IAAC;AAC/B,WAAO;EACT;EAES,WAAQ;AACf,WAAO,WAAW,KAAK,EAAE,IAAI,KAAK,MAAM,IAAI,KAAK,KAAK,IAAI,KAAK,MAAM;EACvE;;;;;;EA2EA,MAAM,MAAsC;AAC1C,WAAO,KAAK,OAAO,cAAc,EAAC,GAAG,KAAK,OAAO,GAAG,KAAI,CAAC;EAC3D;;EAGA,OAAO,gBAAgB,MAAa;AAClC,WACG,OAAO,cAAc,eAAe,gBAAgB,aACpD,OAAO,gBAAgB,eAAe,gBAAgB,eACtD,OAAO,qBAAqB,eAAe,gBAAgB,oBAC3D,OAAO,qBAAqB,eAAe,gBAAgB,oBAC3D,OAAO,eAAe,eAAe,gBAAgB,cACrD,OAAO,sBAAsB,eAAe,gBAAgB,qBAC5D,OAAO,oBAAoB,eAAe,gBAAgB;EAE/D;;EAGA,OAAO,qBAAqB,MAAmB;AAC7C,QACG,OAAO,cAAc,eAAe,gBAAgB,aACpD,OAAO,gBAAgB,eAAe,gBAAgB,eACtD,OAAO,sBAAsB,eAAe,gBAAgB,qBAC5D,OAAO,oBAAoB,eAAe,gBAAgB,iBAC3D;AACA,aAAO,EAAC,OAAO,KAAK,OAAO,QAAQ,KAAK,OAAM;IAChD;AACA,QAAI,OAAO,qBAAqB,eAAe,gBAAgB,kBAAkB;AAC/E,aAAO,EAAC,OAAO,KAAK,cAAc,QAAQ,KAAK,cAAa;IAC9D;AACA,QAAI,OAAO,qBAAqB,eAAe,gBAAgB,kBAAkB;AAC/E,aAAO,EAAC,OAAO,KAAK,YAAY,QAAQ,KAAK,YAAW;IAC1D;AACA,QAAI,OAAO,eAAe,eAAe,gBAAgB,YAAY;AAEnE,aAAO,EAAC,OAAO,KAAK,cAAc,QAAQ,KAAK,cAAa;IAC9D;AACA,UAAM,IAAI,MAAM,oBAAoB;EACtC;;EAGA,OAAO,mBAAmB,MAAiB;AACzC,UAAM,aAAc,6BAA2B;AAC/C,WAAO,YAAY,OAAO,UAAU;EACtC;;EAGA,OAAO,mBACL,MAA0F;AAE1F,QAAI,CAAC,MAAM;AACT,aAAO;IACT;AACA,QAAI,YAAY,OAAO,IAAI,GAAG;AAC5B,aAAO;IACT;AAEA,QAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,aAAO,SAAQ,mBAAmB,KAAK,CAAC,CAAC;IAC3C;AACA,QAAI,SAAQ,gBAAgB,IAAI,GAAG;AACjC,aAAO,SAAQ,qBAAqB,IAAI;IAC1C;AACA,QAAI,QAAQ,OAAO,SAAS,YAAY,KAAK,gBAAgB,QAAQ;AACnE,YAAM,mBAAmB,OAAO,OAAO,IAAI;AAC3C,YAAM,cAAc,iBAAiB,CAAC;AACtC,aAAO,EAAC,OAAO,YAAY,OAAO,QAAQ,YAAY,OAAM;IAC9D;AACA,UAAM,IAAI,MAAM,+BAA+B;EACjD;;;;;;;EAQA,OAAO,qBACL,MACA,SAAuD;AAEvD,QAAI;AACJ,QAAI,YAAY,OAAO,IAAI,GAAG;AAC5B,iBAAW;QACT;;UAEE;UACA,OAAO,QAAQ;UACf,QAAQ,QAAQ;;;;IAItB,WAAW,CAAC,MAAM,QAAQ,IAAI,GAAG;AAC/B,iBAAW,CAAC,IAAI;IAClB,OAAO;AACL,iBAAW;IACb;AACA,WAAO;EACT;;EAGA,OAAO,iBAAiB,OAAe,QAAc;AACnD,WAAO,KAAK,MAAM,KAAK,KAAK,KAAK,IAAI,OAAO,MAAM,CAAC,CAAC,IAAI;EAC1D;;EAGA,OAAO,iBAAiB,MAAqB;AAE3C,YAAQ,MAAM;MACV,KAAK;AAAM,eAAQ;MACnB,KAAK;AAAM,eAAQ;MACnB,KAAK;AAAM,eAAQ;MACnB,KAAK;AAAM,eAAQ;MACnB,KAAK;AAAM,eAAQ;MACnB,KAAK;AAAM,eAAQ;MACnB;AAAS,cAAM,IAAI,MAAM,IAAI;IAC/B;EACJ;;EAqBU,OAAO,eAAe,QAAgB,OAAmB;AA5ZrE,QAAAG,KAAA;AA6ZI,UAAM,WAAW,EAAC,GAAG,MAAK;AAG1B,UAAM,2BACJ,MAAAA,MAAA,iCAAQ,UAAR,gBAAAA,IAAe,sBAAf,mBAAkC,YAAW,CAAA;AAE/C,WAAO,OAAO,UAAU,sBAAsB;AAG9C,UAAM,EAAC,OAAO,OAAM,IAAI;AACxB,QAAI,OAAO,UAAU,UAAU;AAC7B,eAAS,QAAQ,KAAK,IAAI,GAAG,KAAK,KAAK,KAAK,CAAC;IAC/C;AACA,QAAI,OAAO,WAAW,UAAU;AAC9B,eAAS,SAAS,KAAK,IAAI,GAAG,KAAK,KAAK,MAAM,CAAC;IACjD;AACA,WAAO;EACT;;AAvQA,cADoB,UACb,YAAW;AAClB,cAFoB,UAEb,YAAW;AAClB,cAHoB,UAGb,WAAU;AACjB,cAJoB,UAIb,WAAU;AACjB,cALoB,UAKb,qBAAoB;AAE3B,cAPoB,UAOb,aAA+B,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAEzE,cAToB,UASJ,gBAAuC;EACrD,GAAG,SAAS;EACZ,MAAM;EACN,WAAW;EACX,QAAQ;EACR,OAAO;EACP,QAAQ;EACR,OAAO;EACP,SAAS;EACT,YAAY;EACZ,OAAO;EACP,WAAW;EACX,SAAS;EACT,SAAS,CAAA;EACT,MAAM;EACN,OAAO;;;AA4MC,cApOU,UAoOH,mCAAsE;EACrF,OAAO;EACP,SAAS;EACT,SAAS;EACT,OAAO;EACP,QAAQ;EACR,OAAO;EACP,UAAU;EACV,GAAG;EACH,GAAG;EACH,GAAG;EACH,QAAQ;EACR,YAAY;EACZ,oBAAoB;EACpB,OAAO;;AAlPL,IAAgB,UAAhB;;;AC1IA,IAAgB,eAAhB,MAAgB,qBAAoB,SAA0B;EAclE,KAAc,OAAO,WAAW,IAAC;AAC/B,WAAO;EACT;;EAGA,YAAY,QAAgB,OAA4C;AACtE,UAAM,QAAQ,OAAO,aAAY,YAAY;EAC/C;;AApBA,cADoB,cACJ,gBAA2C;EACzD,GAAG,SAAS;EACZ,QAAQ;EACR,WAAW;EACX,QAAQ;EACR,cAAc;EACd,eAAe;EACf,gBAAgB;EAChB,iBAAiB;;AATf,IAAgB,cAAhB;;;ACjBA,IAAgB,mBAAhB,MAAgB,yBAAwB,SAA8B;EAO1E,KAAc,OAAO,WAAW,IAAC;AAC/B,WAAO;EACT;EAEA,YAAY,QAAgB,OAA2B;AACrD,UAAM,QAAQ,OAAO,iBAAgB,YAAY;EACnD;;AAZA,cADoB,kBACJ,gBAA+C;EAC7D,GAAG,SAAS;EACZ,QAAQ;EACR,YAAY;;AAJV,IAAgB,kBAAhB;;;ACJA,SAAU,kBACd,WACAC,SACA,SAIC;AAED,MAAI,eAAe;AACnB,QAAM,QAAQA,QAAO,MAAM,OAAO;AAClC,QAAMC,OAAM,UAAU,MAAK,EAAG,KAAK,CAACC,IAAGC,OAAMD,GAAE,UAAUC,GAAE,OAAO;AAElE,WAAQ,mCAAS,mBAAkB,MAAM;IACvC,KAAK;AAEH,UAAI,iBAAiB;AACrB,eAAS,UAAU,GAAG,WAAW,MAAM,QAAQ,WAAW;AACxD,wBAAgB,gBAAgB,MAAM,UAAU,CAAC,GAAG,SAAS,OAAO;AACpE,eAAOF,KAAI,SAAS,kBAAkBA,KAAI,cAAc,EAAE,YAAY,SAAS;AAC7E,gBAAMG,WAAUH,KAAI,gBAAgB;AACpC,0BAAgB,sBAAsBG,UAAS,OAAOA,SAAQ,SAAS;YACrE,GAAG;YACH,cAAc;WACf;QACH;MACF;AACA,aAAO;IAET,KAAK;IACL,KAAK;AAEH,iBAAWA,YAAW,WAAW;AAC/B,wBAAgB,sBAAsBA,UAAS,OAAOA,SAAQ,SAAS;UACrE,eAAc,mCAAS,oBAAmB;SAC3C;MACH;AACA,aAAO;EACX;AACF;AAKA,SAAS,sBACPA,UACA,OACA,SACA,SAGC;AAED,MAAI,mCAAS,cAAc;AACzB,UAAM,gBAAgB,iBAAiB,OAAO,OAAO;AAErD,UAAM,oBAAoBA,SAAQ,UAAU,IAAI,GAAG,IAAI,OAAOA,SAAQ,UAAU,CAAC,CAAC;IAAU;AAC5F,WAAO;EACT,aAAa,GAAG,iBAAiB,GAAGA,SAAQ,KAAK,YAAW,CAAE,KAAKA,SAAQ,OAAO;;;EAGlF;AACA,QAAM,QAAQA,SAAQ,SAAS,UAAU,QAAQ;AACjD,UAAO,mCAAS,QACZ,qDAAqD,KAAK,UAAUA,SAAQ,KAAK,YAAW,CAAE,KAC5FA,SAAQ,OACV,eACA,GAAGA,SAAQ,KAAK,YAAW,CAAE,KAAKA,SAAQ,OAAO;AACvD;AAEA,SAAS,iBACP,OACA,SACA,SAA0B;AAE1B,MAAI,gBAAgB;AACpB,WAAS,YAAY,UAAU,GAAG,aAAa,SAAS,aAAa;AACnE,UAAM,aAAa,MAAM,YAAY,CAAC;AACtC,QAAI,eAAe,QAAW;AAC5B,uBAAiB,gBAAgB,YAAY,SAAS,OAAO;IAC/D;EACF;AACA,SAAO;AACT;AAEA,SAAS,gBAAgB,MAAc,SAAiB,SAA0B;AAChF,QAAM,eAAc,mCAAS,QAAO,WAAW,IAAI,IAAI;AACvD,SAAO,GAAG,QAAQ,OAAO,OAAO,GAAG,CAAC,CAAC,KAAK,WAAW,IAAG,mCAAS,QAAO,UAAU,IAAI;AACxF;AAQA,SAAS,QAAQ,QAAgB,cAAoB;AACnD,MAAI,SAAS;AACb,WAASC,KAAI,OAAO,QAAQA,KAAI,cAAc,EAAEA,IAAG;AACjD,cAAU;EACZ;AACA,SAAO,SAAS;AAClB;AAEA,SAAS,WAAW,QAAc;AAChC,SAAO,OACJ,WAAW,KAAK,OAAO,EACvB,WAAW,KAAK,MAAM,EACtB,WAAW,KAAK,MAAM,EACtB,WAAW,KAAK,QAAQ,EACxB,WAAW,KAAK,QAAQ;AAC7B;;;ACrFM,IAAgB,UAAhB,MAAgB,gBAAe,SAAqB;;EAuBxD,YAAY,QAAgB,OAAkB;AAC5C,YAAQ,EAAC,GAAG,OAAO,cAAc,MAAM,gBAAgB,OAAO,MAAM,gBAAgB,SAAQ;AAC5F,UAAM,QAAQ,EAAC,IAAI,qBAAqB,KAAK,GAAG,GAAG,MAAK,GAAG,QAAO,YAAY;AATvE;;AAEA;;AAET;6CAAqD;AAMnD,SAAK,QAAQ,KAAK,MAAM;AACxB,SAAK,SAAS,KAAK,MAAM;EAC3B;EAjBA,KAAc,OAAO,WAAW,IAAC;AAC/B,WAAO;EACT;;EAuBA,yBAAsB;AACpB,WAAO;EACT;;EAGA,sBAAmB;AACjB,WAAO;EACT;;;EAKA,MAAM,cAAW;AACf,UAAM,UAAU,KAAK,MAAM;AAC3B,YAAQ,SAAS;MACf,KAAK;AACH;MACF,KAAK;AAEH,YAAI,KAAK,sBAAsB,WAAW;AACxC;QACF;AACA;MACF,KAAK;MACL,KAAK;AACH;IACJ;AAEA,UAAM,WAAW,MAAM,KAAK,mBAAkB;AAC9C,QAAI,YAAY,eAAc,qCAAU,YAAW,GAAG;AACpD;IACF;AACA,SAAK,kBAAkB,QAAQ;EACjC;;;;;;EAQU,kBAAkB,UAAoC;AA9GlE,QAAAC;AAgHI,QAAI,OAAO,aAAa,eAAe,EAAC,qCAAU,gBAAe;AAC/D;IACF;AAEA,UAAM,aAAqBC,eAAc,KAAK,MAAM;AACpD,UAAM,cAAsB,GAAG,KAAK,KAAK,IAAI,UAAU;AACvD,QAAI,UAAU,kBAAkB,UAAU,KAAK,QAAQ,EAAC,gBAAgB,OAAO,MAAM,KAAI,CAAC;AAE1F,UAAM,mBAAmB,KAAK,oBAAmB;AACjD,QAAI,kBAAkB;AACpB,iBAAW,0FAA0F,gBAAgB;IACvH;AAEA,UAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,WAAO,YAAY;kCACW,WAAW;;EAE3C,OAAO;;AAEL,WAAO,MAAM,MAAM;AACnB,WAAO,MAAM,OAAO;AACpB,WAAO,MAAM,WAAW;AACxB,WAAO,MAAM,SAAS;AACtB,WAAO,MAAM,QAAQ;AACrB,WAAO,MAAM,YAAY;AACzB,aAAS,KAAK,YAAY,MAAM;AAEhC,UAAM,SAAS,SAAS,uBAAuB,yBAAyB;AACxE,KAAAD,MAAA,OAAO,CAAC,MAAR,gBAAAA,IAAW;AAGX,WAAO,UAAU,MAAK;AAEpB,YAAM,UAAU,mBAAmB,mBAAmB,KAAK,MAAM,CAAC;AAClE,gBAAU,UAAU,UAAU,OAAO;IACvC;EAGF;;AApHA,cADoB,SACJ,gBAAsC;EACpD,GAAG,SAAS;EACZ,UAAU;EACV,OAAO;EACP,QAAQ;EACR,WAAW;EACX,YAAY;EACZ,cAAc;;AARZ,IAAgB,SAAhB;AA2HN,SAAS,qBAAqB,OAAkB;AAC9C,SAAOC,eAAc,MAAM,MAAM,KAAK,MAAM,MAAM,IAAI,WAAW,MAAM,KAAK,SAAS;AACvF;AAGA,SAASA,eAAc,QAAgB,cAAsB,WAAS;AACpE,QAAM,qBAAqB;AAC3B,QAAM,QAAQ,mBAAmB,KAAK,MAAM;AAC5C,SAAO,QAAQ,MAAM,CAAC,IAAI;AAC5B;;;ACvHM,IAAgB,WAAhB,MAAgB,iBAAgB,SAAsB;EAgB1D,KAAc,OAAO,WAAW,IAAC;AAC/B,WAAO;EACT;EAEA,YAAY,QAAgB,OAAmB;AAC7C,YAAQ,SAAQ,eAAe,QAAQ,KAAK;AAC5C,UAAM,QAAQ,OAAO,SAAQ,YAAY;EAC3C;EAEU,OAAO,eAAe,QAAgB,OAAmB;AAvErE,QAAAC,KAAA;AAwEI,UAAM,2BACJ,MAAAA,MAAA,iCAAQ,UAAR,gBAAAA,IAAe,sBAAf,mBAAkC,YAAW,CAAA;AAC/C,UAAM,WAAW,EAAC,GAAG,OAAO,GAAG,uBAAsB;AACrD,WAAO;EACT;;AA7BA,cADoB,UACJ,gBAAuC;EACrD,GAAG,SAAS;EACZ,MAAM;EACN,cAAc;EACd,cAAc;EACd,cAAc;EACd,WAAW;EACX,WAAW;EACX,cAAc;EACd,aAAa;EACb,aAAa;;EACb,SAAS;EACT,eAAe;;AAbb,IAAgB,UAAhB;;;ACpBA,IAAgB,eAAhB,MAAgB,qBAAoB,SAA0B;EAsBlE,YAAY,QAAgB,QAA0B,CAAA,GAAE;AACtD,UAAM,QAAQ,OAAO,aAAY,YAAY;AAT/C;;AAEA;;AAQE,SAAK,QAAQ,KAAK,MAAM;AACxB,SAAK,SAAS,KAAK,MAAM;EAC3B;EAjBA,KAAc,OAAO,WAAW,IAAC;AAC/B,WAAO;EACT;;;;;EAqBA,MAAM,MAAsC;AAC1C,UAAM,mBAAmB,KAAK,iBAAiB,IAAI,qBACjD,gBAAgB,QAAQ,MAAM,IAAI,CAAC;AAGrC,UAAM,yBACJ,KAAK,0BAA0B,KAAK,uBAAuB,QAAQ,MAAM,IAAI;AAE/E,WAAO,KAAK,OAAO,kBAAkB,EAAC,GAAG,KAAK,OAAO,kBAAkB,uBAAsB,CAAC;EAChG;EAUA,OAAO,MAAwE;AAC7E,QAAI,aAAsB,CAAC;AAC3B,QAAI,MAAM;AACR,YAAM,CAAC,OAAO,MAAM,IAAI,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,KAAK,OAAO,KAAK,MAAM;AAC7E,mBAAa,cAAc,WAAW,KAAK,UAAU,UAAU,KAAK;AACpE,WAAK,QAAQ;AACb,WAAK,SAAS;IAChB;AACA,QAAI,YAAY;AACd,MAAAC,KAAI,IAAI,GAAG,wBAAwB,KAAK,EAAE,OAAO,KAAK,KAAK,IAAI,KAAK,MAAM,EAAE,EAAC;AAC7E,WAAK,kBAAkB,KAAK,OAAO,KAAK,MAAM;IAChD;EACF;;EAGU,+BAA4B;AACpC,QAAI,KAAK,MAAM,iBAAiB,WAAW,KAAK,CAAC,KAAK,MAAM,wBAAwB;AAClF,YAAM,IAAI,MAAM,+BAA+B;IACjD;AAEA,SAAK,mBAAmB,KAAK,MAAM,iBAAiB,IAAI,CAACC,aAAY,UAAS;AAC5E,UAAI,OAAOA,gBAAe,UAAU;AAClC,cAAM,UAAU,KAAK,mBAAmBA,aAAY,KAAK;AACzD,aAAK,eAAe,OAAO;AAC3B,eAAO,QAAQ;MACjB;AACA,UAAIA,uBAAsB,SAAS;AACjC,eAAOA,YAAW;MACpB;AACA,aAAOA;IACT,CAAC;AAED,UAAM,aAAa,KAAK,MAAM;AAC9B,QAAI,YAAY;AACd,UAAI,OAAO,eAAe,UAAU;AAClC,cAAM,UAAU,KAAK,0BAA0B,UAAU;AACzD,aAAK,eAAe,OAAO;AAC3B,aAAK,yBAAyB,QAAQ;MACxC,WAAW,sBAAsB,SAAS;AACxC,aAAK,yBAAyB,WAAW;MAC3C,OAAO;AACL,aAAK,yBAAyB;MAChC;IACF;EACF;;EAGU,mBAAmB,QAAuB,OAAa;AAC/D,WAAO,KAAK,OAAO,cAAc;MAC/B,IAAI,GAAG,KAAK,EAAE,qBAAqB,KAAK;MACxC,OAAO,QAAQ;MACf;MACA,OAAO,KAAK;MACZ,QAAQ,KAAK;;MAEb,SAAS;QACP,WAAW;QACX,WAAW;;KAEd;EACH;;EAGU,0BAA0B,QAAqB;AACvD,WAAO,KAAK,OAAO,cAAc;MAC/B,IAAI,GAAG,KAAK,EAAE;MACd,OAAO,QAAQ;MACf;MACA,OAAO,KAAK;MACZ,QAAQ,KAAK;MACb,SAAS;KACV;EACH;;;;;;EAOU,kBAAkB,OAAe,QAAc;AACvD,aAASC,KAAI,GAAGA,KAAI,KAAK,iBAAiB,QAAQ,EAAEA,IAAG;AACrD,UAAI,KAAK,iBAAiBA,EAAC,GAAG;AAC5B,cAAM,iBAAiB,KAAK,iBAAiBA,EAAC,EAAE,QAAQ,MAAM;UAC5D;UACA;SACD;AACD,aAAK,wBAAwB,KAAK,iBAAiBA,EAAC,CAAC;AACrD,aAAK,iBAAiBA,EAAC,IAAI,eAAe;AAC1C,aAAK,eAAe,eAAe,IAAI;MACzC;IACF;AAEA,QAAI,KAAK,wBAAwB;AAC/B,YAAM,iBAAiB,KAAK,uBAAuB,QAAQ,MAAM;QAC/D;QACA;OACD;AACD,WAAK,wBAAwB,KAAK,sBAAsB;AACxD,WAAK,yBAAyB,eAAe;AAC7C,WAAK,eAAe,cAAc;IACpC;AAEA,SAAK,kBAAiB;EACxB;;AAzJA,cADoB,cACJ,gBAA2C;EACzD,GAAG,SAAS;EACZ,OAAO;EACP,QAAQ;EACR,kBAAkB,CAAA;;EAClB,wBAAwB;;;AANtB,IAAgB,cAAhB;;;ACgCA,IAAgB,kBAAhB,MAAgB,wBAAuB,SAA6B;EAyCxE,YAAY,QAAgB,OAA0B;AACpD,UAAM,QAAQ,OAAO,gBAAe,YAAY;AATlD;;AAES;;AAET;sCAA8C;AAE9C;gCAAe;AAIb,SAAK,eAAe,KAAK,MAAM;AAC/B,SAAK,eAAe,KAAK,MAAM,gBAAgB,CAAA;EACjD;EApBA,KAAc,OAAO,WAAW,IAAC;AAC/B,WAAO;EACT;;;;;;;;EA+DA,iBAAiB,UAAsC;AACrD,UAAM,IAAI,MAAM,oBAAoB;EACtC;;AA3FA,cADoB,iBACJ,gBAA8C;EAC5D,GAAG,SAAS;EAEZ,IAAI;EACJ,kBAAkB;EAClB,aAAa,CAAA;EAEb,IAAI;EACJ,oBAAoB;EACpB,aAAa,CAAA;EAEb,cAAc;EACd,cAAc,CAAA;EACd,UAAU;EACV,YAAY,CAAA;;;;EAMZ,UAAU,CAAA;EACV,UAAU,CAAA;;AAtBR,IAAgB,iBAAhB;;;ACAA,IAAgB,cAAhB,MAAgB,oBAAmB,SAAyB;EA2BhE,KAAc,OAAO,WAAW,IAAC;AAC/B,WAAO;EACT;EAEA,YAAY,QAAgB,OAAsB;AAChD,YAAQ,YAAW,eAAe,QAAQ,KAAK;AAC/C,UAAM,QAAQ,OAAO,YAAW,YAAY;EAC9C;EAsBU,OAAO,eAAe,QAAgB,OAAsB;AAlHxE,QAAAC;AAoHI,UAAM,0BAAyBA,MAAA,OAAO,MAAM,sBAAb,gBAAAA,IAAgC;AAC/D,UAAM,WAAW,EAAC,GAAG,wBAAwB,GAAG,MAAK;AACrD,WAAO;EACT;;;AA3DA,cAFoB,aAEb,qBAAsD,CAAC,GAAG,GAAG,GAAG,CAAC;;AAExE,cAJoB,aAIb,qBAAoB;;AAE3B,cANoB,aAMb,uBAAsB;;AAG7B,cAToB,aASJ,gBAA0C;EACxD,GAAG,SAAS;EACZ,aAAa;EACb,YAAY;EACZ,YAAY,YAAW;EACvB,aAAa;EACb,YAAY,YAAW;EACvB,cAAc,YAAW;EACzB,eAAe;EACf,iBAAiB;EACjB,SAAS;EAET,mBAAmB;EACnB,mBAAmB;EACnB,qBAAqB;EACrB,mBAAmB;;AAxBjB,IAAgB,aAAhB;;;AC/BA,IAAgB,mBAAhB,MAAgB,yBAAwB,SAA8B;EAiB1E,YAAY,QAAgB,OAA2B;AACrD,UAAM,QAAQ,OAAO,iBAAgB,YAAY;AALnD,gCAAe;AAEf;;AAIE,SAAK,eAAe,MAAM;EAC5B;EAXA,KAAc,OAAO,WAAW,IAAC;AAC/B,WAAO;EACT;;AAVA,cADoB,kBACJ,gBAA+C;EAC7D,GAAG,SAAS;EACZ,QAAQ;EACR,YAAY;EACZ,WAAW,CAAA;EACX,cAAc;;AANZ,IAAgB,kBAAhB;;;ACRA,IAAgB,eAAhB,MAAgB,qBAAoB,SAA0B;EAQlE,KAAc,OAAO,WAAW,IAAC;AAC/B,WAAO;EACT;EAEA,YAAY,QAAgB,OAAuB;AACjD,UAAM,QAAQ,OAAO,aAAY,YAAY;EAC/C;;AAbA,cADoB,cACJ,gBAA2C;EACzD,GAAG,SAAS;EACZ,mBAAmB;EACnB,qBAAqB;EACrB,mBAAmB;;AALjB,IAAgB,cAAhB;;;ACiHA,IAAgB,kBAAhB,MAAgB,wBAAuB,SAA6B;EAMxE,KAAc,OAAO,WAAW,IAAC;AAC/B,WAAO;EACT;EAEA,YAAY,QAAgB,OAA0B;AACpD,UAAM,QAAQ,OAAO,gBAAe,YAAY;EAClD;;AAXA,cADoB,iBACJ,gBAA8C;EAC5D,GAAG,SAAS;EACZ,sBAAsB;;AAHpB,IAAgB,iBAAhB;;;ACzGA,IAAgB,iBAAhB,MAAgB,uBAAsB,SAA4B;EAKtE,KAAc,OAAO,WAAW,IAAC;AAC/B,WAAO;EACT;EAEA,YAAY,QAAgB,OAAyB;AACnD,UAAM,QAAQ,OAAO,eAAc,YAAY;EACjD;;AAVA,cADoB,gBACJ,gBAA6C;EAC3D,GAAG,SAAS;;AAFV,IAAgB,gBAAhB;;;ACHA,SAAU,0BACd,eAAkC;AAElC,QAAM,CAAC,UAAU,UAAU,IAAI,UAAU,aAAa;AACtD,QAAM,UAAmB,aAAa,SAAS,aAAa;AAC5D,QAAM,SAAkB,aAAa;AAErC,QAAM,aAAaC,YAAW,QAAQ,IAAI;AAC1C,QAAM,sBAAsB,0BAA0B,UAAU,UAAU;AAC1E,SAAO;IACL;IACA;IACA;IACA;IACA;IACA;;AAEJ;AAGA,SAAS,0BACP,UACA,YAAyB;AAEzB,MAAI;AACJ,UAAQ,UAAU;IAChB,KAAK;AACH,mBAAa;AACb;IACF,KAAK;AACH,mBAAa;AACb;IACF,KAAK;AACH,mBAAa;AACb;IACF,KAAK;AACH,aAAO,cAAc,IAAI,cAAc;EAC3C;AAEA,MAAI,eAAe,GAAG;AACpB,WAAO;EACT;AACA,SAAO,GAAG,UAAU,IAAI,UAAU;AACpC;AAGA,IAAM,YAA0E;EAC9E,KAAK,CAAC,OAAO,CAAC;EACd,aAAa,CAAC,OAAO,CAAC;EACtB,aAAa,CAAC,OAAO,CAAC;EACtB,aAAa,CAAC,OAAO,CAAC;EACtB,KAAK,CAAC,OAAO,CAAC;EACd,aAAa,CAAC,OAAO,CAAC;EACtB,aAAa,CAAC,OAAO,CAAC;EACtB,aAAa,CAAC,OAAO,CAAC;EACtB,KAAK,CAAC,OAAO,CAAC;EACd,aAAa,CAAC,OAAO,CAAC;EACtB,aAAa,CAAC,OAAO,CAAC;EACtB,aAAa,CAAC,OAAO,CAAC;EACtB,KAAK,CAAC,OAAO,CAAC;EACd,aAAa,CAAC,OAAO,CAAC;EACtB,aAAa,CAAC,OAAO,CAAC;EACtB,aAAa,CAAC,OAAO,CAAC;;AAGxB,IAAMA,cAA6C;EACjD,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;;;;;AClED,SAAU,mBAAmB,QAAoB;AAErD,MAAI;AACJ,MAAI,OAAO,SAAS,QAAQ,GAAG;AAC7B,WAAO,QAAQ,UAAU,EAAE;AAC3B,gBAAY;EACd;AAEA,QAAM,CAAC,OAAOC,MAAK,IAAI,OAAO,MAAM,GAAG;AACvC,QAAM,OAAO;AACb,QAAM,aAAcA,SAAQ,SAASA,MAAK,IAAI;AAE9C,QAAM,cAAc,iBAAiB,IAAI;AACzC,QAAM,SAA2B;IAC/B;IACA;IACA,YAAY,YAAY,aAAa;IACrC,SAAS,YAAY;IACrB,QAAQ,YAAY;IACpB,YAAY,YAAY;;AAE1B,MAAI,WAAW;AACb,WAAO,YAAY;EACrB;AACA,SAAO;AACT;;;ACQM,SAAU,6BACd,cACA,cAA4B;AAE5B,QAAM,iBAAgD,CAAA;AACtD,aAAW,aAAa,aAAa,YAAY;AAC/C,UAAM,gBAAgB,4BAA4B,cAAc,cAAc,UAAU,IAAI;AAC5F,QAAI,eAAe;AACjB,qBAAe,UAAU,IAAI,IAAI;IACnC;EACF;AACA,SAAO;AACT;AAKM,SAAU,4BACd,cACA,cACA,sBAA8B,IAAE;AAEhC,QAAM,iBAAiB,6BAA6B,cAAc,YAAY;AAC9E,QAAM,gBAAiC,IAAI,MAAM,mBAAmB,EAAE,KAAK,IAAI;AAC/E,aAAW,iBAAiB,OAAO,OAAO,cAAc,GAAG;AACzD,kBAAc,cAAc,QAAQ,IAAI;EAC1C;AACA,SAAO;AACT;AAKA,SAAS,4BACP,cACA,cACAC,OAAY;AAEZ,QAAM,oBAAoB,6BAA6B,cAAcA,KAAI;AACzE,QAAM,gBAA4C,6BAChD,cACAA,KAAI;AAIN,MAAI,CAAC,mBAAmB;AAEtB,WAAO;EACT;AAEA,QAAM,oBAAoB,0BAA0B,kBAAkB,IAAI;AAC1E,QAAM,gBAAe,+CAAe,iBAAgB,kBAAkB;AACtE,QAAM,mBAAmB,mBAAmB,YAAY;AAExD,SAAO;IACL,gBAAe,+CAAe,kBAAiB,kBAAkB;IACjE,aAAY,+CAAe,eAAc,kBAAkB;IAC3D,UAAU,kBAAkB;IAC5B,YAAY,kBAAkB;IAC9B,gBAAgB,kBAAkB;IAClC,kBAAkB,kBAAkB;IACpC;IACA,gBAAgB,iBAAiB;IACjC,kBAAkB,iBAAiB;;IAEnC,YAAY,iBAAiB;;IAE7B,SAAS,kBAAkB;IAC3B,WAAU,+CAAe,aAAY,kBAAkB,YAAY;IACnE,aAAY,+CAAe,eAAc;IACzC,aAAY,+CAAe,eAAc;;AAE7C;AAEA,SAAS,6BACP,cACAA,OAAY;AAEZ,QAAM,YAAY,aAAa,WAAW,KAAK,UAAQ,KAAK,SAASA,KAAI;AACzE,MAAI,CAAC,WAAW;AACd,IAAAC,KAAI,KAAK,4BAA4BD,KAAI,yBAAyB;EACpE;AACA,SAAO,aAAa;AACtB;AAEA,SAAS,6BACP,eACAA,OAAY;AAGZ,qBAAmB,aAAa;AAEhC,MAAI,mBAAmB,0BAA0B,eAAeA,KAAI;AACpE,MAAI,kBAAkB;AACpB,WAAO;EACT;AAEA,qBAAmB,+BAA+B,eAAeA,KAAI;AACrE,MAAI,kBAAkB;AACpB,WAAO;EACT;AAGA,EAAAC,KAAI,KAAK,yBAAyBD,KAAI,gCAAgC;AACtE,SAAO;AACT;AAGA,SAAS,mBAAmB,eAA6B;AACvD,aAAW,gBAAgB,eAAe;AACxC,QACG,aAAa,cAAc,aAAa,UACxC,CAAC,aAAa,cAAc,CAAC,aAAa,QAC3C;AACA,MAAAC,KAAI,KAAK,gBAAgB,IAAI,kDAAkD;IACjF;EACF;AACF;AAGA,SAAS,0BACP,eACAD,OAAY;AAEZ,aAAW,gBAAgB,eAAe;AACxC,QAAI,aAAa,UAAU,aAAa,SAASA,OAAM;AACrD,aAAO;QACL,eAAe,aAAa;QAC5B,YAAYA;QACZ,UAAU,aAAa;QACvB,cAAc,aAAa;;QAE3B,YAAY;QACZ,YAAY,aAAa,cAAc;;IAE3C;EACF;AACA,SAAO;AACT;AAMA,SAAS,+BACP,eACAA,OAAY;AA9Md,MAAAE;AAgNE,aAAW,gBAAgB,eAAe;AACxC,QAAI,aAAiC,aAAa;AAGlD,QAAI,OAAO,aAAa,eAAe,UAAU;AAC/C,iBAAWC,qBAAoB,aAAa,cAAc,CAAA,GAAI;AAC5D,cAAM,OAAO,mBAAmBA,kBAAiB,MAAM;AAEvD,sBAAc,KAAK;MACrB;IACF;AAEA,UAAM,oBAAmBD,MAAA,aAAa,eAAb,gBAAAA,IAAyB,KAAK,aAAW,QAAQ,cAAcF;AACxF,QAAI,kBAAkB;AACpB,aAAO;QACL,eAAe,iBAAiB;QAChC,YAAY,aAAa;QACzB,UAAU,aAAa;QACvB,cAAc,iBAAiB;QAC/B,YAAY,iBAAiB;;QAE7B;;IAEJ;EACF;AAEA,SAAO;AACT;;;AChNM,IAAgB,eAAhB,MAAgB,qBAAoB,SAA0B;EAoBlE,YAAY,QAAgB,OAAuB;AACjD,UAAM,QAAQ,OAAO,aAAY,YAAY;AAVtC;;AAEU;;AAGnB;uCAA6B;AAE7B;;AAIE,SAAK,sBAAsB,OAAO,OAAO;AACzC,SAAK,aAAa,IAAI,MAAM,KAAK,mBAAmB,EAAE,KAAK,IAAI;AAC/D,UAAM,EAAC,cAAc,aAAY,IAAI,MAAM,kBAAkB,CAAA;AAC7D,QAAI,CAAC,gBAAgB,CAAC,cAAc;AAClC,YAAM,IAAI,MAAM,aAAa;IAC/B;AACA,SAAK,iBAAiB,4BACpB,cACA,cACA,KAAK,mBAAmB;EAE5B;EA3BA,KAAc,OAAO,WAAW,IAAC;AAC/B,WAAO;EACT;;;EAsCA,iBAAiB,UAAkB,OAAwB;AACzD,SAAK,OAAO,YAAY,IAAI,MAAM,mCAAmC,CAAC;EACxE;;AA/CA,cADoB,cACJ,gBAA2C;EACzD,GAAG,SAAS;EACZ,gBAAgB;;AAHd,IAAgB,cAAhB;;;ACDA,IAAgB,qBAAhB,MAAgB,2BAA0B,SAAgC;EAO9E,KAAK,OAAO,WAAW,IAAC;AACtB,WAAO;EACT;EAEA,YAAY,QAAgB,OAA6B;AACvD,UAAM,QAAQ,OAAO,mBAAkB,YAAY;EACrD;;AAZA,cADoB,oBACJ,gBAAiD;EAC/D,GAAG,SAAS;EACZ,QAAQ;EACR,SAAS,CAAA;;AAJP,IAAgB,oBAAhB;;;ACAA,IAAgB,YAAhB,MAAgB,kBAAiB,SAAuB;EAO5D,KAAK,OAAO,WAAW,IAAC;AACtB,WAAO;EACT;EAEA,YAAY,QAAgB,OAAoB;AAC9C,UAAM,QAAQ,OAAO,UAAS,YAAY;EAC5C;;AAZA,cADoB,WACJ,gBAAwC;EACtD,GAAG,SAAS;EACZ,MAAM;EACN,OAAO;;AAJL,IAAgB,WAAhB;;;ACjBA,IAAgB,kBAAhB,MAAgB,wBAAuB,SAA6B;EACxE,KAAK,OAAO,WAAW,IAAC;AACtB,WAAO;EACT;EAEA,YAAY,QAAgB,OAA0B;AACpD,UAAM,QAAQ,OAAO,gBAAe,YAAY;EAClD;;AAEA,cAToB,iBASJ,gBAA8C;EAC5D,GAAG,SAAS;EACZ,cAAc;IACZ,YAAY,CAAA;IACZ,UAAU,CAAA;;;AAbV,IAAgB,iBAAhB;;;ACHN,IAAM,kBAAyF;EAC7F,KAAK,EAAC,MAAM,OAAO,YAAY,EAAC;EAChC,KAAK,EAAC,MAAM,OAAO,YAAY,EAAC;EAChC,KAAK,EAAC,MAAM,OAAO,YAAY,EAAC;;EAEhC,aAAa,EAAC,MAAM,OAAO,YAAY,EAAC;EACxC,aAAa,EAAC,MAAM,OAAO,YAAY,EAAC;EACxC,aAAa,EAAC,MAAM,OAAO,YAAY,EAAC;EACxC,aAAa,EAAC,MAAM,OAAO,YAAY,EAAC;EACxC,aAAa,EAAC,MAAM,OAAO,YAAY,EAAC;EACxC,aAAa,EAAC,MAAM,OAAO,YAAY,EAAC;EACxC,aAAa,EAAC,MAAM,OAAO,YAAY,EAAC;EACxC,aAAa,EAAC,MAAM,OAAO,YAAY,EAAC;EACxC,aAAa,EAAC,MAAM,OAAO,YAAY,EAAC;EACxC,eAAe,EAAC,MAAM,OAAO,YAAY,EAAC;EAC1C,eAAe,EAAC,MAAM,OAAO,YAAY,EAAC;EAC1C,eAAe,EAAC,MAAM,OAAO,YAAY,EAAC;EAC1C,eAAe,EAAC,MAAM,OAAO,YAAY,EAAC;EAC1C,eAAe,EAAC,MAAM,OAAO,YAAY,EAAC;EAC1C,eAAe,EAAC,MAAM,OAAO,YAAY,GAAE;EAC3C,eAAe,EAAC,MAAM,OAAO,YAAY,EAAC;EAC1C,eAAe,EAAC,MAAM,OAAO,YAAY,GAAE;EAC3C,eAAe,EAAC,MAAM,OAAO,YAAY,GAAE;;AAIvC,SAAU,wBAAwB,QAAyB;AAI/D,QAAM,UAAU,gBAAgB,MAAM;AACtC,SAAO;AACT;AAGM,SAAU,QAAQ,MAAcI,QAAa;AAEjD,UAAQA,QAAO;IACb,KAAK;AAAG,aAAO;;IACf,KAAK;AAAG,aAAO,OAAQ,OAAO;;IAC9B;AAAS,aAAO,QAAS,IAAK,OAAO,KAAM;EAC7C;AACF;;;AC1CA,IAAI;AAEE,SAAU,sBAAsB,YAAkB;AACtD,MAAI,CAAC,eAAe,YAAY,aAAa,YAAY;AACvD,kBAAc,IAAI,YAAY,UAAU;EAC1C;AACA,SAAO;AACT;AAEM,SAAU,gBAAgBC,OAAWC,SAAc;AACvD,QAAM,qBAAqB,sBAAsBD,MAAK,oBAAoBC,OAAM;AAChF,SAAO,IAAID,MAAK,oBAAoB,GAAGC,OAAM;AAC/C;;;ACNM,SAAU,aAAa,OAAc;AACzC,SAAO,YAAY,OAAO,KAAK,KAAK,EAAE,iBAAiB;AACzD;AAQM,SAAU,cAAc,OAAc;AAC1C,MAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,WAAO,MAAM,WAAW,KAAK,OAAO,MAAM,CAAC,MAAM;EACnD;AACA,SAAO,aAAa,KAAK;AAC3B;;;ACXA,IAAM,gBAAwB;AAMxB,IAAO,sBAAP,MAA0B;;EAO9B,YAAYC,eAA+C;AANlD,kCAA+E,CAAA;AAG/E;;AAKP,QAAI,OAAe;AAGnB,eAAW,CAAC,KAAK,WAAW,KAAK,OAAO,QAAQA,aAAY,GAAG;AAC7D,YAAM,oBAAoB,wBAAwB,WAAW;AAC7D,YAAM,EAAC,MAAM,YAAYC,OAAK,IAAI;AAElC,aAAO,QAAQ,MAAMA,MAAK;AAE1B,YAAM,SAAS;AAEf,cAAQA;AACR,WAAK,OAAO,GAAG,IAAI,EAAC,MAAM,MAAMA,QAAO,OAAM;IAC/C;AACA,aAAS,IAAK,OAAO,KAAM;AAE3B,UAAM,mBAAmB,OAAO;AAChC,SAAK,aAAa,KAAK,IAAI,kBAAkB,aAAa;EAC5D;;EAGA,QAAQ,eAA2C;AACjD,UAAM,aAAa,KAAK,IAAI,KAAK,YAAY,aAAa;AAG1D,UAAMC,eAAc,sBAAsB,UAAU;AACpD,UAAM,cAAc;MAClB,KAAK,IAAI,WAAWA,YAAW;MAC/B,KAAK,IAAI,YAAYA,YAAW;MAChC,KAAK,IAAI,aAAaA,YAAW;;MAEjC,KAAK,IAAI,YAAYA,YAAW;;AAKlC,eAAW,CAACC,OAAM,KAAK,KAAK,OAAO,QAAQ,aAAa,GAAG;AACzD,YAAM,gBAAgB,KAAK,OAAOA,KAAI;AACtC,UAAI,CAAC,eAAe;AAClB,QAAAC,KAAI,KAAK,0BAA0BD,KAAI,sCAAsC,EAAC;AAE9E;MACF;AAEA,YAAM,EAAC,MAAM,MAAM,OAAM,IAAI;AAC7B,YAAM,aAAa,YAAY,IAAI;AACnC,UAAI,SAAS,GAAG;AACd,YAAI,OAAO,UAAU,YAAY,OAAO,UAAU,WAAW;AAC3D,UAAAC,KAAI,KACF,+CAA+CD,KAAI,qBAAqB,KAAK,EAAE,EAChF;AAED;QACF;AAEA,mBAAW,MAAM,IAAI,OAAO,KAAK;MACnC,OAAO;AACL,YAAI,CAAC,cAAc,KAAK,GAAG;AACzB,UAAAC,KAAI,KACF,sDAAsDD,KAAI,4BAA4B,KAAK,EAAE,EAC9F;AAED;QACF;AAGA,mBAAW,IAAI,OAAO,MAAM;MAC9B;IACF;AAEA,WAAO,IAAI,WAAWD,YAAW;EACnC;;EAGA,IAAIC,OAAY;AACd,WAAO,QAAQ,KAAK,OAAOA,KAAI,CAAC;EAClC;;EAGA,IAAIA,OAAY;AACd,UAAM,SAAS,KAAK,OAAOA,KAAI;AAC/B,WAAO;EACT;;;;AC1GI,SAAU,WAAWE,IAAYC,IAAY,QAAgB,IAAE;AACnE,MAAID,OAAMC,IAAG;AACX,WAAO;EACT;AACA,QAAM,SAASD;AACf,QAAM,SAASC;AACf,MAAI,CAAC,cAAc,MAAM,GAAG;AAC1B,WAAO;EACT;AACA,MAAI,cAAc,MAAM,KAAK,OAAO,WAAW,OAAO,QAAQ;AAC5D,aAASC,KAAI,GAAGA,KAAI,OAAO,QAAQ,EAAEA,IAAG;AACtC,UAAI,OAAOA,EAAC,MAAM,OAAOA,EAAC,GAAG;AAC3B,eAAO;MACT;IACF;EACF;AACA,SAAO;AACT;AAGM,SAAU,UAAaF,IAAI;AAC/B,MAAI,cAAcA,EAAC,GAAG;AACpB,WAAOA,GAAE,MAAK;EAChB;AACA,SAAOA;AACT;;;ACfM,IAAO,eAAP,MAAmB;EAYvB,YAAY,OAIX;AAbD;AAEA,oCAAkD,CAAA;AAClD,4CAAqD,CAAA;AACrD,oCAAoB;AAEX,yCAA6C,CAAA;AACtD,uCAA8B;AA3BhC,QAAAG;AAkCI,SAAK,QAAO,+BAAO,SAAQ;AAG3B,SAAI,+BAAO,UAAQ,+BAAO,eAAc;AACtC,YAAM,WAAUA,MAAA,+BAAO,aAAa,aAApB,gBAAAA,IAA8B,KAC5C,cAAY,SAAS,SAAS,aAAa,SAAS,UAAS,+BAAO;AAEtE,UAAI,CAAC,SAAS;AACZ,cAAM,IAAI,MAAM,+BAAO,IAAI;MAC7B;AAEA,YAAMC,gBAAe;AACrB,iBAAW,WAAWA,cAAa,YAAY,CAAA,GAAI;AACjD,aAAK,cAAc,QAAQ,IAAI,IAAI;MACrC;IACF;EACF;;EAGA,YAAY,UAA4B;AACtC,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,QAAQ,GAAG;AACnD,WAAK,YAAY,KAAK,KAAK;AAC3B,UAAI,CAAC,KAAK,aAAa;AACrB,aAAK,eAAe,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,KAAK,EAAE;MACpD;IACF;EACF;EAEA,eAAe,QAAc;AAC3B,SAAK,cAAc,KAAK,eAAe;EACzC;;EAGA,iBAAc;AAEZ,SAAK,mBAAmB,CAAA;AACxB,SAAK,cAAc;AACnB,WAAQ,KAAK,YAAY,CAAA;EAC3B;;EAGQ,YAAY,KAAsB,OAAmB;AAC3D,QAAI,WAAW,KAAK,SAAS,GAAG,GAAG,KAAK,GAAG;AACzC;IACF;AACA,SAAK,SAAS,GAAG,IAAI,UAAU,KAAK;AACpC,SAAK,iBAAiB,GAAG,IAAI;AAC7B,SAAK,WAAW;EAClB;;;;AC/DI,IAAO,eAAP,MAAmB;;;;;EAiBvB,YACE,QAOC;AAlBH;yCAAgB,oBAAI,IAAG;AAEvB;gDAAuB,oBAAI,IAAG;AAE9B;0CAAiB,oBAAI,IAAG;AAgBtB,eAAW,CAAC,YAAY,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AACxD,YAAM,oBAAoB;AAG1B,YAAM,sBAAsB,IAAI,oBAAoB,MAAM,gBAAgB,CAAA,CAAE;AAC5E,WAAK,qBAAqB,IAAI,mBAAmB,mBAAmB;AAGpE,YAAMC,gBAAe,IAAI,aAAa,EAAC,MAAM,WAAU,CAAC;AACxD,MAAAA,cAAa,YAAY,MAAM,mBAAmB,CAAA,CAAE;AACpD,WAAK,cAAc,IAAI,mBAAmBA,aAAY;IACxD;EACF;;EAGA,UAAO;AACL,eAAW,iBAAiB,KAAK,eAAe,OAAM,GAAI;AACxD,oBAAc,QAAO;IACvB;EACF;;;;;EAMA,YACE,UAA8E;AAxElF,QAAAC;AA0EI,eAAW,CAAC,WAAW,aAAa,KAAK,OAAO,QAAQ,QAAQ,GAAG;AACjE,OAAAA,MAAA,KAAK,cAAc,IAAI,SAAS,MAAhC,gBAAAA,IAAmC,YAAY;IAGjD;AAEA,SAAK,qBAAoB;EAC3B;;EAGA,2BAA2B,mBAAoC;AApFjE,QAAAA;AAqFI,aAAOA,MAAA,KAAK,qBAAqB,IAAI,iBAAiB,MAA/C,gBAAAA,IAAkD,eAAc;EACzE;;EAGA,qBAAqB,mBAAoC;AAzF3D,QAAAA,KAAA;AA0FI,UAAM,kBAAgBA,MAAA,KAAK,cAAc,IAAI,iBAAiB,MAAxC,gBAAAA,IAA2C,qBAAoB,CAAA;AAErF,YAAO,UAAK,qBAAqB,IAAI,iBAAiB,MAA/C,mBAAkD,QAAQ;EACnE;;;;;EAMA,oBACE,QACA,mBACA,UAA+E;AAE/E,QAAI,UAAU;AACZ,WAAK,YAAY,QAAQ;IAC3B;AACA,UAAM,aAAa,KAAK,2BAA2B,iBAAiB;AACpE,UAAM,gBAAgB,OAAO,aAAa;MACxC,OAAO,OAAO,UAAU,OAAO;MAC/B;KACD;AAED,UAAM,oBAAoB,KAAK,qBAAqB,iBAAiB;AACrE,kBAAc,MAAM,iBAAiB;AACrC,WAAO;EACT;;EAGA,wBAAwB,QAAgB,mBAAoC;AAC1E,QAAI,CAAC,KAAK,eAAe,IAAI,iBAAiB,GAAG;AAC/C,YAAM,aAAa,KAAK,2BAA2B,iBAAiB;AACpE,YAAM,gBAAgB,OAAO,aAAa;QACxC,OAAO,OAAO,UAAU,OAAO;QAC/B;OACD;AACD,WAAK,eAAe,IAAI,mBAAmB,aAAa;IAC1D;AAGA,WAAO,KAAK,eAAe,IAAI,iBAAiB;EAClD;;EAGA,uBAAoB;AAClB,QAAI,SAAyB;AAC7B,eAAW,qBAAqB,KAAK,cAAc,KAAI,GAAI;AACzD,YAAM,eAAe,KAAK,oBAAoB,iBAAiB;AAC/D,0BAAW;IACb;AACA,QAAI,QAAQ;AACV,MAAAC,KAAI,IAAI,GAAG,wCAAwC,MAAM,EAAE,EAAC;IAC9D;AACA,WAAO;EACT;;EAGA,oBAAoB,mBAAoC;AAnJ1D,QAAAD;AAoJI,UAAMD,gBAAe,KAAK,cAAc,IAAI,iBAAiB;AAC7D,QAAI,gBAAgB,KAAK,eAAe,IAAI,iBAAiB;AAE7D,QAAI,SAAyB;AAC7B,QAAI,kBAAiBA,iBAAA,gBAAAA,cAAc,cAAa;AAC9C,0BAAWA,cAAa;AAExB,YAAM,oBAAoB,KAAK,qBAAqB,iBAAiB;AAErE,sBAAgB,KAAK,eAAe,IAAI,iBAAiB;AACzD,qDAAe,MAAM;AAGrB,YAAM,iBAAgBC,MAAA,KAAK,cAAc,IAAI,iBAAiB,MAAxC,gBAAAA,IAA2C;AACjE,MAAAC,KAAI,IACF,GACA,6BAA6B,OAAO,iBAAiB,CAAC,IACtD,mBACA,aAAa,EACd;IACH;AACA,WAAO;EACT;;;;AC9JI,SAAUC,2BACd,aAA+C;AAE/C,QAAM,OAAO,YAAY,OAAO,WAAW,IAAI,YAAY,cAAc;AACzE,UAAQ,MAAM;IACZ,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT;AAEE,YAAM,IAAI,MAAM,KAAK,YAAY,IAAI;EACzC;AACF;AAEM,SAAU,0BACd,UAAiC;AAEjC,UAAQ,UAAU;IAChB,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;AACH,aAAO;IACT;AAEE,YAAM,IAAI,MAAM,QAAQ;EAC5B;AACF;AAGM,SAAU,6BACd,YACA,MACA,YAAoB;AAEpB,MAAI,CAAC,QAAQ,OAAO,GAAG;AACrB,UAAM,IAAI,MAAM,QAAQ,IAAI,EAAE;EAChC;AAEA,QAAM,aAAa;AACnB,MAAI,WAAoCA,2BAA0B,UAAU;AAG5E,MAAI,aAAa,WAAW,cAAc,eAAe,GAAG;AAC1D,WAAO;EACT;AACA,MAAI,aAAa,WAAW,cAAc,eAAe,GAAG;AAC1D,WAAO;EACT;AAEA,MAAI,aAAa,WAAW,aAAa,SAAS;AAChD,QAAI,eAAe,KAAK,eAAe,GAAG;AAExC,YAAM,IAAI,MAAM,SAAS,IAAI,EAAE;IACjC;AACA,QAAI,YAAY;AACd,iBAAW,SAAS,QAAQ,OAAO,MAAM;IAC3C;AACA,WAAO,GAAG,QAAQ,IAAI,UAAU;EAClC;AACA,MAAI,aAAa,YAAY,aAAa,UAAU;AAClD,QAAI,eAAe,KAAK,eAAe,GAAG;AAExC,YAAM,IAAI,MAAM,SAAS,IAAI,EAAE;IACjC;AACA,QAAI,YAAY;AACd,iBAAW,SAAS,QAAQ,OAAO,MAAM;IAC3C;AACA,WAAO,GAAG,QAAQ,IAAI,UAAU;EAClC;AAEA,MAAI,eAAe,GAAG;AACpB,WAAO;EACT;AAEA,SAAO,GAAG,QAAQ,IAAI,UAAU;AAClC;;;ACzGM,IAAO,qBAAP,MAAyB;EAG7B,YAAY,eAA6B;AAFzC;AAGE,SAAK,gBAAgB;EACvB;EAEA,gBAAgBC,OAAY;AAC1B,WAAO,KAAK,cAAc,KAAK,YAAU,OAAO,SAASA,KAAI,KAAK;EACpE;;EAGA,2BAA2B,cAA0B;AApBvD,QAAAC;AAqBI,WAAO,aAAa,cAChBA,MAAA,aAAa,eAAb,gBAAAA,IAAyB,IAAI,YAAU,OAAO,aAC9C,CAAC,aAAa,IAAI;EACxB;EAEA,mBACE,gBACA,gBAA8B;AAE9B,UAAM,gBAAgB,CAAC,GAAG,cAAc;AACxC,eAAW,aAAa,gBAAgB;AACtC,YAAM,QAAQ,cAAc,UAAU,gBAAc,WAAW,SAAS,UAAU,IAAI;AACtF,UAAI,QAAQ,GAAG;AACb,sBAAc,KAAK,SAAS;MAC9B,OAAO;AACL,sBAAc,KAAK,IAAI;MACzB;IACF;AACA,WAAO;EACT;EAEA,eAAe,YAAkB;AAC/B,UAAM,cAAc,KAAK,cAAc,UAAU,YAAU,OAAO,SAAS,UAAU;AAErF,QAAI,gBAAgB,IAAI;AACtB,MAAAC,KAAI,KAAK,qCAAqC,UAAU,IAAI,EAAC;IAC/D;AAEA,WAAO;EACT;;;;AC3CI,SAAU,0CACd,cACA,cAA4B;AAE5B,QAAM,kBAAkB,OAAO,YAC7B,aAAa,WAAW,IAAI,UAAQ,CAAC,KAAK,MAAM,KAAK,QAAQ,CAAC,CAAC;AAGjE,QAAM,eAAe,aAAa,MAAK;AACvC,eAAa,KAAK,CAACC,IAAGC,OAAK;AACzB,UAAM,kBAAkBD,GAAE,aAAaA,GAAE,WAAW,IAAI,UAAQ,KAAK,SAAS,IAAI,CAACA,GAAE,IAAI;AACzF,UAAM,kBAAkBC,GAAE,aAAaA,GAAE,WAAW,IAAI,UAAQ,KAAK,SAAS,IAAI,CAACA,GAAE,IAAI;AACzF,UAAM,eAAe,KAAK,IAAI,GAAG,gBAAgB,IAAI,CAAAC,UAAQ,gBAAgBA,KAAI,CAAC,CAAC;AACnF,UAAM,eAAe,KAAK,IAAI,GAAG,gBAAgB,IAAI,CAAAA,UAAQ,gBAAgBA,KAAI,CAAC,CAAC;AAEnF,WAAO,eAAe;EACxB,CAAC;AAED,SAAO;AACT;;;ICxBaC,UAAAA;EAKX,YAAYC,IAAcC,IAAAA;AACxBC,SAAKF,OAAOA,IACZE,KAAKD,aAAaA,IAClBC,KAAKC,OAAO;EACb;EAED,IAAA,UAAIC;AACF,WAAA;EACD;EAED,IAAA,WAAIC;AACF,WAAA;EACD;EAED,IAAA,aAAIC;AACF,WAAA;EACD;EAED,IAAA,YAAIC;AACF,WAAA;EACD;EAED,cAAAC;AACE,WAAON,KAAKF;EACb;AAAA;AAAA,IAGUS,IAHV,MAGUA;EAOX,YACET,IACAU,IACAT,IAAAA;AAEAC,SAAKF,OAAOA,IACZE,KAAKQ,OAAOA,IACZR,KAAKD,aAAaA,IAClBC,KAAKS,SAAS,GACdT,KAAKC,OAAO;EACb;EAED,IAAA,UAAIC;AACF,WAAOF,KAAKQ,KAAKN;EAClB;EAED,IAAA,WAAIC;AACF,WAAOH,KAAKQ,KAAKL;EAClB;EAED,IAAA,aAAIC;AACF,WAAOJ,KAAKQ,KAAKJ;EAClB;EAED,IAAA,QAAIM;AACF,WAAOV,KAAKQ,KAAKL,WAAYH,KAAKQ,KAAoBE,QAAQ;EAC/D;EAED,IAAA,UAAIC;AACF,WAAOX,KAAKQ,KAAKL,WAAYH,KAAKQ,KAAoBG,UAAU;EACjE;EAED,IAAA,SAAIC;AACF,WAAOZ,KAAKQ,KAAKN,WAEbF,KAAKQ,KAAKJ,aADTJ,KAAKQ,KAAmBI,SAGzB;EACL;EAED,IAAA,QAAIC;AACF,WAAOb,KAAKQ,KAAKN,UAAWF,KAAKQ,KAAmBK,QAAQ;EAC7D;EAED,IAAA,SAAIC;AACF,WAAOd,KAAKQ,KAAKN,UAAWF,KAAKQ,KAAmBM,SAASd,KAAKC;EACnE;AAAA;AAGG,IAAOc,IAAP,cAA0BlB,EAAAA;EAO9B,YAAYC,IAAcC,IAAAA;AACxBiB,UAAMlB,IAAMC,EAAAA,GAPdC,KAAOW,UAAiB,CAAA,GACxBX,KAAKU,QAAW,GAChBV,KAASiB,YAAAA,IACTjB,KAAOkB,UAAAA,IACPlB,KAAKmB,QAAAA;EAIJ;EAED,IAAA,WAAIhB;AACF,WAAA;EACD;AAAA;AAGG,IAAOiB,IAAP,cAAyBvB,EAAAA;EAK7B,YAAYC,IAAcC,IAAAA;AACxBiB,UAAMlB,IAAMC,EAAAA,GACZC,KAAKa,QAAQ,GACbb,KAAKc,SAAS;EACf;EAED,IAAA,UAAIZ;AACF,WAAA;EACD;EAED,cAAAI;AACE,WAAO,SAASN,KAAKY,OAAON,YAAAA,CAAAA,KAAkBN,KAAKa,KAAAA;EACpD;AAAA;AAGG,IAAOQ,IAAP,cAA2BxB,EAAAA;EAE/B,YAAYC,IAAcc,IAAkBb,IAAAA;AAC1CiB,UAAMlB,IAAMC,EAAAA,GACZC,KAAKY,SAASA;EACf;EAED,IAAA,YAAIP;AACF,WAAA;EACD;EAED,cAAAC;AACE,WAAO,IAAIN,KAAKY,OAAON,YAAAA,CAAAA;EACxB;AAAA;AAGG,IAAOgB,IAAP,cAA4BzB,EAAAA;EAGhC,YACEC,IACAc,IACAb,IACAwB,IAAAA;AAEAP,UAAMlB,IAAMC,EAAAA,GACZC,KAAKY,SAASA,IACdZ,KAAKuB,SAASA;EACf;EAED,IAAA,aAAInB;AACF,WAAA;EACD;EAED,cAAAE;AACE,QAAIR,KAAOE,KAAKF;AAChB,QAAoB,SAAhBE,KAAKY,QAAiB;AACxB,UAAa,WAATd,MAA4B,WAATA,MAA4B,WAATA,MAC7B,aAATA,MAA8B,aAATA,MAA8B,aAATA,MACjC,aAATA,MAA8B,aAATA,MAA8B,aAATA,MACjC,aAATA,MAA8B,aAATA,MAA8B,aAATA,IAAmB;AAC/D,YAAyB,UAArBE,KAAKY,OAAOd,KAEd,QADAA,MAAQ,KACDA;AACF,YAAyB,UAArBE,KAAKY,OAAOd,KAErB,QADAA,MAAQ,KACDA;AACF,YAAyB,UAArBE,KAAKY,OAAOd,KAErB,QADAA,MAAQ,KACDA;AACF,YAAyB,WAArBE,KAAKY,OAAOd,KAErB,QADAA,MAAQ,KACDA;AACF,YAAyB,UAArBE,KAAKY,OAAOd,KAErB,QADAA,MAAQ,KACDA;MAEV;AACDA,MAAAA,MAAQ,IAAIE,KAAKY,OAAOd,IAAAA;IACzB,WACc,WAATA,MAA4B,WAATA,MAA4B,WAATA,GACxC,QAAOA;AAIX,WAAOA;EACR;AAAA;AAAA,IAGS0B;CAAAA,CAAAA,OAAAA;AACVA,EAAAA,GAAAA,GAAA,UAAA,CAAA,IAAA,WACAA,GAAAA,GAAA,UAAA,CAAA,IAAA,WACAA,GAAAA,GAAA,UAAA,CAAA,IAAA,WACAA,GAAAA,GAAA,UAAA,CAAA,IAAA,WACAA,GAAAA,GAAA,iBAAA,CAAA,IAAA;AACD,GANWA,MAAAA,IAMX,CAAA,EAAA;AAAA,IAEYC,IAFZ,MAEYA;EASX,YACE3B,IACAU,IACAkB,IACAC,IACA5B,IACA6B,IACAL,IAAAA;AAEAvB,SAAKF,OAAOA,IACZE,KAAKQ,OAAOA,IACZR,KAAK0B,QAAQA,IACb1B,KAAK2B,UAAUA,IACf3B,KAAKD,aAAaA,IAClBC,KAAK4B,eAAeA,IACpB5B,KAAKuB,SAASA;EACf;EAED,IAAA,UAAIrB;AACF,WAAOF,KAAKQ,KAAKN;EAClB;EAED,IAAA,WAAIC;AACF,WAAOH,KAAKQ,KAAKL;EAClB;EAED,IAAA,aAAIC;AACF,WAAOJ,KAAKQ,KAAKJ;EAClB;EAED,IAAA,OAAIH;AACF,WAAOD,KAAKQ,KAAKP;EAClB;EAED,IAAA,QAAIS;AACF,WAAOV,KAAKQ,KAAKL,WAAYH,KAAKQ,KAAoBE,QAAQ;EAC/D;EAED,IAAA,UAAIC;AACF,WAAOX,KAAKQ,KAAKL,WAAYH,KAAKQ,KAAoBG,UAAU;EACjE;EAED,IAAA,SAAIC;AACF,WAAOZ,KAAKQ,KAAKN,WAEbF,KAAKQ,KAAKJ,aADTJ,KAAKQ,KAAmBI,SAGzB;EACL;EAED,IAAA,QAAIC;AACF,WAAOb,KAAKQ,KAAKN,UAAWF,KAAKQ,KAAmBK,QAAQ;EAC7D;EAED,IAAA,SAAIC;AACF,WAAOd,KAAKQ,KAAKN,UAAWF,KAAKQ,KAAmBM,SAASd,KAAKC;EACnE;AAAA;AAAA,IAGU4B,IAHV,MAGUA;EAIX,YAAY/B,IAAcU,IAAAA;AACxBR,SAAKF,OAAOA,IACZE,KAAKQ,OAAOA;EACb;AAAA;AAAA,IAGUsB,IAHV,MAGUA;EAOX,YACEhC,IACAU,IACAuB,IACAC,IAAAA;AAEAhC,SAAKF,OAAOA,IACZE,KAAKQ,OAAOA,IACZR,KAAK+B,eAAeA,IACpB/B,KAAKgC,WAAWA,IAChBhC,KAAKiC,gBAAgB;EACtB;AAAA;AAAA,IAGUC,IAHV,MAGUA;EAMX,YACEpC,IACAU,IACAuB,IACAC,IAAAA;AAEAhC,SAAKF,OAAOA,IACZE,KAAKQ,OAAOA,IACZR,KAAK+B,eAAeA,IACpB/B,KAAKgC,WAAWA;EACjB;AAAA;AAAA,IAGUG,IAHV,MAGUA;EAMX,YACErC,IACAU,IACAT,IACAqC,IAAAA;AAEApC,SAAKF,OAAOA,IACZE,KAAKQ,OAAOA,IACZR,KAAKD,aAAaA,IAClBC,KAAKoC,KAAKA;EACX;AAAA;AAAA,IAGUC,IAHV,MAGUA;EAKX,YACEvC,IACAU,IACAT,IAAAA;AAEAC,SAAKF,OAAOA,IACZE,KAAKQ,OAAOA,IACZR,KAAKD,aAAaA;EACnB;AAAA;AAAA,IAGUuC,IAHV,MAGUA;EAeX,YAAYxC,IAAcyC,KAAuB,MAAMxC,IAAAA;AAbvDC,SAAKuC,QAAkB,MACvBvC,KAAMwC,SAAgB,CAAA,GACtBxC,KAAOyC,UAAiB,CAAA,GACxBzC,KAAS0C,YAAmB,CAAA,GAC5B1C,KAAU2C,aAAoB,MAC9B3C,KAAS4C,YAAmB,CAAA,GAC5B5C,KAAS6C,YAAmB,CAAA,GAE5B7C,KAASiB,YAAAA,IACTjB,KAAOkB,UAAAA,IACPlB,KAAKmB,QAAAA,OACLnB,KAAA8C,QAA2B,oBAAIC,OAG7B/C,KAAKF,OAAOA,IACZE,KAAKuC,QAAQA,IACbvC,KAAKD,aAAaA;EACnB;AAAA;AAAA,IAGUiD,IAHV,MAGUA;EAAb,cAAAC;AACEjD,SAAMkD,SAAmB,CAAA,GACzBlD,KAAQmD,WAAmB,CAAA,GAC3BnD,KAAOoD,UAAmB,CAAA;EAC3B;AAAA;AC7XK,SAAUC,EAAiBC,IAAAA;AAC7B,MAAIC,MAAe,QAAVD,OAAqB,IAC1BE,MAAe,QAAVF,OAAqB,IAC1BG,KAAc,OAAVH;AAER,SAAS,KAALE,MACMD,KAAAA,KAAO,KAAKG,KAAKC,IAAI,GAAA,GAAI,KAAOF,KAAIC,KAAKC,IAAI,GAAG,EAAA,KAC1C,MAALH,KACFC,KAAIG,MAAsBC,IAAAA,KAAdN,KAAAA,KAAS,MAGtBA,KAAAA,KAAS,KAAKG,KAAKC,IAAI,GAAGH,KAAI,EAAA,KAAO,IAAKC,KAAIC,KAAKC,IAAI,GAAG,EAAA;AACtE;AAEA,IAAMG,IAAc,IAAIC,aAAa,CAAA;AAArC,IACMC,IAAY,IAAIC,WAAWH,EAAYI,MAAAA;AAD7C,IAEMC,IAAc,IAAIC,YAAY,CAAA;AAE9B,SAAUC,EAAiBC,IAAAA;AAC/BR,IAAY,CAAA,IAAKQ;AAEjB,QAAMC,KAAMP,EAAU,CAAA,GAChBQ,KAAQD,MAAO,KAAM;AAC3B,MAAIE,KAAYF,MAAO,KAAM,KACzBG,KAAiB,UAANH;AAEf,MAAiB,QAAbE,GAEF,QADAN,EAAY,CAAA,IAAMK,MAAQ,KAAM,SAAuB,MAAbE,KAAiB,MAAS,IAC7DP,EAAY,CAAA;AAGrB,MAAiB,MAAbM,IAAgB;AAClB,QAAiB,MAAbC,GAEF,QADAP,EAAY,CAAA,IAAKK,MAAQ,IAClBL,EAAY,CAAA;AAGrBO,IAAAA,MAAY;AACZ,QAAIC,KAAQ;AACZ,WAAA,EAAmB,UAAXD,MACNA,CAAAA,OAAa,GACbC;AAIF,WAFAF,KAAW,MAAME,IACjBD,MAAY,SACRD,KAAW,KACbC,MAAYA,MAAa,MAAMD,OAAeC,MAAa,MAAMD,KAAa,IAC9EN,EAAY,CAAA,IAAMK,MAAQ,KAAOC,MAAY,KAAOC,MAAY,IACzDP,EAAY,CAAA,MAEnBA,EAAY,CAAA,IAAKK,MAAQ,IAClBL,EAAY,CAAA;EAEtB;AAID,SADAM,KAAWA,KAAW,MAAM,IACxBA,MAAY,MACdN,EAAY,CAAA,IAAMK,MAAQ,KAAM,OACzBL,EAAY,CAAA,KAEjBM,MAAY,IACVA,KAAAA,OACFN,EAAY,CAAA,IAAKK,MAAQ,IAClBL,EAAY,CAAA,MAErBO,MAAuB,UAAXA,OAAyB,IAAID,IACzCN,EAAY,CAAA,IAAMK,MAAQ,KAAOE,MAAY,IACtCP,EAAY,CAAA,MAGrBO,OAAuB,IACvBP,EAAY,CAAA,IAAMK,MAAQ,KAAOC,MAAY,KAAMC,IAC5CP,EAAY,CAAA;AACrB;AAEA,IAAMS,IAAS,IAAIC,YAAY,CAAA;AAA/B,IACMC,IAAkB,IAAIf,aAAaa,EAAOV,QAAQ,GAAG,CAAA;AAErD,SAAUa,EAAiBC,IAAAA;AAC/B,QAAMC,KAA4B,OAAlBzB,MAAS,IAAK,OAAuB,MAAgB,KAARA,OAAiB;AAE9E,SADAoB,EAAO,CAAA,IAAKK,IACLH,EAAgB,CAAA;AACzB;AAAA,SCgFgBI,EAAgBC,IAAuBC,IAAWC,IAAWC,IAAWC,IAChFC,IAAgBC,IAAqBC,IAAuB9E,IAAAA;AAIhE,QAAMH,KAAU6E,MAHhBG,OAA6BF,OAC7BC,OAAmBD,MAEyBF,KAAII,KAAcL,KAAIM;AAElE,UAAQ9E,IAAAA;IACJ,KAAK;AAED,aAAO,CADO+E,EAAWR,IAAW1E,IAAQ,UAAU,CAAA,EACxC,CAAA,CAAA;IAElB,KAAK;AAED,aAAO,CADOkF,EAAWR,IAAW1E,IAAQ,UAAU,CAAA,EACxC,CAAA,CAAA;IAElB,KAAK;AAED,aAAO,CADOkF,EAAWR,IAAW1E,IAAQ,SAAS,CAAA,EACvC,CAAA,CAAA;IAElB,KAAK;AAED,aAAO,CADOkF,EAAWR,IAAW1E,IAAQ,SAAS,CAAA,EACvC,CAAA,CAAA;IAGlB,KAAK,YAAY;AACb,YAAMmF,KAAQD,EAAWR,IAAW1E,IAAQ,UAAU,CAAA;AACtD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC3B;IACD,KAAK,YAAY;AACb,YAAMA,KAAQD,EAAWR,IAAW1E,IAAQ,UAAU,CAAA;AACtD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC3B;IACD,KAAK,WAAW;AACZ,YAAMA,KAAQD,EAAWR,IAAW1E,IAAQ,SAAS,CAAA;AACrD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC3B;IACD,KAAK,WAAW;AACZ,YAAMA,KAAQD,EAAWR,IAAW1E,IAAQ,SAAS,CAAA;AACrD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC3B;IAED,KAAK;IACL,KAAK,cAAc;AACf,YAAMA,KAAQD,EAAWR,IAAW1E,IAAQ,UAAU,CAAA;AACtD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC/C;IACD,KAAK,cAAc;AACf,YAAMA,KAAQD,EAAWR,IAAW1E,IAAQ,UAAU,CAAA;AACtD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC/C;IACD,KAAK,aAAa;AACd,YAAMA,KAAQD,EAAWR,IAAW1E,IAAQ,SAAS,CAAA;AACrD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC/C;IACD,KAAK,aAAa;AACd,YAAMA,KAAQD,EAAWR,IAAW1E,IAAQ,SAAS,CAAA;AACrD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC/C;IAED,KAAK;IACL,KAAK,cAAc;AACf,YAAMA,KAAQD,EAAWR,IAAW1E,IAAQ,UAAU,CAAA;AACtD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC/C;IAED,KAAK;AAED,aAAO,CADOD,EAAWR,IAAW1E,IAAQ,UAAU,CAAA,EACxC,CAAA,CAAA;IAElB,KAAK;AAED,aAAO,CADOkF,EAAWR,IAAW1E,IAAQ,UAAU,CAAA,EACxC,CAAA,CAAA;IAElB,KAAK;AAED,aAAO,CADOkF,EAAWR,IAAW1E,IAAQ,WAAW,CAAA,EACzC,CAAA,CAAA;IAGlB,KAAK,YAAY;AACb,YAAMmF,KAAQD,EAAWR,IAAW1E,IAAQ,UAAU,CAAA;AACtD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC3B;IACD,KAAK,YAAY;AACb,YAAMA,KAAQD,EAAWR,IAAW1E,IAAQ,UAAU,CAAA;AACtD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC3B;IACD,KAAK,aAAa;AACd,YAAMA,KAAQD,EAAWR,IAAW1E,IAAQ,WAAW,CAAA;AACvD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC3B;IAED,KAAK,cAAc;AACf,YAAMA,KAAQD,EAAWR,IAAW1E,IAAQ,UAAU,CAAA;AACtD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC/C;IACD,KAAK,cAAc;AACf,YAAMA,KAAQD,EAAWR,IAAW1E,IAAQ,UAAU,CAAA;AACtD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC/C;IACD,KAAK,eAAe;AAChB,YAAMA,KAAQD,EAAWR,IAAW1E,IAAQ,WAAW,CAAA;AACvD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC/C;IAED,KAAK;AAED,aAAO,CADOD,EAAWR,IAAW1E,IAAQ,UAAU,CAAA,EACxC,CAAA,CAAA;IAElB,KAAK;AAED,aAAO,CADOkF,EAAWR,IAAW1E,IAAQ,UAAU,CAAA,EACxC,CAAA,CAAA;IAElB,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AAED,aAAO,CADOkF,EAAWR,IAAW1E,IAAQ,WAAW,CAAA,EACzC,CAAA,CAAA;IAElB,KAAK,YAAY;AACb,YAAMmF,KAAQD,EAAWR,IAAW1E,IAAQ,UAAU,CAAA;AACtD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC3B;IACD,KAAK,YAAY;AACb,YAAMA,KAAQD,EAAWR,IAAW1E,IAAQ,UAAU,CAAA;AACtD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC3B;IACD,KAAK,aAAa;AACd,YAAMA,KAAQD,EAAWR,IAAW1E,IAAQ,WAAW,CAAA;AACvD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC3B;IACD,KAAK,cAAc;AACf,YAAMA,KAAQD,EAAWR,IAAW1E,IAAQ,UAAU,CAAA;AACtD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC/C;IACD,KAAK,cAAc;AACf,YAAMA,KAAQD,EAAWR,IAAW1E,IAAQ,UAAU,CAAA;AACtD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC/C;IACD,KAAK,eAAe;AAChB,YAAMA,KAAQD,EAAWR,IAAW1E,IAAQ,WAAW,CAAA;AACvD,aAAO,CAACmF,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA;IAC/C;IAED,KAAK,iBAAiB;AAClB,YAAMC,KAAY,IAAIhB,YAAYM,GAAUjB,QAAQzD,IAAQ,CAAA,EAAG,CAAA,GAEzDqF,MAAkB,UAAZD,OAAyB,IAC/BE,MAAkB,aAAZF,OAA2B;AAIvC,aAAO,CAHId,EAHY,OAAZc,EAAAA,GAIAd,EAAiBe,EAAAA,IDvOlC,SAA2BE,IAAAA;AAC/B,cAAMf,KAA4B,OAAlBzB,MAAS,IAAK,OAAuB,MAAgB,KAARA,OAAiB;AAE9E,eADAoB,EAAO,CAAA,IAAKK,IACLH,EAAgB,CAAA;MACzB,GCoOwCiB,EAAAA,GACR,CAAA;IACvB;EAAA;AAGL,SAAO;AACX;AAEA,SAASJ,EAAWR,IAAuB1E,IAAgBG,IAAgBqF,IAAAA;AACvE,QAAML,KAAQ,CAAC,GAAG,GAAG,GAAG,CAAA;AACxB,WAASM,KAAI,GAAGA,KAAID,IAAAA,EAAeC,GACjC,SAAQtF,IAAAA;IACN,KAAK;AACHgF,MAAAA,GAAMM,EAAAA,IAAKf,GAAU1E,EAAAA,IAAU,KAC/BA;AACA;IACF,KAAK;AACHmF,MAAAA,GAAMM,EAAAA,IAAMf,GAAU1E,EAAAA,IAAU,MAAO,IAAI,GAC3CA;AACA;IACF,KAAK;AACHmF,MAAAA,GAAMM,EAAAA,IAAKf,GAAU1E,EAAAA,GACrBA;AACA;IACF,KAAK;AACHmF,MAAAA,GAAMM,EAAAA,IAAKf,GAAU1E,EAAAA,IAAU,KAC/BA;AACA;IACF,KAAK;AACHmF,MAAAA,GAAMM,EAAAA,IAAKf,GAAU1E,EAAAA,IAAW0E,GAAU1E,KAAS,CAAA,KAAM,GACzDA,MAAU;AACV;IACF,KAAK;AACHmF,MAAAA,GAAMM,EAAAA,KAAMf,GAAU1E,EAAAA,IAAW0E,GAAU1E,KAAS,CAAA,KAAM,KAAM,OAChEA,MAAU;AACV;IACF,KAAK;AACHmF,MAAAA,GAAMM,EAAAA,IAAK7C,EAAiB8B,GAAU1E,EAAAA,IAAW0E,GAAU1E,KAAS,CAAA,KAAM,CAAA,GAC1EA,MAAU;AACV;IACF,KAAK;IAIL,KAAK;AACHmF,MAAAA,GAAMM,EAAAA,IAAMf,GAAU1E,EAAAA,IAAW0E,GAAU1E,KAAS,CAAA,KAAM,IAAM0E,GAAU1E,KAAS,CAAA,KAAM,KAAO0E,GAAU1E,KAAS,CAAA,KAAM,IACzHA,MAAU;AACV;IACF,KAAK;AACHmF,MAAAA,GAAMM,EAAAA,IAAK,IAAInC,aAAaoB,GAAUjB,QAAQzD,IAAQ,CAAA,EAAG,CAAA,GACzDA,MAAU;EAAA;AAIhB,SAAOmF;AACX;AAEA,SAASO,EAAchB,IAAuB1E,IAAgBG,IAAgBqF,IAAqBL,IAAAA;AAC/F,WAASM,KAAI,GAAGA,KAAID,IAAAA,EAAeC,GACjC,SAAQtF,IAAAA;IACN,KAAK;AACHuE,MAAAA,GAAU1E,EAAAA,IAAqB,MAAXmF,GAAMM,EAAAA,GAC1BzF;AACA;IACF,KAAK;AACH0E,MAAAA,GAAU1E,EAAAA,IAA8B,OAAlBmF,GAAMM,EAAAA,IAAK,KAAc,KAC/CzF;AACA;IACF,KAAK;AACH0E,MAAAA,GAAU1E,EAAAA,IAAUmF,GAAMM,EAAAA,GAC1BzF;AACA;IACF,KAAK;AACH0E,MAAAA,GAAU1E,EAAAA,IAAUmF,GAAMM,EAAAA,IAAK,KAC/BzF;AACA;IACF,KAAK;AACH,UAAI2D,YAAYe,GAAUjB,QAAQzD,IAAQ,CAAA,EAAG,CAAA,IAAKmF,GAAMM,EAAAA,GACxDzF,MAAU;AACV;IACF,KAAK;AACH,UAAI2F,WAAWjB,GAAUjB,QAAQzD,IAAQ,CAAA,EAAG,CAAA,IAAKmF,GAAMM,EAAAA,GACvDzF,MAAU;AACV;IACF,KAAK,WAAW;AACd,YAAM4F,KAAMhC,EAAiBuB,GAAMM,EAAAA,CAAAA;AACnC,UAAI9B,YAAYe,GAAUjB,QAAQzD,IAAQ,CAAA,EAAG,CAAA,IAAK4F,IAClD5F,MAAU;AACV;IACD;IACD,KAAK;AACH,UAAIoE,YAAYM,GAAUjB,QAAQzD,IAAQ,CAAA,EAAG,CAAA,IAAKmF,GAAMM,EAAAA,GACxDzF,MAAU;AACV;IACF,KAAK;AACH,UAAIwD,WAAWkB,GAAUjB,QAAQzD,IAAQ,CAAA,EAAG,CAAA,IAAKmF,GAAMM,EAAAA,GACvDzF,MAAU;AACV;IACF,KAAK;AACH,UAAIsD,aAAaoB,GAAUjB,QAAQzD,IAAQ,CAAA,EAAG,CAAA,IAAKmF,GAAMM,EAAAA,GACzDzF,MAAU;EAAA;AAIhB,SAAOmF;AACX;ACtaO,IAAMU,IAAoB,EAC7BC,SAAW,EAAEC,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GACvGC,SAAW,EAAEL,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GACvGE,QAAU,EAAEN,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GACtGG,QAAU,EAAEP,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GACtGI,UAAY,EAAER,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GACxGK,UAAY,EAAET,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GACxGM,SAAW,EAAEV,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GACvGO,SAAW,EAAEX,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAEvGQ,YAAc,EAAEZ,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAC1G,mBAAmB,EAAEJ,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAC/GS,YAAc,EAAEb,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAC1GU,WAAa,EAAEd,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GACzGW,WAAa,EAAEf,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GACzGY,YAAc,EAAEhB,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAC1G,mBAAmB,EAAEJ,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAE/Ga,SAAW,EAAEjB,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GACvGc,SAAW,EAAElB,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GACvGe,UAAY,EAAEnB,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAExGgB,UAAY,EAAEpB,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GACxGiB,UAAY,EAAErB,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GACxGkB,WAAa,EAAEtB,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAEzGmB,YAAc,EAAEvB,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAC1GoB,YAAc,EAAExB,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAC1GqB,aAAe,EAAEzB,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAE3GsB,SAAW,EAAE1B,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GACvGuB,SAAW,EAAE3B,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GACvGwB,UAAY,EAAE5B,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAExGyB,UAAY,EAAE7B,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GACxG0B,UAAY,EAAE9B,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GACxG2B,WAAa,EAAE/B,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAEzG4B,YAAc,EAAEhC,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAC3G6B,YAAc,EAAEjC,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAC3G8B,aAAe,EAAElC,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAC5G+B,aAAe,EAAEnC,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAC3GgC,cAAgB,EAAEpC,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAC5GiC,eAAiB,EAAErC,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAG7GkC,UAAY,EAAEtC,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBoC,gBAAAA,MAAwBC,UAAAA,OAAmBC,YAAAA,MAAoBrC,UAAY,EAAA,GACvKsC,cAAgB,EAAE1C,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBoC,gBAAAA,MAAwBC,UAAAA,MAAkBC,YAAAA,OAAqBrC,UAAY,EAAA,GAC3KuC,aAAe,EAAE3C,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBoC,gBAAAA,MAAwBC,UAAAA,MAAkBC,YAAAA,OAAqBG,iBAAmB,gBAAgBxC,UAAY,EAAA,GAC7M,wBAAwB,EAAEJ,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBoC,gBAAAA,MAAwBC,UAAAA,MAAkBC,YAAAA,MAAoBG,iBAAmB,gBAAgBxC,UAAY,EAAA,GACrNyC,cAAgB,EAAE7C,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBoC,gBAAAA,MAAwBC,UAAAA,MAAkBC,YAAAA,OAAqBrC,UAAY,EAAA,GAC3K,yBAAyB,EAAEJ,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBoC,gBAAAA,MAAwBC,UAAAA,MAAkBC,YAAAA,MAAoBK,mBAAqB,gBAAgB1C,UAAY,EAAA,GAGxN2C,cAAgB,EAAE/C,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,OAAuBC,UAAY,EAAA,GAG5G,kBAAkB,EAAEJ,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC7G,uBAAuB,EAAEJ,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAClH,kBAAkB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC9G,uBAAuB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GACnH,kBAAkB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC9G,uBAAuB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAEnH,eAAe,EAAEJ,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC1G,eAAe,EAAEJ,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAE1G,gBAAgB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC5G,gBAAgB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAE5G,mBAAmB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC/G,kBAAkB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC9G,kBAAkB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC9G,uBAAuB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAEnH,kBAAkB,EAAEJ,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC7G,uBAAuB,EAAEJ,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAClH,oBAAoB,EAAEJ,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC/G,yBAAyB,EAAEJ,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GACpH,mBAAmB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC/G,wBAAwB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAEpH,gBAAgB,EAAEJ,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC3G,gBAAgB,EAAEJ,eAAiB,GAAGC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAE3G,iBAAiB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC7G,iBAAiB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAE7G,kBAAkB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC9G,uBAAuB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GACnH,kBAAkB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC9G,uBAAuB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GACnH,kBAAkB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC9G,uBAAuB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GACnH,kBAAkB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC9G,uBAAuB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GACnH,kBAAkB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC9G,uBAAuB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GACnH,kBAAkB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC9G,uBAAuB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GACnH,kBAAkB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC9G,uBAAuB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GACnH,kBAAkB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAC9G,uBAAuB,EAAEJ,eAAiB,IAAIC,YAAc,GAAGC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GACnH,mBAAmB,EAAEJ,eAAiB,IAAIC,YAAc,IAAIC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAChH,wBAAwB,EAAEJ,eAAiB,IAAIC,YAAc,IAAIC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GACrH,mBAAmB,EAAEJ,eAAiB,IAAIC,YAAc,IAAIC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAChH,wBAAwB,EAAEJ,eAAiB,IAAIC,YAAc,IAAIC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GACrH,mBAAmB,EAAEJ,eAAiB,IAAIC,YAAc,IAAIC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GAChH,wBAAwB,EAAEJ,eAAiB,IAAIC,YAAc,IAAIC,aAAe,GAAGC,cAAAA,MAAsBC,UAAY,EAAA,GACrH,oBAAoB,EAAEJ,eAAiB,IAAIC,YAAc,IAAIC,aAAe,IAAIC,cAAAA,MAAsBC,UAAY,EAAA,GAClH,yBAAyB,EAAEJ,eAAiB,IAAIC,YAAc,IAAIC,aAAe,IAAIC,cAAAA,MAAsBC,UAAY,EAAA,GACvH,oBAAoB,EAAEJ,eAAiB,IAAIC,YAAc,IAAIC,aAAe,IAAIC,cAAAA,MAAsBC,UAAY,EAAA,GAClH,yBAAyB,EAAEJ,eAAiB,IAAIC,YAAc,IAAIC,aAAe,IAAIC,cAAAA,MAAsBC,UAAY,EAAA,GACvH,oBAAoB,EAAEJ,eAAiB,IAAIC,YAAc,IAAIC,aAAe,IAAIC,cAAAA,MAAsBC,UAAY,EAAA,GAClH,yBAAyB,EAAEJ,eAAiB,IAAIC,YAAc,IAAIC,aAAe,IAAIC,cAAAA,MAAsBC,UAAY,EAAA,EAAA;AAAA,ICxG9G4C,IDwG8G,MCxG9GA,GAAAA;EAMX,cAAAvG;AACEjD,SAAKoC,KAAKoH,GAAKC,OACfzJ,KAAK0J,OAAO;EACb;EAED,IAAA,YAAIC;AACF,WAAA;EACD;EAED,IAAA,cAAIC;AACF,WAAO;EACR;EAED,OAAOC,IAAAA;AACLA,IAAAA,GAAS7J,IAAAA;EACV;EAED,YAAY8J,IAAsBD,IAAAA;AAChC,QAAIC,IAAO;AACTD,MAAAA,GAASE,EAAYC,QAAAA;AACrB,iBAAWC,MAAQH,GACbG,CAAAA,cAAgBC,QAClBlK,KAAKmK,YAAYF,IAAgBJ,EAAAA,IAEjCI,GAAKG,OAAOP,EAAAA;AAGhBA,MAAAA,GAASQ,EAAUL,QAAAA;IACpB;EACF;EAED,cAAcM,IAAmB9J,IAAAA;AAC/B,UAAM,IAAI+J,MAAM,sBAAA;EACjB;EAED,oBAAoBD,IAAAA;AAClB,WAAOtK,KAAKwK,cAAcF,EAAAA,EAASG,SAAAA;EACpC;AAAA;AA1CMjB,EAAGC,MAAG;AA8CT,IAAOM,IAAP,cAA2BP,EAAAA;AAAAA;AACxBO,EAAAC,WAAW,IAAID;AAIlB,IAAOM,IAAP,cAAyBb,EAAAA;AAAAA;AACtBa,EAAAL,WAAW,IAAIK;AAGxB,IAAMK,IAAuB,oBAAI3H,IAAI,CACnC,OACA,OACA,OACA,UACA,eACA,OACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,OACA,QACA,qBACA,gBACA,sBACA,SACA,WACA,eACA,YACA,OACA,gBACA,gBACA,OACA,QACA,eACA,eACA,mBACA,oBACA,SACA,OACA,SACA,SACA,cACA,eACA,SACA,UACA,OACA,QACA,OACA,OACA,OACA,QACA,aACA,OACA,iBACA,WACA,WACA,WACA,eACA,SACA,YACA,QACA,OACA,QACA,cACA,QACA,QACA,OACA,QACA,aACA,SACA,QACA,cACA,YACA,QACA,cACA,YACA,UACA,gBACA,cACA,qBACA,iBACA,wBACA,eACA,oBACA,oBACA,qBACA,iBACA,qBACA,w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",
  "names": ["_", "React", "import_react", "message", "window_", "document_", "_a", "userAgent", "isBrowser", "isBrowser", "userAgent", "x", "e", "length", "COLOR", "isBrowser", "name", "assert", "message", "_a", "_e", "isBrowser", "window_", "isBrowser", "message", "assert", "VERSION", "log", "_a", "VERSION", "assert", "message", "globals", "self_", "window_", "global_", "document_", "isBrowser", "isMobile", "matches", "nodeVersion", "resolve", "assert", "assert", "name", "source", "assert", "isBrowser", "message", "name", "onMessage", "isBrowser", "isMobile", "name", "source", "isBrowser", "version", "assert", "VERSION", "assert", "ChildProcess", "isBrowser", "name", "message", "i", "source2", "length", "getHiResTimestamp", "name", "getHiResTimestamp", "name", "filename", "buffer", "toArrayBuffer", "_a", "i", "j", "NOT_IMPLEMENTED", "x", "x", "x", "x", "isBuffer", "x", "x", "message", "matches", "matches", "message", "resolve", "_a", "buffer", "i", "_a", "defaultOptions", "getFirstCharacters", "message", "_a", "getMagicString", "length", "arrayBuffer", "i", "DEFAULT_CHUNK_SIZE", "arrayBuffer", "DEFAULT_CHUNK_SIZE", "toArrayBuffer", "isBuffer", "arrayBuffer", "assert", "Type", "fetch", "VERSION", "canvas", "arrayBuffer", "arrayBuffer", "URL", "resolve", "message", "arrayBuffer", "buffer", "i", "buffer", "i", "arrayBuffer", "_a", "parseImageNode", "arrayBuffer", "VERSION", "arrayBuffer", "_a", "log", "message", "version", "VERSION", "assert", "message", "name", "source", "a", "b", "i", "len", "defaultProps", "log", "_a", "a", "b", "name", "source", "_a", "a", "b", "name", "source", "version", "vs", "fs", "_a", "source", "log", "assert", "name", "defines", "getUniforms", "source", "_a", "m", "source", "getUniforms", "count", "i", "len", "name", "name", "log", "count", "defaultProps", "name", "arrayBuffer", "matches", "length", "_a", "_a", "source", "log", "isBrowser", "log", "_a", "webgl2Adapter", "map", "resolve", "isBrowser", "canvas", "_a", "log", "x", "y", "t", "r", "_a", "source", "log", "a", "b", "message", "i", "_a", "getShaderName", "_a", "log", "attachment", "i", "_a", "TYPE_SIZES", "count", "name", "log", "_a", "attributeMapping", "count", "Type", "length", "uniformTypes", "count", "arrayBuffer", "name", "log", "a", "b", "i", "_a", "uniformBlock", "uniformBlock", "_a", "log", "getDataTypeFromTypedArray", "name", "_a", "log", "a", "b", "name", "TypeInfo", "name", "attributes", "this", "size", "isArray", "isStruct", "isTemplate", "isPointer", "getTypeName", "MemberInfo", "type", "offset", "align", "members", "format", "count", "stride", "StructInfo", "super", "startLine", "endLine", "inUse", "ArrayInfo", "PointerInfo", "TemplateInfo", "access", "ResourceType", "VariableInfo", "group", "binding", "resourceType", "AliasInfo", "InputInfo", "locationType", "location", "interpolation", "OutputInfo", "OverrideInfo", "id", "ArgumentInfo", "FunctionInfo", "stage", "inputs", "outputs", "arguments", "returnType", "resources", "overrides", "calls", "Set", "EntryFunctions", "constructor", "vertex", "fragment", "compute", "float16ToFloat32", "float16", "s", "e", "f", "Math", "pow", "NaN", "Infinity", "float32View", "Float32Array", "int32View", "Int32Array", "buffer", "float16View", "Uint16Array", "float32ToFloat16", "float32", "f32", "sign", "exponent", "fraction", "shift", "uint32", "Uint32Array", "uint32ToFloat32", "float11ToFloat32", "f11", "u32", "getTexturePixel", "imageData", "x", "y", "z", "mipLevel", "height", "bytesPerRow", "texelByteSize", "pixelValue", "value", "uintValue", "gi", "bi", "f10", "numChannels", "i", "setPixelValue", "Int16Array", "f16", "TextureFormatInfo", "r8unorm", "bytesPerBlock", "blockWidth", "blockHeight", "isCompressed", "channels", "r8snorm", "r8uint", "r8sint", "rg8unorm", "rg8snorm", "rg8uint", "rg8sint", "rgba8unorm", "rgba8snorm", "rgba8uint", "rgba8sint", "bgra8unorm", "r16uint", "r16sint", "r16float", "rg16uint", "rg16sint", "rg16float", "rgba16uint", "rgba16sint", "rgba16float", "r32uint", "r32sint", "r32float", "rg32uint", "rg32sint", "rg32float", "rgba32uint", "rgba32sint", "rgba32float", "rgb10a2uint", "rgb10a2unorm", "rg11b10ufloat", "stencil8", "isDepthStencil", "hasDepth", "hasStencil", "depth16unorm", "depth24plus", "depthOnlyFormat", "depth32float", "stencilOnlyFormat", "rgb9e5ufloat", "Node", "_id", "line", "isAstNode", "astNodeType", "callback", "block", "_BlockStart", "instance", "node", "Array", "searchBlock", "search", "_BlockEnd", "context", "Error", "constEvaluate", "toString", "BuiltinFunctionNames", "Statement", "Function", "args", "body", "attr", "arg", "StaticAssert", "expression", "While", "condition", "Continuing", "loopId", "For", "init", "increment", "_a", "_b", "_c", "Var", "storage", "Override", "Let", "Const", "IncrementOperator", "AssignOperator", "TokenClass", "parse", "val", "key", "Increment", "operator", "variable", "Assign", "Call", "isBuiltin", "has", "Loop", "continuing", "Switch", "cases", "If", "elseif", "_else", "else", "Return", "Enable", "Requires", "extensions", "Diagnostic", "severity", "rule", "Alias", "Discard", "Break", "Continue", "Type", "t", "length", "tv", "_priority", "get", "i32", "x32", "bool", "void", "Map", "ForwardType", "Struct", "member", "TemplateType", "vec2f", "vec3f", "vec4f", "vec2i", "vec3i", "vec4i", "vec2u", "vec3u", "vec4u", "vec2h", "vec3h", "vec4h", "vec2b", "vec3b", "vec4b", "mat2x2f", "mat2x3f", "mat2x4f", "mat3x2f", "mat3x3f", "mat3x4f", "mat4x2f", "mat4x3f", "mat4x4f", "mat2x2h", "mat2x3h", "mat2x4h", "mat3x2h", "mat3x3h", "mat3x4h", "mat4x2h", "mat4x3h", "mat4x4h", "mat2x2i", "mat2x3i", "mat2x4i", "mat3x2i", "mat3x3i", "mat3x4i", "mat4x2i", "mat4x3i", "mat4x4i", "mat2x2u", "mat2x3u", "mat2x4u", "mat3x2u", "mat3x3u", "mat3x4u", "mat4x2u", "mat4x3u", "mat4x4u", "PointerType", "ArrayType", "SamplerType", "Expression", "postfix", "StringExpr", "constEvaluateString", "CreateExpr", "evalExpression", "CallExpr", "cachedReturnValue", "VariableExpr", "ConstExpr", "initializer", "data", "getSubData", "LiteralExpr", "isScalar", "ScalarData", "isVector", "VectorData", "MatrixData", "scalarValue", "console", "error", "vectorValue", "BitcastExpr", "ArrayIndex", "Expression", "index", "super", "this", "callback", "search", "Operator", "constructor", "UnaryOperator", "operator", "right", "astNodeType", "context", "type", "evalExpression", "BinaryOperator", "left", "t1", "t2", "name", "Type", "f32", "u32", "i32", "SwitchCase", "Node", "body", "searchBlock", "DefaultSelector", "Case", "selectors", "Default", "Argument", "attributes", "ElseIf", "condition", "Member", "Attribute", "value", "Data", "typeInfo", "parent", "id", "_id", "clone", "exec", "postfix", "console", "error", "toString", "getTypeName", "VoidData", "TypeInfo", "void", "PointerData", "reference", "PointerInfo", "setDataValue", "getSubData", "ScalarData", "Int32Array", "Uint32Array", "Float32Array", "data", "Math", "floor", "v", "_getVectorData", "values", "formatName", "size", "length", "VectorData", "getTypeInfo", "typename", "StringExpr", "format", "TemplateInfo", "typeName", "self", "idx", "i", "LiteralExpr", "d", "buffer", "byteOffset", "member", "toLowerCase", "m", "push", "s", "MatrixData", "endsWith", "formatSuffix", "vectorData", "TypedData", "offset", "ArrayBuffer", "cloned", "Uint8Array", "log", "ArrayInfo", "stride", "StructInfo", "found", "members", "element", "setData", "x", "byteLength", "set", "_i", "fa", "ua", "_a", "_b", "_c", "TextureData", "descriptor", "view", "width", "Array", "e", "Object", "t", "height", "depthOrArrayLayers", "sampleCount", "mipLevelCount", "dimension", "level", "max", "texelByteSize", "formatInfo", "TextureFormatInfo", "isDepthStencil", "bytesPerBlock", "bytesPerRow", "getGpuSize", "blockWidth", "blockHeight", "y", "z", "mipLevel", "getTexturePixel", "imageData", "setPixelValue", "TokenClass", "TokenType", "rule", "TokenTypes", "none", "reserved", "eof", "token", "asm", "bf16", "do", "enum", "f16", "f64", "handle", "i8", "i16", "i64", "mat", "premerge", "regardless", "typedef", "u8", "u16", "u64", "unless", "using", "vec", "keywords", "array", "keyword", "atomic", "bool", "mat2x2", "mat2x3", "mat2x4", "mat3x2", "mat3x3", "mat3x4", "mat4x2", "mat4x3", "mat4x4", "ptr", "sampler", "sampler_comparison", "struct", "texture_1d", "texture_2d", "texture_2d_array", "texture_3d", "texture_cube", "texture_cube_array", "texture_multisampled_2d", "texture_storage_1d", "texture_storage_2d", "texture_storage_2d_array", "texture_storage_3d", "texture_depth_2d", "texture_depth_2d_array", "texture_depth_cube", "texture_depth_cube_array", "texture_depth_multisampled_2d", "texture_external", "vec2", "vec3", "vec4", "bitcast", "block", "break", "case", "continue", "continuing", "default", "diagnostic", "discard", "else", "enable", "fallthrough", "false", "fn", "for", "function", "if", "let", "const", "loop", "while", "private", "read", "read_write", "return", "requires", "storage", "switch", "true", "alias", "uniform", "var", "override", "workgroup", "write", "r8unorm", "r8snorm", "r8uint", "r8sint", "r16uint", "r16sint", "r16float", "rg8unorm", "rg8snorm", "rg8uint", "rg8sint", "r32uint", "r32sint", "r32float", "rg16uint", "rg16sint", "rg16float", "rgba8unorm", "rgba8unorm_srgb", "rgba8snorm", "rgba8uint", "rgba8sint", "bgra8unorm", "bgra8unorm_srgb", "rgb10a2unorm", "rg11b10float", "rg32uint", "rg32sint", "rg32float", "rgba16uint", "rgba16sint", "rgba16float", "rgba32uint", "rgba32sint", "rgba32float", "static_assert", "tokens", "decimal_float_literal", "hex_float_literal", "int_literal", "uint_literal", "ident", "and", "and_and", "arrow", "attr", "forward_slash", "bang", "bracket_left", "bracket_right", "brace_left", "brace_right", "colon", "comma", "equal", "equal_equal", "not_equal", "greater_than", "greater_than_equal", "shift_right", "less_than", "less_than_equal", "shift_left", "modulo", "minus", "minus_minus", "period", "plus", "plus_plus", "or", "or_or", "paren_left", "paren_right", "semicolon", "star", "tilde", "underscore", "xor", "plus_equal", "minus_equal", "times_equal", "division_equal", "modulo_equal", "and_equal", "or_equal", "xor_equal", "shift_right_equal", "shift_left_equal", "simpleTokens", "literalTokens", "_", "regexTokens", "storage_class", "access_mode", "sampler_type", "sampled_texture_type", "multisampled_texture_type", "storage_texture_type", "depth_texture_type", "texture_external_type", "any_texture_type", "texel_format", "const_literal", "literal_or_ident", "element_count_expression", "template_types", "attribute_name", "assignment_operators", "increment_operators", "Token", "lexeme", "line", "start", "end", "isTemplateType", "indexOf", "isArrayType", "isArrayOrTemplateType", "WgslScanner", "source", "_tokens", "_start", "_current", "_line", "_source", "scanTokens", "_isAtEnd", "scanToken", "_advance", "_isWhitespace", "_peekAhead", "commentLevel", "simpleToken", "_addToken", "matchType", "isAlpha", "_isAlpha", "isUnderscore", "_isAlphaNumeric", "nextChar", "matchedType", "_findType", "nextLexeme", "ti", "foundLessThan", "count", "lookAheadLexeme", "lookAhead", "maxLookAhead", "li", "_match", "match", "c", "_isNumeric", "amount", "text", "substring", "isArray", "_f32", "_f32_i32", "_f32_u32", "_i32", "_i32_f32", "_i32_u32", "_u32", "_u32_f32", "_u32_i32", "castScalar", "from", "to", "_FunctionResources", "node", "resources", "inUse", "info", "_TypeSize", "align", "Reflect", "uniforms", "textures", "samplers", "aliases", "overrides", "structs", "entry", "EntryFunctions", "functions", "_types", "Map", "_functions", "ast", "Function", "Struct", "Alias", "_getAliasInfo", "Override", "_getAttributeNum", "OverrideInfo", "_isUniformVar", "g", "b", "varInfo", "VariableInfo", "ResourceType", "Uniform", "access", "_isStorageVar", "isStorageTexture", "_isStorageTexture", "StorageTexture", "Storage", "_isTextureVar", "Texture", "_isSamplerVar", "Sampler", "vertexStage", "_getAttribute", "fragmentStage", "computeStage", "stage", "FunctionInfo", "startLine", "endLine", "get", "_findResources", "inputs", "_getInputs", "args", "outputs", "_getOutputs", "returnType", "arguments", "map", "arg", "ArgumentInfo", "_addCalls", "calls", "VariableExpr", "u", "_markStructsInUse", "o", "isStruct", "isTemplate", "_getAlias", "call", "add", "group", "binding", "compute", "r", "vertex", "fragment", "isEntry", "varStack", "_BlockStart", "_BlockEnd", "pop", "Var", "_markStructsFromAST", "CreateExpr", "Let", "_findResource", "CallExpr", "callFn", "Call", "getBindGroups", "groups", "_makeRoom", "undefined", "_getStructOutputs", "output", "_getOutputInfo", "location", "locationValue", "_parseInt", "OutputInfo", "_getStructInputs", "input", "_getInputInfo", "interpolation", "InputInfo", "_parseString", "n", "parseInt", "isNaN", "a", "AliasInfo", "has", "PointerType", "_updateTypeInfo", "ArrayType", "MemberInfo", "SamplerType", "formatIsType", "TemplateType", "typeSize", "_getTypeSize", "_updateStructInfo", "lastSize", "lastOffset", "structAlign", "mi", "ml", "sizeInfo", "_roundUp", "explicitSize", "explicitAlign", "_typeInfo", "divisor", "arrayType", "E", "_textureTypes", "_samplerTypes", "obj", "attrs", "defaultValue", "k", "ceil", "VarRef", "FunctionRef", "ExecContext", "variables", "currentFunctionName", "getVariable", "getFunction", "createVariable", "ExecInterface", "BuiltinFunctions", "isTrue", "forEach", "Error", "res", "some", "arrayArg", "arrayData", "ta", "abs", "acos", "acosh", "asin", "asinh", "atan", "atanh", "atan2", "ys", "xs", "min", "_clamp", "minS", "maxS", "cos", "cosh", "clz32", "_countOneBits", "_countTrailingZeros", "l", "lv", "rv", "radToDeg", "PI", "mv", "mt", "formatType", "sum", "sqrt", "ls", "rs", "e1", "e2", "dot", "_dot", "exp", "pow", "_firstLeadingBit", "log2", "_firstTrailingBit", "av", "bv", "cv", "insert", "mask", "invMask", "as", "Length", "e3", "sqrtK", "round", "sign", "sin", "sinh", "edge0", "edge1", "_smoothstep", "e0", "xS", "edge", "tan", "tanh", "tname", "ttype", "_getTransposeType", "trunc", "textureArg", "textureName", "texture", "getVariableValue", "textureSize", "getMipLevelSize", "slice", "uv", "texel", "getPixel", "setPixel", "getVariableName", "currentValue", "originalValue", "VectorTypeSize", "vec2f", "vec2i", "vec2u", "vec2b", "vec2h", "vec3f", "vec3i", "vec3u", "vec3b", "vec3h", "vec4f", "vec4i", "vec4u", "vec4b", "vec4h", "MatrixTypeSize", "mat2x2f", "mat2x2h", "mat2x3f", "mat2x3h", "mat2x4f", "mat2x4h", "mat3x2f", "mat3x2h", "mat3x3f", "mat3x3h", "mat3x4f", "mat3x4h", "mat4x2f", "mat4x2h", "mat4x3f", "mat4x3h", "mat4x4f", "mat4x4h", "WgslExec", "reflection", "updateAST", "builtins", "config", "_setOverrides", "_execStatements", "kernel", "dispatchCount", "bindGroups", "f", "depth", "setVariable", "kernelRefl", "getFunctionInfo", "resource", "textureData", "_dispatchWorkgroup", "stmt", "Return", "Break", "_breakObj", "Continue", "_continueObj", "_let", "_var", "Const", "_const", "_function", "If", "_if", "Switch", "_switch", "For", "_for", "While", "_while", "Loop", "_loop", "Continuing", "subContext", "Assign", "_assign", "Increment", "_increment", "_call", "Diagnostic", "_evalBinaryOp", "_evalLiteral", "_evalVariable", "_evalCall", "_evalCreate", "ConstExpr", "_evalConst", "BitcastExpr", "_evalBitcast", "_evalUnaryOp", "getTypeInfoByName", "constants", "getOverrideInfo", "workgroup_id", "workgroupSize", "local_invocation_id", "global_invocation_id", "_dispatchExec", "globalName", "globalVar", "statements", "execStatement", "ai", "isBuiltin", "_callBuiltinFunction", "variable", "refData", "_getVariableData", "varData", "assignValue", "op", "rNode", "defType", "defaultCase", "cases", "selector", "selectorValue", "elseif", "init", "_getScalarValue", "increment", "fromType", "fromCast", "toType", "toCast", "cast", "_callConstructorValue", "_callConstructorVec", "_callConstructorMatrix", "memberInfo", "scalarValue", "tv", "_priority", "_r", "result", "rn", "_maxFormatTypeInfo", "_l", "la", "ra", "ln", "matrixA", "matrixB", "j", "colsB", "rowsA", "matrix", "vector", "cols", "rows", "resultVec", "cachedReturnValue", "All", "Any", "Select", "ArrayLength", "Abs", "Acos", "Acosh", "Asin", "Asinh", "Atan", "Atanh", "Atan2", "Ceil", "Clamp", "Cos", "Cosh", "CountLeadingZeros", "CountOneBits", "CountTrailingZeros", "Cross", "Degrees", "Determinant", "Distance", "Dot", "Dot4U8Packed", "Dot4I8Packed", "Exp", "Exp2", "ExtractBits", "FaceForward", "FirstLeadingBit", "FirstTrailingBit", "Floor", "Fma", "Fract", "Frexp", "InsertBits", "InverseSqrt", "Ldexp", "Log", "Log2", "Max", "Min", "Mix", "Modf", "Normalize", "Pow", "QuantizeToF16", "Radians", "Refract", "ReverseBits", "Round", "Saturate", "Sign", "Sin", "Sinh", "SmoothStep", "Sqrt", "Step", "Tan", "Tanh", "Transpose", "Trunc", "Dpdx", "DpdxCoarse", "DpdxFine", "Dpdy", "DpdyCoarse", "DpdyFine", "Fwidth", "FwidthCoarse", "FwidthFine", "TextureDimensions", "TextureGather", "TextureGatherCompare", "TextureLoad", "TextureNumLayers", "TextureNumLevels", "TextureNumSamples", "TextureSample", "TextureSampleBias", "TextureSampleCompare", "TextureSampleCompareLevel", "TextureSampleGrad", "TextureSampleLevel", "TextureSampleBaseClampToEdge", "TextureStore", "AtomicLoad", "AtomicStore", "AtomicAdd", "AtomicSub", "AtomicMax", "AtomicMin", "AtomicAnd", "AtomicOr", "AtomicXor", "AtomicExchange", "AtomicCompareExchangeWeak", "Pack4x8snorm", "Pack4x8unorm", "Pack4xI8", "Pack4xU8", "Pack4x8Clamp", "Pack4xU8Clamp", "Pack2x16snorm", "Pack2x16unorm", "Pack2x16float", "Unpack4x8snorm", "Unpack4x8unorm", "Unpack4xI8", "Unpack4xU8", "Unpack2x16snorm", "Unpack2x16unorm", "Unpack2x16float", "StorageBarrier", "TextureBarrier", "WorkgroupBarrier", "WorkgroupUniformLoad", "SubgroupAdd", "SubgroupExclusiveAdd", "SubgroupInclusiveAdd", "SubgroupAll", "SubgroupAnd", "SubgroupAny", "SubgroupBallot", "SubgroupBroadcast", "SubgroupBroadcastFirst", "SubgroupElect", "SubgroupMax", "SubgroupMin", "SubgroupMul", "SubgroupExclusiveMul", "SubgroupInclusiveMul", "SubgroupOr", "SubgroupShuffle", "SubgroupShuffleDown", "SubgroupShuffleUp", "SubgroupShuffleXor", "SubgroupXor", "QuadBroadcast", "QuadSwapDiagonal", "QuadSwapX", "QuadSwapY", "isVector", "vectorValue", "argValue", "vd", "fill", "ParseContext", "WgslParser", "_currentLine", "_deferArrayCountEval", "_currentLoop", "_context", "_exec", "_forwardTypeCount", "tokensOrCode", "_initialize", "statement", "_global_decl_or_directive", "arrayDecl", "countNode", "AST.VariableExpr", "constant", "constEvaluate", "AST.Member", "AST.PointerType", "_forwardType", "AST.ArrayType", "AST.Var", "AST.Let", "AST.Const", "AST.Function", "AST.Argument", "AST.ForwardType", "ft", "_getType", "scanner", "message", "_peek", "types", "_check", "_error", "tk", "hasNameType", "_previous", "_type_alias", "_consume", "directive", "_diagnostic", "_requires_directive", "_enable_directive", "_attribute", "_global_variable_decl", "_override", "_override_variable_decl", "_global_let_decl", "_global_const_decl", "_struct", "_struct_decl", "_fn", "_function_decl", "argAttrs", "typeAttrs", "_type_decl", "_updateNode", "_return", "_compound_statement", "_statement", "_if_statement", "_switch_statement", "_loop_statement", "_for_statement", "_while_statement", "_continuing_statement", "_static_assert_statement", "_return_statement", "_variable_statement", "AST.Discard", "breakStmt", "AST.Break", "loopId", "_optional_paren_expression", "continueStmt", "AST.Continue", "_increment_decrement_statement", "_func_call_statement", "_assignment_statement", "expression", "AST.StaticAssert", "whileLoop", "AST.While", "AST.Continuing", "forLoop", "AST.For", "_for_init", "_short_circuit_or_expression", "_for_increment", "_variable_decl", "AST.LiteralExpr", "savedPos", "_unary_expression", "AST.Increment", "AST.IncrementOperator", "decrement", "AST.Assign", "AST.AssignOperator", "parse", "_argument_expression_list", "AST.Call", "AST.Loop", "switchStmt", "AST.Switch", "_switch_body", "hasDefault", "_case_selectors", "AST.DefaultSelector", "_case_body", "AST.Case", "AST.Default", "_shift_expression", "nextStatement", "_match_elseif", "_elseif_statement", "_else", "AST.If", "AST.ElseIf", "AST.Return", "expr", "_short_circuit_and_expr", "AST.BinaryOperator", "_inclusive_or_expression", "_exclusive_or_expression", "_and_expression", "_equality_expression", "_relational_expression", "_additive_expression", "_multiplicative_expression", "AST.UnaryOperator", "_singular_expression", "_primary_expression", "p", "_postfix_expression", "arrayIndex", "AST.ArrayIndex", "AST.StringExpr", "_getStruct", "AST.Type", "AST.TemplateType", "mat2x2i", "mat2x3i", "mat2x4i", "mat3x2i", "mat3x3i", "mat3x4i", "mat4x2i", "mat4x3i", "mat4x4i", "mat2x2u", "mat2x3u", "mat2x4u", "mat3x2u", "mat3x3u", "mat3x4u", "mat4x2u", "mat4x3u", "mat4x4u", "AST.CreateExpr", "AST.CallExpr", "AST.ConstExpr", "x32", "_validateTypeRange", "fs", "isF16", "parseFloat", "_paren_expression", "AST.BitcastExpr", "memberAttrs", "memberName", "memberType", "structNode", "AST.Struct", "_const_expression", "isScalar", "_override_decl", "valueExpr", "constValue", "AST.Override", "severity", "ruleMessage", "AST.Diagnostic", "AST.Enable", "extensions", "AST.Requires", "aliasType", "aliasNode", "AST.Alias", "_texture_sampler_types", "pointer", "decl", "countInt", "AST.SamplerType", "AST.Attribute", "WgslReflect", "code", "update", "source", "_a", "log", "vertex", "i", "message", "degrees", "radians", "min", "max", "value", "a", "b", "t", "i", "i", "i", "target", "a", "b", "t", "scale", "min", "max", "v", "length", "i", "assert", "message", "length", "i", "dist", "assert", "a", "b", "equals", "forEach", "lerp", "round", "round", "a", "a", "x", "y", "b", "round", "scale", "len", "z", "lerp", "t", "r", "m", "x2", "y2", "equals", "forEach", "count", "i", "l", "a", "m", "x", "y", "w", "z", "add", "angle", "ceil", "clone", "copy", "create", "cross", "dist", "distance", "div", "divide", "dot", "equals", "exactEquals", "floor", "forEach", "fromValues", "inverse", "len", "length", "lerp", "max", "min", "mul", "multiply", "negate", "normalize", "random", "round", "scale", "scaleAndAdd", "set", "sqrDist", "sqrLen", "squaredDistance", "squaredLength", "str", "sub", "subtract", "transformMat3", "transformMat4", "zero", "create", "clone", "a", "length", "x", "y", "z", "fromValues", "copy", "set", "add", "b", "subtract", "multiply", "divide", "ceil", "floor", "min", "max", "round", "scale", "scaleAndAdd", "distance", "squaredDistance", "squaredLength", "negate", "inverse", "normalize", "len", "dot", "cross", "lerp", "t", "angle", "c", "d", "random", "r", "transformMat4", "m", "w", "transformMat3", "q", "w2", "p", "zero", "str", "exactEquals", "equals", "a2", "b2", "sub", "mul", "div", "dist", "sqrDist", "sqrLen", "forEach", "count", "i", "l", "x", "y", "z", "angle", "cross", "radians", "transformMat4", "transformMat3", "i", "add", "clone", "copy", "create", "equals", "exactEquals", "fromValues", "mul", "multiply", "rotate", "scale", "set", "str", "sub", "subtract", "create", "a", "clone", "copy", "fromValues", "set", "multiply", "b", "v", "x", "y", "rotate", "s", "c", "scale", "q", "z", "w", "x2", "y2", "z2", "str", "add", "subtract", "exactEquals", "equals", "a2", "a3", "b2", "mul", "sub", "INDICES", "add", "adjoint", "clone", "copy", "create", "determinant", "equals", "exactEquals", "frob", "fromQuat", "fromRotation", "fromScaling", "fromTranslation", "fromValues", "identity", "invert", "mul", "multiply", "multiplyScalar", "multiplyScalarAndAdd", "rotate", "rotateX", "rotateY", "rotateZ", "scale", "set", "str", "sub", "subtract", "translate", "transpose", "create", "clone", "a", "copy", "fromValues", "set", "identity", "transpose", "invert", "adjoint", "determinant", "multiply", "b", "b2", "translate", "v", "x", "y", "z", "scale", "rotate", "len", "c", "s", "t", "rotateX", "rotateY", "rotateZ", "fromTranslation", "fromScaling", "fromRotation", "q", "w", "x2", "y2", "z2", "S", "o", "fromQuat", "f", "target", "str", "frob", "add", "subtract", "multiplyScalar", "multiplyScalarAndAdd", "exactEquals", "equals", "a2", "a3", "mul", "sub", "add", "ceil", "clone", "copy", "create", "cross", "dist", "distance", "div", "divide", "dot", "equals", "exactEquals", "floor", "forEach", "fromValues", "inverse", "len", "length", "lerp", "max", "min", "mul", "multiply", "negate", "normalize", "random", "round", "scale", "scaleAndAdd", "set", "sqrDist", "sqrLen", "squaredDistance", "squaredLength", "str", "sub", "subtract", "transformMat4", "transformQuat", "zero", "create", "clone", "a", "fromValues", "x", "y", "z", "w", "copy", "set", "add", "b", "subtract", "multiply", "divide", "ceil", "floor", "min", "max", "round", "scale", "scaleAndAdd", "distance", "squaredDistance", "length", "squaredLength", "negate", "inverse", "normalize", "len", "dot", "cross", "u", "v", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "lerp", "t", "random", "v2", "s2", "d", "transformMat4", "m", "transformQuat", "q", "zero", "str", "exactEquals", "equals", "a2", "a3", "b2", "sub", "mul", "div", "dist", "sqrDist", "sqrLen", "forEach", "count", "i", "l", "INDICES", "IDENTITY_MATRIX", "fromQuat", "determinant", "scale", "transpose", "invert", "a", "multiply", "radians", "rotateX", "rotateY", "rotateZ", "rotate", "translate", "transformMat4", "length", "x", "y", "z", "ZERO", "add", "clone", "copy", "create", "dot", "equals", "exactEquals", "fromValues", "identity", "invert", "len", "length", "lerp", "mul", "multiply", "normalize", "rotateX", "rotateY", "rotateZ", "scale", "set", "slerp", "sqrLen", "squaredLength", "str", "create", "identity", "s", "q", "a", "b", "dot", "multiply", "rotateX", "rotateY", "rotateZ", "x", "y", "z", "w", "r", "et", "t", "scale", "slerp", "invert", "a2", "a3", "m", "i", "j", "k", "str", "clone", "fromValues", "copy", "set", "add", "mul", "lerp", "length", "len", "squaredLength", "sqrLen", "normalize", "exactEquals", "equals", "cross", "c", "d", "EPSILON", "f", "v", "z", "length", "RotationOrder", "EPSILON2", "a", "i", "j", "x", "LIGHT_TYPE", "getUniforms", "i", "log", "lights", "_a", "x", "vs", "fs", "vs", "fs", "InputEvent", "InputDirection", "RecognizerState", "str", "target", "x", "y", "i", "i", "p2", "x", "y", "p2", "x", "y", "x", "y", "getRotation", "v", "getRotation", "target", "e", "i", "add", "name", "i", "distance", "x", "y", "EVENT_NAMES", "Input", "window_", "Input", "Input", "enable", "Input", "Input", "MOUSE_EVENTS", "scaleX", "scaleY", "target", "i", "name", "_a", "a", "b", "len", "i", "IDENTITY_MATRIX", "viewMatrix", "getUniforms", "lerp", "clamp", "x", "min", "max", "log2", "assert", "message", "DEGREES_TO_RADIANS", "RADIANS_TO_DEGREES", "scale", "log2", "assert", "x", "y", "z", "unitsPerMeter", "unitsPerMeter2", "clamp", "RADIANS_TO_DEGREES", "DEGREES_TO_RADIANS", "x", "y", "z", "assert", "t", "clamp", "se", "assert", "scaleX", "scaleY", "log2", "DEGREES_TO_RADIANS", "z", "x", "t", "TILE_SIZE", "log2", "EPSILON", "t", "S", "lerp", "s", "w", "u", "length", "scale", "uniformBlock", "vs", "fs", "VECTOR_TO_POINT_MATRIX", "x", "y", "z", "viewMatrix", "i", "DEFAULT_LIGHT_COLOR", "DEFAULT_LIGHT_INTENSITY", "idCount", "target", "_a", "source", "target", "DEFAULT_SHADOW_COLOR", "i", "viewMatrix", "count", "copy", "Type", "i", "b", "buffer", "createMat4", "mod", "a", "b", "c", "d", "L", "fp64LowPart", "x", "count", "j", "DEGREES_TO_RADIANS", "IDENTITY", "createMat4", "ZERO_VECTOR", "x", "y", "y2", "z", "X", "Y", "Z", "scale", "viewMatrix", "WebMercatorViewport", "scale", "x", "X", "Y", "Z", "translate", "DEFAULT_COORDINATE_ORIGIN", "p", "z", "x", "y", "DEGREES_TO_RADIANS", "e", "DEGREES_TO_RADIANS", "_a", "canvas", "resolve", "div", "uidCounters", "uid", "count", "uid", "_a", "geometry", "name", "cache", "_a", "name", "_a", "i", "a", "b", "i", "isTypedArray", "isNumberArray", "name", "log", "name", "_a", "pathPrefix", "pathPrefix", "uid", "resolve", "x", "i", "_a", "uid", "source", "getUniforms", "vs", "fs", "log", "geometry", "buffer", "set", "name", "_a", "buffer", "LOG_DRAW_PRIORITY", "LOG_DRAW_TIMEOUT", "_a", "uid", "getPlatformInfo", "source", "getUniforms", "x", "y", "z", "k", "log", "DEFAULT_HIGHLIGHT_COLOR", "getUniforms", "source", "vs", "fs", "picking", "source", "vs", "fs", "picking", "x", "y", "e", "a", "target", "source", "count", "length", "i", "Resource", "_a", "Resource", "_a", "viewport", "m", "i", "deepEqual", "a", "b", "i", "i", "p", "deepEqual", "Controller", "_a", "_", "x", "y", "deepEqual", "_a", "noop", "t", "assert", "message", "assert", "DEFAULT_PROPS", "t", "t", "_a", "x", "y", "scale", "z", "normalize", "assert", "scale", "e2", "o2", "e", "deepEqual", "buffer", "i", "x", "y", "i", "d2", "x", "y", "z", "i", "x", "y", "l", "v", "_a", "canvas", "i", "z", "deepEqual", "w", "_a", "v", "_a", "x", "y", "GLEnum", "target", "isArray", "_a", "cache", "buffer", "r", "g", "b", "a", "s", "invert", "x", "y", "isObjectEmpty", "cache", "x", "y", "i", "set", "canvas", "name", "version", "_a", "_a", "i", "resolve", "log", "_a", "resolve", "_", "isBrowser", "log", "message", "uidCounters", "uid", "count", "messageType", "message", "source", "log", "resolve", "isObjectEmpty", "map", "vertex", "log", "map", "isObjectEmpty", "isObjectEmpty", "x", "y", "z", "source", "_a", "target", "source", "log", "x", "y", "z", "i", "_a", "_", "i", "uniformBlock", "uniforms", "count", "name", "a", "b", "i", "isArray", "j", "matches", "isUniformValue", "splitUniformsAndBindings", "name", "log", "name", "_a", "splitUniformsAndBindings", "status", "resolve", "source", "getFramebuffer", "getFramebuffer", "source", "fillArray", "target", "source", "count", "length", "i", "_a", "buffer", "enable", "length", "fillArray", "v2", "i", "buffer", "log", "target", "counter", "resolve", "_a", "uid", "resolve", "log", "source", "compareConstantArrayValues", "name", "v2", "i", "LOG_LEVEL", "enable", "log", "message", "noop", "_a", "_e", "deepEqual", "assert", "canvas", "defaultOptions", "VERSION", "getDataTypeFromTypedArray", "name", "n", "min", "len", "max", "i", "j", "v", "buffer", "copy", "x", "_a", "isAsyncIterable", "_", "target", "j", "i", "add", "len", "i", "t", "_a", "a", "add", "buffer", "assert", "map", "i", "source", "target", "i", "j", "n", "source", "target", "buffer", "x", "i", "buffer", "t", "uniformBlock", "vs", "getFramebuffer", "getTransform", "i", "uniformBlock", "vs", "fs", "name", "_a", "t", "EPSILON", "i", "distance", "d", "TRANSITION_TYPES", "transition", "i", "isObject", "target", "source", "isArray", "deepEqual", "getTypeOf", "defaultProps", "name", "i", "defaultProps", "name", "isAsyncIterable", "isAsyncIterable", "count", "fetch", "EMPTY_ARRAY", "defaultProps", "_a", "assert", "x", "y", "z", "i", "target", "i2", "i3", "message", "name", "picking", "TRACE_RENDER_LAYERS", "x", "i", "_a", "fetch", "DEGREES_TO_RADIANS", "RADIANS_TO_DEGREES", "getDistanceScales", "unitsPerMeter", "scale", "viewMatrix", "x", "y", "z", "y2", "transformVector", "lt", "t", "X", "Y", "Z", "D", "DEGREES_TO_RADIANS", "getViewMatrix", "viewMatrix", "target", "x", "y", "z", "y2", "X", "Y", "Z", "getProjectionMatrix", "l", "r", "t", "b", "target", "scale", "scaleX", "scaleY", "X", "Y", "unitsPerMeter", "x", "y", "translate", "scale", "viewMatrix", "scale", "angle", "mod", "target", "scale", "mod", "scale", "z", "mod", "deepEqual", "defaultProps", "DEFAULT_OPTS", "t", "import_react", "Type", "import_react", "_a", "defaultProps", "import_react", "import_react", "x", "y", "_a", "version", "v", "canvas", "slice", "options", "vnodeId", "isValidElement", "rerenderQueue", "prevDebounce", "defer", "depthSort", "CAPTURE_REGEX", "eventClock", "eventProxy", "eventProxyCapture", "i", "EMPTY_OBJ", "EMPTY_ARR", "IS_NON_DIMENSIONAL", "isArray", "Array", "assign", "obj", "props", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__c", "constructor", "__v", "__i", "__u", "Fragment", "props", "children", "BaseComponent", "context", "this", "getDomSibling", "vnode", "childIndex", "__", "__i", "sibling", "__k", "length", "__e", "type", "updateParentDomPointers", "i", "child", "__c", "base", "enqueueRender", "c", "__d", "rerenderQueue", "push", "process", "__r", "prevDebounce", "options", "debounceRendering", "defer", "component", "newVNode", "oldVNode", "oldDom", "commitQueue", "refQueue", "l", "sort", "depthSort", "shift", "__v", "__P", "assign", "diff", "__n", "namespaceURI", "__u", "commitRoot", "diffChildren", "parentDom", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "namespace", "excessDomChildren", "isHydrating", "childVNode", "newDom", "firstChildDom", "result", "shouldPlace", "oldChildren", "EMPTY_ARR", "newChildrenLength", "constructNewChildrenArray", "EMPTY_OBJ", "ref", "applyRef", "insert", "nextSibling", "skewedIndex", "matchingIndex", "oldChildrenLength", "remainingOldChildren", "skew", "Array", "constructor", "String", "createVNode", "isArray", "undefined", "__b", "key", "findMatchingIndex", "unmount", "parentVNode", "parentNode", "insertBefore", "nodeType", "findMatchingIndex", "childVNode", "oldChildren", "skewedIndex", "remainingOldChildren", "x", "y", "childIndex", "key", "type", "oldVNode", "matched", "__u", "length", "setStyle", "style", "value", "setProperty", "IS_NON_DIMENSIONAL", "test", "dom", "name", "oldValue", "namespace", "useCapture", "lowerCaseName", "o", "cssText", "replace", "CAPTURE_REGEX", "toLowerCase", "slice", "l", "_attached", "eventClock", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "removeAttribute", "setAttribute", "createEventProxy", "this", "eventHandler", "_dispatched", "options", "event", "diff", "parentDom", "newVNode", "globalContext", "excessDomChildren", "commitQueue", "oldDom", "isHydrating", "refQueue", "tmp", "c", "isNew", "oldProps", "oldState", "snapshot", "clearProcessingException", "newProps", "isClassComponent", "provider", "componentContext", "i", "renderHook", "count", "renderResult", "newType", "undefined", "constructor", "__e", "__b", "outer", "props", "prototype", "render", "contextType", "__c", "__", "__E", "BaseComponent", "doRender", "sub", "state", "context", "__n", "__d", "__h", "_sb", "__s", "getDerivedStateFromProps", "assign", "__v", "componentWillMount", "componentDidMount", "push", "componentWillReceiveProps", "shouldComponentUpdate", "__k", "some", "vnode", "componentWillUpdate", "componentDidUpdate", "__P", "__r", "getChildContext", "getSnapshotBeforeUpdate", "Fragment", "cloneNode", "children", "diffChildren", "isArray", "base", "then", "MODE_HYDRATE", "nodeType", "nextSibling", "indexOf", "removeNode", "markAsForce", "diffElementNodes", "diffed", "forEach", "commitRoot", "root", "applyRef", "cb", "call", "node", "map", "newHtml", "oldHtml", "newChildren", "inputValue", "checked", "localName", "document", "createTextNode", "createElementNS", "is", "__m", "data", "childNodes", "EMPTY_OBJ", "attributes", "__html", "innerHTML", "content", "getDomSibling", "ref", "hasRefUnmount", "current", "unmount", "parentVNode", "skipRemove", "r", "componentWillUnmount", "replaceNode", "documentElement", "createElement", "namespaceURI", "firstChild", "slice", "EMPTY_ARR", "options", "__e", "error", "vnode", "oldVNode", "errorInfo", "component", "ctor", "handled", "__", "__c", "constructor", "getDerivedStateFromError", "setState", "__d", "componentDidCatch", "__E", "e", "vnodeId", "isValidElement", "undefined", "BaseComponent", "prototype", "update", "callback", "s", "this", "__s", "state", "assign", "props", "__v", "_sb", "push", "enqueueRender", "forceUpdate", "__h", "render", "Fragment", "rerenderQueue", "defer", "Promise", "then", "bind", "resolve", "setTimeout", "depthSort", "a", "b", "__b", "process", "__r", "CAPTURE_REGEX", "eventClock", "eventProxy", "createEventProxy", "eventProxyCapture", "i", "vnodeId", "isArray", "Array", "createVNode", "type", "props", "key", "isStaticChildren", "__source", "__self", "ref", "i", "normalizedProps", "vnode", "__k", "__", "__b", "__e", "__c", "constructor", "__v", "__i", "__u", "defaultProps", "options", "u", "u", "G", "deepEqual", "_a", "deepEqual", "_a", "u", "viewport", "G", "deepEqual", "u", "G", "deepEqual", "className", "G", "u", "canvas", "_a", "filename", "G", "u", "_a", "import_react", "deepEqual", "CompassWidget", "FullscreenWidget", "ZoomWidget"]
}
